  I1222 04:25:39.331450      20 e2e.go:117] Starting e2e run "6dd30d15-5141-4c39-ad10-0ce8c17ff4f8" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1703219137 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Dec 22 04:25:39.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 04:25:39.648: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Dec 22 04:25:39.737: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Dec 22 04:25:39.749: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-canal' (0 seconds elapsed)
  Dec 22 04:25:39.750: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-ingress-nginx-controller' (0 seconds elapsed)
  Dec 22 04:25:39.750: INFO: e2e test version: v1.29.0
  Dec 22 04:25:39.752: INFO: kube-apiserver version: v1.29.0+rke2r1
  Dec 22 04:25:39.752: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 04:25:39.758: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 12/22/23 04:25:39.991
  Dec 22 04:25:39.991: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 04:25:39.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:25:40.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:25:40.016
  STEP: Create a ReplicaSet @ 12/22/23 04:25:40.024
  STEP: Verify that the required pods have come up @ 12/22/23 04:25:40.031
  Dec 22 04:25:40.038: INFO: Pod name sample-pod: Found 0 pods out of 3
  Dec 22 04:25:45.044: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/22/23 04:25:45.044
  Dec 22 04:25:47.057: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/22/23 04:25:47.057
  STEP: DeleteCollection of the ReplicaSets @ 12/22/23 04:25:47.067
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/22/23 04:25:47.074
  Dec 22 04:25:47.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6149" for this suite. @ 12/22/23 04:25:47.087
• [7.107 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 12/22/23 04:25:47.099
  Dec 22 04:25:47.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 04:25:47.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:25:47.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:25:47.136
  STEP: Creating a pod to test service account token:  @ 12/22/23 04:25:47.139
  STEP: Saw pod success @ 12/22/23 04:25:55.168
  Dec 22 04:25:55.170: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod test-pod-9252c428-bb09-4667-be73-aa4eafbf7427 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:25:55.323
  Dec 22 04:25:55.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7388" for this suite. @ 12/22/23 04:25:55.346
• [8.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 12/22/23 04:25:55.353
  Dec 22 04:25:55.353: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 04:25:55.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:25:55.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:25:55.374
  Dec 22 04:25:55.377: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 04:25:58.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2811" for this suite. @ 12/22/23 04:25:58.471
• [3.125 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 12/22/23 04:25:58.478
  Dec 22 04:25:58.478: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:25:58.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:25:58.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:25:58.5
  Dec 22 04:25:58.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-8262 version'
  Dec 22 04:25:58.589: INFO: stderr: ""
  Dec 22 04:25:58.589: INFO: stdout: "Client Version: v1.29.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.0+rke2r1\n"
  Dec 22 04:25:58.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8262" for this suite. @ 12/22/23 04:25:58.594
• [0.121 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 12/22/23 04:25:58.599
  Dec 22 04:25:58.599: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename job @ 12/22/23 04:25:58.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:25:58.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:25:58.621
  STEP: Creating a job @ 12/22/23 04:25:58.624
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/22/23 04:25:58.637
  STEP: patching /status @ 12/22/23 04:26:02.643
  STEP: updating /status @ 12/22/23 04:26:02.651
  STEP: get /status @ 12/22/23 04:26:02.659
  Dec 22 04:26:02.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-695" for this suite. @ 12/22/23 04:26:02.667
• [4.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 12/22/23 04:26:02.674
  Dec 22 04:26:02.674: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubelet-test @ 12/22/23 04:26:02.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:26:02.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:26:02.699
  STEP: Waiting for pod completion @ 12/22/23 04:26:02.71
  Dec 22 04:26:06.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6180" for this suite. @ 12/22/23 04:26:06.874
• [4.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/22/23 04:26:06.889
  Dec 22 04:26:06.889: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pods @ 12/22/23 04:26:06.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:26:06.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:26:06.911
  STEP: Create set of pods @ 12/22/23 04:26:06.914
  Dec 22 04:26:06.922: INFO: created test-pod-1
  Dec 22 04:26:06.937: INFO: created test-pod-2
  Dec 22 04:26:06.964: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/22/23 04:26:06.964
  STEP: waiting for all pods to be deleted @ 12/22/23 04:26:11.064
  Dec 22 04:26:11.071: INFO: Pod quantity 3 is different from expected quantity 0
  Dec 22 04:26:12.075: INFO: Pod quantity 3 is different from expected quantity 0
  Dec 22 04:26:13.071: INFO: Pod quantity 3 is different from expected quantity 0
  Dec 22 04:26:14.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4483" for this suite. @ 12/22/23 04:26:14.081
• [7.240 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/22/23 04:26:14.13
  Dec 22 04:26:14.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pods @ 12/22/23 04:26:14.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:26:14.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:26:14.174
  Dec 22 04:26:14.180: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: creating the pod @ 12/22/23 04:26:14.181
  STEP: submitting the pod to kubernetes @ 12/22/23 04:26:14.181
  Dec 22 04:26:18.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2792" for this suite. @ 12/22/23 04:26:18.49
• [4.365 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 12/22/23 04:26:18.497
  Dec 22 04:26:18.497: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 04:26:18.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:26:18.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:26:18.521
  STEP: Setting up server cert @ 12/22/23 04:26:18.595
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 04:26:19.129
  STEP: Deploying the webhook pod @ 12/22/23 04:26:19.141
  STEP: Wait for the deployment to be ready @ 12/22/23 04:26:19.157
  Dec 22 04:26:19.186: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 04:26:21.195
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 04:26:21.204
  Dec 22 04:26:22.205: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 22 04:26:22.213: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8246-crds.webhook.example.com via the AdmissionRegistration API @ 12/22/23 04:26:22.725
  STEP: Creating a custom resource while v1 is storage version @ 12/22/23 04:26:22.753
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/22/23 04:26:24.881
  STEP: Patching the custom resource while v2 is storage version @ 12/22/23 04:26:24.898
  Dec 22 04:26:25.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4991" for this suite. @ 12/22/23 04:26:25.552
  STEP: Destroying namespace "webhook-markers-9816" for this suite. @ 12/22/23 04:26:25.558
• [7.068 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/22/23 04:26:25.565
  Dec 22 04:26:25.565: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:26:25.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:26:25.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:26:25.585
  STEP: Creating projection with secret that has name projected-secret-test-faf26c19-04e1-47dc-af12-49f98e646b23 @ 12/22/23 04:26:25.588
  STEP: Creating a pod to test consume secrets @ 12/22/23 04:26:25.593
  STEP: Saw pod success @ 12/22/23 04:26:29.612
  Dec 22 04:26:29.615: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-secrets-17bc48da-edf2-439b-a151-c81a741c492b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 04:26:29.621
  Dec 22 04:26:29.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4586" for this suite. @ 12/22/23 04:26:29.647
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 12/22/23 04:26:29.654
  Dec 22 04:26:29.654: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 04:26:29.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:26:29.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:26:29.674
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/22/23 04:26:29.677
  STEP: Saw pod success @ 12/22/23 04:26:33.695
  Dec 22 04:26:33.698: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-a1043d49-826c-4db4-8445-c23d5ad2e634 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 04:26:33.704
  Dec 22 04:26:33.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1368" for this suite. @ 12/22/23 04:26:33.721
• [4.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 12/22/23 04:26:33.727
  Dec 22 04:26:33.728: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 04:26:33.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:26:33.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:26:33.753
  STEP: Creating a ResourceQuota @ 12/22/23 04:26:33.758
  STEP: Getting a ResourceQuota @ 12/22/23 04:26:33.763
  STEP: Updating a ResourceQuota @ 12/22/23 04:26:33.768
  STEP: Verifying a ResourceQuota was modified @ 12/22/23 04:26:33.774
  STEP: Deleting a ResourceQuota @ 12/22/23 04:26:33.776
  STEP: Verifying the deleted ResourceQuota @ 12/22/23 04:26:33.782
  Dec 22 04:26:33.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1562" for this suite. @ 12/22/23 04:26:33.789
• [0.078 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/22/23 04:26:33.806
  Dec 22 04:26:33.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename subpath @ 12/22/23 04:26:33.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:26:33.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:26:33.841
  STEP: Setting up data @ 12/22/23 04:26:33.844
  STEP: Creating pod pod-subpath-test-projected-8p8f @ 12/22/23 04:26:33.862
  STEP: Creating a pod to test atomic-volume-subpath @ 12/22/23 04:26:33.862
  STEP: Saw pod success @ 12/22/23 04:26:57.935
  Dec 22 04:26:57.938: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-subpath-test-projected-8p8f container test-container-subpath-projected-8p8f: <nil>
  STEP: delete the pod @ 12/22/23 04:26:57.946
  STEP: Deleting pod pod-subpath-test-projected-8p8f @ 12/22/23 04:26:57.964
  Dec 22 04:26:57.964: INFO: Deleting pod "pod-subpath-test-projected-8p8f" in namespace "subpath-7864"
  Dec 22 04:26:57.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7864" for this suite. @ 12/22/23 04:26:57.98
• [24.192 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 12/22/23 04:26:57.998
  Dec 22 04:26:57.998: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:26:58
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:26:58.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:26:58.029
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:26:58.031
  STEP: Saw pod success @ 12/22/23 04:27:02.051
  Dec 22 04:27:02.054: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-be144b73-2500-4f24-9e9a-b3fe53a10784 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:27:02.064
  Dec 22 04:27:02.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9952" for this suite. @ 12/22/23 04:27:02.088
• [4.097 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 12/22/23 04:27:02.095
  Dec 22 04:27:02.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 04:27:02.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:27:02.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:27:02.121
  STEP: Creating simple DaemonSet "daemon-set" @ 12/22/23 04:27:02.158
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 04:27:02.164
  Dec 22 04:27:02.183: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:27:02.183: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:27:03.173: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:27:03.174: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:27:04.174: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:27:04.174: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:27:05.490: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:27:05.490: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:27:06.172: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:27:06.172: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:27:07.180: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:27:07.180: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:27:08.173: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 04:27:08.174: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 12/22/23 04:27:08.177
  Dec 22 04:27:08.182: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/22/23 04:27:08.182
  Dec 22 04:27:08.190: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/22/23 04:27:08.19
  Dec 22 04:27:08.192: INFO: Observed &DaemonSet event: ADDED
  Dec 22 04:27:08.192: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.193: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.194: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.194: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.195: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.195: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.195: INFO: Found daemon set daemon-set in namespace daemonsets-2631 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 22 04:27:08.196: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/22/23 04:27:08.196
  STEP: watching for the daemon set status to be patched @ 12/22/23 04:27:08.204
  Dec 22 04:27:08.206: INFO: Observed &DaemonSet event: ADDED
  Dec 22 04:27:08.207: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.207: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.207: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.208: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.208: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.208: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.209: INFO: Observed daemon set daemon-set in namespace daemonsets-2631 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 22 04:27:08.209: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:27:08.209: INFO: Found daemon set daemon-set in namespace daemonsets-2631 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Dec 22 04:27:08.209: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 04:27:08.212
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2631, will wait for the garbage collector to delete the pods @ 12/22/23 04:27:08.212
  Dec 22 04:27:08.272: INFO: Deleting DaemonSet.extensions daemon-set took: 6.03826ms
  Dec 22 04:27:08.373: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.683704ms
  Dec 22 04:27:12.177: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:27:12.177: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 04:27:12.180: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12857"},"items":null}

  Dec 22 04:27:12.183: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12857"},"items":null}

  Dec 22 04:27:12.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2631" for this suite. @ 12/22/23 04:27:12.202
• [10.123 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 12/22/23 04:27:12.223
  Dec 22 04:27:12.224: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pod-network-test @ 12/22/23 04:27:12.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:27:12.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:27:12.247
  STEP: Performing setup for networking test in namespace pod-network-test-8164 @ 12/22/23 04:27:12.25
  STEP: creating a selector @ 12/22/23 04:27:12.25
  STEP: Creating the service pods in kubernetes @ 12/22/23 04:27:12.25
  Dec 22 04:27:12.250: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/22/23 04:27:34.402
  Dec 22 04:27:36.421: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Dec 22 04:27:36.421: INFO: Breadth first check of 10.42.0.17 on host 172.31.3.186...
  Dec 22 04:27:36.424: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.26:9080/dial?request=hostname&protocol=http&host=10.42.0.17&port=8083&tries=1'] Namespace:pod-network-test-8164 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:27:36.424: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 04:27:36.425: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:27:36.425: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8164/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.26%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.17%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 04:27:36.530: INFO: Waiting for responses: map[]
  Dec 22 04:27:36.530: INFO: reached 10.42.0.17 after 0/1 tries
  Dec 22 04:27:36.530: INFO: Breadth first check of 10.42.1.7 on host 172.31.4.122...
  Dec 22 04:27:36.534: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.26:9080/dial?request=hostname&protocol=http&host=10.42.1.7&port=8083&tries=1'] Namespace:pod-network-test-8164 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:27:36.534: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 04:27:36.534: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:27:36.534: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8164/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.26%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.7%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 04:27:36.684: INFO: Waiting for responses: map[]
  Dec 22 04:27:36.684: INFO: reached 10.42.1.7 after 0/1 tries
  Dec 22 04:27:36.684: INFO: Breadth first check of 10.42.3.25 on host 172.31.7.66...
  Dec 22 04:27:36.688: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.26:9080/dial?request=hostname&protocol=http&host=10.42.3.25&port=8083&tries=1'] Namespace:pod-network-test-8164 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:27:36.688: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 04:27:36.689: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:27:36.689: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8164/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.26%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.3.25%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 04:27:36.805: INFO: Waiting for responses: map[]
  Dec 22 04:27:36.806: INFO: reached 10.42.3.25 after 0/1 tries
  Dec 22 04:27:36.806: INFO: Breadth first check of 10.42.2.9 on host 172.31.9.255...
  Dec 22 04:27:36.809: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.26:9080/dial?request=hostname&protocol=http&host=10.42.2.9&port=8083&tries=1'] Namespace:pod-network-test-8164 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:27:36.809: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 04:27:36.810: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:27:36.810: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8164/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.26%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.9%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 04:27:36.991: INFO: Waiting for responses: map[]
  Dec 22 04:27:36.991: INFO: reached 10.42.2.9 after 0/1 tries
  Dec 22 04:27:36.991: INFO: Going to retry 0 out of 4 pods....
  Dec 22 04:27:36.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8164" for this suite. @ 12/22/23 04:27:36.996
• [24.778 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/22/23 04:27:37.002
  Dec 22 04:27:37.002: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename deployment @ 12/22/23 04:27:37.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:27:37.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:27:37.025
  Dec 22 04:27:37.028: INFO: Creating simple deployment test-new-deployment
  Dec 22 04:27:37.051: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 12/22/23 04:27:39.064
  STEP: updating a scale subresource @ 12/22/23 04:27:39.067
  STEP: verifying the deployment Spec.Replicas was modified @ 12/22/23 04:27:39.073
  STEP: Patch a scale subresource @ 12/22/23 04:27:39.077
  Dec 22 04:27:39.139: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4258",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5518530-2a60-4d8f-9713-580c1bf54e20",
      ResourceVersion: (string) (len=5) "13075",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816057,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 04:27:39.146: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4258",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fd08046-6251-4204-baa6-7b910fb25351",
      ResourceVersion: (string) (len=5) "13080",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816057,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "b5518530-2a60-4d8f-9713-580c1bf54e20",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 35 35 31 38 35  33 30 2d 32 61 36 30 2d  |\"b5518530-2a60-|
              00000120  34 64 38 66 2d 39 37 31  33 2d 35 38 30 63 31 62  |4d8f-9713-580c1b|
              00000130  66 35 34 65 32 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f54e20\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 04:27:39.153: INFO: Pod "test-new-deployment-557759b7c7-mxz7w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-mxz7w",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4258",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d0ca413-d511-4cf3-8108-99c771ba3b1a",
      ResourceVersion: (string) (len=5) "13077",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816059,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fd08046-6251-4204-baa6-7b910fb25351",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  64 30 38 30 34 36 2d 36  |d\":\"8fd08046-6|
              00000090  32 35 31 2d 34 32 30 34  2d 62 61 61 36 2d 37 62  |251-4204-baa6-7b|
              000000a0  39 31 30 66 62 32 35 33  35 31 5c 22 7d 22 3a 7b  |910fb25351\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-54gcg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-54gcg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-9-255.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:27:39.160: INFO: Pod "test-new-deployment-557759b7c7-z6gg7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-z6gg7",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4258",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81d69281-ae77-4ff9-9596-6e0a0400adf8",
      ResourceVersion: (string) (len=5) "13069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816057,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "06bd399ce007156f28e879f5d92528a892e21f44c2570444eae18101aa3155b2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fd08046-6251-4204-baa6-7b910fb25351",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  64 30 38 30 34 36 2d 36  |d\":\"8fd08046-6|
              00000090  32 35 31 2d 34 32 30 34  2d 62 61 61 36 2d 37 62  |251-4204-baa6-7b|
              000000a0  39 31 30 66 62 32 35 33  35 31 5c 22 7d 22 3a 7b  |910fb25351\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 32 37  5c 22 7d 22 3a 7b 22 2e  |.42.3.27\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7ctz8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7ctz8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) (len=10) "10.42.3.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816057,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838816058,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://642d9d1078ce7a41470eb58ca8e721cd187986257bca404b3a4c39ce35e2e5e1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:27:39.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4258" for this suite. @ 12/22/23 04:27:39.181
• [2.197 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 12/22/23 04:27:39.199
  Dec 22 04:27:39.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 04:27:39.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:27:39.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:27:39.281
  STEP: Discovering how many secrets are in namespace by default @ 12/22/23 04:27:39.286
  STEP: Counting existing ResourceQuota @ 12/22/23 04:27:44.373
  STEP: Creating a ResourceQuota @ 12/22/23 04:27:49.377
  STEP: Ensuring resource quota status is calculated @ 12/22/23 04:27:49.381
  STEP: Creating a Secret @ 12/22/23 04:27:51.385
  STEP: Ensuring resource quota status captures secret creation @ 12/22/23 04:27:51.436
  STEP: Deleting a secret @ 12/22/23 04:27:53.441
  STEP: Ensuring resource quota status released usage @ 12/22/23 04:27:53.446
  Dec 22 04:27:55.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5774" for this suite. @ 12/22/23 04:27:55.455
• [16.263 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 12/22/23 04:27:55.463
  Dec 22 04:27:55.463: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/22/23 04:27:55.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:27:55.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:27:55.499
  STEP: create the container to handle the HTTPGet hook request. @ 12/22/23 04:27:55.512
  STEP: create the pod with lifecycle hook @ 12/22/23 04:27:59.542
  STEP: check poststart hook @ 12/22/23 04:28:01.559
  STEP: delete the pod with lifecycle hook @ 12/22/23 04:28:01.608
  Dec 22 04:28:05.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1052" for this suite. @ 12/22/23 04:28:05.639
• [10.181 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 12/22/23 04:28:05.646
  Dec 22 04:28:05.646: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:28:05.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:28:05.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:28:05.672
  STEP: Creating a pod to test downward api env vars @ 12/22/23 04:28:05.675
  STEP: Saw pod success @ 12/22/23 04:28:09.695
  Dec 22 04:28:09.698: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downward-api-ef9a9361-ade1-4589-b090-92f6fe8173fa container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 04:28:09.708
  Dec 22 04:28:09.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3108" for this suite. @ 12/22/23 04:28:09.728
• [4.088 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/22/23 04:28:09.735
  Dec 22 04:28:09.735: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename subjectreview @ 12/22/23 04:28:09.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:28:09.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:28:09.757
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7359" @ 12/22/23 04:28:09.761
  Dec 22 04:28:09.765: INFO: saUsername: "system:serviceaccount:subjectreview-7359:e2e"
  Dec 22 04:28:09.766: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7359"}
  Dec 22 04:28:09.766: INFO: saUID: "e48350a3-4566-4597-a6de-2882c0c14549"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7359:e2e" @ 12/22/23 04:28:09.766
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7359:e2e" @ 12/22/23 04:28:09.766
  Dec 22 04:28:09.768: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7359:e2e" api 'list' configmaps in "subjectreview-7359" namespace @ 12/22/23 04:28:09.768
  Dec 22 04:28:09.770: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7359:e2e" @ 12/22/23 04:28:09.77
  Dec 22 04:28:09.772: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Dec 22 04:28:09.772: INFO: LocalSubjectAccessReview has been verified
  Dec 22 04:28:09.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7359" for this suite. @ 12/22/23 04:28:09.776
• [0.047 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 12/22/23 04:28:09.781
  Dec 22 04:28:09.781: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sched-preemption @ 12/22/23 04:28:09.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:28:09.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:28:09.802
  Dec 22 04:28:09.816: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 22 04:29:09.825: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/22/23 04:29:09.829
  Dec 22 04:29:09.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/22/23 04:29:09.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:29:09.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:29:09.851
  Dec 22 04:29:09.868: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Dec 22 04:29:09.871: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Dec 22 04:29:09.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2503" for this suite. @ 12/22/23 04:29:09.974
  Dec 22 04:29:09.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9366" for this suite. @ 12/22/23 04:29:09.985
• [60.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 12/22/23 04:29:09.992
  Dec 22 04:29:09.992: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/22/23 04:29:09.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:29:10.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:29:10.02
  STEP: create the container to handle the HTTPGet hook request. @ 12/22/23 04:29:10.028
  STEP: create the pod with lifecycle hook @ 12/22/23 04:29:12.045
  STEP: check poststart hook @ 12/22/23 04:29:14.063
  STEP: delete the pod with lifecycle hook @ 12/22/23 04:29:14.069
  Dec 22 04:29:18.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4284" for this suite. @ 12/22/23 04:29:18.091
• [8.105 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 12/22/23 04:29:18.098
  Dec 22 04:29:18.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 04:29:18.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:29:18.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:29:18.124
  STEP: Creating a ResourceQuota @ 12/22/23 04:29:18.128
  STEP: Getting a ResourceQuota @ 12/22/23 04:29:18.132
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/22/23 04:29:18.135
  STEP: Patching the ResourceQuota @ 12/22/23 04:29:18.139
  STEP: Deleting a Collection of ResourceQuotas @ 12/22/23 04:29:18.145
  STEP: Verifying the deleted ResourceQuota @ 12/22/23 04:29:18.155
  Dec 22 04:29:18.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3113" for this suite. @ 12/22/23 04:29:18.163
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/22/23 04:29:18.171
  Dec 22 04:29:18.171: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 04:29:18.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:29:18.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:29:18.193
  Dec 22 04:29:18.226: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/22/23 04:29:18.233
  Dec 22 04:29:18.240: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:29:18.240: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/22/23 04:29:18.24
  Dec 22 04:29:18.272: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:29:18.273: INFO: Node ip-172-31-7-66.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:29:19.267: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:29:19.267: INFO: Node ip-172-31-7-66.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:29:20.266: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 04:29:20.266: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/22/23 04:29:20.269
  Dec 22 04:29:20.290: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 04:29:20.290: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Dec 22 04:29:21.287: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:29:21.287: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/22/23 04:29:21.287
  Dec 22 04:29:21.305: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:29:21.305: INFO: Node ip-172-31-7-66.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:29:22.303: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:29:22.303: INFO: Node ip-172-31-7-66.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:29:23.302: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:29:23.302: INFO: Node ip-172-31-7-66.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:29:24.302: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 04:29:24.302: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 04:29:24.307
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9240, will wait for the garbage collector to delete the pods @ 12/22/23 04:29:24.307
  Dec 22 04:29:24.366: INFO: Deleting DaemonSet.extensions daemon-set took: 6.078563ms
  Dec 22 04:29:24.467: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.523954ms
  Dec 22 04:29:26.971: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:29:26.971: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 04:29:26.976: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13839"},"items":null}

  Dec 22 04:29:26.979: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13840"},"items":null}

  Dec 22 04:29:27.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9240" for this suite. @ 12/22/23 04:29:27.024
• [8.872 seconds]
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 12/22/23 04:29:27.043
  Dec 22 04:29:27.043: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:29:27.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:29:27.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:29:27.067
  STEP: Creating a pod to test downward api env vars @ 12/22/23 04:29:27.07
  STEP: Saw pod success @ 12/22/23 04:29:31.094
  Dec 22 04:29:31.097: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downward-api-3100235e-db5c-42a4-b29b-fa6704096fc0 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 04:29:31.105
  Dec 22 04:29:31.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-47" for this suite. @ 12/22/23 04:29:31.126
• [4.090 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 12/22/23 04:29:31.133
  Dec 22 04:29:31.133: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename disruption @ 12/22/23 04:29:31.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:29:31.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:29:31.158
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:29:31.166
  STEP: Updating PodDisruptionBudget status @ 12/22/23 04:29:33.173
  STEP: Waiting for all pods to be running @ 12/22/23 04:29:33.181
  Dec 22 04:29:33.193: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 12/22/23 04:29:35.185
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:29:35.196
  STEP: Patching PodDisruptionBudget status @ 12/22/23 04:29:35.204
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:29:35.215
  Dec 22 04:29:35.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2122" for this suite. @ 12/22/23 04:29:35.224
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/22/23 04:29:35.235
  Dec 22 04:29:35.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename cronjob @ 12/22/23 04:29:35.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:29:35.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:29:35.776
  STEP: Creating a cronjob @ 12/22/23 04:29:35.778
  STEP: Ensuring more than one job is running at a time @ 12/22/23 04:29:35.783
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/22/23 04:31:01.787
  STEP: Removing cronjob @ 12/22/23 04:31:01.79
  Dec 22 04:31:01.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8107" for this suite. @ 12/22/23 04:31:01.803
• [86.579 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 12/22/23 04:31:01.815
  Dec 22 04:31:01.815: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename limitrange @ 12/22/23 04:31:01.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:01.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:01.907
  STEP: Creating a LimitRange @ 12/22/23 04:31:01.91
  STEP: Setting up watch @ 12/22/23 04:31:01.91
  STEP: Submitting a LimitRange @ 12/22/23 04:31:02.017
  STEP: Verifying LimitRange creation was observed @ 12/22/23 04:31:02.022
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/22/23 04:31:02.022
  Dec 22 04:31:02.025: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Dec 22 04:31:02.025: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/22/23 04:31:02.025
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/22/23 04:31:02.03
  Dec 22 04:31:02.037: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Dec 22 04:31:02.037: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/22/23 04:31:02.038
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/22/23 04:31:02.044
  Dec 22 04:31:02.047: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Dec 22 04:31:02.047: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/22/23 04:31:02.047
  STEP: Failing to create a Pod with more than max resources @ 12/22/23 04:31:02.052
  STEP: Updating a LimitRange @ 12/22/23 04:31:02.054
  STEP: Verifying LimitRange updating is effective @ 12/22/23 04:31:02.059
  STEP: Creating a Pod with less than former min resources @ 12/22/23 04:31:04.063
  STEP: Failing to create a Pod with more than max resources @ 12/22/23 04:31:04.07
  STEP: Deleting a LimitRange @ 12/22/23 04:31:04.073
  STEP: Verifying the LimitRange was deleted @ 12/22/23 04:31:04.082
  Dec 22 04:31:09.087: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/22/23 04:31:09.087
  Dec 22 04:31:09.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8110" for this suite. @ 12/22/23 04:31:09.114
• [7.330 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 12/22/23 04:31:09.145
  Dec 22 04:31:09.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename podtemplate @ 12/22/23 04:31:09.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:09.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:09.189
  STEP: Create a pod template @ 12/22/23 04:31:09.192
  STEP: Replace a pod template @ 12/22/23 04:31:09.198
  Dec 22 04:31:09.212: INFO: Found updated podtemplate annotation: "true"

  Dec 22 04:31:09.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4195" for this suite. @ 12/22/23 04:31:09.223
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 12/22/23 04:31:09.24
  Dec 22 04:31:09.240: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 04:31:09.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:09.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:09.277
  STEP: Creating a test namespace @ 12/22/23 04:31:09.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:09.309
  STEP: Creating a service in the namespace @ 12/22/23 04:31:09.312
  STEP: Deleting the namespace @ 12/22/23 04:31:09.331
  STEP: Waiting for the namespace to be removed. @ 12/22/23 04:31:09.343
  STEP: Recreating the namespace @ 12/22/23 04:31:15.347
  STEP: Verifying there is no service in the namespace @ 12/22/23 04:31:15.367
  Dec 22 04:31:15.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8402" for this suite. @ 12/22/23 04:31:15.375
  STEP: Destroying namespace "nsdeletetest-470" for this suite. @ 12/22/23 04:31:15.38
  Dec 22 04:31:15.389: INFO: Namespace nsdeletetest-470 was already deleted
  STEP: Destroying namespace "nsdeletetest-5745" for this suite. @ 12/22/23 04:31:15.39
• [6.156 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 12/22/23 04:31:15.396
  Dec 22 04:31:15.396: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename job @ 12/22/23 04:31:15.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:15.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:15.415
  STEP: Creating Indexed job @ 12/22/23 04:31:15.418
  STEP: Ensuring job reaches completions @ 12/22/23 04:31:15.424
  STEP: Ensuring pods with index for job exist @ 12/22/23 04:31:25.428
  Dec 22 04:31:25.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8908" for this suite. @ 12/22/23 04:31:25.436
• [10.045 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 12/22/23 04:31:25.442
  Dec 22 04:31:25.442: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:31:25.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:25.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:25.464
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:31:25.468
  STEP: Saw pod success @ 12/22/23 04:31:29.49
  Dec 22 04:31:29.493: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-025e9f96-1104-4f3e-8ec8-7e2100fb553f container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:31:29.508
  Dec 22 04:31:29.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-952" for this suite. @ 12/22/23 04:31:29.525
• [4.089 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 12/22/23 04:31:29.536
  Dec 22 04:31:29.536: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 04:31:29.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:29.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:29.558
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/22/23 04:31:29.561
  STEP: Saw pod success @ 12/22/23 04:31:33.586
  Dec 22 04:31:33.589: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-6aa548ab-0df0-4443-925c-047760955ed3 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 04:31:33.596
  Dec 22 04:31:33.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6226" for this suite. @ 12/22/23 04:31:33.612
• [4.084 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/22/23 04:31:33.62
  Dec 22 04:31:33.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 04:31:33.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:33.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:33.643
  STEP: Creating secret with name secret-test-2b908024-08e7-4bf0-83f6-1b4f6483c8ba @ 12/22/23 04:31:33.675
  STEP: Creating a pod to test consume secrets @ 12/22/23 04:31:33.694
  STEP: Saw pod success @ 12/22/23 04:31:37.716
  Dec 22 04:31:37.720: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-secrets-77b0d591-cbca-4fef-89ba-594d1e48ba75 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 04:31:37.727
  Dec 22 04:31:37.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1878" for this suite. @ 12/22/23 04:31:37.752
  STEP: Destroying namespace "secret-namespace-1252" for this suite. @ 12/22/23 04:31:37.757
• [4.144 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 12/22/23 04:31:37.765
  Dec 22 04:31:37.765: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:31:37.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:37.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:37.788
  STEP: Creating configMap with name configmap-test-volume-map-d578cf71-51e5-4b49-a501-2ef67ebb763b @ 12/22/23 04:31:37.79
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:31:37.795
  STEP: Saw pod success @ 12/22/23 04:31:41.816
  Dec 22 04:31:41.819: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-configmaps-575cfdad-8e7a-4885-a9fe-895c763af436 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:31:41.827
  Dec 22 04:31:41.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5721" for this suite. @ 12/22/23 04:31:41.844
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/22/23 04:31:41.853
  Dec 22 04:31:41.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pods @ 12/22/23 04:31:41.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:41.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:41.884
  STEP: creating the pod @ 12/22/23 04:31:41.887
  STEP: submitting the pod to kubernetes @ 12/22/23 04:31:41.887
  W1222 04:31:41.895965      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 12/22/23 04:31:43.906
  STEP: updating the pod @ 12/22/23 04:31:43.911
  Dec 22 04:31:44.424: INFO: Successfully updated pod "pod-update-activedeadlineseconds-e3157c0f-f72c-4021-a4ed-89799d198876"
  Dec 22 04:31:48.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9656" for this suite. @ 12/22/23 04:31:48.44
• [6.592 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 12/22/23 04:31:48.446
  Dec 22 04:31:48.446: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:31:48.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:48.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:48.466
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:31:48.468
  STEP: Saw pod success @ 12/22/23 04:31:52.489
  Dec 22 04:31:52.493: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-7d6acf21-56cb-4018-9df8-e48a9c9a46de container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:31:52.498
  Dec 22 04:31:52.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7328" for this suite. @ 12/22/23 04:31:52.516
• [4.077 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/22/23 04:31:52.524
  Dec 22 04:31:52.524: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename svc-latency @ 12/22/23 04:31:52.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:52.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:52.543
  Dec 22 04:31:52.545: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9632 @ 12/22/23 04:31:52.546
  I1222 04:31:52.561463      20 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9632, replica count: 1
  I1222 04:31:53.613584      20 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1222 04:31:54.614403      20 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 04:31:54.725: INFO: Created: latency-svc-dqkhc
  Dec 22 04:31:55.101: INFO: Got endpoints: latency-svc-dqkhc [386.030424ms]
  Dec 22 04:31:55.124: INFO: Created: latency-svc-sqx7p
  Dec 22 04:31:55.150: INFO: Created: latency-svc-kqhsr
  Dec 22 04:31:55.150: INFO: Got endpoints: latency-svc-sqx7p [48.966531ms]
  Dec 22 04:31:55.158: INFO: Got endpoints: latency-svc-kqhsr [56.278679ms]
  Dec 22 04:31:55.167: INFO: Created: latency-svc-tv9j5
  Dec 22 04:31:55.177: INFO: Got endpoints: latency-svc-tv9j5 [75.132575ms]
  Dec 22 04:31:55.177: INFO: Created: latency-svc-7vfwn
  Dec 22 04:31:55.183: INFO: Got endpoints: latency-svc-7vfwn [81.425529ms]
  Dec 22 04:31:55.188: INFO: Created: latency-svc-d4hjb
  Dec 22 04:31:55.203: INFO: Got endpoints: latency-svc-d4hjb [101.805337ms]
  Dec 22 04:31:55.209: INFO: Created: latency-svc-bb2zq
  Dec 22 04:31:55.212: INFO: Got endpoints: latency-svc-bb2zq [110.33824ms]
  Dec 22 04:31:55.219: INFO: Created: latency-svc-dcf26
  Dec 22 04:31:55.230: INFO: Got endpoints: latency-svc-dcf26 [128.139003ms]
  Dec 22 04:31:55.294: INFO: Created: latency-svc-shzdz
  Dec 22 04:31:55.298: INFO: Created: latency-svc-sc58x
  Dec 22 04:31:55.299: INFO: Created: latency-svc-9gbl7
  Dec 22 04:31:55.302: INFO: Created: latency-svc-ntn8m
  Dec 22 04:31:55.303: INFO: Created: latency-svc-gvbxh
  Dec 22 04:31:55.304: INFO: Created: latency-svc-vjv9j
  Dec 22 04:31:55.305: INFO: Created: latency-svc-hnsbj
  Dec 22 04:31:55.306: INFO: Created: latency-svc-gvwts
  Dec 22 04:31:55.321: INFO: Got endpoints: latency-svc-shzdz [90.856332ms]
  Dec 22 04:31:55.306: INFO: Created: latency-svc-pv7bs
  Dec 22 04:31:55.307: INFO: Created: latency-svc-g6hhk
  Dec 22 04:31:55.307: INFO: Created: latency-svc-xw87l
  Dec 22 04:31:55.308: INFO: Created: latency-svc-mh2xs
  Dec 22 04:31:55.308: INFO: Created: latency-svc-dgvsm
  Dec 22 04:31:55.308: INFO: Created: latency-svc-2k6mr
  Dec 22 04:31:55.326: INFO: Created: latency-svc-mj6vz
  Dec 22 04:31:55.339: INFO: Got endpoints: latency-svc-gvwts [237.019442ms]
  Dec 22 04:31:55.340: INFO: Got endpoints: latency-svc-gvbxh [237.989593ms]
  Dec 22 04:31:55.340: INFO: Got endpoints: latency-svc-mj6vz [136.983183ms]
  Dec 22 04:31:55.361: INFO: Got endpoints: latency-svc-mh2xs [258.662467ms]
  Dec 22 04:31:55.361: INFO: Got endpoints: latency-svc-2k6mr [258.646876ms]
  Dec 22 04:31:55.361: INFO: Got endpoints: latency-svc-dgvsm [258.737418ms]
  Dec 22 04:31:55.370: INFO: Got endpoints: latency-svc-ntn8m [267.734072ms]
  Dec 22 04:31:55.371: INFO: Got endpoints: latency-svc-xw87l [268.719293ms]
  Dec 22 04:31:55.375: INFO: Created: latency-svc-5d297
  Dec 22 04:31:55.394: INFO: Got endpoints: latency-svc-g6hhk [235.194413ms]
  Dec 22 04:31:55.396: INFO: Got endpoints: latency-svc-pv7bs [246.183459ms]
  Dec 22 04:31:55.397: INFO: Got endpoints: latency-svc-hnsbj [218.973505ms]
  Dec 22 04:31:55.403: INFO: Got endpoints: latency-svc-vjv9j [220.069639ms]
  Dec 22 04:31:55.404: INFO: Got endpoints: latency-svc-9gbl7 [191.241929ms]
  Dec 22 04:31:55.415: INFO: Created: latency-svc-4ltc4
  Dec 22 04:31:55.416: INFO: Got endpoints: latency-svc-sc58x [313.828833ms]
  Dec 22 04:31:55.416: INFO: Got endpoints: latency-svc-5d297 [94.304007ms]
  Dec 22 04:31:55.425: INFO: Got endpoints: latency-svc-4ltc4 [85.773523ms]
  Dec 22 04:31:55.431: INFO: Created: latency-svc-l5d2g
  Dec 22 04:31:55.436: INFO: Created: latency-svc-8fdx5
  Dec 22 04:31:55.448: INFO: Created: latency-svc-94bxl
  Dec 22 04:31:55.449: INFO: Got endpoints: latency-svc-l5d2g [107.851497ms]
  Dec 22 04:31:55.449: INFO: Got endpoints: latency-svc-8fdx5 [108.640824ms]
  Dec 22 04:31:55.464: INFO: Got endpoints: latency-svc-94bxl [102.180566ms]
  Dec 22 04:31:55.470: INFO: Created: latency-svc-jlzs9
  Dec 22 04:31:55.479: INFO: Created: latency-svc-tbqkw
  Dec 22 04:31:55.481: INFO: Got endpoints: latency-svc-jlzs9 [118.66615ms]
  Dec 22 04:31:55.490: INFO: Created: latency-svc-c2x5h
  Dec 22 04:31:55.493: INFO: Got endpoints: latency-svc-tbqkw [130.446923ms]
  Dec 22 04:31:55.506: INFO: Got endpoints: latency-svc-c2x5h [135.342418ms]
  Dec 22 04:31:55.507: INFO: Created: latency-svc-ftws8
  Dec 22 04:31:55.514: INFO: Created: latency-svc-bg4gc
  Dec 22 04:31:55.523: INFO: Got endpoints: latency-svc-bg4gc [127.296425ms]
  Dec 22 04:31:55.527: INFO: Created: latency-svc-kxgjr
  Dec 22 04:31:55.528: INFO: Got endpoints: latency-svc-ftws8 [156.744578ms]
  Dec 22 04:31:55.555: INFO: Got endpoints: latency-svc-kxgjr [158.440035ms]
  Dec 22 04:31:55.555: INFO: Created: latency-svc-cpsxv
  Dec 22 04:31:55.559: INFO: Got endpoints: latency-svc-cpsxv [162.495292ms]
  Dec 22 04:31:55.563: INFO: Created: latency-svc-5hb9c
  Dec 22 04:31:55.572: INFO: Got endpoints: latency-svc-5hb9c [168.717335ms]
  Dec 22 04:31:55.577: INFO: Created: latency-svc-g2hjp
  Dec 22 04:31:55.587: INFO: Created: latency-svc-9jjzr
  Dec 22 04:31:55.593: INFO: Got endpoints: latency-svc-g2hjp [189.87868ms]
  Dec 22 04:31:55.598: INFO: Got endpoints: latency-svc-9jjzr [181.608533ms]
  Dec 22 04:31:55.603: INFO: Created: latency-svc-lvw28
  Dec 22 04:31:55.613: INFO: Created: latency-svc-ds78q
  Dec 22 04:31:55.617: INFO: Got endpoints: latency-svc-lvw28 [201.05226ms]
  Dec 22 04:31:55.623: INFO: Got endpoints: latency-svc-ds78q [197.686329ms]
  Dec 22 04:31:55.626: INFO: Created: latency-svc-nz2kr
  Dec 22 04:31:55.640: INFO: Got endpoints: latency-svc-nz2kr [190.484124ms]
  Dec 22 04:31:55.646: INFO: Created: latency-svc-gr2t7
  Dec 22 04:31:55.653: INFO: Created: latency-svc-cd6gc
  Dec 22 04:31:55.661: INFO: Created: latency-svc-494xr
  Dec 22 04:31:55.663: INFO: Created: latency-svc-lm56s
  Dec 22 04:31:55.673: INFO: Created: latency-svc-m9f7q
  Dec 22 04:31:55.682: INFO: Created: latency-svc-8jmh4
  Dec 22 04:31:55.685: INFO: Got endpoints: latency-svc-gr2t7 [235.158574ms]
  Dec 22 04:31:55.695: INFO: Created: latency-svc-fbxl7
  Dec 22 04:31:55.703: INFO: Created: latency-svc-qpqzt
  Dec 22 04:31:55.707: INFO: Created: latency-svc-kzlvk
  Dec 22 04:31:55.714: INFO: Created: latency-svc-zt7ln
  Dec 22 04:31:55.720: INFO: Created: latency-svc-rfgfj
  Dec 22 04:31:55.732: INFO: Created: latency-svc-h9fdm
  Dec 22 04:31:55.740: INFO: Got endpoints: latency-svc-cd6gc [275.029511ms]
  Dec 22 04:31:55.742: INFO: Created: latency-svc-bhqwn
  Dec 22 04:31:55.754: INFO: Created: latency-svc-qvzdq
  Dec 22 04:31:55.763: INFO: Created: latency-svc-8hvcw
  Dec 22 04:31:55.770: INFO: Created: latency-svc-429qf
  Dec 22 04:31:55.774: INFO: Created: latency-svc-47mhh
  Dec 22 04:31:55.782: INFO: Got endpoints: latency-svc-494xr [300.12968ms]
  Dec 22 04:31:55.793: INFO: Created: latency-svc-xk794
  Dec 22 04:31:55.837: INFO: Got endpoints: latency-svc-lm56s [342.994992ms]
  Dec 22 04:31:55.847: INFO: Created: latency-svc-869vt
  Dec 22 04:31:55.883: INFO: Got endpoints: latency-svc-m9f7q [377.004502ms]
  Dec 22 04:31:55.893: INFO: Created: latency-svc-mmxqc
  Dec 22 04:31:55.932: INFO: Got endpoints: latency-svc-8jmh4 [408.5609ms]
  Dec 22 04:31:55.943: INFO: Created: latency-svc-wqh7q
  Dec 22 04:31:55.982: INFO: Got endpoints: latency-svc-fbxl7 [453.645908ms]
  Dec 22 04:31:55.991: INFO: Created: latency-svc-jr6d7
  Dec 22 04:31:56.034: INFO: Got endpoints: latency-svc-qpqzt [478.800129ms]
  Dec 22 04:31:56.044: INFO: Created: latency-svc-gxq8b
  Dec 22 04:31:56.081: INFO: Got endpoints: latency-svc-kzlvk [521.304503ms]
  Dec 22 04:31:56.094: INFO: Created: latency-svc-rf5gl
  Dec 22 04:31:56.133: INFO: Got endpoints: latency-svc-zt7ln [560.303742ms]
  Dec 22 04:31:56.144: INFO: Created: latency-svc-xzjxt
  Dec 22 04:31:56.182: INFO: Got endpoints: latency-svc-rfgfj [588.138739ms]
  Dec 22 04:31:56.195: INFO: Created: latency-svc-6xx8c
  Dec 22 04:31:56.234: INFO: Got endpoints: latency-svc-h9fdm [636.517489ms]
  Dec 22 04:31:56.249: INFO: Created: latency-svc-v2gdv
  Dec 22 04:31:56.280: INFO: Got endpoints: latency-svc-bhqwn [662.918796ms]
  Dec 22 04:31:56.290: INFO: Created: latency-svc-qlnwr
  Dec 22 04:31:56.334: INFO: Got endpoints: latency-svc-qvzdq [711.218543ms]
  Dec 22 04:31:56.344: INFO: Created: latency-svc-nvdkd
  Dec 22 04:31:56.384: INFO: Got endpoints: latency-svc-8hvcw [743.470637ms]
  Dec 22 04:31:56.395: INFO: Created: latency-svc-tzrvs
  Dec 22 04:31:56.439: INFO: Got endpoints: latency-svc-429qf [754.38388ms]
  Dec 22 04:31:56.449: INFO: Created: latency-svc-tbssq
  Dec 22 04:31:56.481: INFO: Got endpoints: latency-svc-47mhh [738.98939ms]
  Dec 22 04:31:56.490: INFO: Created: latency-svc-bqvbf
  Dec 22 04:31:56.533: INFO: Got endpoints: latency-svc-xk794 [751.728483ms]
  Dec 22 04:31:56.543: INFO: Created: latency-svc-frrxl
  Dec 22 04:31:56.583: INFO: Got endpoints: latency-svc-869vt [745.849656ms]
  Dec 22 04:31:56.592: INFO: Created: latency-svc-dr45b
  Dec 22 04:31:56.631: INFO: Got endpoints: latency-svc-mmxqc [748.087095ms]
  Dec 22 04:31:56.645: INFO: Created: latency-svc-fhzqq
  Dec 22 04:31:56.685: INFO: Got endpoints: latency-svc-wqh7q [751.851407ms]
  Dec 22 04:31:56.695: INFO: Created: latency-svc-wrp67
  Dec 22 04:31:56.733: INFO: Got endpoints: latency-svc-jr6d7 [751.104161ms]
  Dec 22 04:31:56.747: INFO: Created: latency-svc-nfrzf
  Dec 22 04:31:56.781: INFO: Got endpoints: latency-svc-gxq8b [746.845478ms]
  Dec 22 04:31:56.792: INFO: Created: latency-svc-9r8qh
  Dec 22 04:31:56.833: INFO: Got endpoints: latency-svc-rf5gl [752.60954ms]
  Dec 22 04:31:56.845: INFO: Created: latency-svc-flwk7
  Dec 22 04:31:56.884: INFO: Got endpoints: latency-svc-xzjxt [750.492505ms]
  Dec 22 04:31:56.894: INFO: Created: latency-svc-l89t8
  Dec 22 04:31:56.933: INFO: Got endpoints: latency-svc-6xx8c [750.272231ms]
  Dec 22 04:31:56.943: INFO: Created: latency-svc-dpnrq
  Dec 22 04:31:56.982: INFO: Got endpoints: latency-svc-v2gdv [747.610612ms]
  Dec 22 04:31:56.996: INFO: Created: latency-svc-dfnsh
  Dec 22 04:31:57.035: INFO: Got endpoints: latency-svc-qlnwr [754.827268ms]
  Dec 22 04:31:57.046: INFO: Created: latency-svc-mknw6
  Dec 22 04:31:57.082: INFO: Got endpoints: latency-svc-nvdkd [747.083682ms]
  Dec 22 04:31:57.097: INFO: Created: latency-svc-xp5rh
  Dec 22 04:31:57.135: INFO: Got endpoints: latency-svc-tzrvs [751.499686ms]
  Dec 22 04:31:57.145: INFO: Created: latency-svc-rtftw
  Dec 22 04:31:57.186: INFO: Got endpoints: latency-svc-tbssq [746.867787ms]
  Dec 22 04:31:57.197: INFO: Created: latency-svc-99kkq
  Dec 22 04:31:57.236: INFO: Got endpoints: latency-svc-bqvbf [754.576122ms]
  Dec 22 04:31:57.251: INFO: Created: latency-svc-b248z
  Dec 22 04:31:57.283: INFO: Got endpoints: latency-svc-frrxl [748.953302ms]
  Dec 22 04:31:57.296: INFO: Created: latency-svc-z76k9
  Dec 22 04:31:57.338: INFO: Got endpoints: latency-svc-dr45b [754.561212ms]
  Dec 22 04:31:57.350: INFO: Created: latency-svc-94jm2
  Dec 22 04:31:57.395: INFO: Got endpoints: latency-svc-fhzqq [763.601636ms]
  Dec 22 04:31:57.429: INFO: Created: latency-svc-gt8hx
  Dec 22 04:31:57.434: INFO: Got endpoints: latency-svc-wrp67 [749.032093ms]
  Dec 22 04:31:57.447: INFO: Created: latency-svc-6bg6j
  Dec 22 04:31:57.480: INFO: Got endpoints: latency-svc-nfrzf [746.260103ms]
  Dec 22 04:31:57.493: INFO: Created: latency-svc-2rr5g
  Dec 22 04:31:57.531: INFO: Got endpoints: latency-svc-9r8qh [749.386281ms]
  Dec 22 04:31:57.546: INFO: Created: latency-svc-lz2t4
  Dec 22 04:31:57.581: INFO: Got endpoints: latency-svc-flwk7 [745.631742ms]
  Dec 22 04:31:57.595: INFO: Created: latency-svc-xb7c8
  Dec 22 04:31:57.637: INFO: Got endpoints: latency-svc-l89t8 [752.665914ms]
  Dec 22 04:31:57.654: INFO: Created: latency-svc-s44n9
  Dec 22 04:31:57.683: INFO: Got endpoints: latency-svc-dpnrq [750.22056ms]
  Dec 22 04:31:57.696: INFO: Created: latency-svc-rkqwf
  Dec 22 04:31:57.740: INFO: Got endpoints: latency-svc-dfnsh [756.72939ms]
  Dec 22 04:31:57.765: INFO: Created: latency-svc-zblvw
  Dec 22 04:31:57.785: INFO: Got endpoints: latency-svc-mknw6 [749.323512ms]
  Dec 22 04:31:57.802: INFO: Created: latency-svc-lhs4x
  Dec 22 04:31:57.833: INFO: Got endpoints: latency-svc-xp5rh [750.300962ms]
  Dec 22 04:31:57.844: INFO: Created: latency-svc-rm4bh
  Dec 22 04:31:57.883: INFO: Got endpoints: latency-svc-rtftw [747.889341ms]
  Dec 22 04:31:57.894: INFO: Created: latency-svc-k6zwt
  Dec 22 04:31:57.933: INFO: Got endpoints: latency-svc-99kkq [746.161173ms]
  Dec 22 04:31:57.950: INFO: Created: latency-svc-5xpwq
  Dec 22 04:31:57.987: INFO: Got endpoints: latency-svc-b248z [751.078988ms]
  Dec 22 04:31:58.003: INFO: Created: latency-svc-cs6h2
  Dec 22 04:31:58.172: INFO: Got endpoints: latency-svc-z76k9 [888.766827ms]
  Dec 22 04:31:58.179: INFO: Got endpoints: latency-svc-gt8hx [779.639063ms]
  Dec 22 04:31:58.179: INFO: Got endpoints: latency-svc-94jm2 [840.391428ms]
  Dec 22 04:31:58.194: INFO: Got endpoints: latency-svc-6bg6j [759.585702ms]
  Dec 22 04:31:58.202: INFO: Created: latency-svc-7jqpm
  Dec 22 04:31:58.213: INFO: Created: latency-svc-v7x5c
  Dec 22 04:31:58.217: INFO: Created: latency-svc-9fpww
  Dec 22 04:31:58.225: INFO: Created: latency-svc-w4ff5
  Dec 22 04:31:58.233: INFO: Got endpoints: latency-svc-2rr5g [752.100131ms]
  Dec 22 04:31:58.252: INFO: Created: latency-svc-6lk4m
  Dec 22 04:31:58.282: INFO: Got endpoints: latency-svc-lz2t4 [750.665269ms]
  Dec 22 04:31:58.293: INFO: Created: latency-svc-kcpl6
  Dec 22 04:31:58.334: INFO: Got endpoints: latency-svc-xb7c8 [753.249294ms]
  Dec 22 04:31:58.343: INFO: Created: latency-svc-7mtxb
  Dec 22 04:31:58.382: INFO: Got endpoints: latency-svc-s44n9 [745.13962ms]
  Dec 22 04:31:58.393: INFO: Created: latency-svc-jtbtw
  Dec 22 04:31:58.433: INFO: Got endpoints: latency-svc-rkqwf [750.023166ms]
  Dec 22 04:31:58.443: INFO: Created: latency-svc-52xjm
  Dec 22 04:31:58.483: INFO: Got endpoints: latency-svc-zblvw [742.620286ms]
  Dec 22 04:31:58.495: INFO: Created: latency-svc-xh9kp
  Dec 22 04:31:58.533: INFO: Got endpoints: latency-svc-lhs4x [747.422469ms]
  Dec 22 04:31:58.543: INFO: Created: latency-svc-xkgnt
  Dec 22 04:31:58.585: INFO: Got endpoints: latency-svc-rm4bh [750.784802ms]
  Dec 22 04:31:58.595: INFO: Created: latency-svc-5s4kq
  Dec 22 04:31:58.631: INFO: Got endpoints: latency-svc-k6zwt [747.517701ms]
  Dec 22 04:31:58.643: INFO: Created: latency-svc-rhtlg
  Dec 22 04:31:58.682: INFO: Got endpoints: latency-svc-5xpwq [748.892182ms]
  Dec 22 04:31:58.698: INFO: Created: latency-svc-vlzlv
  Dec 22 04:31:58.733: INFO: Got endpoints: latency-svc-cs6h2 [745.099351ms]
  Dec 22 04:31:58.747: INFO: Created: latency-svc-2dxnc
  Dec 22 04:31:58.783: INFO: Got endpoints: latency-svc-7jqpm [611.415157ms]
  Dec 22 04:31:58.795: INFO: Created: latency-svc-2vg8f
  Dec 22 04:31:59.045: INFO: Got endpoints: latency-svc-v7x5c [866.112361ms]
  Dec 22 04:31:59.056: INFO: Got endpoints: latency-svc-kcpl6 [773.155283ms]
  Dec 22 04:31:59.056: INFO: Got endpoints: latency-svc-w4ff5 [862.231018ms]
  Dec 22 04:31:59.056: INFO: Got endpoints: latency-svc-9fpww [876.721579ms]
  Dec 22 04:31:59.056: INFO: Got endpoints: latency-svc-6lk4m [823.113087ms]
  Dec 22 04:31:59.068: INFO: Created: latency-svc-8xdcs
  Dec 22 04:31:59.075: INFO: Created: latency-svc-7rmhg
  Dec 22 04:31:59.088: INFO: Got endpoints: latency-svc-7mtxb [753.788787ms]
  Dec 22 04:31:59.091: INFO: Created: latency-svc-pqhnh
  Dec 22 04:31:59.095: INFO: Created: latency-svc-dx54x
  Dec 22 04:31:59.104: INFO: Created: latency-svc-979qx
  Dec 22 04:31:59.112: INFO: Created: latency-svc-cx4dz
  Dec 22 04:31:59.137: INFO: Got endpoints: latency-svc-jtbtw [754.682627ms]
  Dec 22 04:31:59.150: INFO: Created: latency-svc-ct8ff
  Dec 22 04:31:59.184: INFO: Got endpoints: latency-svc-52xjm [750.483966ms]
  Dec 22 04:31:59.199: INFO: Created: latency-svc-k4zl2
  Dec 22 04:31:59.232: INFO: Got endpoints: latency-svc-xh9kp [748.880192ms]
  Dec 22 04:31:59.247: INFO: Created: latency-svc-mghb9
  Dec 22 04:31:59.287: INFO: Got endpoints: latency-svc-xkgnt [753.161544ms]
  Dec 22 04:31:59.300: INFO: Created: latency-svc-nlwm7
  Dec 22 04:31:59.333: INFO: Got endpoints: latency-svc-5s4kq [748.607067ms]
  Dec 22 04:31:59.343: INFO: Created: latency-svc-fzmxq
  Dec 22 04:31:59.398: INFO: Got endpoints: latency-svc-rhtlg [767.537114ms]
  Dec 22 04:31:59.447: INFO: Created: latency-svc-c5trq
  Dec 22 04:31:59.449: INFO: Got endpoints: latency-svc-vlzlv [766.671294ms]
  Dec 22 04:31:59.494: INFO: Created: latency-svc-28bg4
  Dec 22 04:31:59.495: INFO: Got endpoints: latency-svc-2dxnc [761.30948ms]
  Dec 22 04:31:59.522: INFO: Created: latency-svc-lmktt
  Dec 22 04:31:59.541: INFO: Got endpoints: latency-svc-2vg8f [756.657439ms]
  Dec 22 04:31:59.553: INFO: Created: latency-svc-xgxcd
  Dec 22 04:31:59.583: INFO: Got endpoints: latency-svc-8xdcs [536.303374ms]
  Dec 22 04:31:59.593: INFO: Created: latency-svc-l96pl
  Dec 22 04:31:59.632: INFO: Got endpoints: latency-svc-7rmhg [575.829673ms]
  Dec 22 04:31:59.648: INFO: Created: latency-svc-k9m4w
  Dec 22 04:31:59.684: INFO: Got endpoints: latency-svc-pqhnh [626.806258ms]
  Dec 22 04:31:59.693: INFO: Created: latency-svc-jk5q7
  Dec 22 04:31:59.733: INFO: Got endpoints: latency-svc-dx54x [675.887133ms]
  Dec 22 04:31:59.747: INFO: Created: latency-svc-4rmzv
  Dec 22 04:31:59.781: INFO: Got endpoints: latency-svc-979qx [723.794862ms]
  Dec 22 04:31:59.791: INFO: Created: latency-svc-zg4xl
  Dec 22 04:31:59.835: INFO: Got endpoints: latency-svc-cx4dz [746.647353ms]
  Dec 22 04:31:59.848: INFO: Created: latency-svc-4btp6
  Dec 22 04:31:59.883: INFO: Got endpoints: latency-svc-ct8ff [746.412438ms]
  Dec 22 04:31:59.893: INFO: Created: latency-svc-pvndw
  Dec 22 04:31:59.932: INFO: Got endpoints: latency-svc-k4zl2 [747.335569ms]
  Dec 22 04:31:59.943: INFO: Created: latency-svc-v7krv
  Dec 22 04:31:59.980: INFO: Got endpoints: latency-svc-mghb9 [747.840819ms]
  Dec 22 04:31:59.992: INFO: Created: latency-svc-fjkxb
  Dec 22 04:32:00.035: INFO: Got endpoints: latency-svc-nlwm7 [748.226287ms]
  Dec 22 04:32:00.048: INFO: Created: latency-svc-k5h4p
  Dec 22 04:32:00.082: INFO: Got endpoints: latency-svc-fzmxq [748.791979ms]
  Dec 22 04:32:00.092: INFO: Created: latency-svc-bjbw7
  Dec 22 04:32:00.134: INFO: Got endpoints: latency-svc-c5trq [735.500754ms]
  Dec 22 04:32:00.144: INFO: Created: latency-svc-sngkb
  Dec 22 04:32:00.183: INFO: Got endpoints: latency-svc-28bg4 [734.435121ms]
  Dec 22 04:32:00.192: INFO: Created: latency-svc-lxgk8
  Dec 22 04:32:00.234: INFO: Got endpoints: latency-svc-lmktt [738.304434ms]
  Dec 22 04:32:00.243: INFO: Created: latency-svc-vw68z
  Dec 22 04:32:00.283: INFO: Got endpoints: latency-svc-xgxcd [742.039395ms]
  Dec 22 04:32:00.294: INFO: Created: latency-svc-k97tg
  Dec 22 04:32:00.335: INFO: Got endpoints: latency-svc-l96pl [751.899975ms]
  Dec 22 04:32:00.356: INFO: Created: latency-svc-czdkt
  Dec 22 04:32:00.383: INFO: Got endpoints: latency-svc-k9m4w [750.773932ms]
  Dec 22 04:32:00.397: INFO: Created: latency-svc-r2t5n
  Dec 22 04:32:00.435: INFO: Got endpoints: latency-svc-jk5q7 [750.496526ms]
  Dec 22 04:32:00.445: INFO: Created: latency-svc-67kcz
  Dec 22 04:32:00.485: INFO: Got endpoints: latency-svc-4rmzv [750.67736ms]
  Dec 22 04:32:00.498: INFO: Created: latency-svc-bsdln
  Dec 22 04:32:00.532: INFO: Got endpoints: latency-svc-zg4xl [750.420585ms]
  Dec 22 04:32:00.543: INFO: Created: latency-svc-vbnnx
  Dec 22 04:32:00.580: INFO: Got endpoints: latency-svc-4btp6 [744.16223ms]
  Dec 22 04:32:00.597: INFO: Created: latency-svc-nxtcn
  Dec 22 04:32:00.631: INFO: Got endpoints: latency-svc-pvndw [747.392499ms]
  Dec 22 04:32:00.642: INFO: Created: latency-svc-z45pt
  Dec 22 04:32:00.681: INFO: Got endpoints: latency-svc-v7krv [748.82428ms]
  Dec 22 04:32:00.693: INFO: Created: latency-svc-x2jtq
  Dec 22 04:32:00.736: INFO: Got endpoints: latency-svc-fjkxb [754.908061ms]
  Dec 22 04:32:00.755: INFO: Created: latency-svc-6rhlj
  Dec 22 04:32:00.790: INFO: Got endpoints: latency-svc-k5h4p [754.36986ms]
  Dec 22 04:32:00.802: INFO: Created: latency-svc-cvhpv
  Dec 22 04:32:00.834: INFO: Got endpoints: latency-svc-bjbw7 [751.364615ms]
  Dec 22 04:32:00.844: INFO: Created: latency-svc-jptzg
  Dec 22 04:32:00.882: INFO: Got endpoints: latency-svc-sngkb [747.061812ms]
  Dec 22 04:32:00.892: INFO: Created: latency-svc-225pd
  Dec 22 04:32:00.934: INFO: Got endpoints: latency-svc-lxgk8 [750.829274ms]
  Dec 22 04:32:00.944: INFO: Created: latency-svc-jdntv
  Dec 22 04:32:00.983: INFO: Got endpoints: latency-svc-vw68z [748.536894ms]
  Dec 22 04:32:00.995: INFO: Created: latency-svc-ltn5m
  Dec 22 04:32:01.031: INFO: Got endpoints: latency-svc-k97tg [747.179714ms]
  Dec 22 04:32:01.041: INFO: Created: latency-svc-zjzh5
  Dec 22 04:32:01.084: INFO: Got endpoints: latency-svc-czdkt [748.307308ms]
  Dec 22 04:32:01.093: INFO: Created: latency-svc-lhw9v
  Dec 22 04:32:01.139: INFO: Got endpoints: latency-svc-r2t5n [750.592708ms]
  Dec 22 04:32:01.151: INFO: Created: latency-svc-wnbbf
  Dec 22 04:32:01.183: INFO: Got endpoints: latency-svc-67kcz [748.058742ms]
  Dec 22 04:32:01.192: INFO: Created: latency-svc-dzwz5
  Dec 22 04:32:01.233: INFO: Got endpoints: latency-svc-bsdln [748.311078ms]
  Dec 22 04:32:01.244: INFO: Created: latency-svc-bz8sn
  Dec 22 04:32:01.284: INFO: Got endpoints: latency-svc-vbnnx [751.739431ms]
  Dec 22 04:32:01.293: INFO: Created: latency-svc-fjm9x
  Dec 22 04:32:01.333: INFO: Got endpoints: latency-svc-nxtcn [752.553398ms]
  Dec 22 04:32:01.344: INFO: Created: latency-svc-btr2j
  Dec 22 04:32:01.382: INFO: Got endpoints: latency-svc-z45pt [749.616186ms]
  Dec 22 04:32:01.392: INFO: Created: latency-svc-jqcff
  Dec 22 04:32:01.434: INFO: Got endpoints: latency-svc-x2jtq [751.449425ms]
  Dec 22 04:32:01.443: INFO: Created: latency-svc-pdd58
  Dec 22 04:32:01.482: INFO: Got endpoints: latency-svc-6rhlj [745.63641ms]
  Dec 22 04:32:01.494: INFO: Created: latency-svc-6pddj
  Dec 22 04:32:01.531: INFO: Got endpoints: latency-svc-cvhpv [740.823287ms]
  Dec 22 04:32:01.542: INFO: Created: latency-svc-rx9jf
  Dec 22 04:32:01.582: INFO: Got endpoints: latency-svc-jptzg [748.083082ms]
  Dec 22 04:32:01.593: INFO: Created: latency-svc-c7rt5
  Dec 22 04:32:01.640: INFO: Got endpoints: latency-svc-225pd [757.665299ms]
  Dec 22 04:32:01.651: INFO: Created: latency-svc-5lft6
  Dec 22 04:32:01.683: INFO: Got endpoints: latency-svc-jdntv [748.221715ms]
  Dec 22 04:32:01.692: INFO: Created: latency-svc-68vb9
  Dec 22 04:32:01.733: INFO: Got endpoints: latency-svc-ltn5m [749.8062ms]
  Dec 22 04:32:01.753: INFO: Created: latency-svc-jlx5t
  Dec 22 04:32:01.783: INFO: Got endpoints: latency-svc-zjzh5 [752.270633ms]
  Dec 22 04:32:01.795: INFO: Created: latency-svc-4r8rg
  Dec 22 04:32:01.833: INFO: Got endpoints: latency-svc-lhw9v [748.533994ms]
  Dec 22 04:32:01.845: INFO: Created: latency-svc-x6bwt
  Dec 22 04:32:01.884: INFO: Got endpoints: latency-svc-wnbbf [744.745791ms]
  Dec 22 04:32:01.894: INFO: Created: latency-svc-67dvq
  Dec 22 04:32:01.932: INFO: Got endpoints: latency-svc-dzwz5 [748.680467ms]
  Dec 22 04:32:01.945: INFO: Created: latency-svc-vwp7z
  Dec 22 04:32:01.983: INFO: Got endpoints: latency-svc-bz8sn [749.730859ms]
  Dec 22 04:32:01.994: INFO: Created: latency-svc-8wzmv
  Dec 22 04:32:02.047: INFO: Got endpoints: latency-svc-fjm9x [762.610206ms]
  Dec 22 04:32:02.060: INFO: Created: latency-svc-fwl5r
  Dec 22 04:32:02.083: INFO: Got endpoints: latency-svc-btr2j [749.209838ms]
  Dec 22 04:32:02.096: INFO: Created: latency-svc-pt2r8
  Dec 22 04:32:02.130: INFO: Got endpoints: latency-svc-jqcff [748.550013ms]
  Dec 22 04:32:02.144: INFO: Created: latency-svc-nt7l8
  Dec 22 04:32:02.181: INFO: Got endpoints: latency-svc-pdd58 [746.346346ms]
  Dec 22 04:32:02.195: INFO: Created: latency-svc-dsqn8
  Dec 22 04:32:02.233: INFO: Got endpoints: latency-svc-6pddj [749.602678ms]
  Dec 22 04:32:02.249: INFO: Created: latency-svc-jrdqw
  Dec 22 04:32:02.286: INFO: Got endpoints: latency-svc-rx9jf [755.34902ms]
  Dec 22 04:32:02.297: INFO: Created: latency-svc-h4pqz
  Dec 22 04:32:02.334: INFO: Got endpoints: latency-svc-c7rt5 [751.735953ms]
  Dec 22 04:32:02.345: INFO: Created: latency-svc-lzktt
  Dec 22 04:32:02.388: INFO: Got endpoints: latency-svc-5lft6 [747.973492ms]
  Dec 22 04:32:02.408: INFO: Created: latency-svc-27r2b
  Dec 22 04:32:02.434: INFO: Got endpoints: latency-svc-68vb9 [750.807443ms]
  Dec 22 04:32:02.445: INFO: Created: latency-svc-2jnq9
  Dec 22 04:32:02.483: INFO: Got endpoints: latency-svc-jlx5t [749.322662ms]
  Dec 22 04:32:02.502: INFO: Created: latency-svc-rkcwg
  Dec 22 04:32:02.531: INFO: Got endpoints: latency-svc-4r8rg [747.497293ms]
  Dec 22 04:32:02.544: INFO: Created: latency-svc-dsvxc
  Dec 22 04:32:02.581: INFO: Got endpoints: latency-svc-x6bwt [748.254263ms]
  Dec 22 04:32:02.604: INFO: Created: latency-svc-wtg6g
  Dec 22 04:32:02.635: INFO: Got endpoints: latency-svc-67dvq [750.839905ms]
  Dec 22 04:32:02.652: INFO: Created: latency-svc-q2t82
  Dec 22 04:32:02.689: INFO: Got endpoints: latency-svc-vwp7z [756.688235ms]
  Dec 22 04:32:02.709: INFO: Created: latency-svc-p4wvt
  Dec 22 04:32:02.744: INFO: Got endpoints: latency-svc-8wzmv [760.819259ms]
  Dec 22 04:32:02.766: INFO: Created: latency-svc-7bvkh
  Dec 22 04:32:02.785: INFO: Got endpoints: latency-svc-fwl5r [737.960392ms]
  Dec 22 04:32:02.997: INFO: Got endpoints: latency-svc-pt2r8 [913.42405ms]
  Dec 22 04:32:02.998: INFO: Got endpoints: latency-svc-dsqn8 [815.962196ms]
  Dec 22 04:32:02.998: INFO: Got endpoints: latency-svc-nt7l8 [866.87448ms]
  Dec 22 04:32:02.999: INFO: Got endpoints: latency-svc-jrdqw [766.584905ms]
  Dec 22 04:32:03.002: INFO: Created: latency-svc-spcsh
  Dec 22 04:32:03.018: INFO: Created: latency-svc-qft7k
  Dec 22 04:32:03.026: INFO: Created: latency-svc-kk5vr
  Dec 22 04:32:03.033: INFO: Got endpoints: latency-svc-h4pqz [746.753384ms]
  Dec 22 04:32:03.081: INFO: Got endpoints: latency-svc-lzktt [746.826779ms]
  Dec 22 04:32:03.135: INFO: Got endpoints: latency-svc-27r2b [746.403474ms]
  Dec 22 04:32:03.183: INFO: Got endpoints: latency-svc-2jnq9 [749.403192ms]
  Dec 22 04:32:03.232: INFO: Got endpoints: latency-svc-rkcwg [748.368094ms]
  Dec 22 04:32:03.286: INFO: Got endpoints: latency-svc-dsvxc [754.195734ms]
  Dec 22 04:32:03.332: INFO: Got endpoints: latency-svc-wtg6g [750.359631ms]
  Dec 22 04:32:03.383: INFO: Got endpoints: latency-svc-q2t82 [747.311045ms]
  Dec 22 04:32:03.431: INFO: Got endpoints: latency-svc-p4wvt [741.164051ms]
  Dec 22 04:32:03.485: INFO: Got endpoints: latency-svc-7bvkh [740.084868ms]
  Dec 22 04:32:03.532: INFO: Got endpoints: latency-svc-spcsh [743.920382ms]
  Dec 22 04:32:03.586: INFO: Got endpoints: latency-svc-qft7k [587.650431ms]
  Dec 22 04:32:03.633: INFO: Got endpoints: latency-svc-kk5vr [634.554833ms]
  Dec 22 04:32:03.633: INFO: Latencies: [48.966531ms 56.278679ms 75.132575ms 81.425529ms 85.773523ms 90.856332ms 94.304007ms 101.805337ms 102.180566ms 107.851497ms 108.640824ms 110.33824ms 118.66615ms 127.296425ms 128.139003ms 130.446923ms 135.342418ms 136.983183ms 156.744578ms 158.440035ms 162.495292ms 168.717335ms 181.608533ms 189.87868ms 190.484124ms 191.241929ms 197.686329ms 201.05226ms 218.973505ms 220.069639ms 235.158574ms 235.194413ms 237.019442ms 237.989593ms 246.183459ms 258.646876ms 258.662467ms 258.737418ms 267.734072ms 268.719293ms 275.029511ms 300.12968ms 313.828833ms 342.994992ms 377.004502ms 408.5609ms 453.645908ms 478.800129ms 521.304503ms 536.303374ms 560.303742ms 575.829673ms 587.650431ms 588.138739ms 611.415157ms 626.806258ms 634.554833ms 636.517489ms 662.918796ms 675.887133ms 711.218543ms 723.794862ms 734.435121ms 735.500754ms 737.960392ms 738.304434ms 738.98939ms 740.084868ms 740.823287ms 741.164051ms 742.039395ms 742.620286ms 743.470637ms 743.920382ms 744.16223ms 744.745791ms 745.099351ms 745.13962ms 745.631742ms 745.63641ms 745.849656ms 746.161173ms 746.260103ms 746.346346ms 746.403474ms 746.412438ms 746.647353ms 746.753384ms 746.826779ms 746.845478ms 746.867787ms 747.061812ms 747.083682ms 747.179714ms 747.311045ms 747.335569ms 747.392499ms 747.422469ms 747.497293ms 747.517701ms 747.610612ms 747.840819ms 747.889341ms 747.973492ms 748.058742ms 748.083082ms 748.087095ms 748.221715ms 748.226287ms 748.254263ms 748.307308ms 748.311078ms 748.368094ms 748.533994ms 748.536894ms 748.550013ms 748.607067ms 748.680467ms 748.791979ms 748.82428ms 748.880192ms 748.892182ms 748.953302ms 749.032093ms 749.209838ms 749.322662ms 749.323512ms 749.386281ms 749.403192ms 749.602678ms 749.616186ms 749.730859ms 749.8062ms 750.023166ms 750.22056ms 750.272231ms 750.300962ms 750.359631ms 750.420585ms 750.483966ms 750.492505ms 750.496526ms 750.592708ms 750.665269ms 750.67736ms 750.773932ms 750.784802ms 750.807443ms 750.829274ms 750.839905ms 751.078988ms 751.104161ms 751.364615ms 751.449425ms 751.499686ms 751.728483ms 751.735953ms 751.739431ms 751.851407ms 751.899975ms 752.100131ms 752.270633ms 752.553398ms 752.60954ms 752.665914ms 753.161544ms 753.249294ms 753.788787ms 754.195734ms 754.36986ms 754.38388ms 754.561212ms 754.576122ms 754.682627ms 754.827268ms 754.908061ms 755.34902ms 756.657439ms 756.688235ms 756.72939ms 757.665299ms 759.585702ms 760.819259ms 761.30948ms 762.610206ms 763.601636ms 766.584905ms 766.671294ms 767.537114ms 773.155283ms 779.639063ms 815.962196ms 823.113087ms 840.391428ms 862.231018ms 866.112361ms 866.87448ms 876.721579ms 888.766827ms 913.42405ms]
  Dec 22 04:32:03.633: INFO: 50 %ile: 747.610612ms
  Dec 22 04:32:03.633: INFO: 90 %ile: 757.665299ms
  Dec 22 04:32:03.633: INFO: 99 %ile: 888.766827ms
  Dec 22 04:32:03.633: INFO: Total sample count: 200
  Dec 22 04:32:03.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9632" for this suite. @ 12/22/23 04:32:03.644
• [11.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/22/23 04:32:03.653
  Dec 22 04:32:03.653: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pods @ 12/22/23 04:32:03.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:03.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:03.675
  STEP: creating the pod @ 12/22/23 04:32:03.678
  STEP: submitting the pod to kubernetes @ 12/22/23 04:32:03.679
  STEP: verifying the pod is in kubernetes @ 12/22/23 04:32:05.699
  STEP: updating the pod @ 12/22/23 04:32:05.702
  Dec 22 04:32:06.217: INFO: Successfully updated pod "pod-update-0a006a93-3051-4d79-b67a-3e720c297833"
  STEP: verifying the updated pod is in kubernetes @ 12/22/23 04:32:06.221
  Dec 22 04:32:06.224: INFO: Pod update OK
  Dec 22 04:32:06.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9311" for this suite. @ 12/22/23 04:32:06.231
• [2.588 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 12/22/23 04:32:06.242
  Dec 22 04:32:06.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 04:32:06.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:06.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:06.269
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9658 @ 12/22/23 04:32:06.273
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/22/23 04:32:06.295
  STEP: creating service externalsvc in namespace services-9658 @ 12/22/23 04:32:06.295
  STEP: creating replication controller externalsvc in namespace services-9658 @ 12/22/23 04:32:06.314
  I1222 04:32:06.325025      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-9658, replica count: 2
  I1222 04:32:09.378798      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/22/23 04:32:09.382
  Dec 22 04:32:09.404: INFO: Creating new exec pod
  Dec 22 04:32:13.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-9658 exec execpodjvzl4 -- /bin/sh -x -c nslookup nodeport-service.services-9658.svc.cluster.local'
  Dec 22 04:32:14.123: INFO: stderr: "+ nslookup nodeport-service.services-9658.svc.cluster.local\n"
  Dec 22 04:32:14.123: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-9658.svc.cluster.local\tcanonical name = externalsvc.services-9658.svc.cluster.local.\nName:\texternalsvc.services-9658.svc.cluster.local\nAddress: 10.43.144.209\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9658, will wait for the garbage collector to delete the pods @ 12/22/23 04:32:14.123
  Dec 22 04:32:14.191: INFO: Deleting ReplicationController externalsvc took: 13.970712ms
  Dec 22 04:32:14.292: INFO: Terminating ReplicationController externalsvc pods took: 100.654552ms
  Dec 22 04:32:17.621: INFO: Cleaning up the NodePort to ExternalName test service
  Dec 22 04:32:17.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9658" for this suite. @ 12/22/23 04:32:17.644
• [11.410 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 12/22/23 04:32:17.654
  Dec 22 04:32:17.654: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 04:32:17.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:17.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:17.677
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/22/23 04:32:17.68
  STEP: When a replicaset with a matching selector is created @ 12/22/23 04:32:19.699
  STEP: Then the orphan pod is adopted @ 12/22/23 04:32:19.703
  STEP: When the matched label of one of its pods change @ 12/22/23 04:32:20.71
  Dec 22 04:32:20.713: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/22/23 04:32:20.724
  Dec 22 04:32:21.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8532" for this suite. @ 12/22/23 04:32:21.736
• [4.090 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 12/22/23 04:32:21.744
  Dec 22 04:32:21.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubelet-test @ 12/22/23 04:32:21.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:21.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:21.769
  Dec 22 04:32:25.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3009" for this suite. @ 12/22/23 04:32:25.793
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 12/22/23 04:32:25.797
  Dec 22 04:32:25.797: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename disruption @ 12/22/23 04:32:25.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:25.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:25.817
  STEP: Creating a kubernetes client @ 12/22/23 04:32:25.819
  Dec 22 04:32:25.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename disruption-2 @ 12/22/23 04:32:25.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:25.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:25.84
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:32:25.846
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:32:27.856
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:32:29.864
  STEP: listing a collection of PDBs across all namespaces @ 12/22/23 04:32:31.869
  STEP: listing a collection of PDBs in namespace disruption-8757 @ 12/22/23 04:32:31.871
  STEP: deleting a collection of PDBs @ 12/22/23 04:32:31.874
  STEP: Waiting for the PDB collection to be deleted @ 12/22/23 04:32:31.886
  Dec 22 04:32:31.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3988" for this suite. @ 12/22/23 04:32:31.893
  Dec 22 04:32:31.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8757" for this suite. @ 12/22/23 04:32:31.905
• [6.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/22/23 04:32:31.917
  Dec 22 04:32:31.917: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-runtime @ 12/22/23 04:32:31.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:31.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:31.941
  STEP: create the container @ 12/22/23 04:32:31.944
  W1222 04:32:31.951496      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/22/23 04:32:31.952
  STEP: get the container status @ 12/22/23 04:32:34.982
  STEP: the container should be terminated @ 12/22/23 04:32:34.984
  STEP: the termination message should be set @ 12/22/23 04:32:34.984
  Dec 22 04:32:34.985: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/22/23 04:32:34.985
  Dec 22 04:32:34.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6875" for this suite. @ 12/22/23 04:32:35.004
• [3.094 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 12/22/23 04:32:35.011
  Dec 22 04:32:35.011: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename gc @ 12/22/23 04:32:35.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:35.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:35.035
  STEP: create the rc1 @ 12/22/23 04:32:35.041
  STEP: create the rc2 @ 12/22/23 04:32:35.063
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/22/23 04:32:41.109
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/22/23 04:32:42.02
  STEP: wait for the rc to be deleted @ 12/22/23 04:32:42.051
  Dec 22 04:32:47.097: INFO: 71 pods remaining
  Dec 22 04:32:47.097: INFO: 71 pods has nil DeletionTimestamp
  Dec 22 04:32:47.097: INFO: 
  STEP: Gathering metrics @ 12/22/23 04:32:52.081
  Dec 22 04:32:53.773: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 04:32:53.773: INFO: Deleting pod "simpletest-rc-to-be-deleted-2kjqx" in namespace "gc-6587"
  Dec 22 04:32:53.795: INFO: Deleting pod "simpletest-rc-to-be-deleted-4bvkb" in namespace "gc-6587"
  Dec 22 04:32:53.811: INFO: Deleting pod "simpletest-rc-to-be-deleted-4d4br" in namespace "gc-6587"
  Dec 22 04:32:53.845: INFO: Deleting pod "simpletest-rc-to-be-deleted-4h2hv" in namespace "gc-6587"
  Dec 22 04:32:53.863: INFO: Deleting pod "simpletest-rc-to-be-deleted-56w8m" in namespace "gc-6587"
  Dec 22 04:32:53.894: INFO: Deleting pod "simpletest-rc-to-be-deleted-58zxd" in namespace "gc-6587"
  Dec 22 04:32:53.922: INFO: Deleting pod "simpletest-rc-to-be-deleted-5fkms" in namespace "gc-6587"
  Dec 22 04:32:53.947: INFO: Deleting pod "simpletest-rc-to-be-deleted-5qgm4" in namespace "gc-6587"
  Dec 22 04:32:53.988: INFO: Deleting pod "simpletest-rc-to-be-deleted-5vvdz" in namespace "gc-6587"
  Dec 22 04:32:54.015: INFO: Deleting pod "simpletest-rc-to-be-deleted-65jhd" in namespace "gc-6587"
  Dec 22 04:32:54.040: INFO: Deleting pod "simpletest-rc-to-be-deleted-6fdhb" in namespace "gc-6587"
  Dec 22 04:32:54.079: INFO: Deleting pod "simpletest-rc-to-be-deleted-6qhnz" in namespace "gc-6587"
  Dec 22 04:32:54.099: INFO: Deleting pod "simpletest-rc-to-be-deleted-6s2w7" in namespace "gc-6587"
  Dec 22 04:32:54.123: INFO: Deleting pod "simpletest-rc-to-be-deleted-6swsx" in namespace "gc-6587"
  Dec 22 04:32:54.162: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xk6g" in namespace "gc-6587"
  Dec 22 04:32:54.184: INFO: Deleting pod "simpletest-rc-to-be-deleted-75nc7" in namespace "gc-6587"
  Dec 22 04:32:54.207: INFO: Deleting pod "simpletest-rc-to-be-deleted-7gjqz" in namespace "gc-6587"
  Dec 22 04:32:54.242: INFO: Deleting pod "simpletest-rc-to-be-deleted-7k4f9" in namespace "gc-6587"
  Dec 22 04:32:54.265: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mvbw" in namespace "gc-6587"
  Dec 22 04:32:54.295: INFO: Deleting pod "simpletest-rc-to-be-deleted-8f9pq" in namespace "gc-6587"
  Dec 22 04:32:54.330: INFO: Deleting pod "simpletest-rc-to-be-deleted-8j897" in namespace "gc-6587"
  Dec 22 04:32:54.352: INFO: Deleting pod "simpletest-rc-to-be-deleted-9s2pb" in namespace "gc-6587"
  Dec 22 04:32:54.390: INFO: Deleting pod "simpletest-rc-to-be-deleted-bf7r5" in namespace "gc-6587"
  Dec 22 04:32:54.418: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjmbr" in namespace "gc-6587"
  Dec 22 04:32:54.462: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjrmx" in namespace "gc-6587"
  Dec 22 04:32:54.507: INFO: Deleting pod "simpletest-rc-to-be-deleted-bm4gh" in namespace "gc-6587"
  Dec 22 04:32:54.526: INFO: Deleting pod "simpletest-rc-to-be-deleted-bpfzt" in namespace "gc-6587"
  Dec 22 04:32:54.551: INFO: Deleting pod "simpletest-rc-to-be-deleted-c4bhk" in namespace "gc-6587"
  Dec 22 04:32:54.570: INFO: Deleting pod "simpletest-rc-to-be-deleted-c62zd" in namespace "gc-6587"
  Dec 22 04:32:54.586: INFO: Deleting pod "simpletest-rc-to-be-deleted-cc2n7" in namespace "gc-6587"
  Dec 22 04:32:54.619: INFO: Deleting pod "simpletest-rc-to-be-deleted-cldsv" in namespace "gc-6587"
  Dec 22 04:32:54.647: INFO: Deleting pod "simpletest-rc-to-be-deleted-d4k58" in namespace "gc-6587"
  Dec 22 04:32:54.683: INFO: Deleting pod "simpletest-rc-to-be-deleted-dg7m8" in namespace "gc-6587"
  Dec 22 04:32:54.719: INFO: Deleting pod "simpletest-rc-to-be-deleted-dpnx2" in namespace "gc-6587"
  Dec 22 04:32:54.753: INFO: Deleting pod "simpletest-rc-to-be-deleted-dr87d" in namespace "gc-6587"
  Dec 22 04:32:54.785: INFO: Deleting pod "simpletest-rc-to-be-deleted-dsbbp" in namespace "gc-6587"
  Dec 22 04:32:54.818: INFO: Deleting pod "simpletest-rc-to-be-deleted-dzrnz" in namespace "gc-6587"
  Dec 22 04:32:54.845: INFO: Deleting pod "simpletest-rc-to-be-deleted-f4ggr" in namespace "gc-6587"
  Dec 22 04:32:54.919: INFO: Deleting pod "simpletest-rc-to-be-deleted-fg426" in namespace "gc-6587"
  Dec 22 04:32:54.977: INFO: Deleting pod "simpletest-rc-to-be-deleted-fjqg7" in namespace "gc-6587"
  Dec 22 04:32:55.011: INFO: Deleting pod "simpletest-rc-to-be-deleted-ftg24" in namespace "gc-6587"
  Dec 22 04:32:55.035: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4vgh" in namespace "gc-6587"
  Dec 22 04:32:55.087: INFO: Deleting pod "simpletest-rc-to-be-deleted-g5gsl" in namespace "gc-6587"
  Dec 22 04:32:55.120: INFO: Deleting pod "simpletest-rc-to-be-deleted-g7kqp" in namespace "gc-6587"
  Dec 22 04:32:55.143: INFO: Deleting pod "simpletest-rc-to-be-deleted-g95wx" in namespace "gc-6587"
  Dec 22 04:32:55.162: INFO: Deleting pod "simpletest-rc-to-be-deleted-gckb2" in namespace "gc-6587"
  Dec 22 04:32:55.228: INFO: Deleting pod "simpletest-rc-to-be-deleted-gkjsj" in namespace "gc-6587"
  Dec 22 04:32:55.258: INFO: Deleting pod "simpletest-rc-to-be-deleted-gkrm6" in namespace "gc-6587"
  Dec 22 04:32:55.294: INFO: Deleting pod "simpletest-rc-to-be-deleted-gl4np" in namespace "gc-6587"
  Dec 22 04:32:55.360: INFO: Deleting pod "simpletest-rc-to-be-deleted-gvhfr" in namespace "gc-6587"
  Dec 22 04:32:55.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6587" for this suite. @ 12/22/23 04:32:55.427
• [20.445 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 12/22/23 04:32:55.46
  Dec 22 04:32:55.460: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:32:55.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:55.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:55.512
  STEP: creating Agnhost RC @ 12/22/23 04:32:55.515
  Dec 22 04:32:55.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-5392 create -f -'
  Dec 22 04:32:55.863: INFO: stderr: ""
  Dec 22 04:32:55.863: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/22/23 04:32:55.863
  Dec 22 04:32:56.870: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:32:56.870: INFO: Found 0 / 1
  Dec 22 04:32:57.869: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:32:57.869: INFO: Found 0 / 1
  Dec 22 04:32:58.871: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:32:58.871: INFO: Found 0 / 1
  Dec 22 04:32:59.875: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:32:59.875: INFO: Found 0 / 1
  Dec 22 04:33:00.869: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:33:00.869: INFO: Found 1 / 1
  Dec 22 04:33:00.869: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/22/23 04:33:00.869
  Dec 22 04:33:00.881: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:33:00.881: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 22 04:33:00.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-5392 patch pod agnhost-primary-5kbfg -p {"metadata":{"annotations":{"x":"y"}}}'
  Dec 22 04:33:00.993: INFO: stderr: ""
  Dec 22 04:33:00.993: INFO: stdout: "pod/agnhost-primary-5kbfg patched\n"
  STEP: checking annotations @ 12/22/23 04:33:00.993
  Dec 22 04:33:01.002: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:33:01.002: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 22 04:33:01.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5392" for this suite. @ 12/22/23 04:33:01.01
• [5.563 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 12/22/23 04:33:01.023
  Dec 22 04:33:01.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 04:33:01.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:33:01.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:33:01.054
  STEP: creating service nodeport-test with type=NodePort in namespace services-1790 @ 12/22/23 04:33:01.059
  STEP: creating replication controller nodeport-test in namespace services-1790 @ 12/22/23 04:33:01.078
  I1222 04:33:01.111262      20 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-1790, replica count: 2
  I1222 04:33:04.162390      20 runners.go:197] nodeport-test Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1222 04:33:07.162741      20 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 04:33:07.162: INFO: Creating new exec pod
  Dec 22 04:33:10.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-1790 exec execpodkqd4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Dec 22 04:33:10.380: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Dec 22 04:33:10.380: INFO: stdout: ""
  Dec 22 04:33:11.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-1790 exec execpodkqd4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Dec 22 04:33:11.367: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Dec 22 04:33:11.367: INFO: stdout: ""
  Dec 22 04:33:12.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-1790 exec execpodkqd4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Dec 22 04:33:12.381: INFO: stderr: "+ + echonc -v hostName -t\n -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Dec 22 04:33:12.381: INFO: stdout: "nodeport-test-x9m6x"
  Dec 22 04:33:12.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-1790 exec execpodkqd4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.64.185 80'
  Dec 22 04:33:12.551: INFO: stderr: "+ nc -v -t -w 2 10.43.64.185 80\n+ echo hostName\nConnection to 10.43.64.185 80 port [tcp/http] succeeded!\n"
  Dec 22 04:33:12.551: INFO: stdout: "nodeport-test-x9m6x"
  Dec 22 04:33:12.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-1790 exec execpodkqd4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.186 31890'
  Dec 22 04:33:12.726: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.186 31890\nConnection to 172.31.3.186 31890 port [tcp/*] succeeded!\n"
  Dec 22 04:33:12.726: INFO: stdout: "nodeport-test-589zs"
  Dec 22 04:33:12.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-1790 exec execpodkqd4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.255 31890'
  Dec 22 04:33:12.893: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.9.255 31890\nConnection to 172.31.9.255 31890 port [tcp/*] succeeded!\n"
  Dec 22 04:33:12.894: INFO: stdout: "nodeport-test-x9m6x"
  Dec 22 04:33:12.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1790" for this suite. @ 12/22/23 04:33:12.898
• [11.880 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/22/23 04:33:12.904
  Dec 22 04:33:12.904: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:33:12.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:33:12.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:33:12.924
  STEP: Creating projection with secret that has name projected-secret-test-map-4cdd9c2d-2be8-4141-b348-db84b7be68fc @ 12/22/23 04:33:12.926
  STEP: Creating a pod to test consume secrets @ 12/22/23 04:33:12.931
  STEP: Saw pod success @ 12/22/23 04:33:16.952
  Dec 22 04:33:16.954: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-secrets-eed19c69-d2d4-4254-b8ef-03a82966d3c4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 04:33:16.962
  Dec 22 04:33:16.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7977" for this suite. @ 12/22/23 04:33:16.988
• [4.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 12/22/23 04:33:16.994
  Dec 22 04:33:16.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 04:33:16.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:33:17.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:33:17.016
  Dec 22 04:33:17.018: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/22/23 04:33:20.793
  Dec 22 04:33:20.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8222 --namespace=crd-publish-openapi-8222 create -f -'
  Dec 22 04:33:20.950: INFO: stderr: ""
  Dec 22 04:33:20.950: INFO: stdout: "e2e-test-crd-publish-openapi-3459-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Dec 22 04:33:20.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8222 --namespace=crd-publish-openapi-8222 delete e2e-test-crd-publish-openapi-3459-crds test-cr'
  Dec 22 04:33:21.060: INFO: stderr: ""
  Dec 22 04:33:21.060: INFO: stdout: "e2e-test-crd-publish-openapi-3459-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Dec 22 04:33:21.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8222 --namespace=crd-publish-openapi-8222 apply -f -'
  Dec 22 04:33:21.189: INFO: stderr: ""
  Dec 22 04:33:21.189: INFO: stdout: "e2e-test-crd-publish-openapi-3459-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Dec 22 04:33:21.189: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8222 --namespace=crd-publish-openapi-8222 delete e2e-test-crd-publish-openapi-3459-crds test-cr'
  Dec 22 04:33:21.305: INFO: stderr: ""
  Dec 22 04:33:21.305: INFO: stdout: "e2e-test-crd-publish-openapi-3459-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/22/23 04:33:21.305
  Dec 22 04:33:21.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8222 explain e2e-test-crd-publish-openapi-3459-crds'
  Dec 22 04:33:21.423: INFO: stderr: ""
  Dec 22 04:33:21.423: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-3459-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Dec 22 04:33:23.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8222" for this suite. @ 12/22/23 04:33:23.926
• [6.942 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 12/22/23 04:33:23.947
  Dec 22 04:33:23.947: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 04:33:23.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:33:23.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:33:23.977
  STEP: Creating pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414 @ 12/22/23 04:33:23.986
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 04:33:26.003
  Dec 22 04:33:26.006: INFO: Initial restart count of pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 is 0
  Dec 22 04:33:26.011: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:28.016: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:30.021: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:32.025: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:34.029: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:36.034: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:38.040: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:40.043: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:42.047: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:44.051: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:46.055: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:48.059: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:50.063: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:52.067: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:54.072: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:56.076: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:33:58.080: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:00.085: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:02.091: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:04.094: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:06.098: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:08.102: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:10.107: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:12.111: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:14.116: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:16.122: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:18.126: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:20.131: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:22.134: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:24.138: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:26.142: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:28.148: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:30.153: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:32.157: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:34.162: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:36.167: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:38.171: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:40.175: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:42.178: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:44.183: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:46.187: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:48.191: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:50.195: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:52.199: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:54.213: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:56.218: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:34:58.222: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:00.226: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:02.231: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:04.235: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:06.240: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:08.247: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:10.251: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:12.255: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:14.259: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:16.262: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:18.267: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:20.271: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:22.274: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:24.278: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:26.282: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:28.287: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:30.296: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:32.301: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:34.308: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:36.312: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:38.315: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:40.319: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:42.332: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:44.335: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:46.340: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:48.344: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:50.348: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:52.353: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:54.358: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:56.363: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:35:58.367: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:00.379: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:02.384: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:04.388: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:06.392: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:08.397: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:10.401: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:12.405: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:14.411: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:16.415: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:18.420: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:20.424: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:22.427: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:24.433: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:26.439: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:28.443: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:30.448: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:32.453: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:34.457: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:36.460: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:38.465: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:40.469: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:42.474: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:44.478: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:46.483: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:48.487: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:50.491: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:52.496: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:54.500: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:56.504: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:36:58.508: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:00.520: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:02.525: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:04.529: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:06.534: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:08.537: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:10.542: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:12.546: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:14.551: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:16.555: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:18.559: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:20.563: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:22.568: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  Dec 22 04:37:24.571: INFO: Get pod test-webserver-9acffe10-3526-49fe-a9d5-ecf7e16c49d1 in namespace container-probe-2414
  STEP: deleting the pod @ 12/22/23 04:37:26.572
  Dec 22 04:37:26.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2414" for this suite. @ 12/22/23 04:37:26.616
• [242.680 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 12/22/23 04:37:26.627
  Dec 22 04:37:26.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename runtimeclass @ 12/22/23 04:37:26.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:37:26.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:37:26.664
  Dec 22 04:37:26.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2393" for this suite. @ 12/22/23 04:37:26.682
• [0.061 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 12/22/23 04:37:26.69
  Dec 22 04:37:26.690: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:37:26.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:37:26.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:37:26.713
  STEP: Creating configMap with name projected-configmap-test-volume-map-6c87d327-6138-4a3e-9e75-714515416527 @ 12/22/23 04:37:26.716
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:37:26.723
  STEP: Saw pod success @ 12/22/23 04:37:30.747
  Dec 22 04:37:30.750: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-configmaps-eb8e8f4f-6a0a-44ea-8305-4da78b07bcb1 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:37:30.818
  Dec 22 04:37:30.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2814" for this suite. @ 12/22/23 04:37:30.836
• [4.151 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 12/22/23 04:37:30.842
  Dec 22 04:37:30.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:37:30.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:37:30.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:37:30.862
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:37:30.865
  STEP: Saw pod success @ 12/22/23 04:37:34.885
  Dec 22 04:37:34.888: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-d6ebbe64-0e4f-431f-afa4-7629f4d817c2 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:37:34.894
  Dec 22 04:37:34.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8934" for this suite. @ 12/22/23 04:37:34.912
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 12/22/23 04:37:34.926
  Dec 22 04:37:34.926: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:37:34.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:37:34.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:37:34.948
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/22/23 04:37:34.953
  Dec 22 04:37:34.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6431 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Dec 22 04:37:35.091: INFO: stderr: ""
  Dec 22 04:37:35.091: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/22/23 04:37:35.091
  Dec 22 04:37:35.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6431 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Dec 22 04:37:35.203: INFO: stderr: ""
  Dec 22 04:37:35.203: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/22/23 04:37:35.203
  Dec 22 04:37:35.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6431 delete pods e2e-test-httpd-pod'
  Dec 22 04:37:37.012: INFO: stderr: ""
  Dec 22 04:37:37.012: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 22 04:37:37.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6431" for this suite. @ 12/22/23 04:37:37.017
• [2.096 seconds]
------------------------------
SSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 12/22/23 04:37:37.022
  Dec 22 04:37:37.022: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename taint-single-pod @ 12/22/23 04:37:37.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:37:37.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:37:37.046
  Dec 22 04:37:37.048: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 22 04:38:37.049: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 04:38:37.052: INFO: Starting informer...
  STEP: Starting pod... @ 12/22/23 04:38:37.052
  Dec 22 04:38:37.266: INFO: Pod is running on ip-172-31-7-66.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/22/23 04:38:37.267
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/22/23 04:38:37.282
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/22/23 04:38:37.289
  Dec 22 04:38:37.290: INFO: Pod wasn't evicted. Proceeding
  Dec 22 04:38:37.290: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/22/23 04:38:37.31
  STEP: Waiting some time to make sure that toleration time passed. @ 12/22/23 04:38:37.322
  Dec 22 04:39:52.323: INFO: Pod wasn't evicted. Test successful
  Dec 22 04:39:52.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3286" for this suite. @ 12/22/23 04:39:52.328
• [135.313 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/22/23 04:39:52.335
  Dec 22 04:39:52.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 04:39:52.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:39:52.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:39:52.36
  STEP: Creating simple DaemonSet "daemon-set" @ 12/22/23 04:39:52.393
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 04:39:52.4
  Dec 22 04:39:52.416: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:39:52.416: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:39:53.418: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:39:53.418: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:39:54.408: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 04:39:54.408: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/22/23 04:39:54.411
  Dec 22 04:39:54.429: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:39:54.429: INFO: Node ip-172-31-7-66.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:39:55.428: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:39:55.428: INFO: Node ip-172-31-7-66.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:39:56.437: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:39:56.438: INFO: Node ip-172-31-7-66.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:39:57.431: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:39:57.431: INFO: Node ip-172-31-7-66.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:39:58.429: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 04:39:58.430: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 04:39:58.432
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3326, will wait for the garbage collector to delete the pods @ 12/22/23 04:39:58.433
  Dec 22 04:39:58.492: INFO: Deleting DaemonSet.extensions daemon-set took: 5.600753ms
  Dec 22 04:39:58.592: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.567788ms
  Dec 22 04:40:01.397: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:40:01.397: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 04:40:01.401: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21206"},"items":null}

  Dec 22 04:40:01.403: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21206"},"items":null}

  Dec 22 04:40:01.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3326" for this suite. @ 12/22/23 04:40:01.423
• [9.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 12/22/23 04:40:01.431
  Dec 22 04:40:01.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:40:01.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:01.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:01.456
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:40:01.459
  STEP: Saw pod success @ 12/22/23 04:40:05.485
  Dec 22 04:40:05.489: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-50f021f8-48ad-4e2a-802d-403e5955cd77 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:40:05.502
  Dec 22 04:40:05.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9879" for this suite. @ 12/22/23 04:40:05.527
• [4.108 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/22/23 04:40:05.541
  Dec 22 04:40:05.541: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/22/23 04:40:05.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:05.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:05.566
  STEP: mirroring a new custom Endpoint @ 12/22/23 04:40:05.626
  Dec 22 04:40:05.649: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 12/22/23 04:40:07.653
  Dec 22 04:40:07.660: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 12/22/23 04:40:09.665
  Dec 22 04:40:09.674: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Dec 22 04:40:11.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4866" for this suite. @ 12/22/23 04:40:11.721
• [6.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 12/22/23 04:40:11.74
  Dec 22 04:40:11.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:40:11.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:11.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:11.77
  STEP: creating a replication controller @ 12/22/23 04:40:11.774
  Dec 22 04:40:11.774: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 create -f -'
  Dec 22 04:40:11.993: INFO: stderr: ""
  Dec 22 04:40:11.993: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/22/23 04:40:11.993
  Dec 22 04:40:11.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 04:40:12.102: INFO: stderr: ""
  Dec 22 04:40:12.102: INFO: stdout: "update-demo-nautilus-26j4n update-demo-nautilus-nwgv4 "
  Dec 22 04:40:12.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods update-demo-nautilus-26j4n -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 04:40:12.203: INFO: stderr: ""
  Dec 22 04:40:12.203: INFO: stdout: ""
  Dec 22 04:40:12.203: INFO: update-demo-nautilus-26j4n is created but not running
  Dec 22 04:40:17.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 04:40:17.311: INFO: stderr: ""
  Dec 22 04:40:17.311: INFO: stdout: "update-demo-nautilus-26j4n update-demo-nautilus-nwgv4 "
  Dec 22 04:40:17.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods update-demo-nautilus-26j4n -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 04:40:17.452: INFO: stderr: ""
  Dec 22 04:40:17.452: INFO: stdout: "true"
  Dec 22 04:40:17.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods update-demo-nautilus-26j4n -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 04:40:17.546: INFO: stderr: ""
  Dec 22 04:40:17.546: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 04:40:17.546: INFO: validating pod update-demo-nautilus-26j4n
  Dec 22 04:40:17.554: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 04:40:17.554: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 04:40:17.554: INFO: update-demo-nautilus-26j4n is verified up and running
  Dec 22 04:40:17.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods update-demo-nautilus-nwgv4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 04:40:17.633: INFO: stderr: ""
  Dec 22 04:40:17.633: INFO: stdout: "true"
  Dec 22 04:40:17.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods update-demo-nautilus-nwgv4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 04:40:17.720: INFO: stderr: ""
  Dec 22 04:40:17.720: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 04:40:17.720: INFO: validating pod update-demo-nautilus-nwgv4
  Dec 22 04:40:17.728: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 04:40:17.728: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 04:40:17.728: INFO: update-demo-nautilus-nwgv4 is verified up and running
  STEP: scaling down the replication controller @ 12/22/23 04:40:17.728
  Dec 22 04:40:17.731: INFO: scanned /root for discovery docs: <nil>
  Dec 22 04:40:17.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Dec 22 04:40:18.841: INFO: stderr: ""
  Dec 22 04:40:18.841: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/22/23 04:40:18.841
  Dec 22 04:40:18.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 04:40:18.933: INFO: stderr: ""
  Dec 22 04:40:18.933: INFO: stdout: "update-demo-nautilus-26j4n update-demo-nautilus-nwgv4 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 12/22/23 04:40:18.934
  Dec 22 04:40:23.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 04:40:24.027: INFO: stderr: ""
  Dec 22 04:40:24.027: INFO: stdout: "update-demo-nautilus-26j4n "
  Dec 22 04:40:24.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods update-demo-nautilus-26j4n -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 04:40:24.119: INFO: stderr: ""
  Dec 22 04:40:24.120: INFO: stdout: "true"
  Dec 22 04:40:24.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods update-demo-nautilus-26j4n -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 04:40:24.211: INFO: stderr: ""
  Dec 22 04:40:24.211: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 04:40:24.211: INFO: validating pod update-demo-nautilus-26j4n
  Dec 22 04:40:24.215: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 04:40:24.215: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 04:40:24.215: INFO: update-demo-nautilus-26j4n is verified up and running
  STEP: scaling up the replication controller @ 12/22/23 04:40:24.216
  Dec 22 04:40:24.217: INFO: scanned /root for discovery docs: <nil>
  Dec 22 04:40:24.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Dec 22 04:40:25.347: INFO: stderr: ""
  Dec 22 04:40:25.348: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/22/23 04:40:25.348
  Dec 22 04:40:25.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 04:40:25.426: INFO: stderr: ""
  Dec 22 04:40:25.426: INFO: stdout: "update-demo-nautilus-26j4n update-demo-nautilus-z2fnq "
  Dec 22 04:40:25.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods update-demo-nautilus-26j4n -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 04:40:25.530: INFO: stderr: ""
  Dec 22 04:40:25.530: INFO: stdout: "true"
  Dec 22 04:40:25.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods update-demo-nautilus-26j4n -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 04:40:25.612: INFO: stderr: ""
  Dec 22 04:40:25.612: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 04:40:25.612: INFO: validating pod update-demo-nautilus-26j4n
  Dec 22 04:40:25.616: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 04:40:25.616: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 04:40:25.616: INFO: update-demo-nautilus-26j4n is verified up and running
  Dec 22 04:40:25.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods update-demo-nautilus-z2fnq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 04:40:25.696: INFO: stderr: ""
  Dec 22 04:40:25.696: INFO: stdout: "true"
  Dec 22 04:40:25.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods update-demo-nautilus-z2fnq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 04:40:25.773: INFO: stderr: ""
  Dec 22 04:40:25.773: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 04:40:25.773: INFO: validating pod update-demo-nautilus-z2fnq
  Dec 22 04:40:25.780: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 04:40:25.780: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 04:40:25.780: INFO: update-demo-nautilus-z2fnq is verified up and running
  STEP: using delete to clean up resources @ 12/22/23 04:40:25.78
  Dec 22 04:40:25.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 delete --grace-period=0 --force -f -'
  Dec 22 04:40:25.863: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 04:40:25.863: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Dec 22 04:40:25.863: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get rc,svc -l name=update-demo --no-headers'
  Dec 22 04:40:25.963: INFO: stderr: "No resources found in kubectl-510 namespace.\n"
  Dec 22 04:40:25.963: INFO: stdout: ""
  Dec 22 04:40:25.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-510 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 22 04:40:26.048: INFO: stderr: ""
  Dec 22 04:40:26.048: INFO: stdout: ""
  Dec 22 04:40:26.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-510" for this suite. @ 12/22/23 04:40:26.052
• [14.319 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 12/22/23 04:40:26.059
  Dec 22 04:40:26.059: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 04:40:26.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:26.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:26.081
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/22/23 04:40:26.084
  STEP: Saw pod success @ 12/22/23 04:40:30.111
  Dec 22 04:40:30.114: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-62d7bf9b-97cd-4298-b18e-df37387d64fd container test-container: <nil>
  STEP: delete the pod @ 12/22/23 04:40:30.12
  Dec 22 04:40:30.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2671" for this suite. @ 12/22/23 04:40:30.137
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/22/23 04:40:30.145
  Dec 22 04:40:30.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/22/23 04:40:30.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:30.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:30.164
  STEP: Cleaning up the secret @ 12/22/23 04:40:32.197
  STEP: Cleaning up the configmap @ 12/22/23 04:40:32.203
  STEP: Cleaning up the pod @ 12/22/23 04:40:32.21
  Dec 22 04:40:32.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7522" for this suite. @ 12/22/23 04:40:32.228
• [2.091 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 12/22/23 04:40:32.238
  Dec 22 04:40:32.238: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 04:40:32.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:32.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:32.271
  STEP: Setting up server cert @ 12/22/23 04:40:32.36
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 04:40:33.137
  STEP: Deploying the webhook pod @ 12/22/23 04:40:33.146
  STEP: Wait for the deployment to be ready @ 12/22/23 04:40:33.169
  Dec 22 04:40:33.175: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/22/23 04:40:35.189
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 04:40:35.211
  Dec 22 04:40:36.213: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/22/23 04:40:36.281
  STEP: Creating a configMap that should be mutated @ 12/22/23 04:40:36.303
  STEP: Deleting the collection of validation webhooks @ 12/22/23 04:40:36.339
  STEP: Creating a configMap that should not be mutated @ 12/22/23 04:40:36.392
  Dec 22 04:40:36.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9202" for this suite. @ 12/22/23 04:40:36.464
  STEP: Destroying namespace "webhook-markers-8097" for this suite. @ 12/22/23 04:40:36.477
• [4.250 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 12/22/23 04:40:36.489
  Dec 22 04:40:36.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 04:40:36.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:36.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:36.513
  STEP: Creating a pod to test substitution in container's command @ 12/22/23 04:40:36.517
  STEP: Saw pod success @ 12/22/23 04:40:40.545
  Dec 22 04:40:40.548: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod var-expansion-ae89fa54-6632-480c-a280-446acf1bd5e3 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 04:40:40.555
  Dec 22 04:40:40.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6969" for this suite. @ 12/22/23 04:40:40.598
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/22/23 04:40:40.607
  Dec 22 04:40:40.607: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/22/23 04:40:40.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:40.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:40.63
  STEP: creating a target pod @ 12/22/23 04:40:40.633
  STEP: adding an ephemeral container @ 12/22/23 04:40:42.651
  STEP: checking pod container endpoints @ 12/22/23 04:40:46.684
  Dec 22 04:40:46.684: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5119 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:40:46.684: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 04:40:46.684: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:40:46.685: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-5119/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Dec 22 04:40:46.876: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/22/23 04:40:46.883
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/22/23 04:40:46.888
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/22/23 04:40:46.906
  Dec 22 04:40:46.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5119" for this suite. @ 12/22/23 04:40:46.942
• [6.352 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 12/22/23 04:40:46.964
  Dec 22 04:40:46.964: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/22/23 04:40:46.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:47.004
  STEP: getting /apis @ 12/22/23 04:40:47.008
  STEP: getting /apis/storage.k8s.io @ 12/22/23 04:40:47.023
  STEP: getting /apis/storage.k8s.io/v1 @ 12/22/23 04:40:47.024
  STEP: creating @ 12/22/23 04:40:47.038
  STEP: watching @ 12/22/23 04:40:47.063
  Dec 22 04:40:47.063: INFO: starting watch
  STEP: getting @ 12/22/23 04:40:47.073
  STEP: listing in namespace @ 12/22/23 04:40:47.078
  STEP: listing across namespaces @ 12/22/23 04:40:47.082
  STEP: patching @ 12/22/23 04:40:47.087
  STEP: updating @ 12/22/23 04:40:47.095
  Dec 22 04:40:47.100: INFO: waiting for watch events with expected annotations in namespace
  Dec 22 04:40:47.101: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/22/23 04:40:47.102
  STEP: deleting a collection @ 12/22/23 04:40:47.123
  Dec 22 04:40:47.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3954" for this suite. @ 12/22/23 04:40:47.145
• [0.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 12/22/23 04:40:47.182
  Dec 22 04:40:47.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:40:47.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:47.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:47.216
  STEP: starting the proxy server @ 12/22/23 04:40:47.222
  Dec 22 04:40:47.222: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-3160 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/22/23 04:40:47.429
  Dec 22 04:40:47.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3160" for this suite. @ 12/22/23 04:40:47.462
• [0.299 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 12/22/23 04:40:47.47
  Dec 22 04:40:47.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 04:40:47.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:47.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:47.489
  STEP: Creating service test in namespace statefulset-4853 @ 12/22/23 04:40:47.492
  STEP: Creating stateful set ss in namespace statefulset-4853 @ 12/22/23 04:40:47.5
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4853 @ 12/22/23 04:40:47.518
  Dec 22 04:40:47.525: INFO: Found 0 stateful pods, waiting for 1
  Dec 22 04:40:57.525: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/22/23 04:40:57.525
  Dec 22 04:40:57.528: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-4853 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 04:40:57.711: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 04:40:57.711: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 04:40:57.711: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 04:40:57.714: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Dec 22 04:41:07.715: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 04:41:07.715: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 22 04:41:07.732: INFO: POD   NODE                                       PHASE    GRACE  CONDITIONS
  Dec 22 04:41:07.732: INFO: ss-0  ip-172-31-7-66.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:40:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:40:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:40:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:40:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:40:47 +0000 UTC  }]
  Dec 22 04:41:07.733: INFO: 
  Dec 22 04:41:07.733: INFO: StatefulSet ss has not reached scale 3, at 1
  Dec 22 04:41:08.739: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995113437s
  Dec 22 04:41:09.744: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988858566s
  Dec 22 04:41:10.748: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984793888s
  Dec 22 04:41:11.751: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.980936965s
  Dec 22 04:41:12.756: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.976706s
  Dec 22 04:41:13.760: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.972678112s
  Dec 22 04:41:14.765: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.967624186s
  Dec 22 04:41:15.770: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.963219942s
  Dec 22 04:41:16.774: INFO: Verifying statefulset ss doesn't scale past 3 for another 958.39978ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4853 @ 12/22/23 04:41:17.775
  Dec 22 04:41:17.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-4853 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 04:41:18.006: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 04:41:18.006: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 04:41:18.006: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 04:41:18.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-4853 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 04:41:18.225: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Dec 22 04:41:18.225: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 04:41:18.225: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 04:41:18.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-4853 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 04:41:18.576: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Dec 22 04:41:18.576: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 04:41:18.576: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 04:41:18.580: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  Dec 22 04:41:28.581: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:41:28.581: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:41:28.581: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/22/23 04:41:28.581
  Dec 22 04:41:28.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-4853 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 04:41:28.772: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 04:41:28.772: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 04:41:28.772: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 04:41:28.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-4853 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 04:41:29.022: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 04:41:29.022: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 04:41:29.022: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 04:41:29.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-4853 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 04:41:29.480: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 04:41:29.480: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 04:41:29.480: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 04:41:29.480: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 22 04:41:29.483: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 1
  Dec 22 04:41:39.486: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 04:41:39.486: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 04:41:39.486: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 04:41:39.498: INFO: POD   NODE                                        PHASE    GRACE  CONDITIONS
  Dec 22 04:41:39.499: INFO: ss-0  ip-172-31-7-66.us-east-2.compute.internal   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:40:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:40:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:40:47 +0000 UTC  }]
  Dec 22 04:41:39.499: INFO: ss-1  ip-172-31-9-255.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:29 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:29 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:07 +0000 UTC  }]
  Dec 22 04:41:39.499: INFO: ss-2  ip-172-31-4-122.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:30 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:30 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:07 +0000 UTC  }]
  Dec 22 04:41:39.499: INFO: 
  Dec 22 04:41:39.499: INFO: StatefulSet ss has not reached scale 0, at 3
  Dec 22 04:41:40.503: INFO: POD   NODE                                        PHASE      GRACE  CONDITIONS
  Dec 22 04:41:40.503: INFO: ss-0  ip-172-31-7-66.us-east-2.compute.internal   Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:40:47 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:28 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:28 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:40:47 +0000 UTC  }]
  Dec 22 04:41:40.503: INFO: ss-1  ip-172-31-9-255.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:07 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:29 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:29 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:07 +0000 UTC  }]
  Dec 22 04:41:40.503: INFO: ss-2  ip-172-31-4-122.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:07 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:30 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:30 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:07 +0000 UTC  }]
  Dec 22 04:41:40.503: INFO: 
  Dec 22 04:41:40.503: INFO: StatefulSet ss has not reached scale 0, at 3
  Dec 22 04:41:41.507: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.991046395s
  Dec 22 04:41:42.512: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986989947s
  Dec 22 04:41:43.515: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.983344151s
  Dec 22 04:41:44.518: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.979957287s
  Dec 22 04:41:45.522: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.976562676s
  Dec 22 04:41:46.525: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.972866645s
  Dec 22 04:41:47.529: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.969487791s
  Dec 22 04:41:48.532: INFO: Verifying statefulset ss doesn't scale past 0 for another 966.181111ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4853 @ 12/22/23 04:41:49.533
  Dec 22 04:41:49.536: INFO: Scaling statefulset ss to 0
  Dec 22 04:41:49.547: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 04:41:49.550: INFO: Deleting all statefulset in ns statefulset-4853
  Dec 22 04:41:49.552: INFO: Scaling statefulset ss to 0
  Dec 22 04:41:49.561: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 04:41:49.563: INFO: Deleting statefulset ss
  Dec 22 04:41:49.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4853" for this suite. @ 12/22/23 04:41:49.583
• [62.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 12/22/23 04:41:49.593
  Dec 22 04:41:49.593: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 04:41:49.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:49.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:49.613
  STEP: Creating secret with name secret-test-c041fbc0-5bee-44d4-897c-a0bdee8cbf5c @ 12/22/23 04:41:49.616
  STEP: Creating a pod to test consume secrets @ 12/22/23 04:41:49.621
  STEP: Saw pod success @ 12/22/23 04:41:53.642
  Dec 22 04:41:53.645: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-secrets-4da74096-558b-4958-9e14-5959a8dc1bc3 container secret-env-test: <nil>
  STEP: delete the pod @ 12/22/23 04:41:53.657
  Dec 22 04:41:53.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2767" for this suite. @ 12/22/23 04:41:53.692
• [4.108 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 12/22/23 04:41:53.701
  Dec 22 04:41:53.701: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename lease-test @ 12/22/23 04:41:53.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:53.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:53.721
  Dec 22 04:41:53.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1954" for this suite. @ 12/22/23 04:41:53.808
• [0.118 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/22/23 04:41:53.819
  Dec 22 04:41:53.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename init-container @ 12/22/23 04:41:53.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:53.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:53.854
  STEP: creating the pod @ 12/22/23 04:41:53.858
  Dec 22 04:41:53.858: INFO: PodSpec: initContainers in spec.initContainers
  Dec 22 04:41:58.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8920" for this suite. @ 12/22/23 04:41:58.149
• [4.360 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 12/22/23 04:41:58.18
  Dec 22 04:41:58.180: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename dns @ 12/22/23 04:41:58.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:58.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:58.216
  STEP: Creating a test headless service @ 12/22/23 04:41:58.219
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7866.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-7866.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7866.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-7866.svc.cluster.local;sleep 1; done
   @ 12/22/23 04:41:58.228
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7866.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7866.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7866.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7866.svc.cluster.local;sleep 1; done
   @ 12/22/23 04:41:58.228
  STEP: creating a pod to probe DNS @ 12/22/23 04:41:58.228
  STEP: submitting the pod to kubernetes @ 12/22/23 04:41:58.228
  STEP: retrieving the pod @ 12/22/23 04:42:10.293
  STEP: looking for the results for each expected name from probers @ 12/22/23 04:42:10.296
  Dec 22 04:42:10.303: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:10.306: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:10.310: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:10.313: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:10.316: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:10.321: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:10.324: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:10.328: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:10.328: INFO: Lookups using dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7866.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7866.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local jessie_udp@dns-test-service-2.dns-7866.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7866.svc.cluster.local]

  Dec 22 04:42:10.335: INFO: Pod client logs for webserver: 
  Dec 22 04:42:10.345: INFO: Pod client logs for querier: 
  Dec 22 04:42:10.353: INFO: Pod client logs for jessie-querier: 
  Dec 22 04:42:15.301: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:15.306: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:15.310: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:15.313: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:15.317: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:15.320: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:15.324: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:15.328: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:15.328: INFO: Lookups using dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7866.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7866.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local jessie_udp@dns-test-service-2.dns-7866.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7866.svc.cluster.local]

  Dec 22 04:42:15.335: INFO: Pod client logs for webserver: 
  Dec 22 04:42:15.341: INFO: Pod client logs for querier: 
  Dec 22 04:42:15.348: INFO: Pod client logs for jessie-querier: 
  Dec 22 04:42:20.302: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:20.305: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:20.308: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:20.311: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:20.314: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:20.317: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:20.320: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:20.323: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:20.323: INFO: Lookups using dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7866.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7866.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local jessie_udp@dns-test-service-2.dns-7866.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7866.svc.cluster.local]

  Dec 22 04:42:20.329: INFO: Pod client logs for webserver: 
  Dec 22 04:42:20.337: INFO: Pod client logs for querier: 
  Dec 22 04:42:20.343: INFO: Pod client logs for jessie-querier: 
  Dec 22 04:42:25.300: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:25.304: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:25.307: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:25.310: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:25.313: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:25.316: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:25.319: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:25.321: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:25.321: INFO: Lookups using dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7866.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7866.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local jessie_udp@dns-test-service-2.dns-7866.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7866.svc.cluster.local]

  Dec 22 04:42:25.327: INFO: Pod client logs for webserver: 
  Dec 22 04:42:25.333: INFO: Pod client logs for querier: 
  Dec 22 04:42:25.338: INFO: Pod client logs for jessie-querier: 
  Dec 22 04:42:30.300: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:30.304: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:30.307: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:30.310: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:30.313: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:30.316: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:30.319: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7866.svc.cluster.local from pod dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5: the server could not find the requested resource (get pods dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5)
  Dec 22 04:42:30.323: INFO: Lookups using dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7866.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7866.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7866.svc.cluster.local jessie_udp@dns-test-service-2.dns-7866.svc.cluster.local]

  Dec 22 04:42:30.330: INFO: Pod client logs for webserver: 
  Dec 22 04:42:30.336: INFO: Pod client logs for querier: 
  Dec 22 04:42:30.343: INFO: Pod client logs for jessie-querier: 
  Dec 22 04:42:35.378: INFO: DNS probes using dns-7866/dns-test-d0cbb6db-1073-4055-875e-a1d2dbaa36b5 succeeded

  STEP: deleting the pod @ 12/22/23 04:42:35.378
  STEP: deleting the test headless service @ 12/22/23 04:42:35.435
  Dec 22 04:42:35.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7866" for this suite. @ 12/22/23 04:42:35.461
• [37.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 12/22/23 04:42:35.47
  Dec 22 04:42:35.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename gc @ 12/22/23 04:42:35.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:42:35.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:42:35.495
  STEP: create the rc @ 12/22/23 04:42:35.503
  W1222 04:42:35.512047      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/22/23 04:42:41.523
  STEP: wait for the rc to be deleted @ 12/22/23 04:42:41.53
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/22/23 04:42:46.541
  STEP: Gathering metrics @ 12/22/23 04:43:16.556
  Dec 22 04:43:16.647: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 04:43:16.647: INFO: Deleting pod "simpletest.rc-26qgj" in namespace "gc-2025"
  Dec 22 04:43:16.668: INFO: Deleting pod "simpletest.rc-27hdb" in namespace "gc-2025"
  Dec 22 04:43:16.715: INFO: Deleting pod "simpletest.rc-2gmhw" in namespace "gc-2025"
  Dec 22 04:43:16.771: INFO: Deleting pod "simpletest.rc-2jnvq" in namespace "gc-2025"
  Dec 22 04:43:16.813: INFO: Deleting pod "simpletest.rc-2ktw5" in namespace "gc-2025"
  Dec 22 04:43:16.847: INFO: Deleting pod "simpletest.rc-4jtk9" in namespace "gc-2025"
  Dec 22 04:43:16.888: INFO: Deleting pod "simpletest.rc-4sws4" in namespace "gc-2025"
  Dec 22 04:43:16.917: INFO: Deleting pod "simpletest.rc-4xrcx" in namespace "gc-2025"
  Dec 22 04:43:16.937: INFO: Deleting pod "simpletest.rc-56qcl" in namespace "gc-2025"
  Dec 22 04:43:16.992: INFO: Deleting pod "simpletest.rc-5dp56" in namespace "gc-2025"
  Dec 22 04:43:17.020: INFO: Deleting pod "simpletest.rc-5ftv5" in namespace "gc-2025"
  Dec 22 04:43:17.056: INFO: Deleting pod "simpletest.rc-5svrd" in namespace "gc-2025"
  Dec 22 04:43:17.093: INFO: Deleting pod "simpletest.rc-5t9pj" in namespace "gc-2025"
  Dec 22 04:43:17.141: INFO: Deleting pod "simpletest.rc-5vbwc" in namespace "gc-2025"
  Dec 22 04:43:17.183: INFO: Deleting pod "simpletest.rc-68qhg" in namespace "gc-2025"
  Dec 22 04:43:17.221: INFO: Deleting pod "simpletest.rc-6jr9p" in namespace "gc-2025"
  Dec 22 04:43:17.248: INFO: Deleting pod "simpletest.rc-6kthj" in namespace "gc-2025"
  Dec 22 04:43:17.267: INFO: Deleting pod "simpletest.rc-6p9q8" in namespace "gc-2025"
  Dec 22 04:43:17.315: INFO: Deleting pod "simpletest.rc-6smfs" in namespace "gc-2025"
  Dec 22 04:43:17.356: INFO: Deleting pod "simpletest.rc-74pvg" in namespace "gc-2025"
  Dec 22 04:43:17.403: INFO: Deleting pod "simpletest.rc-7775c" in namespace "gc-2025"
  Dec 22 04:43:17.434: INFO: Deleting pod "simpletest.rc-7mt5g" in namespace "gc-2025"
  Dec 22 04:43:17.463: INFO: Deleting pod "simpletest.rc-7xxbv" in namespace "gc-2025"
  Dec 22 04:43:17.532: INFO: Deleting pod "simpletest.rc-89xmq" in namespace "gc-2025"
  Dec 22 04:43:17.552: INFO: Deleting pod "simpletest.rc-8r2c7" in namespace "gc-2025"
  Dec 22 04:43:17.582: INFO: Deleting pod "simpletest.rc-8vv8w" in namespace "gc-2025"
  Dec 22 04:43:17.600: INFO: Deleting pod "simpletest.rc-99wtv" in namespace "gc-2025"
  Dec 22 04:43:17.626: INFO: Deleting pod "simpletest.rc-9bdzh" in namespace "gc-2025"
  Dec 22 04:43:17.694: INFO: Deleting pod "simpletest.rc-9blsx" in namespace "gc-2025"
  Dec 22 04:43:17.725: INFO: Deleting pod "simpletest.rc-9fg4b" in namespace "gc-2025"
  Dec 22 04:43:17.750: INFO: Deleting pod "simpletest.rc-9m62h" in namespace "gc-2025"
  Dec 22 04:43:17.789: INFO: Deleting pod "simpletest.rc-9q4bn" in namespace "gc-2025"
  Dec 22 04:43:17.822: INFO: Deleting pod "simpletest.rc-b4wh8" in namespace "gc-2025"
  Dec 22 04:43:17.843: INFO: Deleting pod "simpletest.rc-b6kks" in namespace "gc-2025"
  Dec 22 04:43:17.863: INFO: Deleting pod "simpletest.rc-bs6px" in namespace "gc-2025"
  Dec 22 04:43:17.882: INFO: Deleting pod "simpletest.rc-bw2vj" in namespace "gc-2025"
  Dec 22 04:43:17.901: INFO: Deleting pod "simpletest.rc-bw5b2" in namespace "gc-2025"
  Dec 22 04:43:17.938: INFO: Deleting pod "simpletest.rc-c8r8v" in namespace "gc-2025"
  Dec 22 04:43:17.962: INFO: Deleting pod "simpletest.rc-c96k8" in namespace "gc-2025"
  Dec 22 04:43:17.985: INFO: Deleting pod "simpletest.rc-cjc49" in namespace "gc-2025"
  Dec 22 04:43:18.012: INFO: Deleting pod "simpletest.rc-cmwwg" in namespace "gc-2025"
  Dec 22 04:43:18.063: INFO: Deleting pod "simpletest.rc-d52qs" in namespace "gc-2025"
  Dec 22 04:43:18.102: INFO: Deleting pod "simpletest.rc-dbn6p" in namespace "gc-2025"
  Dec 22 04:43:18.151: INFO: Deleting pod "simpletest.rc-df9c4" in namespace "gc-2025"
  Dec 22 04:43:18.212: INFO: Deleting pod "simpletest.rc-dfxl9" in namespace "gc-2025"
  Dec 22 04:43:18.233: INFO: Deleting pod "simpletest.rc-dt5st" in namespace "gc-2025"
  Dec 22 04:43:18.258: INFO: Deleting pod "simpletest.rc-f5mkm" in namespace "gc-2025"
  Dec 22 04:43:18.297: INFO: Deleting pod "simpletest.rc-fdkfc" in namespace "gc-2025"
  Dec 22 04:43:18.314: INFO: Deleting pod "simpletest.rc-fggqc" in namespace "gc-2025"
  Dec 22 04:43:18.331: INFO: Deleting pod "simpletest.rc-fxjwl" in namespace "gc-2025"
  Dec 22 04:43:18.405: INFO: Deleting pod "simpletest.rc-fzwvh" in namespace "gc-2025"
  Dec 22 04:43:18.474: INFO: Deleting pod "simpletest.rc-g4sgj" in namespace "gc-2025"
  Dec 22 04:43:18.511: INFO: Deleting pod "simpletest.rc-gd9tf" in namespace "gc-2025"
  Dec 22 04:43:18.539: INFO: Deleting pod "simpletest.rc-gdz4m" in namespace "gc-2025"
  Dec 22 04:43:18.573: INFO: Deleting pod "simpletest.rc-gpkh7" in namespace "gc-2025"
  Dec 22 04:43:18.613: INFO: Deleting pod "simpletest.rc-gqbp8" in namespace "gc-2025"
  Dec 22 04:43:18.642: INFO: Deleting pod "simpletest.rc-gtxvk" in namespace "gc-2025"
  Dec 22 04:43:18.732: INFO: Deleting pod "simpletest.rc-h82pc" in namespace "gc-2025"
  Dec 22 04:43:18.768: INFO: Deleting pod "simpletest.rc-hhcbc" in namespace "gc-2025"
  Dec 22 04:43:18.801: INFO: Deleting pod "simpletest.rc-hmz4s" in namespace "gc-2025"
  Dec 22 04:43:18.861: INFO: Deleting pod "simpletest.rc-hqgtp" in namespace "gc-2025"
  Dec 22 04:43:18.923: INFO: Deleting pod "simpletest.rc-jkb7s" in namespace "gc-2025"
  Dec 22 04:43:18.978: INFO: Deleting pod "simpletest.rc-jx59j" in namespace "gc-2025"
  Dec 22 04:43:19.018: INFO: Deleting pod "simpletest.rc-krhsm" in namespace "gc-2025"
  Dec 22 04:43:19.065: INFO: Deleting pod "simpletest.rc-l2rpb" in namespace "gc-2025"
  Dec 22 04:43:19.091: INFO: Deleting pod "simpletest.rc-l5kzf" in namespace "gc-2025"
  Dec 22 04:43:19.107: INFO: Deleting pod "simpletest.rc-l7ggk" in namespace "gc-2025"
  Dec 22 04:43:19.135: INFO: Deleting pod "simpletest.rc-l84g2" in namespace "gc-2025"
  Dec 22 04:43:19.187: INFO: Deleting pod "simpletest.rc-ljskn" in namespace "gc-2025"
  Dec 22 04:43:19.203: INFO: Deleting pod "simpletest.rc-lqrzx" in namespace "gc-2025"
  Dec 22 04:43:19.222: INFO: Deleting pod "simpletest.rc-ls57d" in namespace "gc-2025"
  Dec 22 04:43:19.252: INFO: Deleting pod "simpletest.rc-m8wr9" in namespace "gc-2025"
  Dec 22 04:43:19.290: INFO: Deleting pod "simpletest.rc-mwlmq" in namespace "gc-2025"
  Dec 22 04:43:19.303: INFO: Deleting pod "simpletest.rc-n9djp" in namespace "gc-2025"
  Dec 22 04:43:19.323: INFO: Deleting pod "simpletest.rc-nb4dj" in namespace "gc-2025"
  Dec 22 04:43:19.338: INFO: Deleting pod "simpletest.rc-nmfmc" in namespace "gc-2025"
  Dec 22 04:43:19.376: INFO: Deleting pod "simpletest.rc-nngmf" in namespace "gc-2025"
  Dec 22 04:43:19.407: INFO: Deleting pod "simpletest.rc-pmh2c" in namespace "gc-2025"
  Dec 22 04:43:19.435: INFO: Deleting pod "simpletest.rc-pn9tx" in namespace "gc-2025"
  Dec 22 04:43:19.455: INFO: Deleting pod "simpletest.rc-pp9ps" in namespace "gc-2025"
  Dec 22 04:43:19.470: INFO: Deleting pod "simpletest.rc-pxvb4" in namespace "gc-2025"
  Dec 22 04:43:19.521: INFO: Deleting pod "simpletest.rc-q29vx" in namespace "gc-2025"
  Dec 22 04:43:19.554: INFO: Deleting pod "simpletest.rc-q2dbp" in namespace "gc-2025"
  Dec 22 04:43:19.566: INFO: Deleting pod "simpletest.rc-q6xbq" in namespace "gc-2025"
  Dec 22 04:43:19.594: INFO: Deleting pod "simpletest.rc-qg4qb" in namespace "gc-2025"
  Dec 22 04:43:19.609: INFO: Deleting pod "simpletest.rc-qg9mp" in namespace "gc-2025"
  Dec 22 04:43:19.631: INFO: Deleting pod "simpletest.rc-qgmjv" in namespace "gc-2025"
  Dec 22 04:43:19.696: INFO: Deleting pod "simpletest.rc-qlqhc" in namespace "gc-2025"
  Dec 22 04:43:19.770: INFO: Deleting pod "simpletest.rc-qqp9j" in namespace "gc-2025"
  Dec 22 04:43:19.800: INFO: Deleting pod "simpletest.rc-r4lnp" in namespace "gc-2025"
  Dec 22 04:43:19.839: INFO: Deleting pod "simpletest.rc-s7qbv" in namespace "gc-2025"
  Dec 22 04:43:19.873: INFO: Deleting pod "simpletest.rc-s8dxt" in namespace "gc-2025"
  Dec 22 04:43:19.899: INFO: Deleting pod "simpletest.rc-swvsp" in namespace "gc-2025"
  Dec 22 04:43:19.923: INFO: Deleting pod "simpletest.rc-vv2wg" in namespace "gc-2025"
  Dec 22 04:43:19.954: INFO: Deleting pod "simpletest.rc-vx99c" in namespace "gc-2025"
  Dec 22 04:43:19.996: INFO: Deleting pod "simpletest.rc-w8hlg" in namespace "gc-2025"
  Dec 22 04:43:20.029: INFO: Deleting pod "simpletest.rc-x7mzh" in namespace "gc-2025"
  Dec 22 04:43:20.056: INFO: Deleting pod "simpletest.rc-x97l8" in namespace "gc-2025"
  Dec 22 04:43:20.086: INFO: Deleting pod "simpletest.rc-xw28l" in namespace "gc-2025"
  Dec 22 04:43:20.140: INFO: Deleting pod "simpletest.rc-zb6lw" in namespace "gc-2025"
  Dec 22 04:43:20.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2025" for this suite. @ 12/22/23 04:43:20.225
• [44.790 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 12/22/23 04:43:20.271
  Dec 22 04:43:20.275: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename gc @ 12/22/23 04:43:20.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:20.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:20.395
  STEP: create the deployment @ 12/22/23 04:43:20.421
  W1222 04:43:20.440891      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/22/23 04:43:20.441
  STEP: delete the deployment @ 12/22/23 04:43:20.479
  STEP: wait for all rs to be garbage collected @ 12/22/23 04:43:20.537
  STEP: Gathering metrics @ 12/22/23 04:43:20.993
  Dec 22 04:43:21.147: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 04:43:21.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4744" for this suite. @ 12/22/23 04:43:21.154
• [0.891 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/22/23 04:43:21.163
  Dec 22 04:43:21.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 04:43:21.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:21.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:21.201
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/22/23 04:43:21.234
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 04:43:21.24
  Dec 22 04:43:21.255: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:43:21.255: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:22.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:43:22.251: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:23.254: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:43:23.254: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:24.255: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:43:24.255: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:25.258: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:43:25.268: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:26.259: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:43:26.259: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:27.253: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:43:27.254: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:28.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 04:43:28.252: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:29.254: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 04:43:29.255: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:30.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 04:43:30.253: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:31.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 22 04:43:31.252: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:32.253: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 04:43:32.253: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/22/23 04:43:32.261
  Dec 22 04:43:32.320: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:43:32.320: INFO: Node ip-172-31-4-122.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:33.297: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:43:33.297: INFO: Node ip-172-31-4-122.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:34.298: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:43:34.298: INFO: Node ip-172-31-4-122.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:43:35.300: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 04:43:35.300: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/22/23 04:43:35.3
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 04:43:35.306
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4747, will wait for the garbage collector to delete the pods @ 12/22/23 04:43:35.306
  Dec 22 04:43:35.382: INFO: Deleting DaemonSet.extensions daemon-set took: 21.965924ms
  Dec 22 04:43:35.483: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.181916ms
  Dec 22 04:43:37.487: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:43:37.487: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 04:43:37.496: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24787"},"items":null}

  Dec 22 04:43:37.500: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24787"},"items":null}

  Dec 22 04:43:37.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4747" for this suite. @ 12/22/23 04:43:37.543
• [16.393 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 12/22/23 04:43:37.557
  Dec 22 04:43:37.557: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 04:43:37.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:37.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:37.588
  STEP: Setting up server cert @ 12/22/23 04:43:37.714
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 04:43:38.421
  STEP: Deploying the webhook pod @ 12/22/23 04:43:38.428
  STEP: Wait for the deployment to be ready @ 12/22/23 04:43:38.441
  Dec 22 04:43:38.459: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 04:43:40.472
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 04:43:40.484
  Dec 22 04:43:41.484: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/22/23 04:43:41.496
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/22/23 04:43:41.549
  STEP: Creating a dummy validating-webhook-configuration object @ 12/22/23 04:43:41.575
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/22/23 04:43:41.591
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/22/23 04:43:41.603
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/22/23 04:43:41.619
  Dec 22 04:43:41.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9473" for this suite. @ 12/22/23 04:43:41.723
  STEP: Destroying namespace "webhook-markers-9840" for this suite. @ 12/22/23 04:43:41.745
• [4.205 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 12/22/23 04:43:41.764
  Dec 22 04:43:41.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sched-pred @ 12/22/23 04:43:41.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:41.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:41.799
  Dec 22 04:43:41.803: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 22 04:43:41.813: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 04:43:41.817: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-186.us-east-2.compute.internal before test
  Dec 22 04:43:41.830: INFO: cloud-controller-manager-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:55 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.830: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 04:43:41.830: INFO: etcd-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:39 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.830: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 04:43:41.830: INFO: helm-install-rke2-canal-xtrfp from kube-system started at 2023-12-22 03:42:17 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.830: INFO: 	Container helm ready: false, restart count 0
  Dec 22 04:43:41.830: INFO: helm-install-rke2-coredns-qj9lw from kube-system started at 2023-12-22 03:42:17 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.830: INFO: 	Container helm ready: false, restart count 0
  Dec 22 04:43:41.830: INFO: helm-install-rke2-ingress-nginx-vf5wl from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.830: INFO: 	Container helm ready: false, restart count 0
  Dec 22 04:43:41.831: INFO: helm-install-rke2-metrics-server-5mhqd from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container helm ready: false, restart count 0
  Dec 22 04:43:41.831: INFO: helm-install-rke2-snapshot-controller-crd-j4rkx from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container helm ready: false, restart count 0
  Dec 22 04:43:41.831: INFO: helm-install-rke2-snapshot-controller-ptzhz from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container helm ready: false, restart count 0
  Dec 22 04:43:41.831: INFO: helm-install-rke2-snapshot-validation-webhook-ggrfb from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container helm ready: false, restart count 0
  Dec 22 04:43:41.831: INFO: kube-apiserver-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:48 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: kube-controller-manager-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:53 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: kube-proxy-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:42:14 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: kube-scheduler-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:53 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: rke2-canal-7hv77 from kube-system started at 2023-12-22 03:42:26 +0000 UTC (2 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: rke2-coredns-rke2-coredns-5b8c65d87f-98jdx from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: rke2-coredns-rke2-coredns-autoscaler-945fbd459-7tnsg from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container autoscaler ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: rke2-ingress-nginx-controller-8gdc6 from kube-system started at 2023-12-22 03:43:18 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: rke2-metrics-server-544c8c66fc-jp6wb from kube-system started at 2023-12-22 03:43:10 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container metrics-server ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: rke2-snapshot-controller-59cc9cd8f4-mbf24 from kube-system started at 2023-12-22 03:43:10 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container rke2-snapshot-controller ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: rke2-snapshot-validation-webhook-54c5989b65-6wtsx from kube-system started at 2023-12-22 03:43:11 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-c85hz from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 04:43:41.831: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:43:41.831: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-122.us-east-2.compute.internal before test
  Dec 22 04:43:41.850: INFO: cloud-controller-manager-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.850: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 04:43:41.850: INFO: etcd-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:19 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.851: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 04:43:41.851: INFO: kube-apiserver-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:43 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.851: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 04:43:41.851: INFO: kube-controller-manager-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.851: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 04:43:41.851: INFO: kube-proxy-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:54 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.851: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 04:43:41.851: INFO: kube-scheduler-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.851: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 04:43:41.851: INFO: rke2-canal-z289m from kube-system started at 2023-12-22 03:44:49 +0000 UTC (2 container statuses recorded)
  Dec 22 04:43:41.851: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 04:43:41.851: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 04:43:41.851: INFO: rke2-coredns-rke2-coredns-5b8c65d87f-pdd2b from kube-system started at 2023-12-22 03:45:02 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.851: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 04:43:41.851: INFO: rke2-ingress-nginx-controller-65wsj from kube-system started at 2023-12-22 03:45:02 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.851: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 04:43:41.851: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-kz6fs from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 04:43:41.851: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:43:41.851: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:43:41.851: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-7-66.us-east-2.compute.internal before test
  Dec 22 04:43:41.861: INFO: kube-proxy-ip-172-31-7-66.us-east-2.compute.internal from kube-system started at 2023-12-22 03:46:58 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.861: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 04:43:41.861: INFO: rke2-canal-s7h7l from kube-system started at 2023-12-22 03:46:58 +0000 UTC (2 container statuses recorded)
  Dec 22 04:43:41.861: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 04:43:41.861: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 04:43:41.861: INFO: rke2-ingress-nginx-controller-tj9m5 from kube-system started at 2023-12-22 04:38:49 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.861: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 04:43:41.861: INFO: sonobuoy from sonobuoy started at 2023-12-22 04:25:24 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.861: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 22 04:43:41.861: INFO: sonobuoy-e2e-job-3715d743ce064b1f from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 04:43:41.861: INFO: 	Container e2e ready: true, restart count 0
  Dec 22 04:43:41.861: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:43:41.861: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-mwv6z from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 04:43:41.861: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:43:41.861: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:43:41.861: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-9-255.us-east-2.compute.internal before test
  Dec 22 04:43:41.883: INFO: cloud-controller-manager-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.883: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 04:43:41.883: INFO: etcd-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:39 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.883: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 04:43:41.883: INFO: kube-apiserver-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:08 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.883: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 04:43:41.883: INFO: kube-controller-manager-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.883: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 04:43:41.883: INFO: kube-proxy-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:16 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.883: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 04:43:41.883: INFO: kube-scheduler-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.883: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 04:43:41.883: INFO: rke2-canal-x86m4 from kube-system started at 2023-12-22 03:45:41 +0000 UTC (2 container statuses recorded)
  Dec 22 04:43:41.883: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 04:43:41.883: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 04:43:41.883: INFO: rke2-ingress-nginx-controller-2pcz6 from kube-system started at 2023-12-22 03:45:51 +0000 UTC (1 container statuses recorded)
  Dec 22 04:43:41.883: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 04:43:41.883: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-49277 from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 04:43:41.883: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:43:41.883: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/22/23 04:43:41.884
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/22/23 04:43:45.939
  STEP: Trying to apply a random label on the found node. @ 12/22/23 04:43:45.964
  STEP: verifying the node has the label kubernetes.io/e2e-92755ac5-d8f7-4607-b9e4-7f69f9a917b0 42 @ 12/22/23 04:43:45.98
  STEP: Trying to relaunch the pod, now with labels. @ 12/22/23 04:43:45.987
  STEP: removing the label kubernetes.io/e2e-92755ac5-d8f7-4607-b9e4-7f69f9a917b0 off the node ip-172-31-7-66.us-east-2.compute.internal @ 12/22/23 04:43:50.022
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-92755ac5-d8f7-4607-b9e4-7f69f9a917b0 @ 12/22/23 04:43:50.047
  Dec 22 04:43:50.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8394" for this suite. @ 12/22/23 04:43:50.074
• [8.323 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 12/22/23 04:43:50.09
  Dec 22 04:43:50.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:43:50.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:50.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:50.114
  STEP: Creating configMap with name configmap-test-upd-3395d818-07ac-4003-91d6-c456a4ea207f @ 12/22/23 04:43:50.123
  STEP: Creating the pod @ 12/22/23 04:43:50.134
  STEP: Waiting for pod with text data @ 12/22/23 04:43:52.156
  STEP: Waiting for pod with binary data @ 12/22/23 04:43:52.165
  Dec 22 04:43:52.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8336" for this suite. @ 12/22/23 04:43:52.177
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 12/22/23 04:43:52.184
  Dec 22 04:43:52.184: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename disruption @ 12/22/23 04:43:52.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:52.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:52.215
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/22/23 04:43:52.219
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:43:52.449
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/22/23 04:43:54.459
  STEP: Waiting for all pods to be running @ 12/22/23 04:43:54.46
  Dec 22 04:43:54.464: INFO: pods: 0 < 3
  Dec 22 04:43:56.465: INFO: running pods: 2 < 3
  STEP: locating a running pod @ 12/22/23 04:43:58.464
  STEP: Updating the pdb to allow a pod to be evicted @ 12/22/23 04:43:58.476
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:43:58.487
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/22/23 04:43:58.492
  STEP: Waiting for all pods to be running @ 12/22/23 04:43:58.492
  STEP: Waiting for the pdb to observed all healthy pods @ 12/22/23 04:43:58.496
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/22/23 04:43:58.526
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:43:58.554
  STEP: Waiting for all pods to be running @ 12/22/23 04:44:00.559
  STEP: locating a running pod @ 12/22/23 04:44:00.562
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/22/23 04:44:00.572
  STEP: Waiting for the pdb to be deleted @ 12/22/23 04:44:00.579
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/22/23 04:44:00.582
  STEP: Waiting for all pods to be running @ 12/22/23 04:44:00.582
  Dec 22 04:44:00.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3231" for this suite. @ 12/22/23 04:44:00.66
• [8.497 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/22/23 04:44:00.682
  Dec 22 04:44:00.683: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename init-container @ 12/22/23 04:44:00.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:44:00.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:44:00.711
  STEP: creating the pod @ 12/22/23 04:44:00.717
  Dec 22 04:44:00.717: INFO: PodSpec: initContainers in spec.initContainers
  Dec 22 04:44:05.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6148" for this suite. @ 12/22/23 04:44:05.473
• [4.799 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 12/22/23 04:44:05.483
  Dec 22 04:44:05.483: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 04:44:05.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:44:05.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:44:05.504
  Dec 22 04:44:05.520: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 22 04:44:10.526: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 04:44:10.527
  STEP: Scaling up "test-rs" replicaset @ 12/22/23 04:44:10.527
  Dec 22 04:44:10.546: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/22/23 04:44:10.547
  Dec 22 04:44:10.568: INFO: observed ReplicaSet test-rs in namespace replicaset-3791 with ReadyReplicas 1, AvailableReplicas 1
  Dec 22 04:44:10.588: INFO: observed ReplicaSet test-rs in namespace replicaset-3791 with ReadyReplicas 1, AvailableReplicas 1
  Dec 22 04:44:10.610: INFO: observed ReplicaSet test-rs in namespace replicaset-3791 with ReadyReplicas 1, AvailableReplicas 1
  Dec 22 04:44:10.616: INFO: observed ReplicaSet test-rs in namespace replicaset-3791 with ReadyReplicas 1, AvailableReplicas 1
  Dec 22 04:44:12.443: INFO: observed ReplicaSet test-rs in namespace replicaset-3791 with ReadyReplicas 2, AvailableReplicas 2
  Dec 22 04:44:12.561: INFO: observed Replicaset test-rs in namespace replicaset-3791 with ReadyReplicas 3 found true
  Dec 22 04:44:12.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3791" for this suite. @ 12/22/23 04:44:12.568
• [7.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/22/23 04:44:12.577
  Dec 22 04:44:12.577: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-runtime @ 12/22/23 04:44:12.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:44:12.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:44:12.6
  STEP: create the container @ 12/22/23 04:44:12.605
  W1222 04:44:12.617218      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/22/23 04:44:12.617
  STEP: get the container status @ 12/22/23 04:44:15.65
  STEP: the container should be terminated @ 12/22/23 04:44:15.658
  STEP: the termination message should be set @ 12/22/23 04:44:15.658
  Dec 22 04:44:15.658: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/22/23 04:44:15.658
  Dec 22 04:44:15.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5204" for this suite. @ 12/22/23 04:44:15.688
• [3.123 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 12/22/23 04:44:15.7
  Dec 22 04:44:15.701: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename runtimeclass @ 12/22/23 04:44:15.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:44:15.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:44:15.731
  STEP: getting /apis @ 12/22/23 04:44:15.734
  STEP: getting /apis/node.k8s.io @ 12/22/23 04:44:15.742
  STEP: getting /apis/node.k8s.io/v1 @ 12/22/23 04:44:15.744
  STEP: creating @ 12/22/23 04:44:15.745
  STEP: watching @ 12/22/23 04:44:15.77
  Dec 22 04:44:15.770: INFO: starting watch
  STEP: getting @ 12/22/23 04:44:15.783
  STEP: listing @ 12/22/23 04:44:15.794
  STEP: patching @ 12/22/23 04:44:15.803
  STEP: updating @ 12/22/23 04:44:15.813
  Dec 22 04:44:15.843: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 12/22/23 04:44:15.843
  STEP: deleting a collection @ 12/22/23 04:44:15.862
  Dec 22 04:44:15.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8359" for this suite. @ 12/22/23 04:44:15.893
• [0.206 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 12/22/23 04:44:15.906
  Dec 22 04:44:15.906: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 04:44:15.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:44:15.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:44:15.929
  Dec 22 04:44:15.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  W1222 04:44:18.474902      20 warnings.go:70] unknown field "alpha"
  W1222 04:44:18.475073      20 warnings.go:70] unknown field "beta"
  W1222 04:44:18.475155      20 warnings.go:70] unknown field "delta"
  W1222 04:44:18.475217      20 warnings.go:70] unknown field "epsilon"
  W1222 04:44:18.475304      20 warnings.go:70] unknown field "gamma"
  Dec 22 04:44:19.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2972" for this suite. @ 12/22/23 04:44:19.033
• [3.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 12/22/23 04:44:19.041
  Dec 22 04:44:19.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename security-context @ 12/22/23 04:44:19.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:44:19.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:44:19.067
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/22/23 04:44:19.069
  STEP: Saw pod success @ 12/22/23 04:44:23.089
  Dec 22 04:44:23.092: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod security-context-f1bb313b-a4c9-4a3d-8f9a-c8bbe7b0a552 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 04:44:23.099
  Dec 22 04:44:23.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7444" for this suite. @ 12/22/23 04:44:23.118
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 12/22/23 04:44:23.126
  Dec 22 04:44:23.126: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 04:44:23.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:44:23.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:44:23.158
  Dec 22 04:44:23.161: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/22/23 04:44:25.126
  Dec 22 04:44:25.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-1845 --namespace=crd-publish-openapi-1845 create -f -'
  Dec 22 04:44:25.499: INFO: stderr: ""
  Dec 22 04:44:25.499: INFO: stdout: "e2e-test-crd-publish-openapi-3758-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Dec 22 04:44:25.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-1845 --namespace=crd-publish-openapi-1845 delete e2e-test-crd-publish-openapi-3758-crds test-cr'
  Dec 22 04:44:25.578: INFO: stderr: ""
  Dec 22 04:44:25.578: INFO: stdout: "e2e-test-crd-publish-openapi-3758-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Dec 22 04:44:25.578: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-1845 --namespace=crd-publish-openapi-1845 apply -f -'
  Dec 22 04:44:25.665: INFO: stderr: ""
  Dec 22 04:44:25.665: INFO: stdout: "e2e-test-crd-publish-openapi-3758-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Dec 22 04:44:25.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-1845 --namespace=crd-publish-openapi-1845 delete e2e-test-crd-publish-openapi-3758-crds test-cr'
  Dec 22 04:44:25.752: INFO: stderr: ""
  Dec 22 04:44:25.752: INFO: stdout: "e2e-test-crd-publish-openapi-3758-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/22/23 04:44:25.752
  Dec 22 04:44:25.752: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-1845 explain e2e-test-crd-publish-openapi-3758-crds'
  Dec 22 04:44:25.830: INFO: stderr: ""
  Dec 22 04:44:25.830: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3758-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Dec 22 04:44:27.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1845" for this suite. @ 12/22/23 04:44:27.476
• [4.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 12/22/23 04:44:27.504
  Dec 22 04:44:27.504: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 04:44:27.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:44:27.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:44:27.542
  STEP: Creating a pod to test substitution in volume subpath @ 12/22/23 04:44:27.58
  STEP: Saw pod success @ 12/22/23 04:44:31.602
  Dec 22 04:44:31.605: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod var-expansion-a8ff5a41-affb-4f00-b356-4d5073dd9246 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 04:44:31.62
  Dec 22 04:44:31.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3688" for this suite. @ 12/22/23 04:44:31.644
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 12/22/23 04:44:31.654
  Dec 22 04:44:31.654: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename chunking @ 12/22/23 04:44:31.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:44:31.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:44:31.682
  STEP: creating a large number of resources @ 12/22/23 04:44:31.684
  I1222 04:44:40.466321      20 request.go:697] Waited for 1.000154503s due to client-side throttling, not priority and fairness, request: POST:https://10.43.0.1:443/api/v1/namespaces/chunking-7560/podtemplates
  STEP: retrieving the first page @ 12/22/23 04:44:49.362
  Dec 22 04:44:49.412: INFO: Retrieved 40/40 results with rv 26047 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 12/22/23 04:44:49.412
  Dec 22 04:45:09.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:45:29.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:45:49.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:46:09.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:46:29.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:46:49.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:47:09.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:47:29.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:47:49.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:48:09.418: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:48:29.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:48:49.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:49:09.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:49:29.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:49:49.418: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:50:09.418: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:50:29.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:50:49.418: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:51:09.419: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:51:29.417: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:51:49.420: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYwNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:52:09.416: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Dec 22 04:52:09.416: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 12/22/23 04:52:09.416
  STEP: retrieving all remaining pages @ 12/22/23 04:52:09.42
  Dec 22 04:52:09.424: INFO: Retrieved 40/40 results with rv 27744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Dec 22 04:52:09.429: INFO: Retrieved 40/40 results with rv 27744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Dec 22 04:52:09.433: INFO: Retrieved 40/40 results with rv 27744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Dec 22 04:52:09.437: INFO: Retrieved 40/40 results with rv 27744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Dec 22 04:52:09.441: INFO: Retrieved 40/40 results with rv 27744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Dec 22 04:52:09.446: INFO: Retrieved 40/40 results with rv 27744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Dec 22 04:52:09.450: INFO: Retrieved 40/40 results with rv 27744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Dec 22 04:52:09.455: INFO: Retrieved 40/40 results with rv 27744 and continue 
  Dec 22 04:52:09.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7560" for this suite. @ 12/22/23 04:52:09.459
• [457.816 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 12/22/23 04:52:09.475
  Dec 22 04:52:09.475: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 04:52:09.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:09.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:09.507
  STEP: Read namespace status @ 12/22/23 04:52:09.511
  Dec 22 04:52:09.516: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/22/23 04:52:09.516
  Dec 22 04:52:09.523: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/22/23 04:52:09.523
  Dec 22 04:52:09.534: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Dec 22 04:52:09.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4538" for this suite. @ 12/22/23 04:52:09.539
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 12/22/23 04:52:09.548
  Dec 22 04:52:09.548: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/22/23 04:52:09.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:09.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:09.568
  STEP: create the container to handle the HTTPGet hook request. @ 12/22/23 04:52:09.575
  STEP: create the pod with lifecycle hook @ 12/22/23 04:52:11.598
  STEP: delete the pod with lifecycle hook @ 12/22/23 04:52:13.617
  STEP: check prestop hook @ 12/22/23 04:52:17.641
  Dec 22 04:52:17.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2438" for this suite. @ 12/22/23 04:52:17.663
• [8.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 12/22/23 04:52:17.671
  Dec 22 04:52:17.672: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 04:52:17.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:17.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:17.694
  Dec 22 04:52:17.697: INFO: Creating ReplicaSet my-hostname-basic-3d3a7bd8-38ee-4b52-888d-f0d40650aad4
  Dec 22 04:52:17.707: INFO: Pod name my-hostname-basic-3d3a7bd8-38ee-4b52-888d-f0d40650aad4: Found 0 pods out of 1
  Dec 22 04:52:22.713: INFO: Pod name my-hostname-basic-3d3a7bd8-38ee-4b52-888d-f0d40650aad4: Found 1 pods out of 1
  Dec 22 04:52:22.713: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-3d3a7bd8-38ee-4b52-888d-f0d40650aad4" is running
  Dec 22 04:52:22.716: INFO: Pod "my-hostname-basic-3d3a7bd8-38ee-4b52-888d-f0d40650aad4-d56lb" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 04:52:19 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 04:52:17 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 04:52:19 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 04:52:19 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 04:52:17 +0000 UTC Reason: Message:}])
  Dec 22 04:52:22.716: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/22/23 04:52:22.716
  Dec 22 04:52:22.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1614" for this suite. @ 12/22/23 04:52:22.738
• [5.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 12/22/23 04:52:22.747
  Dec 22 04:52:22.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:52:22.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:22.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:22.776
  STEP: create deployment with httpd image @ 12/22/23 04:52:22.779
  Dec 22 04:52:22.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-7536 create -f -'
  Dec 22 04:52:22.937: INFO: stderr: ""
  Dec 22 04:52:22.937: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/22/23 04:52:22.937
  Dec 22 04:52:22.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-7536 diff -f -'
  Dec 22 04:52:23.134: INFO: rc: 1
  Dec 22 04:52:23.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-7536 delete -f -'
  Dec 22 04:52:23.222: INFO: stderr: ""
  Dec 22 04:52:23.222: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Dec 22 04:52:23.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7536" for this suite. @ 12/22/23 04:52:23.229
• [0.490 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 12/22/23 04:52:23.237
  Dec 22 04:52:23.237: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 04:52:23.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:23.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:23.261
  STEP: apply creating a deployment @ 12/22/23 04:52:23.264
  Dec 22 04:52:23.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8319" for this suite. @ 12/22/23 04:52:23.293
• [0.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/22/23 04:52:23.301
  Dec 22 04:52:23.301: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pods @ 12/22/23 04:52:23.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:23.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:23.322
  STEP: creating the pod @ 12/22/23 04:52:23.325
  STEP: submitting the pod to kubernetes @ 12/22/23 04:52:23.325
  STEP: verifying QOS class is set on the pod @ 12/22/23 04:52:23.333
  Dec 22 04:52:23.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-789" for this suite. @ 12/22/23 04:52:23.342
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 12/22/23 04:52:23.358
  Dec 22 04:52:23.358: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 04:52:23.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:23.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:23.379
  STEP: creating a secret @ 12/22/23 04:52:23.382
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/22/23 04:52:23.387
  STEP: patching the secret @ 12/22/23 04:52:23.393
  STEP: deleting the secret using a LabelSelector @ 12/22/23 04:52:23.403
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/22/23 04:52:23.411
  Dec 22 04:52:23.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1783" for this suite. @ 12/22/23 04:52:23.421
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 12/22/23 04:52:23.435
  Dec 22 04:52:23.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 04:52:23.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:23.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:23.461
  STEP: Setting up server cert @ 12/22/23 04:52:23.485
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 04:52:24.243
  STEP: Deploying the webhook pod @ 12/22/23 04:52:24.258
  STEP: Wait for the deployment to be ready @ 12/22/23 04:52:24.293
  Dec 22 04:52:24.309: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 04:52:26.32
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 04:52:26.479
  Dec 22 04:52:27.480: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/22/23 04:52:27.499
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/22/23 04:52:27.499
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/22/23 04:52:27.655
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/22/23 04:52:28.668
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/22/23 04:52:28.668
  STEP: Having no error when timeout is longer than webhook latency @ 12/22/23 04:52:29.696
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/22/23 04:52:29.696
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/22/23 04:52:34.748
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/22/23 04:52:34.748
  Dec 22 04:52:39.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7355" for this suite. @ 12/22/23 04:52:39.907
  STEP: Destroying namespace "webhook-markers-3881" for this suite. @ 12/22/23 04:52:39.926
• [16.506 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/22/23 04:52:39.942
  Dec 22 04:52:39.942: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-runtime @ 12/22/23 04:52:39.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:39.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:39.982
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/22/23 04:52:39.995
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/22/23 04:53:01.102
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/22/23 04:53:01.105
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/22/23 04:53:01.111
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 12/22/23 04:53:01.111
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/22/23 04:53:01.14
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/22/23 04:53:05.189
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/22/23 04:53:06.196
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/22/23 04:53:06.201
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 12/22/23 04:53:06.202
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/22/23 04:53:06.226
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/22/23 04:53:07.237
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/22/23 04:53:09.251
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/22/23 04:53:09.258
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 12/22/23 04:53:09.258
  Dec 22 04:53:09.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-92" for this suite. @ 12/22/23 04:53:09.289
• [29.354 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 12/22/23 04:53:09.298
  Dec 22 04:53:09.298: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename endpointslice @ 12/22/23 04:53:09.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:53:09.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:53:09.322
  STEP: referencing a single matching pod @ 12/22/23 04:53:14.436
  STEP: referencing matching pods with named port @ 12/22/23 04:53:19.444
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/22/23 04:53:24.454
  STEP: recreating EndpointSlices after they've been deleted @ 12/22/23 04:53:29.461
  Dec 22 04:53:29.494: INFO: EndpointSlice for Service endpointslice-5323/example-named-port not found
  Dec 22 04:53:39.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5323" for this suite. @ 12/22/23 04:53:39.5
• [30.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 12/22/23 04:53:39.513
  Dec 22 04:53:39.513: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 04:53:39.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:53:39.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:53:39.542
  STEP: Counting existing ResourceQuota @ 12/22/23 04:53:39.545
  STEP: Creating a ResourceQuota @ 12/22/23 04:53:44.548
  STEP: Ensuring resource quota status is calculated @ 12/22/23 04:53:44.567
  STEP: Creating a ReplicaSet @ 12/22/23 04:53:46.571
  STEP: Ensuring resource quota status captures replicaset creation @ 12/22/23 04:53:46.582
  STEP: Deleting a ReplicaSet @ 12/22/23 04:53:48.586
  STEP: Ensuring resource quota status released usage @ 12/22/23 04:53:48.592
  Dec 22 04:53:50.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6718" for this suite. @ 12/22/23 04:53:50.604
• [11.098 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 12/22/23 04:53:50.612
  Dec 22 04:53:50.612: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:53:50.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:53:50.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:53:50.635
  STEP: Creating configMap configmap-490/configmap-test-6ea1b740-263e-41c8-8b36-870d5a19af78 @ 12/22/23 04:53:50.638
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:53:50.644
  STEP: Saw pod success @ 12/22/23 04:53:54.664
  Dec 22 04:53:54.666: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-configmaps-1c096d1f-0de4-4e5b-8ccb-eea698ba8148 container env-test: <nil>
  STEP: delete the pod @ 12/22/23 04:53:54.689
  Dec 22 04:53:54.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-490" for this suite. @ 12/22/23 04:53:54.711
• [4.105 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 12/22/23 04:53:54.718
  Dec 22 04:53:54.718: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:53:54.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:53:54.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:53:54.743
  STEP: Creating configMap with name configmap-test-volume-map-7b13e0ab-13f2-4e50-a51b-d193c6091ec7 @ 12/22/23 04:53:54.747
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:53:54.752
  STEP: Saw pod success @ 12/22/23 04:53:58.775
  Dec 22 04:53:58.778: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-configmaps-b37e3374-9553-4f3b-9455-d25c25427a46 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:53:58.785
  Dec 22 04:53:58.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8754" for this suite. @ 12/22/23 04:53:58.81
• [4.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 12/22/23 04:53:58.816
  Dec 22 04:53:58.816: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 04:53:58.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:53:58.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:53:58.843
  STEP: Creating service test in namespace statefulset-9615 @ 12/22/23 04:53:58.846
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/22/23 04:53:58.852
  STEP: Creating stateful set ss in namespace statefulset-9615 @ 12/22/23 04:53:58.855
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9615 @ 12/22/23 04:53:58.864
  Dec 22 04:53:58.869: INFO: Found 0 stateful pods, waiting for 1
  Dec 22 04:54:08.869: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/22/23 04:54:08.869
  Dec 22 04:54:08.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-9615 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 04:54:09.087: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 04:54:09.088: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 04:54:09.088: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 04:54:09.091: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Dec 22 04:54:19.097: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 04:54:19.097: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 22 04:54:19.123: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999959s
  Dec 22 04:54:20.130: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.994289003s
  Dec 22 04:54:21.134: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.988544895s
  Dec 22 04:54:22.137: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.984422962s
  Dec 22 04:54:23.142: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.980133377s
  Dec 22 04:54:24.151: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.976416306s
  Dec 22 04:54:25.156: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.965764021s
  Dec 22 04:54:26.160: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.961848773s
  Dec 22 04:54:27.165: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.957384003s
  Dec 22 04:54:28.169: INFO: Verifying statefulset ss doesn't scale past 1 for another 953.227849ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9615 @ 12/22/23 04:54:29.169
  Dec 22 04:54:29.177: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-9615 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 04:54:29.363: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 04:54:29.363: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 04:54:29.363: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 04:54:29.367: INFO: Found 1 stateful pods, waiting for 3
  Dec 22 04:54:39.369: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:54:39.369: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:54:39.369: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/22/23 04:54:39.369
  STEP: Scale down will halt with unhealthy stateful pod @ 12/22/23 04:54:39.369
  Dec 22 04:54:39.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-9615 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 04:54:39.623: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 04:54:39.623: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 04:54:39.623: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 04:54:39.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-9615 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 04:54:39.812: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 04:54:39.812: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 04:54:39.812: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 04:54:39.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-9615 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 04:54:40.012: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 04:54:40.012: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 04:54:40.012: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 04:54:40.012: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 22 04:54:40.018: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Dec 22 04:54:50.020: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 04:54:50.020: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 04:54:50.020: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 04:54:50.032: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999933s
  Dec 22 04:54:51.037: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99636878s
  Dec 22 04:54:52.042: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991823979s
  Dec 22 04:54:53.046: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987239288s
  Dec 22 04:54:54.058: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.982582425s
  Dec 22 04:54:55.062: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.970769474s
  Dec 22 04:54:56.067: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.966575843s
  Dec 22 04:54:57.071: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.962050071s
  Dec 22 04:54:58.076: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.957083531s
  Dec 22 04:54:59.084: INFO: Verifying statefulset ss doesn't scale past 3 for another 953.114434ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9615 @ 12/22/23 04:55:00.084
  Dec 22 04:55:00.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-9615 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 04:55:00.256: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 04:55:00.256: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 04:55:00.256: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 04:55:00.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-9615 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 04:55:00.444: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 04:55:00.444: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 04:55:00.444: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 04:55:00.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-9615 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 04:55:00.630: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 04:55:00.630: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 04:55:00.630: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 04:55:00.630: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/22/23 04:55:10.654
  Dec 22 04:55:10.654: INFO: Deleting all statefulset in ns statefulset-9615
  Dec 22 04:55:10.660: INFO: Scaling statefulset ss to 0
  Dec 22 04:55:10.675: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 04:55:10.678: INFO: Deleting statefulset ss
  Dec 22 04:55:10.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9615" for this suite. @ 12/22/23 04:55:10.709
• [71.904 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 12/22/23 04:55:10.723
  Dec 22 04:55:10.723: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 04:55:10.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:10.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:10.767
  STEP: Setting up server cert @ 12/22/23 04:55:10.795
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 04:55:11.392
  STEP: Deploying the webhook pod @ 12/22/23 04:55:11.399
  STEP: Wait for the deployment to be ready @ 12/22/23 04:55:11.411
  Dec 22 04:55:11.419: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 04:55:13.428
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 04:55:13.44
  Dec 22 04:55:14.441: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/22/23 04:55:14.446
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/22/23 04:55:14.473
  STEP: Creating a configMap that should not be mutated @ 12/22/23 04:55:14.479
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/22/23 04:55:14.49
  STEP: Creating a configMap that should be mutated @ 12/22/23 04:55:14.499
  Dec 22 04:55:14.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8913" for this suite. @ 12/22/23 04:55:14.591
  STEP: Destroying namespace "webhook-markers-2281" for this suite. @ 12/22/23 04:55:14.605
• [3.891 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/22/23 04:55:14.617
  Dec 22 04:55:14.618: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-runtime @ 12/22/23 04:55:14.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:14.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:14.643
  STEP: create the container @ 12/22/23 04:55:14.645
  W1222 04:55:14.653189      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/22/23 04:55:14.653
  STEP: get the container status @ 12/22/23 04:55:18.677
  STEP: the container should be terminated @ 12/22/23 04:55:18.679
  STEP: the termination message should be set @ 12/22/23 04:55:18.679
  Dec 22 04:55:18.680: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/22/23 04:55:18.68
  Dec 22 04:55:18.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8354" for this suite. @ 12/22/23 04:55:18.699
• [4.087 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 12/22/23 04:55:18.705
  Dec 22 04:55:18.705: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:55:18.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:18.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:18.729
  Dec 22 04:55:18.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4340" for this suite. @ 12/22/23 04:55:18.776
• [0.081 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 12/22/23 04:55:18.787
  Dec 22 04:55:18.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename dns @ 12/22/23 04:55:18.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:18.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:18.812
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/22/23 04:55:18.814
  Dec 22 04:55:18.824: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3966  38eed333-033a-406b-88ed-240d27374503 29664 0 2023-12-22 04:55:18 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-12-22 04:55:18 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lqrcc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lqrcc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/22/23 04:55:20.835
  Dec 22 04:55:20.835: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3966 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:55:20.835: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 04:55:20.835: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:55:20.835: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-3966/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 12/22/23 04:55:20.95
  Dec 22 04:55:20.950: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3966 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:55:20.950: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 04:55:20.951: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:55:20.951: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-3966/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 04:55:21.061: INFO: Deleting pod test-dns-nameservers...
  Dec 22 04:55:21.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3966" for this suite. @ 12/22/23 04:55:21.096
• [2.315 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 12/22/23 04:55:21.103
  Dec 22 04:55:21.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 04:55:21.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:21.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:21.128
  STEP: Updating Namespace "namespaces-8005" @ 12/22/23 04:55:21.131
  Dec 22 04:55:21.138: INFO: Namespace "namespaces-8005" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"6dd30d15-5141-4c39-ad10-0ce8c17ff4f8", "kubernetes.io/metadata.name":"namespaces-8005", "namespaces-8005":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Dec 22 04:55:21.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8005" for this suite. @ 12/22/23 04:55:21.144
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/22/23 04:55:21.156
  Dec 22 04:55:21.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 04:55:21.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:21.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:21.177
  STEP: Creating secret with name secret-test-a23be884-81be-4266-b58e-680c8ae61c45 @ 12/22/23 04:55:21.179
  STEP: Creating a pod to test consume secrets @ 12/22/23 04:55:21.184
  STEP: Saw pod success @ 12/22/23 04:55:25.209
  Dec 22 04:55:25.212: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-secrets-321e7b27-aad6-44a7-a08d-f991bd4c355e container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 04:55:25.22
  Dec 22 04:55:25.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2410" for this suite. @ 12/22/23 04:55:25.242
• [4.095 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/22/23 04:55:25.252
  Dec 22 04:55:25.252: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename containers @ 12/22/23 04:55:25.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:25.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:25.279
  STEP: Creating a pod to test override arguments @ 12/22/23 04:55:25.287
  STEP: Saw pod success @ 12/22/23 04:55:29.308
  Dec 22 04:55:29.312: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod client-containers-9fb619fd-6191-46b7-a697-b4f9f31ffd8b container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:55:29.318
  Dec 22 04:55:29.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4670" for this suite. @ 12/22/23 04:55:29.337
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 12/22/23 04:55:29.344
  Dec 22 04:55:29.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 04:55:29.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:29.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:29.371
  STEP: Setting up server cert @ 12/22/23 04:55:29.406
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 04:55:29.805
  STEP: Deploying the webhook pod @ 12/22/23 04:55:29.811
  STEP: Wait for the deployment to be ready @ 12/22/23 04:55:29.824
  Dec 22 04:55:29.840: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 04:55:31.851
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 04:55:31.866
  Dec 22 04:55:32.867: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/22/23 04:55:32.873
  STEP: create a pod that should be denied by the webhook @ 12/22/23 04:55:32.893
  STEP: create a pod that causes the webhook to hang @ 12/22/23 04:55:32.914
  STEP: create a configmap that should be denied by the webhook @ 12/22/23 04:55:42.921
  STEP: create a configmap that should be admitted by the webhook @ 12/22/23 04:55:43.546
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/22/23 04:55:43.561
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/22/23 04:55:43.57
  STEP: create a namespace that bypass the webhook @ 12/22/23 04:55:43.576
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/22/23 04:55:43.593
  Dec 22 04:55:43.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4206" for this suite. @ 12/22/23 04:55:43.717
  STEP: Destroying namespace "webhook-markers-1004" for this suite. @ 12/22/23 04:55:43.724
  STEP: Destroying namespace "exempted-namespace-8225" for this suite. @ 12/22/23 04:55:43.733
• [14.396 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/22/23 04:55:43.74
  Dec 22 04:55:43.741: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename deployment @ 12/22/23 04:55:43.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:43.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:43.761
  Dec 22 04:55:43.961: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Dec 22 04:55:43.976: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 04:55:43.976
  Dec 22 04:55:45.987: INFO: Creating deployment "test-rolling-update-deployment"
  Dec 22 04:55:45.993: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Dec 22 04:55:45.999: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Dec 22 04:55:48.013: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Dec 22 04:55:48.017: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Dec 22 04:55:48.026: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1eec0c95-dcac-4f9a-aa41-e4c45ab996b0",
      ResourceVersion: (string) (len=5) "29985",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838817745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 04:55:48.034: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32cd720c-6787-4e85-b674-bd321d70e29f",
      ResourceVersion: (string) (len=5) "29975",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838817746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "1eec0c95-dcac-4f9a-aa41-e4c45ab996b0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 65 65 63 30 63  39 35 2d 64 63 61 63 2d  |\"1eec0c95-dcac-|
              00000120  34 66 39 61 2d 61 61 34  31 2d 65 34 63 34 35 61  |4f9a-aa41-e4c45a|
              00000130  62 39 39 36 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b996b0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 04:55:48.036: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Dec 22 04:55:48.037: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e595d381-1c1a-4ca0-89ec-d1b0a1b6f096",
      ResourceVersion: (string) (len=5) "29984",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838817743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "1eec0c95-dcac-4f9a-aa41-e4c45ab996b0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 65 65 63 30 63 39  |"uid\":\"1eec0c9|
              000000b0  35 2d 64 63 61 63 2d 34  66 39 61 2d 61 61 34 31  |5-dcac-4f9a-aa41|
              000000c0  2d 65 34 63 34 35 61 62  39 39 36 62 30 5c 22 7d  |-e4c45ab996b0\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 04:55:48.043: INFO: Pod "test-rolling-update-deployment-7f5c55c64-jtbmk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-jtbmk",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-8354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "450b8117-c494-49ce-a8ba-be71b7734651",
      ResourceVersion: (string) (len=5) "29974",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838817746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.158/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.158/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0311adfe1f7a04f8779255dbbed732798215d4c219e028c6e488e6f1c98b7fe1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "32cd720c-6787-4e85-b674-bd321d70e29f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  63 64 37 32 30 63 2d 36  |d\":\"32cd720c-6|
              00000090  37 38 37 2d 34 65 38 35  2d 62 36 37 34 2d 62 64  |787-4e85-b674-bd|
              000000a0  33 32 31 64 37 30 65 32  39 66 5c 22 7d 22 3a 7b  |321d70e29f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 35  38 5c 22 7d 22 3a 7b 22  |.42.3.158\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r75ts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r75ts",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838817746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) (len=11) "10.42.3.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838817746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838817747,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://eb7560e432a0ee3638964cbb973e298a5b59c604bb2acded307029b6a2e04f1e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:55:48.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8354" for this suite. @ 12/22/23 04:55:48.052
• [4.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 12/22/23 04:55:48.061
  Dec 22 04:55:48.061: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:55:48.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:48.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:48.092
  STEP: validating cluster-info @ 12/22/23 04:55:48.095
  Dec 22 04:55:48.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-1124 cluster-info'
  Dec 22 04:55:48.256: INFO: stderr: ""
  Dec 22 04:55:48.256: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Dec 22 04:55:48.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1124" for this suite. @ 12/22/23 04:55:48.264
• [0.209 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 12/22/23 04:55:48.271
  Dec 22 04:55:48.271: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 04:55:48.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:48.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:48.296
  STEP: creating secret secrets-512/secret-test-7e72138b-9e43-4a61-b216-35e609f52310 @ 12/22/23 04:55:48.299
  STEP: Creating a pod to test consume secrets @ 12/22/23 04:55:48.304
  STEP: Saw pod success @ 12/22/23 04:55:52.325
  Dec 22 04:55:52.328: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-configmaps-0c5ab308-1fe3-465f-b725-a3db561c172e container env-test: <nil>
  STEP: delete the pod @ 12/22/23 04:55:52.336
  Dec 22 04:55:52.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-512" for this suite. @ 12/22/23 04:55:52.359
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/22/23 04:55:52.369
  Dec 22 04:55:52.369: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 04:55:52.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:55:52.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:55:52.391
  Dec 22 04:55:52.421: INFO: Create a RollingUpdate DaemonSet
  Dec 22 04:55:52.427: INFO: Check that daemon pods launch on every node of the cluster
  Dec 22 04:55:52.437: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:55:52.437: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:55:53.446: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:55:53.446: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:55:54.437: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:55:54.437: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:55:55.436: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:55:55.437: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:55:56.448: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 04:55:56.448: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  Dec 22 04:55:56.448: INFO: Update the DaemonSet to trigger a rollout
  Dec 22 04:55:56.468: INFO: Updating DaemonSet daemon-set
  Dec 22 04:55:57.482: INFO: Roll back the DaemonSet before rollout is complete
  Dec 22 04:55:57.492: INFO: Updating DaemonSet daemon-set
  Dec 22 04:55:57.492: INFO: Make sure DaemonSet rollback is complete
  Dec 22 04:55:57.496: INFO: Wrong image for pod: daemon-set-bkghr. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Dec 22 04:55:57.496: INFO: Pod daemon-set-bkghr is not available
  Dec 22 04:56:00.496: INFO: Pod daemon-set-cclht is not available
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 04:56:00.508
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7008, will wait for the garbage collector to delete the pods @ 12/22/23 04:56:00.508
  Dec 22 04:56:00.568: INFO: Deleting DaemonSet.extensions daemon-set took: 6.07209ms
  Dec 22 04:56:00.672: INFO: Terminating DaemonSet.extensions daemon-set pods took: 104.155994ms
  Dec 22 04:56:03.076: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:56:03.076: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 04:56:03.079: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30252"},"items":null}

  Dec 22 04:56:03.082: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30252"},"items":null}

  Dec 22 04:56:03.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7008" for this suite. @ 12/22/23 04:56:03.103
• [10.741 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 12/22/23 04:56:03.111
  Dec 22 04:56:03.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename job @ 12/22/23 04:56:03.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:03.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:03.137
  STEP: Creating a job @ 12/22/23 04:56:03.139
  STEP: Ensuring active pods == parallelism @ 12/22/23 04:56:03.148
  STEP: Orphaning one of the Job's Pods @ 12/22/23 04:56:05.152
  Dec 22 04:56:05.669: INFO: Successfully updated pod "adopt-release-jh7zc"
  STEP: Checking that the Job readopts the Pod @ 12/22/23 04:56:05.67
  STEP: Removing the labels from the Job's Pod @ 12/22/23 04:56:07.677
  Dec 22 04:56:08.190: INFO: Successfully updated pod "adopt-release-jh7zc"
  STEP: Checking that the Job releases the Pod @ 12/22/23 04:56:08.19
  Dec 22 04:56:10.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7240" for this suite. @ 12/22/23 04:56:10.216
• [7.120 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 12/22/23 04:56:10.232
  Dec 22 04:56:10.232: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 04:56:10.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:10.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:10.269
  STEP: creating service in namespace services-1684 @ 12/22/23 04:56:10.273
  STEP: creating service affinity-clusterip-transition in namespace services-1684 @ 12/22/23 04:56:10.273
  STEP: creating replication controller affinity-clusterip-transition in namespace services-1684 @ 12/22/23 04:56:10.287
  I1222 04:56:10.300231      20 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-1684, replica count: 3
  I1222 04:56:13.357987      20 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 04:56:13.366: INFO: Creating new exec pod
  Dec 22 04:56:16.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-1684 exec execpod-affinityjxtzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Dec 22 04:56:16.623: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Dec 22 04:56:16.623: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:56:16.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-1684 exec execpod-affinityjxtzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.112.21 80'
  Dec 22 04:56:16.807: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.112.21 80\nConnection to 10.43.112.21 80 port [tcp/http] succeeded!\n"
  Dec 22 04:56:16.807: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:56:16.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-1684 exec execpod-affinityjxtzn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.112.21:80/ ; done'
  Dec 22 04:56:17.140: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n"
  Dec 22 04:56:17.140: INFO: stdout: "\naffinity-clusterip-transition-w76j8\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-nlxng\naffinity-clusterip-transition-w76j8\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-w76j8\naffinity-clusterip-transition-w76j8\naffinity-clusterip-transition-nlxng\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-w76j8\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-nlxng\naffinity-clusterip-transition-w76j8\naffinity-clusterip-transition-w76j8\naffinity-clusterip-transition-qprwk"
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-w76j8
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-nlxng
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-w76j8
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-w76j8
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-w76j8
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-nlxng
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-w76j8
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-nlxng
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-w76j8
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-w76j8
  Dec 22 04:56:17.140: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.153: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-1684 exec execpod-affinityjxtzn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.112.21:80/ ; done'
  Dec 22 04:56:17.510: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.112.21:80/\n"
  Dec 22 04:56:17.510: INFO: stdout: "\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk\naffinity-clusterip-transition-qprwk"
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Received response from host: affinity-clusterip-transition-qprwk
  Dec 22 04:56:17.510: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-1684, will wait for the garbage collector to delete the pods @ 12/22/23 04:56:17.529
  Dec 22 04:56:17.591: INFO: Deleting ReplicationController affinity-clusterip-transition took: 8.053954ms
  Dec 22 04:56:17.692: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.051396ms
  Dec 22 04:56:21.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1684" for this suite. @ 12/22/23 04:56:21.224
• [11.000 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 12/22/23 04:56:21.235
  Dec 22 04:56:21.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:56:21.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:21.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:21.367
  STEP: Creating a pod to test downward api env vars @ 12/22/23 04:56:21.37
  STEP: Saw pod success @ 12/22/23 04:56:25.404
  Dec 22 04:56:25.406: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downward-api-68d3988f-140c-41cd-a7e8-43ce6ac81fc8 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 04:56:25.415
  Dec 22 04:56:25.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3370" for this suite. @ 12/22/23 04:56:25.435
• [4.208 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 12/22/23 04:56:25.444
  Dec 22 04:56:25.444: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:56:25.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:25.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:25.464
  STEP: Starting the proxy @ 12/22/23 04:56:25.467
  Dec 22 04:56:25.468: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-9555 proxy --unix-socket=/tmp/kubectl-proxy-unix2030749612/test'
  STEP: retrieving proxy /api/ output @ 12/22/23 04:56:25.53
  Dec 22 04:56:25.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9555" for this suite. @ 12/22/23 04:56:25.535
• [0.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 12/22/23 04:56:25.542
  Dec 22 04:56:25.542: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename limitrange @ 12/22/23 04:56:25.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:25.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:25.564
  STEP: Creating LimitRange "e2e-limitrange-h8zqf" in namespace "limitrange-8949" @ 12/22/23 04:56:25.566
  STEP: Creating another limitRange in another namespace @ 12/22/23 04:56:25.572
  Dec 22 04:56:25.587: INFO: Namespace "e2e-limitrange-h8zqf-3199" created
  Dec 22 04:56:25.587: INFO: Creating LimitRange "e2e-limitrange-h8zqf" in namespace "e2e-limitrange-h8zqf-3199"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-h8zqf" @ 12/22/23 04:56:25.594
  Dec 22 04:56:25.597: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-h8zqf" in "limitrange-8949" namespace @ 12/22/23 04:56:25.597
  Dec 22 04:56:25.604: INFO: LimitRange "e2e-limitrange-h8zqf" has been patched
  STEP: Delete LimitRange "e2e-limitrange-h8zqf" by Collection with labelSelector: "e2e-limitrange-h8zqf=patched" @ 12/22/23 04:56:25.604
  STEP: Confirm that the limitRange "e2e-limitrange-h8zqf" has been deleted @ 12/22/23 04:56:25.61
  Dec 22 04:56:25.610: INFO: Requesting list of LimitRange to confirm quantity
  Dec 22 04:56:25.613: INFO: Found 0 LimitRange with label "e2e-limitrange-h8zqf=patched"
  Dec 22 04:56:25.613: INFO: LimitRange "e2e-limitrange-h8zqf" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-h8zqf" @ 12/22/23 04:56:25.614
  Dec 22 04:56:25.617: INFO: Found 1 limitRange
  Dec 22 04:56:25.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8949" for this suite. @ 12/22/23 04:56:25.621
  STEP: Destroying namespace "e2e-limitrange-h8zqf-3199" for this suite. @ 12/22/23 04:56:25.633
• [0.104 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 12/22/23 04:56:25.646
  Dec 22 04:56:25.646: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename events @ 12/22/23 04:56:25.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:25.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:25.666
  STEP: Create set of events @ 12/22/23 04:56:25.668
  Dec 22 04:56:25.673: INFO: created test-event-1
  Dec 22 04:56:25.677: INFO: created test-event-2
  Dec 22 04:56:25.681: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/22/23 04:56:25.682
  STEP: delete collection of events @ 12/22/23 04:56:25.685
  Dec 22 04:56:25.685: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/22/23 04:56:25.703
  Dec 22 04:56:25.704: INFO: requesting list of events to confirm quantity
  Dec 22 04:56:25.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6908" for this suite. @ 12/22/23 04:56:25.711
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 12/22/23 04:56:25.72
  Dec 22 04:56:25.720: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename security-context @ 12/22/23 04:56:25.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:25.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:25.743
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/22/23 04:56:25.745
  STEP: Saw pod success @ 12/22/23 04:56:29.773
  Dec 22 04:56:29.776: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod security-context-fd87e19f-0234-4c5b-81e3-c4fb304500ad container test-container: <nil>
  STEP: delete the pod @ 12/22/23 04:56:29.782
  Dec 22 04:56:29.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8225" for this suite. @ 12/22/23 04:56:29.801
• [4.088 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 12/22/23 04:56:29.808
  Dec 22 04:56:29.808: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename security-context-test @ 12/22/23 04:56:29.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:29.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:29.84
  Dec 22 04:56:33.872: INFO: Got logs for pod "busybox-privileged-false-a6bf7332-8208-4b91-89ae-3097a86809bd": "ip: RTNETLINK answers: Operation not permitted\n"
  Dec 22 04:56:33.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7582" for this suite. @ 12/22/23 04:56:33.877
• [4.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/22/23 04:56:33.884
  Dec 22 04:56:33.884: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename proxy @ 12/22/23 04:56:33.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:33.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:33.915
  Dec 22 04:56:33.917: INFO: Creating pod...
  Dec 22 04:56:35.947: INFO: Creating service...
  Dec 22 04:56:35.957: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/pods/agnhost/proxy?method=DELETE
  Dec 22 04:56:35.973: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 22 04:56:35.973: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/pods/agnhost/proxy?method=OPTIONS
  Dec 22 04:56:35.977: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 22 04:56:35.977: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/pods/agnhost/proxy?method=PATCH
  Dec 22 04:56:35.981: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 22 04:56:35.981: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/pods/agnhost/proxy?method=POST
  Dec 22 04:56:35.984: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 22 04:56:35.984: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/pods/agnhost/proxy?method=PUT
  Dec 22 04:56:35.987: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 22 04:56:35.987: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/services/e2e-proxy-test-service/proxy?method=DELETE
  Dec 22 04:56:35.992: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 22 04:56:35.992: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Dec 22 04:56:35.997: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 22 04:56:35.997: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/services/e2e-proxy-test-service/proxy?method=PATCH
  Dec 22 04:56:36.002: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 22 04:56:36.002: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/services/e2e-proxy-test-service/proxy?method=POST
  Dec 22 04:56:36.007: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 22 04:56:36.007: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/services/e2e-proxy-test-service/proxy?method=PUT
  Dec 22 04:56:36.012: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 22 04:56:36.012: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/pods/agnhost/proxy?method=GET
  Dec 22 04:56:36.014: INFO: http.Client request:GET StatusCode:301
  Dec 22 04:56:36.015: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/services/e2e-proxy-test-service/proxy?method=GET
  Dec 22 04:56:36.018: INFO: http.Client request:GET StatusCode:301
  Dec 22 04:56:36.019: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/pods/agnhost/proxy?method=HEAD
  Dec 22 04:56:36.022: INFO: http.Client request:HEAD StatusCode:301
  Dec 22 04:56:36.022: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3545/services/e2e-proxy-test-service/proxy?method=HEAD
  Dec 22 04:56:36.027: INFO: http.Client request:HEAD StatusCode:301
  Dec 22 04:56:36.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3545" for this suite. @ 12/22/23 04:56:36.032
• [2.154 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 12/22/23 04:56:36.04
  Dec 22 04:56:36.040: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 04:56:36.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:36.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:36.068
  STEP: creating service in namespace services-7005 @ 12/22/23 04:56:36.07
  STEP: creating service affinity-clusterip in namespace services-7005 @ 12/22/23 04:56:36.07
  STEP: creating replication controller affinity-clusterip in namespace services-7005 @ 12/22/23 04:56:36.082
  I1222 04:56:36.089820      20 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-7005, replica count: 3
  I1222 04:56:39.140326      20 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 04:56:39.148: INFO: Creating new exec pod
  Dec 22 04:56:42.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-7005 exec execpod-affinityzp2db -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Dec 22 04:56:42.357: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Dec 22 04:56:42.357: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:56:42.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-7005 exec execpod-affinityzp2db -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.110.47 80'
  Dec 22 04:56:42.536: INFO: stderr: "+ nc -v -t -w 2 10.43.110.47 80\n+ echo hostName\nConnection to 10.43.110.47 80 port [tcp/http] succeeded!\n"
  Dec 22 04:56:42.536: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:56:42.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-7005 exec execpod-affinityzp2db -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.110.47:80/ ; done'
  Dec 22 04:56:42.841: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.110.47:80/\n"
  Dec 22 04:56:42.841: INFO: stdout: "\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg\naffinity-clusterip-sz7jg"
  Dec 22 04:56:42.841: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.841: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.841: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.841: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.841: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.841: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.841: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.841: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.841: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.841: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.841: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.842: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.842: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.842: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.842: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.842: INFO: Received response from host: affinity-clusterip-sz7jg
  Dec 22 04:56:42.842: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7005, will wait for the garbage collector to delete the pods @ 12/22/23 04:56:42.855
  Dec 22 04:56:42.914: INFO: Deleting ReplicationController affinity-clusterip took: 6.107231ms
  Dec 22 04:56:43.015: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.925898ms
  Dec 22 04:56:46.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7005" for this suite. @ 12/22/23 04:56:46.344
• [10.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 12/22/23 04:56:46.358
  Dec 22 04:56:46.359: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename gc @ 12/22/23 04:56:46.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:46.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:46.389
  Dec 22 04:56:46.428: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"613143f5-e480-447b-bcc3-7ee4171d6f70", Controller:(*bool)(0xc002a32756), BlockOwnerDeletion:(*bool)(0xc002a32757)}}
  Dec 22 04:56:46.441: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"e5643378-e34a-49d3-b4f6-fb33904b15eb", Controller:(*bool)(0xc002a32956), BlockOwnerDeletion:(*bool)(0xc002a32957)}}
  Dec 22 04:56:46.449: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"7cdf012f-a056-4e78-b8f7-10571283721e", Controller:(*bool)(0xc0023a1ea6), BlockOwnerDeletion:(*bool)(0xc0023a1ea7)}}
  Dec 22 04:56:51.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5570" for this suite. @ 12/22/23 04:56:51.466
• [5.114 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/22/23 04:56:51.473
  Dec 22 04:56:51.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 04:56:51.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:51.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:51.496
  STEP: Creating secret with name secret-test-map-7af8d942-2b3e-4d23-8486-c4e2dfad2744 @ 12/22/23 04:56:51.499
  STEP: Creating a pod to test consume secrets @ 12/22/23 04:56:51.505
  STEP: Saw pod success @ 12/22/23 04:56:55.526
  Dec 22 04:56:55.529: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-secrets-d51f6e40-f625-4278-9c6c-1b9f5ac9fe31 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 04:56:55.536
  Dec 22 04:56:55.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3936" for this suite. @ 12/22/23 04:56:55.556
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 12/22/23 04:56:55.562
  Dec 22 04:56:55.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 04:56:55.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:55.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:55.585
  STEP: Setting up server cert @ 12/22/23 04:56:55.611
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 04:56:56.186
  STEP: Deploying the webhook pod @ 12/22/23 04:56:56.195
  STEP: Wait for the deployment to be ready @ 12/22/23 04:56:56.219
  Dec 22 04:56:56.231: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 04:56:58.242
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 04:56:58.253
  Dec 22 04:56:59.254: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/22/23 04:56:59.318
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/22/23 04:56:59.388
  STEP: Deleting the collection of validation webhooks @ 12/22/23 04:56:59.454
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/22/23 04:56:59.504
  Dec 22 04:56:59.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4317" for this suite. @ 12/22/23 04:56:59.583
  STEP: Destroying namespace "webhook-markers-6818" for this suite. @ 12/22/23 04:56:59.595
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 12/22/23 04:56:59.613
  Dec 22 04:56:59.613: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/22/23 04:56:59.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:59.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:59.644
  Dec 22 04:56:59.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 04:57:02.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7266" for this suite. @ 12/22/23 04:57:02.867
• [3.260 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 12/22/23 04:57:02.874
  Dec 22 04:57:02.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 04:57:02.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:57:02.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:57:02.9
  STEP: Creating namespace "e2e-ns-sn2dm" @ 12/22/23 04:57:02.903
  Dec 22 04:57:02.921: INFO: Namespace "e2e-ns-sn2dm-1941" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-sn2dm-1941" @ 12/22/23 04:57:02.921
  Dec 22 04:57:02.930: INFO: Namespace "e2e-ns-sn2dm-1941" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-sn2dm-1941" @ 12/22/23 04:57:02.931
  Dec 22 04:57:02.938: INFO: Namespace "e2e-ns-sn2dm-1941" has []v1.FinalizerName{"kubernetes"}
  Dec 22 04:57:02.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3134" for this suite. @ 12/22/23 04:57:02.945
  STEP: Destroying namespace "e2e-ns-sn2dm-1941" for this suite. @ 12/22/23 04:57:02.953
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/22/23 04:57:02.963
  Dec 22 04:57:02.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-watch @ 12/22/23 04:57:02.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:57:02.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:57:02.991
  Dec 22 04:57:02.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Creating first CR  @ 12/22/23 04:57:05.536
  Dec 22 04:57:05.542: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T04:57:05Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T04:57:05Z]] name:name1 resourceVersion:31207 uid:504f74f6-764a-4094-b35a-31131826875f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 12/22/23 04:57:15.543
  Dec 22 04:57:15.549: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T04:57:15Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T04:57:15Z]] name:name2 resourceVersion:31258 uid:2856ad8e-4ac3-41a2-a5f3-cb3b14fc6ef8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 12/22/23 04:57:25.55
  Dec 22 04:57:25.558: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T04:57:05Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T04:57:25Z]] name:name1 resourceVersion:31297 uid:504f74f6-764a-4094-b35a-31131826875f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 12/22/23 04:57:35.559
  Dec 22 04:57:35.565: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T04:57:15Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T04:57:35Z]] name:name2 resourceVersion:31337 uid:2856ad8e-4ac3-41a2-a5f3-cb3b14fc6ef8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 12/22/23 04:57:45.566
  Dec 22 04:57:45.572: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T04:57:05Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T04:57:25Z]] name:name1 resourceVersion:31375 uid:504f74f6-764a-4094-b35a-31131826875f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 12/22/23 04:57:55.572
  Dec 22 04:57:55.580: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T04:57:15Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T04:57:35Z]] name:name2 resourceVersion:31415 uid:2856ad8e-4ac3-41a2-a5f3-cb3b14fc6ef8] num:map[num1:9223372036854775807 num2:1000000]]}
  Dec 22 04:58:06.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-1798" for this suite. @ 12/22/23 04:58:06.106
• [63.150 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 12/22/23 04:58:06.113
  Dec 22 04:58:06.113: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 04:58:06.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:58:06.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:58:06.136
  STEP: Creating pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513 @ 12/22/23 04:58:06.139
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 04:58:08.156
  Dec 22 04:58:08.159: INFO: Initial restart count of pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 is 0
  Dec 22 04:58:08.162: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:10.167: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:12.171: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:14.179: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:16.184: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:18.187: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:20.192: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:22.195: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:24.202: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:26.207: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:28.212: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:30.216: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:32.220: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:34.230: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:36.235: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:38.240: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:40.244: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:42.249: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:44.253: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:46.257: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:48.262: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:50.266: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:52.271: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:54.274: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:56.279: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:58:58.283: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:00.288: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:02.293: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:04.299: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:06.304: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:08.307: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:10.311: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:12.321: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:14.326: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:16.330: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:18.334: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:20.338: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:22.343: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:24.347: INFO: Get pod test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 in namespace container-probe-513
  Dec 22 04:59:24.347: INFO: Restart count of pod container-probe-513/test-grpc-b1b0b2a3-d1a4-4bf7-a348-1fff9f5f80d4 is now 1 (1m16.18824716s elapsed)
  STEP: deleting the pod @ 12/22/23 04:59:24.347
  Dec 22 04:59:24.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-513" for this suite. @ 12/22/23 04:59:24.389
• [78.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 12/22/23 04:59:24.41
  Dec 22 04:59:24.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 04:59:24.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:59:24.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:59:24.481
  STEP: set up a multi version CRD @ 12/22/23 04:59:24.488
  Dec 22 04:59:24.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: mark a version not serverd @ 12/22/23 04:59:28.945
  STEP: check the unserved version gets removed @ 12/22/23 04:59:28.97
  STEP: check the other version is not changed @ 12/22/23 04:59:30.466
  Dec 22 04:59:33.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-696" for this suite. @ 12/22/23 04:59:33.801
• [9.395 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 12/22/23 04:59:33.806
  Dec 22 04:59:33.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubelet-test @ 12/22/23 04:59:33.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:59:33.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:59:33.836
  Dec 22 04:59:35.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7155" for this suite. @ 12/22/23 04:59:35.895
• [2.096 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 12/22/23 04:59:35.904
  Dec 22 04:59:35.904: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:59:35.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:59:35.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:59:35.925
  STEP: Creating configMap with name configmap-test-upd-69f275fe-abd9-4ebd-ab4c-686fbacc59f6 @ 12/22/23 04:59:35.933
  STEP: Creating the pod @ 12/22/23 04:59:35.938
  STEP: Updating configmap configmap-test-upd-69f275fe-abd9-4ebd-ab4c-686fbacc59f6 @ 12/22/23 04:59:37.964
  STEP: waiting to observe update in volume @ 12/22/23 04:59:37.97
  Dec 22 04:59:39.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-68" for this suite. @ 12/22/23 04:59:39.987
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 12/22/23 04:59:39.993
  Dec 22 04:59:39.993: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:59:39.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:59:40.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:59:40.014
  STEP: Creating configMap with name configmap-test-volume-6e039cbc-ef3c-4cde-a865-745337028450 @ 12/22/23 04:59:40.017
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:59:40.036
  STEP: Saw pod success @ 12/22/23 04:59:44.059
  Dec 22 04:59:44.062: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-configmaps-563719d7-0ca1-4654-b94e-0513a291d243 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:59:44.068
  Dec 22 04:59:44.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8639" for this suite. @ 12/22/23 04:59:44.098
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 12/22/23 04:59:44.112
  Dec 22 04:59:44.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 04:59:44.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:59:44.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:59:44.147
  STEP: Setting up server cert @ 12/22/23 04:59:44.177
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 04:59:44.79
  STEP: Deploying the webhook pod @ 12/22/23 04:59:44.798
  STEP: Wait for the deployment to be ready @ 12/22/23 04:59:44.81
  Dec 22 04:59:44.821: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 04:59:46.831
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 04:59:46.843
  Dec 22 04:59:47.844: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/22/23 04:59:47.849
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/22/23 04:59:47.85
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/22/23 04:59:47.85
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/22/23 04:59:47.85
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/22/23 04:59:47.851
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/22/23 04:59:47.851
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/22/23 04:59:47.852
  Dec 22 04:59:47.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9770" for this suite. @ 12/22/23 04:59:47.917
  STEP: Destroying namespace "webhook-markers-1912" for this suite. @ 12/22/23 04:59:47.927
• [3.825 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 12/22/23 04:59:47.944
  Dec 22 04:59:47.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename endpointslice @ 12/22/23 04:59:47.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:59:47.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:59:47.977
  Dec 22 04:59:50.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4883" for this suite. @ 12/22/23 04:59:50.046
• [2.114 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/22/23 04:59:50.071
  Dec 22 04:59:50.071: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename watch @ 12/22/23 04:59:50.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:59:50.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:59:50.094
  STEP: creating a watch on configmaps with label A @ 12/22/23 04:59:50.097
  STEP: creating a watch on configmaps with label B @ 12/22/23 04:59:50.099
  STEP: creating a watch on configmaps with label A or B @ 12/22/23 04:59:50.1
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/22/23 04:59:50.101
  Dec 22 04:59:50.106: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6094  3904fe60-5928-4cc5-86b3-ae3c103482a7 32048 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:59:50.106: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6094  3904fe60-5928-4cc5-86b3-ae3c103482a7 32048 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/22/23 04:59:50.106
  Dec 22 04:59:50.114: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6094  3904fe60-5928-4cc5-86b3-ae3c103482a7 32049 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:59:50.115: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6094  3904fe60-5928-4cc5-86b3-ae3c103482a7 32049 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/22/23 04:59:50.115
  Dec 22 04:59:50.123: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6094  3904fe60-5928-4cc5-86b3-ae3c103482a7 32050 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:59:50.124: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6094  3904fe60-5928-4cc5-86b3-ae3c103482a7 32050 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/22/23 04:59:50.124
  Dec 22 04:59:50.129: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6094  3904fe60-5928-4cc5-86b3-ae3c103482a7 32051 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:59:50.129: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6094  3904fe60-5928-4cc5-86b3-ae3c103482a7 32051 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/22/23 04:59:50.13
  Dec 22 04:59:50.134: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6094  71d4ee7a-fb09-4259-8ea8-292f75826310 32052 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:59:50.135: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6094  71d4ee7a-fb09-4259-8ea8-292f75826310 32052 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/22/23 05:00:00.136
  Dec 22 05:00:00.142: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6094  71d4ee7a-fb09-4259-8ea8-292f75826310 32110 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:00:00.142: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6094  71d4ee7a-fb09-4259-8ea8-292f75826310 32110 0 2023-12-22 04:59:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-22 04:59:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:00:10.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6094" for this suite. @ 12/22/23 05:00:10.148
• [20.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 12/22/23 05:00:10.156
  Dec 22 05:00:10.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 05:00:10.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:00:10.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:00:10.177
  STEP: Creating service test in namespace statefulset-3687 @ 12/22/23 05:00:10.179
  Dec 22 05:00:10.208: INFO: Found 0 stateful pods, waiting for 1
  Dec 22 05:00:20.199: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/22/23 05:00:20.205
  W1222 05:00:20.215232      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Dec 22 05:00:20.225: INFO: Found 1 stateful pods, waiting for 2
  Dec 22 05:00:30.224: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 05:00:30.224: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/22/23 05:00:30.23
  STEP: Delete all of the StatefulSets @ 12/22/23 05:00:30.233
  STEP: Verify that StatefulSets have been deleted @ 12/22/23 05:00:30.239
  Dec 22 05:00:30.244: INFO: Deleting all statefulset in ns statefulset-3687
  Dec 22 05:00:30.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3687" for this suite. @ 12/22/23 05:00:30.285
• [20.144 seconds]
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 12/22/23 05:00:30.301
  Dec 22 05:00:30.310: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:00:30.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:00:30.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:00:30.384
  STEP: Creating the pod @ 12/22/23 05:00:30.387
  Dec 22 05:00:32.925: INFO: Successfully updated pod "labelsupdatea5351859-e0e7-4893-b178-20a7a61fa74a"
  Dec 22 05:00:36.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2781" for this suite. @ 12/22/23 05:00:36.951
• [6.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 12/22/23 05:00:36.96
  Dec 22 05:00:36.960: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 05:00:36.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:00:36.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:00:36.988
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/22/23 05:00:36.992
  Dec 22 05:00:37.000: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 22 05:00:42.009: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 05:00:42.009
  STEP: getting scale subresource @ 12/22/23 05:00:42.009
  STEP: updating a scale subresource @ 12/22/23 05:00:42.019
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/22/23 05:00:42.028
  STEP: Patch a scale subresource @ 12/22/23 05:00:42.035
  Dec 22 05:00:42.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5790" for this suite. @ 12/22/23 05:00:42.074
• [5.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 12/22/23 05:00:42.096
  Dec 22 05:00:42.096: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:00:42.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:00:42.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:00:42.139
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/22/23 05:00:42.143
  Dec 22 05:00:42.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6288 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Dec 22 05:00:42.296: INFO: stderr: ""
  Dec 22 05:00:42.296: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/22/23 05:00:42.296
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/22/23 05:00:47.351
  Dec 22 05:00:47.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6288 get pod e2e-test-httpd-pod -o json'
  Dec 22 05:00:47.622: INFO: stderr: ""
  Dec 22 05:00:47.622: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"2430a72f541815b7cf944de581052500209b6a94a8f0f910ee87b6a3792b04b4\",\n            \"cni.projectcalico.org/podIP\": \"10.42.3.183/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.3.183/32\"\n        },\n        \"creationTimestamp\": \"2023-12-22T05:00:42Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6288\",\n        \"resourceVersion\": \"32493\",\n        \"uid\": \"6281f281-66ac-485c-8a08-6b26d0939e5c\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-2czqj\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-7-66.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-2czqj\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-22T05:00:43Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-22T05:00:42Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-22T05:00:43Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-22T05:00:43Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-22T05:00:42Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://35db2915c35692e99731f0d2e2f137108b2ce7c8e30be905eca89ae5b736320f\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-12-22T05:00:43Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.7.66\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.7.66\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.3.183\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.3.183\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-12-22T05:00:42Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/22/23 05:00:47.622
  Dec 22 05:00:47.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6288 replace -f -'
  Dec 22 05:00:47.903: INFO: stderr: ""
  Dec 22 05:00:47.903: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 12/22/23 05:00:47.903
  Dec 22 05:00:47.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6288 delete pods e2e-test-httpd-pod'
  Dec 22 05:00:49.744: INFO: stderr: ""
  Dec 22 05:00:49.744: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 22 05:00:49.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6288" for this suite. @ 12/22/23 05:00:49.753
• [7.663 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 12/22/23 05:00:49.76
  Dec 22 05:00:49.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:00:49.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:00:49.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:00:49.781
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/22/23 05:00:49.784
  STEP: Saw pod success @ 12/22/23 05:00:53.809
  Dec 22 05:00:53.812: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-08cbcaa5-e35c-4389-b1af-04ea04c29adf container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:00:53.818
  Dec 22 05:00:53.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6942" for this suite. @ 12/22/23 05:00:53.842
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 12/22/23 05:00:53.855
  Dec 22 05:00:53.855: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename dns @ 12/22/23 05:00:53.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:00:53.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:00:53.891
  STEP: Creating a test headless service @ 12/22/23 05:00:53.934
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8721 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8721;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8721 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8721;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8721.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8721.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8721.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8721.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8721.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8721.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8721.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8721.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8721.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8721.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8721.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8721.svc;check="$$(dig +notcp +noall +answer +search 210.68.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.68.210_udp@PTR;check="$$(dig +tcp +noall +answer +search 210.68.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.68.210_tcp@PTR;sleep 1; done
   @ 12/22/23 05:00:53.957
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8721 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8721;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8721 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8721;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8721.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8721.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8721.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8721.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8721.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8721.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8721.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8721.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8721.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8721.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8721.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8721.svc;check="$$(dig +notcp +noall +answer +search 210.68.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.68.210_udp@PTR;check="$$(dig +tcp +noall +answer +search 210.68.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.68.210_tcp@PTR;sleep 1; done
   @ 12/22/23 05:00:53.958
  STEP: creating a pod to probe DNS @ 12/22/23 05:00:53.958
  STEP: submitting the pod to kubernetes @ 12/22/23 05:00:53.958
  STEP: retrieving the pod @ 12/22/23 05:00:55.989
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:00:55.992
  Dec 22 05:00:55.999: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.003: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.006: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.010: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.014: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.018: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.040: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.044: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.048: INFO: Unable to read jessie_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.051: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.054: INFO: Unable to read jessie_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.058: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:00:56.076: INFO: Lookups using dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8721 wheezy_tcp@dns-test-service.dns-8721 wheezy_udp@dns-test-service.dns-8721.svc wheezy_tcp@dns-test-service.dns-8721.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8721 jessie_tcp@dns-test-service.dns-8721 jessie_udp@dns-test-service.dns-8721.svc jessie_tcp@dns-test-service.dns-8721.svc]

  Dec 22 05:00:56.081: INFO: Pod client logs for webserver: 
  Dec 22 05:00:56.086: INFO: Pod client logs for querier: 
  Dec 22 05:00:56.092: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:01:00.997: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.000: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.005: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.009: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.013: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.016: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.037: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.040: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.044: INFO: Unable to read jessie_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.048: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.053: INFO: Unable to read jessie_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.057: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:01.079: INFO: Lookups using dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8721 wheezy_tcp@dns-test-service.dns-8721 wheezy_udp@dns-test-service.dns-8721.svc wheezy_tcp@dns-test-service.dns-8721.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8721 jessie_tcp@dns-test-service.dns-8721 jessie_udp@dns-test-service.dns-8721.svc jessie_tcp@dns-test-service.dns-8721.svc]

  Dec 22 05:01:01.086: INFO: Pod client logs for webserver: 
  Dec 22 05:01:01.094: INFO: Pod client logs for querier: 
  Dec 22 05:01:01.101: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:01:05.997: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.007: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.016: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.021: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.026: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.031: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.088: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.099: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.113: INFO: Unable to read jessie_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.118: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.123: INFO: Unable to read jessie_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.128: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:06.179: INFO: Lookups using dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8721 wheezy_tcp@dns-test-service.dns-8721 wheezy_udp@dns-test-service.dns-8721.svc wheezy_tcp@dns-test-service.dns-8721.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8721 jessie_tcp@dns-test-service.dns-8721 jessie_udp@dns-test-service.dns-8721.svc jessie_tcp@dns-test-service.dns-8721.svc]

  Dec 22 05:01:06.191: INFO: Pod client logs for webserver: 
  Dec 22 05:01:06.203: INFO: Pod client logs for querier: 
  Dec 22 05:01:06.213: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:01:10.997: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.000: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.005: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.010: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.015: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.020: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.045: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.048: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.051: INFO: Unable to read jessie_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.055: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.058: INFO: Unable to read jessie_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.062: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:11.084: INFO: Lookups using dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8721 wheezy_tcp@dns-test-service.dns-8721 wheezy_udp@dns-test-service.dns-8721.svc wheezy_tcp@dns-test-service.dns-8721.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8721 jessie_tcp@dns-test-service.dns-8721 jessie_udp@dns-test-service.dns-8721.svc jessie_tcp@dns-test-service.dns-8721.svc]

  Dec 22 05:01:11.091: INFO: Pod client logs for webserver: 
  Dec 22 05:01:11.097: INFO: Pod client logs for querier: 
  Dec 22 05:01:11.104: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:01:15.997: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.003: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.013: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.023: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.027: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.030: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.056: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.060: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.064: INFO: Unable to read jessie_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.068: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.073: INFO: Unable to read jessie_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.077: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:16.100: INFO: Lookups using dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8721 wheezy_tcp@dns-test-service.dns-8721 wheezy_udp@dns-test-service.dns-8721.svc wheezy_tcp@dns-test-service.dns-8721.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8721 jessie_tcp@dns-test-service.dns-8721 jessie_udp@dns-test-service.dns-8721.svc jessie_tcp@dns-test-service.dns-8721.svc]

  Dec 22 05:01:16.109: INFO: Pod client logs for webserver: 
  Dec 22 05:01:16.116: INFO: Pod client logs for querier: 
  Dec 22 05:01:16.127: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:01:20.996: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:20.999: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:21.008: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:21.013: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:21.022: INFO: Unable to read wheezy_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:21.028: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:21.053: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:21.056: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:21.061: INFO: Unable to read jessie_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:21.065: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:21.071: INFO: Unable to read jessie_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:21.076: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:21.097: INFO: Lookups using dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8721 wheezy_tcp@dns-test-service.dns-8721 wheezy_udp@dns-test-service.dns-8721.svc wheezy_tcp@dns-test-service.dns-8721.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8721 jessie_tcp@dns-test-service.dns-8721 jessie_udp@dns-test-service.dns-8721.svc jessie_tcp@dns-test-service.dns-8721.svc]

  Dec 22 05:01:21.107: INFO: Pod client logs for webserver: 
  Dec 22 05:01:21.113: INFO: Pod client logs for querier: 
  Dec 22 05:01:21.120: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:01:26.053: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:26.057: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:26.060: INFO: Unable to read jessie_udp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:26.063: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721 from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:26.067: INFO: Unable to read jessie_udp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:26.070: INFO: Unable to read jessie_tcp@dns-test-service.dns-8721.svc from pod dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4: the server could not find the requested resource (get pods dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4)
  Dec 22 05:01:26.090: INFO: Lookups using dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4 failed for: [jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8721 jessie_tcp@dns-test-service.dns-8721 jessie_udp@dns-test-service.dns-8721.svc jessie_tcp@dns-test-service.dns-8721.svc]

  Dec 22 05:01:26.096: INFO: Pod client logs for webserver: 
  Dec 22 05:01:26.103: INFO: Pod client logs for querier: 
  Dec 22 05:01:26.109: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:01:31.102: INFO: DNS probes using dns-8721/dns-test-a1fe6599-0b46-4b5e-9c57-7c0ef60583d4 succeeded

  STEP: deleting the pod @ 12/22/23 05:01:31.103
  STEP: deleting the test service @ 12/22/23 05:01:31.123
  STEP: deleting the test headless service @ 12/22/23 05:01:31.191
  Dec 22 05:01:31.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8721" for this suite. @ 12/22/23 05:01:31.224
• [37.377 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/22/23 05:01:31.235
  Dec 22 05:01:31.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename proxy @ 12/22/23 05:01:31.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:31.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:31.269
  STEP: starting an echo server on multiple ports @ 12/22/23 05:01:31.295
  STEP: creating replication controller proxy-service-bkjtr in namespace proxy-6952 @ 12/22/23 05:01:31.295
  I1222 05:01:31.306311      20 runners.go:197] Created replication controller with name: proxy-service-bkjtr, namespace: proxy-6952, replica count: 1
  I1222 05:01:32.357747      20 runners.go:197] proxy-service-bkjtr Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1222 05:01:33.359405      20 runners.go:197] proxy-service-bkjtr Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1222 05:01:34.360396      20 runners.go:197] proxy-service-bkjtr Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 05:01:34.363: INFO: setup took 3.089590302s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/22/23 05:01:34.363
  Dec 22 05:01:34.533: INFO: (0) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 168.608745ms)
  Dec 22 05:01:34.533: INFO: (0) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 169.621946ms)
  Dec 22 05:01:34.558: INFO: (0) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 194.242717ms)
  Dec 22 05:01:34.559: INFO: (0) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 194.690908ms)
  Dec 22 05:01:34.559: INFO: (0) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 195.933064ms)
  Dec 22 05:01:34.563: INFO: (0) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 199.087662ms)
  Dec 22 05:01:34.563: INFO: (0) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 199.039761ms)
  Dec 22 05:01:34.572: INFO: (0) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 208.178679ms)
  Dec 22 05:01:34.572: INFO: (0) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 208.495615ms)
  Dec 22 05:01:34.573: INFO: (0) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 209.317803ms)
  Dec 22 05:01:34.573: INFO: (0) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 209.475296ms)
  Dec 22 05:01:34.574: INFO: (0) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 209.385354ms)
  Dec 22 05:01:34.574: INFO: (0) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 210.027928ms)
  Dec 22 05:01:34.575: INFO: (0) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 210.256013ms)
  Dec 22 05:01:34.580: INFO: (0) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 216.094779ms)
  Dec 22 05:01:34.583: INFO: (0) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 219.268707ms)
  Dec 22 05:01:34.605: INFO: (1) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 21.380751ms)
  Dec 22 05:01:34.605: INFO: (1) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 21.34417ms)
  Dec 22 05:01:34.606: INFO: (1) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 21.693198ms)
  Dec 22 05:01:34.606: INFO: (1) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 21.987074ms)
  Dec 22 05:01:34.606: INFO: (1) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 22.201988ms)
  Dec 22 05:01:34.606: INFO: (1) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 22.347372ms)
  Dec 22 05:01:34.606: INFO: (1) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 22.758381ms)
  Dec 22 05:01:34.612: INFO: (1) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 28.445704ms)
  Dec 22 05:01:34.613: INFO: (1) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 29.111208ms)
  Dec 22 05:01:34.612: INFO: (1) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 29.454176ms)
  Dec 22 05:01:34.615: INFO: (1) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 30.890546ms)
  Dec 22 05:01:34.616: INFO: (1) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 32.776887ms)
  Dec 22 05:01:34.616: INFO: (1) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 33.355639ms)
  Dec 22 05:01:34.617: INFO: (1) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 33.607625ms)
  Dec 22 05:01:34.617: INFO: (1) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 33.607724ms)
  Dec 22 05:01:34.617: INFO: (1) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 33.631246ms)
  Dec 22 05:01:34.630: INFO: (2) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 11.992658ms)
  Dec 22 05:01:34.632: INFO: (2) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 14.441741ms)
  Dec 22 05:01:34.632: INFO: (2) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 14.529923ms)
  Dec 22 05:01:34.638: INFO: (2) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 19.811937ms)
  Dec 22 05:01:34.640: INFO: (2) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 22.666749ms)
  Dec 22 05:01:34.641: INFO: (2) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 22.634928ms)
  Dec 22 05:01:34.643: INFO: (2) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 24.207811ms)
  Dec 22 05:01:34.646: INFO: (2) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 28.806081ms)
  Dec 22 05:01:34.646: INFO: (2) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 28.927064ms)
  Dec 22 05:01:34.647: INFO: (2) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 28.924824ms)
  Dec 22 05:01:34.646: INFO: (2) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 28.354131ms)
  Dec 22 05:01:34.647: INFO: (2) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 28.764501ms)
  Dec 22 05:01:34.647: INFO: (2) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 29.521597ms)
  Dec 22 05:01:34.649: INFO: (2) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 31.484148ms)
  Dec 22 05:01:34.649: INFO: (2) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 30.598809ms)
  Dec 22 05:01:34.654: INFO: (2) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 35.057446ms)
  Dec 22 05:01:34.679: INFO: (3) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 24.543549ms)
  Dec 22 05:01:34.683: INFO: (3) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 28.27972ms)
  Dec 22 05:01:34.683: INFO: (3) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 27.975983ms)
  Dec 22 05:01:34.683: INFO: (3) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 28.844782ms)
  Dec 22 05:01:34.683: INFO: (3) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 28.355051ms)
  Dec 22 05:01:34.683: INFO: (3) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 28.228888ms)
  Dec 22 05:01:34.683: INFO: (3) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 28.157197ms)
  Dec 22 05:01:34.683: INFO: (3) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 28.476034ms)
  Dec 22 05:01:34.683: INFO: (3) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 29.333862ms)
  Dec 22 05:01:34.686: INFO: (3) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 30.853535ms)
  Dec 22 05:01:34.688: INFO: (3) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 33.988512ms)
  Dec 22 05:01:34.689: INFO: (3) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 34.774229ms)
  Dec 22 05:01:34.689: INFO: (3) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 34.7878ms)
  Dec 22 05:01:34.689: INFO: (3) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 35.343442ms)
  Dec 22 05:01:34.689: INFO: (3) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 34.613846ms)
  Dec 22 05:01:34.690: INFO: (3) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 35.508006ms)
  Dec 22 05:01:34.702: INFO: (4) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 11.661391ms)
  Dec 22 05:01:34.706: INFO: (4) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 16.258391ms)
  Dec 22 05:01:34.709: INFO: (4) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 18.798105ms)
  Dec 22 05:01:34.710: INFO: (4) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 18.647342ms)
  Dec 22 05:01:34.712: INFO: (4) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 21.116765ms)
  Dec 22 05:01:34.712: INFO: (4) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 21.610186ms)
  Dec 22 05:01:34.716: INFO: (4) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 25.912588ms)
  Dec 22 05:01:34.717: INFO: (4) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 26.45783ms)
  Dec 22 05:01:34.717: INFO: (4) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 26.580802ms)
  Dec 22 05:01:34.718: INFO: (4) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 27.638865ms)
  Dec 22 05:01:34.719: INFO: (4) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 27.734248ms)
  Dec 22 05:01:34.719: INFO: (4) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 28.071975ms)
  Dec 22 05:01:34.720: INFO: (4) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 28.664328ms)
  Dec 22 05:01:34.720: INFO: (4) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 29.289391ms)
  Dec 22 05:01:34.721: INFO: (4) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 29.778762ms)
  Dec 22 05:01:34.730: INFO: (4) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 39.207385ms)
  Dec 22 05:01:34.766: INFO: (5) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 35.855483ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 35.986316ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 36.507177ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 36.525978ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 36.534447ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 36.566728ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 36.506317ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 36.544567ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 36.552407ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 36.619599ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 36.587118ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 37.038348ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 36.947187ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 36.980187ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 37.356496ms)
  Dec 22 05:01:34.767: INFO: (5) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 37.347925ms)
  Dec 22 05:01:34.782: INFO: (6) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 13.288797ms)
  Dec 22 05:01:34.787: INFO: (6) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 19.101222ms)
  Dec 22 05:01:34.787: INFO: (6) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 19.811187ms)
  Dec 22 05:01:34.788: INFO: (6) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 19.306196ms)
  Dec 22 05:01:34.788: INFO: (6) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 19.631444ms)
  Dec 22 05:01:34.788: INFO: (6) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 19.895409ms)
  Dec 22 05:01:34.788: INFO: (6) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 20.073523ms)
  Dec 22 05:01:34.788: INFO: (6) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 19.900379ms)
  Dec 22 05:01:34.789: INFO: (6) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 21.3271ms)
  Dec 22 05:01:34.791: INFO: (6) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 22.761181ms)
  Dec 22 05:01:34.791: INFO: (6) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 22.960655ms)
  Dec 22 05:01:34.793: INFO: (6) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 24.782484ms)
  Dec 22 05:01:34.798: INFO: (6) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 30.58795ms)
  Dec 22 05:01:34.799: INFO: (6) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 31.325285ms)
  Dec 22 05:01:34.799: INFO: (6) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 31.111061ms)
  Dec 22 05:01:34.799: INFO: (6) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 30.937007ms)
  Dec 22 05:01:34.809: INFO: (7) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 9.458383ms)
  Dec 22 05:01:34.810: INFO: (7) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 7.464052ms)
  Dec 22 05:01:34.810: INFO: (7) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 10.738522ms)
  Dec 22 05:01:34.813: INFO: (7) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 9.642978ms)
  Dec 22 05:01:34.815: INFO: (7) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 15.555975ms)
  Dec 22 05:01:34.815: INFO: (7) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 12.50707ms)
  Dec 22 05:01:34.815: INFO: (7) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 16.233539ms)
  Dec 22 05:01:34.816: INFO: (7) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 12.411987ms)
  Dec 22 05:01:34.816: INFO: (7) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 16.297691ms)
  Dec 22 05:01:34.816: INFO: (7) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 16.493216ms)
  Dec 22 05:01:34.817: INFO: (7) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 17.240682ms)
  Dec 22 05:01:34.826: INFO: (7) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 23.358814ms)
  Dec 22 05:01:34.827: INFO: (7) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 27.286708ms)
  Dec 22 05:01:34.827: INFO: (7) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 23.975717ms)
  Dec 22 05:01:34.828: INFO: (7) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 25.251434ms)
  Dec 22 05:01:34.828: INFO: (7) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 25.110331ms)
  Dec 22 05:01:34.839: INFO: (8) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 10.18703ms)
  Dec 22 05:01:34.844: INFO: (8) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 15.111956ms)
  Dec 22 05:01:34.845: INFO: (8) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 15.140606ms)
  Dec 22 05:01:34.846: INFO: (8) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 16.645469ms)
  Dec 22 05:01:34.846: INFO: (8) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 17.246471ms)
  Dec 22 05:01:34.847: INFO: (8) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 17.472947ms)
  Dec 22 05:01:34.848: INFO: (8) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 17.802663ms)
  Dec 22 05:01:34.848: INFO: (8) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 18.647582ms)
  Dec 22 05:01:34.849: INFO: (8) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 19.00005ms)
  Dec 22 05:01:34.850: INFO: (8) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 20.529442ms)
  Dec 22 05:01:34.851: INFO: (8) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 21.265199ms)
  Dec 22 05:01:34.851: INFO: (8) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 21.742158ms)
  Dec 22 05:01:34.851: INFO: (8) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 22.079966ms)
  Dec 22 05:01:34.851: INFO: (8) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 21.897762ms)
  Dec 22 05:01:34.851: INFO: (8) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 21.492053ms)
  Dec 22 05:01:34.851: INFO: (8) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 22.565267ms)
  Dec 22 05:01:34.866: INFO: (9) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 12.352406ms)
  Dec 22 05:01:34.874: INFO: (9) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 20.526352ms)
  Dec 22 05:01:34.874: INFO: (9) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 20.612234ms)
  Dec 22 05:01:34.874: INFO: (9) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 20.502321ms)
  Dec 22 05:01:34.874: INFO: (9) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 20.479871ms)
  Dec 22 05:01:34.874: INFO: (9) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 20.396359ms)
  Dec 22 05:01:34.874: INFO: (9) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 20.374779ms)
  Dec 22 05:01:34.874: INFO: (9) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 20.249366ms)
  Dec 22 05:01:34.875: INFO: (9) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 21.78884ms)
  Dec 22 05:01:34.875: INFO: (9) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 21.611986ms)
  Dec 22 05:01:34.873: INFO: (9) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 19.758806ms)
  Dec 22 05:01:34.877: INFO: (9) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 23.426615ms)
  Dec 22 05:01:34.879: INFO: (9) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 25.925869ms)
  Dec 22 05:01:34.879: INFO: (9) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 25.418488ms)
  Dec 22 05:01:34.879: INFO: (9) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 26.384749ms)
  Dec 22 05:01:34.880: INFO: (9) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 26.085202ms)
  Dec 22 05:01:34.889: INFO: (10) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 9.103806ms)
  Dec 22 05:01:34.889: INFO: (10) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 8.895272ms)
  Dec 22 05:01:34.889: INFO: (10) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 8.568094ms)
  Dec 22 05:01:34.890: INFO: (10) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 9.080026ms)
  Dec 22 05:01:34.891: INFO: (10) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 10.480436ms)
  Dec 22 05:01:34.892: INFO: (10) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 11.403436ms)
  Dec 22 05:01:34.892: INFO: (10) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 11.13122ms)
  Dec 22 05:01:34.894: INFO: (10) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 13.083792ms)
  Dec 22 05:01:34.894: INFO: (10) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 13.420989ms)
  Dec 22 05:01:34.894: INFO: (10) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 13.041191ms)
  Dec 22 05:01:34.894: INFO: (10) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 13.551482ms)
  Dec 22 05:01:34.894: INFO: (10) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 13.757076ms)
  Dec 22 05:01:34.895: INFO: (10) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 14.248377ms)
  Dec 22 05:01:34.896: INFO: (10) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 15.085875ms)
  Dec 22 05:01:34.896: INFO: (10) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 15.437443ms)
  Dec 22 05:01:34.896: INFO: (10) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 15.019403ms)
  Dec 22 05:01:34.906: INFO: (11) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 9.639727ms)
  Dec 22 05:01:34.907: INFO: (11) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 10.462776ms)
  Dec 22 05:01:34.908: INFO: (11) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 11.139891ms)
  Dec 22 05:01:34.908: INFO: (11) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 10.929165ms)
  Dec 22 05:01:34.908: INFO: (11) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 11.868516ms)
  Dec 22 05:01:34.909: INFO: (11) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 12.09225ms)
  Dec 22 05:01:34.909: INFO: (11) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 12.199313ms)
  Dec 22 05:01:34.910: INFO: (11) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 12.904798ms)
  Dec 22 05:01:34.910: INFO: (11) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 12.864597ms)
  Dec 22 05:01:34.910: INFO: (11) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 13.391149ms)
  Dec 22 05:01:34.910: INFO: (11) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 12.931298ms)
  Dec 22 05:01:34.911: INFO: (11) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 13.670595ms)
  Dec 22 05:01:34.912: INFO: (11) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 15.704019ms)
  Dec 22 05:01:34.912: INFO: (11) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 15.431063ms)
  Dec 22 05:01:34.913: INFO: (11) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 15.861322ms)
  Dec 22 05:01:34.913: INFO: (11) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 16.500555ms)
  Dec 22 05:01:34.920: INFO: (12) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 7.192925ms)
  Dec 22 05:01:34.926: INFO: (12) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 12.767495ms)
  Dec 22 05:01:34.927: INFO: (12) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 12.97443ms)
  Dec 22 05:01:34.927: INFO: (12) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 14.085133ms)
  Dec 22 05:01:34.927: INFO: (12) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 13.409678ms)
  Dec 22 05:01:34.927: INFO: (12) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 13.278265ms)
  Dec 22 05:01:34.927: INFO: (12) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 13.756316ms)
  Dec 22 05:01:34.928: INFO: (12) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 14.315399ms)
  Dec 22 05:01:34.929: INFO: (12) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 15.098725ms)
  Dec 22 05:01:34.929: INFO: (12) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 15.342461ms)
  Dec 22 05:01:34.930: INFO: (12) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 16.976606ms)
  Dec 22 05:01:34.931: INFO: (12) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 16.754471ms)
  Dec 22 05:01:34.931: INFO: (12) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 17.913896ms)
  Dec 22 05:01:34.932: INFO: (12) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 18.421896ms)
  Dec 22 05:01:34.932: INFO: (12) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 18.926878ms)
  Dec 22 05:01:34.932: INFO: (12) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 19.04907ms)
  Dec 22 05:01:34.939: INFO: (13) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 6.473569ms)
  Dec 22 05:01:34.940: INFO: (13) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 5.735694ms)
  Dec 22 05:01:34.940: INFO: (13) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 7.563223ms)
  Dec 22 05:01:34.941: INFO: (13) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 8.086554ms)
  Dec 22 05:01:34.942: INFO: (13) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 8.547874ms)
  Dec 22 05:01:34.942: INFO: (13) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 9.429783ms)
  Dec 22 05:01:34.942: INFO: (13) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 8.571315ms)
  Dec 22 05:01:34.946: INFO: (13) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 12.880028ms)
  Dec 22 05:01:34.946: INFO: (13) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 13.196295ms)
  Dec 22 05:01:34.946: INFO: (13) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 12.733204ms)
  Dec 22 05:01:34.946: INFO: (13) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 12.645692ms)
  Dec 22 05:01:34.946: INFO: (13) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 12.51716ms)
  Dec 22 05:01:34.946: INFO: (13) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 13.388499ms)
  Dec 22 05:01:34.947: INFO: (13) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 13.148554ms)
  Dec 22 05:01:34.947: INFO: (13) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 13.335938ms)
  Dec 22 05:01:34.947: INFO: (13) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 13.739836ms)
  Dec 22 05:01:34.955: INFO: (14) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 7.115763ms)
  Dec 22 05:01:34.955: INFO: (14) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 7.263506ms)
  Dec 22 05:01:34.956: INFO: (14) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 9.120606ms)
  Dec 22 05:01:34.961: INFO: (14) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 12.538001ms)
  Dec 22 05:01:34.961: INFO: (14) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 13.791917ms)
  Dec 22 05:01:34.961: INFO: (14) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 13.127493ms)
  Dec 22 05:01:34.962: INFO: (14) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 13.597043ms)
  Dec 22 05:01:34.962: INFO: (14) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 13.856038ms)
  Dec 22 05:01:34.962: INFO: (14) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 14.037873ms)
  Dec 22 05:01:34.962: INFO: (14) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 14.621535ms)
  Dec 22 05:01:34.963: INFO: (14) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 15.77369ms)
  Dec 22 05:01:34.963: INFO: (14) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 15.090855ms)
  Dec 22 05:01:34.964: INFO: (14) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 16.101517ms)
  Dec 22 05:01:34.964: INFO: (14) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 16.21539ms)
  Dec 22 05:01:34.965: INFO: (14) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 16.318071ms)
  Dec 22 05:01:34.965: INFO: (14) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 16.592458ms)
  Dec 22 05:01:34.972: INFO: (15) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 6.352987ms)
  Dec 22 05:01:34.976: INFO: (15) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 9.620497ms)
  Dec 22 05:01:34.977: INFO: (15) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 10.237871ms)
  Dec 22 05:01:34.977: INFO: (15) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 11.467297ms)
  Dec 22 05:01:34.977: INFO: (15) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 11.763034ms)
  Dec 22 05:01:34.978: INFO: (15) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 11.15135ms)
  Dec 22 05:01:34.978: INFO: (15) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 12.07285ms)
  Dec 22 05:01:34.979: INFO: (15) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 13.186714ms)
  Dec 22 05:01:34.980: INFO: (15) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 13.085482ms)
  Dec 22 05:01:34.980: INFO: (15) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 13.87161ms)
  Dec 22 05:01:34.980: INFO: (15) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 14.939202ms)
  Dec 22 05:01:34.980: INFO: (15) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 14.641026ms)
  Dec 22 05:01:34.980: INFO: (15) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 13.720376ms)
  Dec 22 05:01:34.982: INFO: (15) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 14.510893ms)
  Dec 22 05:01:34.983: INFO: (15) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 16.126827ms)
  Dec 22 05:01:34.984: INFO: (15) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 18.06449ms)
  Dec 22 05:01:34.993: INFO: (16) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 7.936761ms)
  Dec 22 05:01:34.993: INFO: (16) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 8.227187ms)
  Dec 22 05:01:34.993: INFO: (16) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 8.562815ms)
  Dec 22 05:01:34.995: INFO: (16) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 9.368642ms)
  Dec 22 05:01:34.995: INFO: (16) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 9.391642ms)
  Dec 22 05:01:34.995: INFO: (16) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 10.440415ms)
  Dec 22 05:01:34.996: INFO: (16) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 10.175949ms)
  Dec 22 05:01:34.997: INFO: (16) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 11.819135ms)
  Dec 22 05:01:34.998: INFO: (16) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 12.253434ms)
  Dec 22 05:01:34.998: INFO: (16) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 12.751655ms)
  Dec 22 05:01:34.998: INFO: (16) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 12.689213ms)
  Dec 22 05:01:34.999: INFO: (16) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 13.872279ms)
  Dec 22 05:01:34.999: INFO: (16) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 14.006942ms)
  Dec 22 05:01:34.999: INFO: (16) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 13.602843ms)
  Dec 22 05:01:35.000: INFO: (16) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 14.437741ms)
  Dec 22 05:01:35.001: INFO: (16) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 15.081695ms)
  Dec 22 05:01:35.019: INFO: (17) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 17.967718ms)
  Dec 22 05:01:35.019: INFO: (17) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 18.192502ms)
  Dec 22 05:01:35.020: INFO: (17) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 18.289385ms)
  Dec 22 05:01:35.020: INFO: (17) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 18.216053ms)
  Dec 22 05:01:35.020: INFO: (17) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 18.482789ms)
  Dec 22 05:01:35.023: INFO: (17) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 21.859111ms)
  Dec 22 05:01:35.024: INFO: (17) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 22.27902ms)
  Dec 22 05:01:35.027: INFO: (17) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 9.884422ms)
  Dec 22 05:01:35.028: INFO: (17) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 10.014235ms)
  Dec 22 05:01:35.028: INFO: (17) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 10.533376ms)
  Dec 22 05:01:35.028: INFO: (17) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 10.311721ms)
  Dec 22 05:01:35.028: INFO: (17) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 10.143527ms)
  Dec 22 05:01:35.030: INFO: (17) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 12.983569ms)
  Dec 22 05:01:35.031: INFO: (17) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 29.377463ms)
  Dec 22 05:01:35.031: INFO: (17) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 13.607793ms)
  Dec 22 05:01:35.031: INFO: (17) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 13.372337ms)
  Dec 22 05:01:35.047: INFO: (18) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 14.867671ms)
  Dec 22 05:01:35.048: INFO: (18) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 16.148739ms)
  Dec 22 05:01:35.048: INFO: (18) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 16.549097ms)
  Dec 22 05:01:35.048: INFO: (18) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 15.710719ms)
  Dec 22 05:01:35.048: INFO: (18) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 15.806781ms)
  Dec 22 05:01:35.048: INFO: (18) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 16.277381ms)
  Dec 22 05:01:35.048: INFO: (18) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 16.22555ms)
  Dec 22 05:01:35.048: INFO: (18) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 15.700239ms)
  Dec 22 05:01:35.050: INFO: (18) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 17.557389ms)
  Dec 22 05:01:35.050: INFO: (18) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 17.269732ms)
  Dec 22 05:01:35.050: INFO: (18) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 18.07391ms)
  Dec 22 05:01:35.050: INFO: (18) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 18.014808ms)
  Dec 22 05:01:35.050: INFO: (18) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 18.382237ms)
  Dec 22 05:01:35.051: INFO: (18) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 18.680443ms)
  Dec 22 05:01:35.052: INFO: (18) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 20.019061ms)
  Dec 22 05:01:35.052: INFO: (18) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 21.233897ms)
  Dec 22 05:01:35.061: INFO: (19) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:462/proxy/: tls qux (200; 7.90205ms)
  Dec 22 05:01:35.063: INFO: (19) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:1080/proxy/rewriteme">test<... (200; 9.435203ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:1080/proxy/rewriteme">... (200; 13.587453ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:160/proxy/: foo (200; 13.060192ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname2/proxy/: bar (200; 14.504842ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:160/proxy/: foo (200; 14.225127ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/pods/http:proxy-service-bkjtr-gts26:162/proxy/: bar (200; 14.167315ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:443/proxy/tlsrewritem... (200; 13.770917ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname1/proxy/: tls baz (200; 13.551022ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/pods/https:proxy-service-bkjtr-gts26:460/proxy/: tls baz (200; 13.47391ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26:162/proxy/: bar (200; 13.182504ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/: <a href="/api/v1/namespaces/proxy-6952/pods/proxy-service-bkjtr-gts26/proxy/rewriteme">test</a> (200; 14.178215ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname1/proxy/: foo (200; 13.556322ms)
  Dec 22 05:01:35.067: INFO: (19) /api/v1/namespaces/proxy-6952/services/https:proxy-service-bkjtr:tlsportname2/proxy/: tls qux (200; 14.322688ms)
  Dec 22 05:01:35.068: INFO: (19) /api/v1/namespaces/proxy-6952/services/proxy-service-bkjtr:portname1/proxy/: foo (200; 14.762758ms)
  Dec 22 05:01:35.068: INFO: (19) /api/v1/namespaces/proxy-6952/services/http:proxy-service-bkjtr:portname2/proxy/: bar (200; 14.576594ms)
  STEP: deleting ReplicationController proxy-service-bkjtr in namespace proxy-6952, will wait for the garbage collector to delete the pods @ 12/22/23 05:01:35.068
  Dec 22 05:01:35.129: INFO: Deleting ReplicationController proxy-service-bkjtr took: 6.643773ms
  Dec 22 05:01:35.230: INFO: Terminating ReplicationController proxy-service-bkjtr pods took: 101.041208ms
  Dec 22 05:01:37.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6952" for this suite. @ 12/22/23 05:01:37.937
• [6.726 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 12/22/23 05:01:37.961
  Dec 22 05:01:37.961: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:01:37.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:37.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:37.988
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/22/23 05:01:37.992
  STEP: Saw pod success @ 12/22/23 05:01:42.024
  Dec 22 05:01:42.027: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-759e4f2b-7280-40d9-a214-3e761889c55c container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:01:42.033
  Dec 22 05:01:42.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3248" for this suite. @ 12/22/23 05:01:42.054
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 12/22/23 05:01:42.06
  Dec 22 05:01:42.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename runtimeclass @ 12/22/23 05:01:42.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:42.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:42.08
  STEP: Deleting RuntimeClass runtimeclass-304-delete-me @ 12/22/23 05:01:42.088
  STEP: Waiting for the RuntimeClass to disappear @ 12/22/23 05:01:42.093
  Dec 22 05:01:42.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-304" for this suite. @ 12/22/23 05:01:42.105
• [0.051 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 12/22/23 05:01:42.114
  Dec 22 05:01:42.114: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 05:01:42.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:42.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:42.141
  STEP: set up a multi version CRD @ 12/22/23 05:01:42.145
  Dec 22 05:01:42.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: rename a version @ 12/22/23 05:01:46.387
  STEP: check the new version name is served @ 12/22/23 05:01:46.402
  STEP: check the old version name is removed @ 12/22/23 05:01:47.717
  STEP: check the other version is not changed @ 12/22/23 05:01:48.574
  Dec 22 05:01:52.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2995" for this suite. @ 12/22/23 05:01:52.344
• [10.237 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 12/22/23 05:01:52.35
  Dec 22 05:01:52.350: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:01:52.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:52.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:52.375
  STEP: Creating configMap with name configmap-test-volume-map-c6c215c3-26f2-44eb-8274-714d90df273f @ 12/22/23 05:01:52.377
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:01:52.384
  STEP: Saw pod success @ 12/22/23 05:01:56.738
  Dec 22 05:01:56.743: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-configmaps-93a9986c-bd4b-493c-9d32-2766faea677a container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:01:56.757
  Dec 22 05:01:56.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2938" for this suite. @ 12/22/23 05:01:56.777
• [4.434 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 12/22/23 05:01:56.785
  Dec 22 05:01:56.785: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 05:01:56.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:56.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:56.808
  STEP: Creating a test namespace @ 12/22/23 05:01:56.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:56.826
  STEP: Creating a pod in the namespace @ 12/22/23 05:01:56.832
  STEP: Waiting for the pod to have running status @ 12/22/23 05:01:56.842
  STEP: Deleting the namespace @ 12/22/23 05:02:00.857
  STEP: Waiting for the namespace to be removed. @ 12/22/23 05:02:00.862
  STEP: Recreating the namespace @ 12/22/23 05:02:11.865
  STEP: Verifying there are no pods in the namespace @ 12/22/23 05:02:11.882
  Dec 22 05:02:11.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1404" for this suite. @ 12/22/23 05:02:11.89
  STEP: Destroying namespace "nsdeletetest-8170" for this suite. @ 12/22/23 05:02:11.896
  Dec 22 05:02:11.899: INFO: Namespace nsdeletetest-8170 was already deleted
  STEP: Destroying namespace "nsdeletetest-4855" for this suite. @ 12/22/23 05:02:11.899
• [15.120 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 12/22/23 05:02:11.906
  Dec 22 05:02:11.906: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pod-network-test @ 12/22/23 05:02:11.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:02:11.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:02:11.933
  STEP: Performing setup for networking test in namespace pod-network-test-4715 @ 12/22/23 05:02:11.936
  STEP: creating a selector @ 12/22/23 05:02:11.936
  STEP: Creating the service pods in kubernetes @ 12/22/23 05:02:11.936
  Dec 22 05:02:11.936: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/22/23 05:02:34.069
  Dec 22 05:02:36.088: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Dec 22 05:02:36.088: INFO: Breadth first check of 10.42.0.71 on host 172.31.3.186...
  Dec 22 05:02:36.091: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.191:9080/dial?request=hostname&protocol=udp&host=10.42.0.71&port=8081&tries=1'] Namespace:pod-network-test-4715 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:02:36.091: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:02:36.092: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:02:36.092: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4715/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.191%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.71%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 05:02:36.219: INFO: Waiting for responses: map[]
  Dec 22 05:02:36.219: INFO: reached 10.42.0.71 after 0/1 tries
  Dec 22 05:02:36.219: INFO: Breadth first check of 10.42.1.69 on host 172.31.4.122...
  Dec 22 05:02:36.223: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.191:9080/dial?request=hostname&protocol=udp&host=10.42.1.69&port=8081&tries=1'] Namespace:pod-network-test-4715 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:02:36.223: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:02:36.224: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:02:36.224: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4715/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.191%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.69%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 05:02:36.348: INFO: Waiting for responses: map[]
  Dec 22 05:02:36.348: INFO: reached 10.42.1.69 after 0/1 tries
  Dec 22 05:02:36.348: INFO: Breadth first check of 10.42.3.190 on host 172.31.7.66...
  Dec 22 05:02:36.351: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.191:9080/dial?request=hostname&protocol=udp&host=10.42.3.190&port=8081&tries=1'] Namespace:pod-network-test-4715 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:02:36.351: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:02:36.352: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:02:36.352: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4715/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.191%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.3.190%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 05:02:36.474: INFO: Waiting for responses: map[]
  Dec 22 05:02:36.474: INFO: reached 10.42.3.190 after 0/1 tries
  Dec 22 05:02:36.474: INFO: Breadth first check of 10.42.2.79 on host 172.31.9.255...
  Dec 22 05:02:36.477: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.191:9080/dial?request=hostname&protocol=udp&host=10.42.2.79&port=8081&tries=1'] Namespace:pod-network-test-4715 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:02:36.477: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:02:36.478: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:02:36.478: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4715/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.191%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.79%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 05:02:36.597: INFO: Waiting for responses: map[]
  Dec 22 05:02:36.597: INFO: reached 10.42.2.79 after 0/1 tries
  Dec 22 05:02:36.597: INFO: Going to retry 0 out of 4 pods....
  Dec 22 05:02:36.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4715" for this suite. @ 12/22/23 05:02:36.602
• [24.702 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 12/22/23 05:02:36.612
  Dec 22 05:02:36.612: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:02:36.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:02:36.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:02:36.638
  STEP: Counting existing ResourceQuota @ 12/22/23 05:02:53.646
  STEP: Creating a ResourceQuota @ 12/22/23 05:02:58.652
  STEP: Ensuring resource quota status is calculated @ 12/22/23 05:02:58.658
  STEP: Creating a ConfigMap @ 12/22/23 05:03:00.662
  STEP: Ensuring resource quota status captures configMap creation @ 12/22/23 05:03:00.674
  STEP: Deleting a ConfigMap @ 12/22/23 05:03:02.678
  STEP: Ensuring resource quota status released usage @ 12/22/23 05:03:02.686
  Dec 22 05:03:04.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3820" for this suite. @ 12/22/23 05:03:04.696
• [28.093 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 12/22/23 05:03:04.705
  Dec 22 05:03:04.705: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 05:03:04.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:04.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:04.748
  STEP: creating service in namespace services-274 @ 12/22/23 05:03:04.762
  STEP: creating service affinity-nodeport-transition in namespace services-274 @ 12/22/23 05:03:04.762
  STEP: creating replication controller affinity-nodeport-transition in namespace services-274 @ 12/22/23 05:03:04.78
  I1222 05:03:04.790994      20 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-274, replica count: 3
  I1222 05:03:07.842541      20 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 05:03:07.863: INFO: Creating new exec pod
  Dec 22 05:03:10.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-274 exec execpod-affinitysshf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Dec 22 05:03:11.099: INFO: stderr: "+ + nc -v -t -w 2 affinity-nodeport-transition 80\necho hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Dec 22 05:03:11.099: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:03:11.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-274 exec execpod-affinitysshf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.192.181 80'
  Dec 22 05:03:11.284: INFO: stderr: "+ nc -v -t -w 2 10.43.192.181 80\n+ echo hostName\nConnection to 10.43.192.181 80 port [tcp/http] succeeded!\n"
  Dec 22 05:03:11.284: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:03:11.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-274 exec execpod-affinitysshf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.7.66 32028'
  Dec 22 05:03:11.462: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.7.66 32028\nConnection to 172.31.7.66 32028 port [tcp/*] succeeded!\n"
  Dec 22 05:03:11.462: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:03:11.462: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-274 exec execpod-affinitysshf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.186 32028'
  Dec 22 05:03:11.671: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.186 32028\nConnection to 172.31.3.186 32028 port [tcp/*] succeeded!\n"
  Dec 22 05:03:11.671: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:03:11.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-274 exec execpod-affinitysshf8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.3.186:32028/ ; done'
  Dec 22 05:03:12.027: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n"
  Dec 22 05:03:12.027: INFO: stdout: "\naffinity-nodeport-transition-2fqkd\naffinity-nodeport-transition-vblk2\naffinity-nodeport-transition-2fqkd\naffinity-nodeport-transition-vblk2\naffinity-nodeport-transition-2fqkd\naffinity-nodeport-transition-vblk2\naffinity-nodeport-transition-2fqkd\naffinity-nodeport-transition-vblk2\naffinity-nodeport-transition-vblk2\naffinity-nodeport-transition-2fqkd\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-vblk2\naffinity-nodeport-transition-2fqkd\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-vblk2\naffinity-nodeport-transition-2fqkd"
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-2fqkd
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-vblk2
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-2fqkd
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-vblk2
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-2fqkd
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-vblk2
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-2fqkd
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-vblk2
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-vblk2
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-2fqkd
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-vblk2
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-2fqkd
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-vblk2
  Dec 22 05:03:12.027: INFO: Received response from host: affinity-nodeport-transition-2fqkd
  Dec 22 05:03:12.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-274 exec execpod-affinitysshf8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.3.186:32028/ ; done'
  Dec 22 05:03:12.312: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:32028/\n"
  Dec 22 05:03:12.312: INFO: stdout: "\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58\naffinity-nodeport-transition-bzz58"
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Received response from host: affinity-nodeport-transition-bzz58
  Dec 22 05:03:12.312: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-274, will wait for the garbage collector to delete the pods @ 12/22/23 05:03:12.344
  Dec 22 05:03:12.409: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.183794ms
  Dec 22 05:03:12.509: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.326132ms
  Dec 22 05:03:15.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-274" for this suite. @ 12/22/23 05:03:15.75
• [11.052 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 12/22/23 05:03:15.758
  Dec 22 05:03:15.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-webhook @ 12/22/23 05:03:15.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:15.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:15.795
  STEP: Setting up server cert @ 12/22/23 05:03:15.798
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/22/23 05:03:16.311
  STEP: Deploying the custom resource conversion webhook pod @ 12/22/23 05:03:16.32
  STEP: Wait for the deployment to be ready @ 12/22/23 05:03:16.337
  Dec 22 05:03:16.347: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/22/23 05:03:18.357
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:03:18.365
  Dec 22 05:03:19.369: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Dec 22 05:03:19.376: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Creating a v1 custom resource @ 12/22/23 05:03:21.947
  STEP: v2 custom resource should be converted @ 12/22/23 05:03:21.952
  Dec 22 05:03:22.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-18" for this suite. @ 12/22/23 05:03:22.526
• [6.792 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 12/22/23 05:03:22.554
  Dec 22 05:03:22.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 05:03:22.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:22.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:22.59
  STEP: creating a collection of services @ 12/22/23 05:03:22.594
  Dec 22 05:03:22.594: INFO: Creating e2e-svc-a-bkxdm
  Dec 22 05:03:22.606: INFO: Creating e2e-svc-b-8f4j8
  Dec 22 05:03:22.620: INFO: Creating e2e-svc-c-pmhl9
  STEP: deleting service collection @ 12/22/23 05:03:22.638
  Dec 22 05:03:22.668: INFO: Collection of services has been deleted
  Dec 22 05:03:22.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2270" for this suite. @ 12/22/23 05:03:22.672
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 12/22/23 05:03:22.679
  Dec 22 05:03:22.679: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:03:22.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:22.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:22.704
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/22/23 05:03:22.709
  STEP: Saw pod success @ 12/22/23 05:03:26.733
  Dec 22 05:03:26.736: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-4d39e2a9-58ef-4264-8ea4-1876ae5bb5d4 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:03:26.743
  Dec 22 05:03:26.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6776" for this suite. @ 12/22/23 05:03:26.759
• [4.085 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 12/22/23 05:03:26.765
  Dec 22 05:03:26.765: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:03:26.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:26.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:26.789
  STEP: Setting up server cert @ 12/22/23 05:03:26.82
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:03:27.664
  STEP: Deploying the webhook pod @ 12/22/23 05:03:27.67
  STEP: Wait for the deployment to be ready @ 12/22/23 05:03:27.689
  Dec 22 05:03:27.700: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 05:03:29.712
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:03:29.722
  Dec 22 05:03:30.723: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/22/23 05:03:30.729
  STEP: create a configmap that should be updated by the webhook @ 12/22/23 05:03:30.75
  Dec 22 05:03:30.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9505" for this suite. @ 12/22/23 05:03:30.855
  STEP: Destroying namespace "webhook-markers-6971" for this suite. @ 12/22/23 05:03:30.869
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 12/22/23 05:03:30.883
  Dec 22 05:03:30.883: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 05:03:30.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:30.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:30.906
  STEP: creating service multiprotocol-test in namespace services-6955 @ 12/22/23 05:03:30.909
  STEP: creating pod pod1 in namespace services-6955 @ 12/22/23 05:03:30.92
  STEP: Creating pod pod1 in namespace services-6955 @ 12/22/23 05:03:30.92
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6955 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 12/22/23 05:03:32.953
  Dec 22 05:03:32.964: INFO: successfully validated that service multiprotocol-test in namespace services-6955 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 12/22/23 05:03:32.964
  Dec 22 05:03:32.964: INFO: Creating new exec pod
  Dec 22 05:03:34.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.92.147 80'
  Dec 22 05:03:35.161: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.92.147 80\nConnection to 10.43.92.147 80 port [tcp/http] succeeded!\n"
  Dec 22 05:03:35.161: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:03:35.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.92.147 80'
  Dec 22 05:03:39.344: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.92.147 80\nConnection to 10.43.92.147 80 port [udp/*] succeeded!\n"
  Dec 22 05:03:39.344: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 12/22/23 05:03:39.344
  Dec 22 05:03:39.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.92.147 80'
  Dec 22 05:03:39.591: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.92.147 80\nConnection to 10.43.92.147 80 port [tcp/http] succeeded!\n"
  Dec 22 05:03:39.591: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:03:39.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.92.147 80'
  Dec 22 05:03:43.841: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.92.147 80\nConnection to 10.43.92.147 80 port [udp/*] succeeded!\n"
  Dec 22 05:03:43.841: INFO: stdout: ""
  Dec 22 05:03:43.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.92.147 80'
  Dec 22 05:03:48.025: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.92.147 80\nConnection to 10.43.92.147 80 port [udp/*] succeeded!\n"
  Dec 22 05:03:48.025: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 12/22/23 05:03:48.025
  Dec 22 05:03:48.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.92.147 80'
  Dec 22 05:03:52.241: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.92.147 80\nConnection to 10.43.92.147 80 port [udp/*] succeeded!\n"
  Dec 22 05:03:52.241: INFO: stdout: "pod1"
  Dec 22 05:03:52.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.92.147 80'
  Dec 22 05:03:54.688: INFO: rc: 1
  Dec 22 05:03:54.688: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.92.147 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.92.147 80
  nc: connect to 10.43.92.147 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 22 05:03:54.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.92.147 80'
  Dec 22 05:03:56.892: INFO: rc: 1
  Dec 22 05:03:56.892: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.92.147 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.92.147 80
  nc: connect to 10.43.92.147 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 22 05:03:56.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.92.147 80'
  Dec 22 05:03:59.114: INFO: rc: 1
  Dec 22 05:03:59.114: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6955 exec execpodfmt4k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.92.147 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.92.147 80
  nc: connect to 10.43.92.147 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 22 05:03:59.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6955" for this suite. @ 12/22/23 05:03:59.12
• [28.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 12/22/23 05:03:59.131
  Dec 22 05:03:59.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sysctl @ 12/22/23 05:03:59.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:59.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:59.159
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/22/23 05:03:59.162
  Dec 22 05:03:59.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1196" for this suite. @ 12/22/23 05:03:59.17
• [0.049 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 12/22/23 05:03:59.183
  Dec 22 05:03:59.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 05:03:59.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:59.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:59.221
  STEP: Creating pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319 @ 12/22/23 05:03:59.226
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 05:04:01.252
  Dec 22 05:04:01.255: INFO: Initial restart count of pod liveness-6f2237f1-c727-4729-935a-2047aa88481d is 0
  Dec 22 05:04:01.261: INFO: Get pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319
  Dec 22 05:04:03.276: INFO: Get pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319
  Dec 22 05:04:05.280: INFO: Get pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319
  Dec 22 05:04:07.290: INFO: Get pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319
  Dec 22 05:04:09.303: INFO: Get pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319
  Dec 22 05:04:11.307: INFO: Get pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319
  Dec 22 05:04:13.312: INFO: Get pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319
  Dec 22 05:04:15.316: INFO: Get pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319
  Dec 22 05:04:17.322: INFO: Get pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319
  Dec 22 05:04:19.326: INFO: Get pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319
  Dec 22 05:04:21.331: INFO: Get pod liveness-6f2237f1-c727-4729-935a-2047aa88481d in namespace container-probe-7319
  Dec 22 05:04:21.331: INFO: Restart count of pod container-probe-7319/liveness-6f2237f1-c727-4729-935a-2047aa88481d is now 1 (20.075445826s elapsed)
  STEP: deleting the pod @ 12/22/23 05:04:21.331
  Dec 22 05:04:21.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7319" for this suite. @ 12/22/23 05:04:21.368
• [22.193 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/22/23 05:04:21.378
  Dec 22 05:04:21.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:04:21.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:21.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:21.404
  STEP: Creating secret with name secret-test-93872f33-167b-416b-9d43-93eebefd14af @ 12/22/23 05:04:21.407
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:04:21.413
  STEP: Saw pod success @ 12/22/23 05:04:25.44
  Dec 22 05:04:25.443: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-secrets-7de029c3-043e-49c7-864c-732e28373bb4 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:04:25.449
  Dec 22 05:04:25.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7577" for this suite. @ 12/22/23 05:04:25.466
• [4.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 12/22/23 05:04:25.472
  Dec 22 05:04:25.472: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename disruption @ 12/22/23 05:04:25.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:25.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:25.496
  STEP: Waiting for the pdb to be processed @ 12/22/23 05:04:25.504
  STEP: Waiting for all pods to be running @ 12/22/23 05:04:25.554
  Dec 22 05:04:25.567: INFO: running pods: 0 < 3
  Dec 22 05:04:27.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8888" for this suite. @ 12/22/23 05:04:27.565
• [2.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 12/22/23 05:04:27.572
  Dec 22 05:04:27.572: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename job @ 12/22/23 05:04:27.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:27.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:27.594
  STEP: Creating a suspended job @ 12/22/23 05:04:27.6
  STEP: Patching the Job @ 12/22/23 05:04:27.607
  STEP: Watching for Job to be patched @ 12/22/23 05:04:27.632
  Dec 22 05:04:27.636: INFO: Event ADDED observed for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-job-label:e2e-fv67f] and annotations: map[]
  Dec 22 05:04:27.637: INFO: Event MODIFIED observed for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-job-label:e2e-fv67f] and annotations: map[]
  Dec 22 05:04:27.637: INFO: Event MODIFIED found for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f] and annotations: map[]
  STEP: Updating the job @ 12/22/23 05:04:27.637
  STEP: Watching for Job to be updated @ 12/22/23 05:04:27.649
  Dec 22 05:04:27.651: INFO: Event MODIFIED found for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f] and annotations: map[updated:true]
  Dec 22 05:04:27.652: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/22/23 05:04:27.652
  Dec 22 05:04:27.655: INFO: Job: e2e-fv67f as labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f]
  STEP: Waiting for job to complete @ 12/22/23 05:04:27.655
  STEP: Delete a job collection with a labelselector @ 12/22/23 05:04:37.661
  STEP: Watching for Job to be deleted @ 12/22/23 05:04:37.668
  Dec 22 05:04:37.670: INFO: Event MODIFIED observed for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f] and annotations: map[updated:true]
  Dec 22 05:04:37.670: INFO: Event MODIFIED observed for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f] and annotations: map[updated:true]
  Dec 22 05:04:37.670: INFO: Event MODIFIED observed for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f] and annotations: map[updated:true]
  Dec 22 05:04:37.671: INFO: Event MODIFIED observed for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f] and annotations: map[updated:true]
  Dec 22 05:04:37.671: INFO: Event MODIFIED observed for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f] and annotations: map[updated:true]
  Dec 22 05:04:37.671: INFO: Event MODIFIED observed for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f] and annotations: map[updated:true]
  Dec 22 05:04:37.671: INFO: Event MODIFIED observed for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f] and annotations: map[updated:true]
  Dec 22 05:04:37.671: INFO: Event MODIFIED observed for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f] and annotations: map[updated:true]
  Dec 22 05:04:37.671: INFO: Event DELETED found for Job e2e-fv67f in namespace job-9547 with labels: map[e2e-fv67f:patched e2e-job-label:e2e-fv67f] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/22/23 05:04:37.671
  Dec 22 05:04:37.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9547" for this suite. @ 12/22/23 05:04:37.682
• [10.129 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 12/22/23 05:04:37.702
  Dec 22 05:04:37.702: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 05:04:37.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:37.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:37.735
  Dec 22 05:04:59.801: INFO: Container started at 2023-12-22 05:04:38 +0000 UTC, pod became ready at 2023-12-22 05:04:58 +0000 UTC
  Dec 22 05:04:59.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9724" for this suite. @ 12/22/23 05:04:59.807
• [22.113 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 12/22/23 05:04:59.816
  Dec 22 05:04:59.816: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:04:59.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:59.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:59.842
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/22/23 05:04:59.845
  STEP: Saw pod success @ 12/22/23 05:05:03.865
  Dec 22 05:05:03.869: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-d3634efa-3036-4af9-908e-6ff0a86d7edf container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:05:03.88
  Dec 22 05:05:03.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1669" for this suite. @ 12/22/23 05:05:03.902
• [4.095 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 12/22/23 05:05:03.911
  Dec 22 05:05:03.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 05:05:03.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:05:03.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:05:03.942
  Dec 22 05:05:05.975: INFO: Deleting pod "var-expansion-12dc9fe4-947e-4c1c-890e-77894c6c524f" in namespace "var-expansion-5472"
  Dec 22 05:05:05.983: INFO: Wait up to 5m0s for pod "var-expansion-12dc9fe4-947e-4c1c-890e-77894c6c524f" to be fully deleted
  Dec 22 05:05:10.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5472" for this suite. @ 12/22/23 05:05:10.011
• [6.106 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/22/23 05:05:10.018
  Dec 22 05:05:10.018: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/22/23 05:05:10.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:05:10.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:05:10.043
  STEP: creating @ 12/22/23 05:05:10.046
  STEP: getting @ 12/22/23 05:05:10.071
  STEP: listing in namespace @ 12/22/23 05:05:10.08
  STEP: patching @ 12/22/23 05:05:10.083
  STEP: deleting @ 12/22/23 05:05:10.091
  Dec 22 05:05:10.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3450" for this suite. @ 12/22/23 05:05:10.11
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 12/22/23 05:05:10.123
  Dec 22 05:05:10.123: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:05:10.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:05:10.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:05:10.143
  STEP: creating a ConfigMap @ 12/22/23 05:05:10.146
  STEP: fetching the ConfigMap @ 12/22/23 05:05:10.15
  STEP: patching the ConfigMap @ 12/22/23 05:05:10.153
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/22/23 05:05:10.16
  STEP: deleting the ConfigMap by collection with a label selector @ 12/22/23 05:05:10.166
  STEP: listing all ConfigMaps in test namespace @ 12/22/23 05:05:10.177
  Dec 22 05:05:10.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1352" for this suite. @ 12/22/23 05:05:10.189
• [0.074 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 12/22/23 05:05:10.197
  Dec 22 05:05:10.197: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:05:10.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:05:10.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:05:10.231
  STEP: validating api versions @ 12/22/23 05:05:10.234
  Dec 22 05:05:10.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-3921 api-versions'
  Dec 22 05:05:10.317: INFO: stderr: ""
  Dec 22 05:05:10.317: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nv1\n"
  Dec 22 05:05:10.317: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3921" for this suite. @ 12/22/23 05:05:10.322
• [0.132 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 12/22/23 05:05:10.329
  Dec 22 05:05:10.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename security-context-test @ 12/22/23 05:05:10.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:05:10.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:05:10.352
  Dec 22 05:05:14.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2356" for this suite. @ 12/22/23 05:05:14.388
• [4.066 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 12/22/23 05:05:14.395
  Dec 22 05:05:14.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pv @ 12/22/23 05:05:14.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:05:14.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:05:14.419
  STEP: Creating initial PV and PVC @ 12/22/23 05:05:14.422
  Dec 22 05:05:14.423: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7763" @ 12/22/23 05:05:14.442
  STEP: Listing PVCs in namespace "pv-7763" @ 12/22/23 05:05:14.447
  STEP: Patching the PV "pv-7763-lr55k" @ 12/22/23 05:05:14.451
  STEP: Patching the PVC "pvc-fpzs2" @ 12/22/23 05:05:14.477
  STEP: Getting PV "pv-7763-lr55k" @ 12/22/23 05:05:14.49
  STEP: Getting PVC "pvc-fpzs2" @ 12/22/23 05:05:14.496
  STEP: Deleting PVC "pvc-fpzs2" @ 12/22/23 05:05:14.5
  STEP: Confirm deletion of PVC "pvc-fpzs2" @ 12/22/23 05:05:14.507
  STEP: Deleting PV "pv-7763-lr55k" @ 12/22/23 05:05:16.518
  STEP: Confirm deletion of PV "pv-7763-lr55k" @ 12/22/23 05:05:16.524
  STEP: Recreating another PV & PVC @ 12/22/23 05:05:18.531
  Dec 22 05:05:18.531: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-7763-jjvl5" @ 12/22/23 05:05:18.542
  STEP: Updating the PVC "pvc-bbh49" @ 12/22/23 05:05:18.577
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-bbh49=updated" @ 12/22/23 05:05:18.585
  STEP: Deleting PVC "pvc-bbh49" via DeleteCollection @ 12/22/23 05:05:18.589
  STEP: Confirm deletion of PVC "pvc-bbh49" @ 12/22/23 05:05:18.597
  STEP: Deleting PV "pv-7763-jjvl5" via DeleteCollection @ 12/22/23 05:05:20.605
  STEP: Confirm deletion of PV "pv-7763-jjvl5" @ 12/22/23 05:05:20.611
  Dec 22 05:05:22.619: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Dec 22 05:05:22.619: INFO: Deleting PersistentVolumeClaim "pvc-bbh49"
  Dec 22 05:05:22.622: INFO: Deleting PersistentVolume "pv-7763-jjvl5"
  Dec 22 05:05:22.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7763" for this suite. @ 12/22/23 05:05:22.632
• [8.244 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 12/22/23 05:05:22.64
  Dec 22 05:05:22.640: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:05:22.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:05:22.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:05:22.661
  STEP: Creating configMap with name projected-configmap-test-volume-c5c20fdc-8c6b-4981-a08d-6696e4dd1fb5 @ 12/22/23 05:05:22.665
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:05:22.673
  STEP: Saw pod success @ 12/22/23 05:05:26.708
  Dec 22 05:05:26.711: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-configmaps-bf8c3dfb-10ed-45db-aa70-554d6a9e46b1 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:05:26.718
  Dec 22 05:05:26.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6545" for this suite. @ 12/22/23 05:05:26.739
• [4.106 seconds]
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 12/22/23 05:05:26.746
  Dec 22 05:05:26.746: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename disruption @ 12/22/23 05:05:26.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:05:26.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:05:26.768
  STEP: creating the pdb @ 12/22/23 05:05:26.773
  STEP: Waiting for the pdb to be processed @ 12/22/23 05:05:26.778
  STEP: updating the pdb @ 12/22/23 05:05:28.782
  STEP: Waiting for the pdb to be processed @ 12/22/23 05:05:28.792
  STEP: patching the pdb @ 12/22/23 05:05:30.796
  STEP: Waiting for the pdb to be processed @ 12/22/23 05:05:30.805
  STEP: Waiting for the pdb to be deleted @ 12/22/23 05:05:30.82
  Dec 22 05:05:30.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8746" for this suite. @ 12/22/23 05:05:30.828
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 12/22/23 05:05:30.837
  Dec 22 05:05:30.837: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pod-network-test @ 12/22/23 05:05:30.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:05:30.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:05:30.861
  STEP: Performing setup for networking test in namespace pod-network-test-3779 @ 12/22/23 05:05:30.864
  STEP: creating a selector @ 12/22/23 05:05:30.864
  STEP: Creating the service pods in kubernetes @ 12/22/23 05:05:30.864
  Dec 22 05:05:30.864: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/22/23 05:05:53.005
  Dec 22 05:05:55.035: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Dec 22 05:05:55.035: INFO: Going to poll 10.42.0.72 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:05:55.038: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.72:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3779 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:05:55.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:05:55.040: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:05:55.040: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3779/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.72%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:05:55.149: INFO: Found all 1 expected endpoints: [netserver-0]
  Dec 22 05:05:55.149: INFO: Going to poll 10.42.1.71 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:05:55.153: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.71:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3779 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:05:55.153: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:05:55.154: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:05:55.154: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3779/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.71%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:05:55.253: INFO: Found all 1 expected endpoints: [netserver-1]
  Dec 22 05:05:55.253: INFO: Going to poll 10.42.3.213 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:05:55.257: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.3.213:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3779 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:05:55.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:05:55.257: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:05:55.257: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3779/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.3.213%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:05:55.341: INFO: Found all 1 expected endpoints: [netserver-2]
  Dec 22 05:05:55.341: INFO: Going to poll 10.42.2.81 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:05:55.345: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.81:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3779 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:05:55.345: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:05:55.345: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:05:55.345: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3779/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.81%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:05:55.433: INFO: Found all 1 expected endpoints: [netserver-3]
  Dec 22 05:05:55.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3779" for this suite. @ 12/22/23 05:05:55.438
• [24.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 12/22/23 05:05:55.446
  Dec 22 05:05:55.446: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pod-network-test @ 12/22/23 05:05:55.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:05:55.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:05:55.467
  STEP: Performing setup for networking test in namespace pod-network-test-4457 @ 12/22/23 05:05:55.47
  STEP: creating a selector @ 12/22/23 05:05:55.471
  STEP: Creating the service pods in kubernetes @ 12/22/23 05:05:55.471
  Dec 22 05:05:55.471: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/22/23 05:06:17.608
  Dec 22 05:06:19.638: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Dec 22 05:06:19.638: INFO: Going to poll 10.42.0.73 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:06:19.640: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.73 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4457 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:06:19.641: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:06:19.641: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:06:19.641: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4457/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.73+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:06:20.744: INFO: Found all 1 expected endpoints: [netserver-0]
  Dec 22 05:06:20.744: INFO: Going to poll 10.42.1.72 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:06:20.748: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.72 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4457 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:06:20.748: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:06:20.748: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:06:20.748: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4457/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.72+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:06:21.890: INFO: Found all 1 expected endpoints: [netserver-1]
  Dec 22 05:06:21.890: INFO: Going to poll 10.42.3.215 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:06:21.895: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.3.215 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4457 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:06:21.895: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:06:21.896: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:06:21.896: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4457/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.3.215+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:06:22.994: INFO: Found all 1 expected endpoints: [netserver-2]
  Dec 22 05:06:22.995: INFO: Going to poll 10.42.2.82 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:06:22.997: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.82 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4457 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:06:22.997: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:06:22.998: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:06:22.998: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4457/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.82+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:06:24.091: INFO: Found all 1 expected endpoints: [netserver-3]
  Dec 22 05:06:24.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4457" for this suite. @ 12/22/23 05:06:24.096
• [28.656 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 12/22/23 05:06:24.103
  Dec 22 05:06:24.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename runtimeclass @ 12/22/23 05:06:24.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:06:24.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:06:24.131
  Dec 22 05:06:26.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2508" for this suite. @ 12/22/23 05:06:26.177
• [2.081 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/22/23 05:06:26.186
  Dec 22 05:06:26.187: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename init-container @ 12/22/23 05:06:26.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:06:26.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:06:26.216
  STEP: creating the pod @ 12/22/23 05:06:26.219
  Dec 22 05:06:26.220: INFO: PodSpec: initContainers in spec.initContainers
  Dec 22 05:06:30.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3130" for this suite. @ 12/22/23 05:06:30.881
• [4.704 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 12/22/23 05:06:30.892
  Dec 22 05:06:30.892: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename events @ 12/22/23 05:06:30.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:06:30.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:06:30.926
  STEP: creating a test event @ 12/22/23 05:06:30.933
  STEP: listing all events in all namespaces @ 12/22/23 05:06:30.941
  STEP: patching the test event @ 12/22/23 05:06:30.946
  STEP: fetching the test event @ 12/22/23 05:06:30.953
  STEP: updating the test event @ 12/22/23 05:06:30.956
  STEP: getting the test event @ 12/22/23 05:06:30.965
  STEP: deleting the test event @ 12/22/23 05:06:30.968
  STEP: listing all events in all namespaces @ 12/22/23 05:06:30.974
  Dec 22 05:06:30.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3758" for this suite. @ 12/22/23 05:06:30.984
• [0.098 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 12/22/23 05:06:30.991
  Dec 22 05:06:30.991: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:06:30.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:06:31.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:06:31.017
  STEP: Setting up server cert @ 12/22/23 05:06:31.046
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:06:31.424
  STEP: Deploying the webhook pod @ 12/22/23 05:06:31.432
  STEP: Wait for the deployment to be ready @ 12/22/23 05:06:31.444
  Dec 22 05:06:31.454: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 05:06:33.464
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:06:33.475
  Dec 22 05:06:34.475: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 22 05:06:34.483: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/22/23 05:06:34.995
  STEP: Creating a custom resource that should be denied by the webhook @ 12/22/23 05:06:35.034
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/22/23 05:06:37.051
  STEP: Updating the custom resource with disallowed data should be denied @ 12/22/23 05:06:37.059
  STEP: Deleting the custom resource should be denied @ 12/22/23 05:06:37.069
  STEP: Remove the offending key and value from the custom resource data @ 12/22/23 05:06:37.079
  STEP: Deleting the updated custom resource should be successful @ 12/22/23 05:06:37.091
  Dec 22 05:06:37.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9716" for this suite. @ 12/22/23 05:06:37.698
  STEP: Destroying namespace "webhook-markers-810" for this suite. @ 12/22/23 05:06:37.705
• [6.721 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 12/22/23 05:06:37.713
  Dec 22 05:06:37.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:06:37.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:06:37.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:06:37.738
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/22/23 05:06:37.741
  STEP: Saw pod success @ 12/22/23 05:06:41.766
  Dec 22 05:06:41.769: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-a74cae4b-c10e-47ff-a0b3-92f70d3f13c1 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:06:41.775
  Dec 22 05:06:41.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8645" for this suite. @ 12/22/23 05:06:41.796
• [4.089 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 12/22/23 05:06:41.802
  Dec 22 05:06:41.802: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 05:06:41.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:06:41.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:06:41.826
  STEP: creating service multi-endpoint-test in namespace services-4340 @ 12/22/23 05:06:41.829
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4340 to expose endpoints map[] @ 12/22/23 05:06:41.84
  Dec 22 05:06:41.851: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Dec 22 05:06:42.870: INFO: successfully validated that service multi-endpoint-test in namespace services-4340 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4340 @ 12/22/23 05:06:42.87
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4340 to expose endpoints map[pod1:[100]] @ 12/22/23 05:06:46.899
  Dec 22 05:06:46.908: INFO: successfully validated that service multi-endpoint-test in namespace services-4340 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4340 @ 12/22/23 05:06:46.908
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4340 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/22/23 05:06:51.113
  Dec 22 05:06:51.129: INFO: successfully validated that service multi-endpoint-test in namespace services-4340 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/22/23 05:06:51.13
  Dec 22 05:06:51.130: INFO: Creating new exec pod
  Dec 22 05:06:54.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-4340 exec execpods6tl4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Dec 22 05:06:54.426: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Dec 22 05:06:54.426: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:06:54.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-4340 exec execpods6tl4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.185.144 80'
  Dec 22 05:06:54.621: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.185.144 80\nConnection to 10.43.185.144 80 port [tcp/http] succeeded!\n"
  Dec 22 05:06:54.621: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:06:54.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-4340 exec execpods6tl4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Dec 22 05:06:54.809: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Dec 22 05:06:54.809: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:06:54.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-4340 exec execpods6tl4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.185.144 81'
  Dec 22 05:06:54.980: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.185.144 81\nConnection to 10.43.185.144 81 port [tcp/*] succeeded!\n"
  Dec 22 05:06:54.980: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4340 @ 12/22/23 05:06:54.981
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4340 to expose endpoints map[pod2:[101]] @ 12/22/23 05:06:54.999
  Dec 22 05:06:56.046: INFO: successfully validated that service multi-endpoint-test in namespace services-4340 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4340 @ 12/22/23 05:06:56.046
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4340 to expose endpoints map[] @ 12/22/23 05:06:56.058
  Dec 22 05:06:56.074: INFO: successfully validated that service multi-endpoint-test in namespace services-4340 exposes endpoints map[]
  Dec 22 05:06:56.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4340" for this suite. @ 12/22/23 05:06:56.104
• [14.308 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 12/22/23 05:06:56.11
  Dec 22 05:06:56.110: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 05:06:56.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:06:56.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:06:56.133
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/22/23 05:06:56.136
  Dec 22 05:06:56.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:06:58.339: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:07:05.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1045" for this suite. @ 12/22/23 05:07:05.735
• [9.632 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 12/22/23 05:07:05.744
  Dec 22 05:07:05.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename security-context-test @ 12/22/23 05:07:05.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:07:05.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:07:05.77
  Dec 22 05:07:11.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9132" for this suite. @ 12/22/23 05:07:11.854
• [6.118 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/22/23 05:07:11.862
  Dec 22 05:07:11.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename subpath @ 12/22/23 05:07:11.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:07:11.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:07:11.9
  STEP: Setting up data @ 12/22/23 05:07:11.903
  STEP: Creating pod pod-subpath-test-downwardapi-qbc8 @ 12/22/23 05:07:11.925
  STEP: Creating a pod to test atomic-volume-subpath @ 12/22/23 05:07:11.925
  STEP: Saw pod success @ 12/22/23 05:07:36.023
  Dec 22 05:07:36.031: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-subpath-test-downwardapi-qbc8 container test-container-subpath-downwardapi-qbc8: <nil>
  STEP: delete the pod @ 12/22/23 05:07:36.042
  STEP: Deleting pod pod-subpath-test-downwardapi-qbc8 @ 12/22/23 05:07:36.063
  Dec 22 05:07:36.063: INFO: Deleting pod "pod-subpath-test-downwardapi-qbc8" in namespace "subpath-8768"
  Dec 22 05:07:36.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8768" for this suite. @ 12/22/23 05:07:36.075
• [24.221 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 12/22/23 05:07:36.084
  Dec 22 05:07:36.084: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename dns @ 12/22/23 05:07:36.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:07:36.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:07:36.11
  STEP: Creating a test headless service @ 12/22/23 05:07:36.114
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4632.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-4632.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/22/23 05:07:36.121
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4632.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-4632.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/22/23 05:07:36.121
  STEP: creating a pod to probe DNS @ 12/22/23 05:07:36.121
  STEP: submitting the pod to kubernetes @ 12/22/23 05:07:36.122
  STEP: retrieving the pod @ 12/22/23 05:07:38.144
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:07:38.148
  Dec 22 05:07:38.168: INFO: DNS probes using dns-4632/dns-test-b2bdcae7-d386-4685-b9aa-35f02077c6ab succeeded

  STEP: deleting the pod @ 12/22/23 05:07:38.168
  STEP: deleting the test headless service @ 12/22/23 05:07:38.19
  Dec 22 05:07:38.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4632" for this suite. @ 12/22/23 05:07:38.218
• [2.142 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 12/22/23 05:07:38.228
  Dec 22 05:07:38.228: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:07:38.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:07:38.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:07:38.252
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/22/23 05:07:38.258
  STEP: Saw pod success @ 12/22/23 05:07:42.284
  Dec 22 05:07:42.301: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-8741c158-d362-4356-b49c-f85c5500c112 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:07:42.31
  Dec 22 05:07:42.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5592" for this suite. @ 12/22/23 05:07:42.349
• [4.142 seconds]
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/22/23 05:07:42.37
  Dec 22 05:07:42.370: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:07:42.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:07:42.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:07:42.406
  Dec 22 05:07:42.414: INFO: Creating deployment "test-recreate-deployment"
  Dec 22 05:07:42.423: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Dec 22 05:07:42.439: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Dec 22 05:07:44.447: INFO: Waiting deployment "test-recreate-deployment" to complete
  Dec 22 05:07:44.451: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Dec 22 05:07:44.469: INFO: Updating deployment test-recreate-deployment
  Dec 22 05:07:44.469: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Dec 22 05:07:44.575: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7912",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55e7cd60-659a-4e69-8f55-016f73c54f2d",
      ResourceVersion: (string) (len=5) "36080",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838818462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 05:07:44.581: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7912",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "493223ef-eb40-42c8-8596-d218016de684",
      ResourceVersion: (string) (len=5) "36078",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838818464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "55e7cd60-659a-4e69-8f55-016f73c54f2d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 35 65 37 63 64  36 30 2d 36 35 39 61 2d  |\"55e7cd60-659a-|
              00000120  34 65 36 39 2d 38 66 35  35 2d 30 31 36 66 37 33  |4e69-8f55-016f73|
              00000130  63 35 34 66 32 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c54f2d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:07:44.582: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Dec 22 05:07:44.583: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7912",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7413bd9b-9366-4b0e-8efa-ba9661188406",
      ResourceVersion: (string) (len=5) "36070",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838818462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "55e7cd60-659a-4e69-8f55-016f73c54f2d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 35 65 37 63 64  36 30 2d 36 35 39 61 2d  |\"55e7cd60-659a-|
              00000120  34 65 36 39 2d 38 66 35  35 2d 30 31 36 66 37 33  |4e69-8f55-016f73|
              00000130  63 35 34 66 32 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c54f2d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:07:44.591: INFO: Pod "test-recreate-deployment-76fb77d45-zrfk4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-zrfk4",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-7912",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89da6b06-65e3-4503-b805-1cb37812e291",
      ResourceVersion: (string) (len=5) "36081",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838818464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "493223ef-eb40-42c8-8596-d218016de684",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  33 32 32 33 65 66 2d 65  |d\":\"493223ef-e|
              00000090  62 34 30 2d 34 32 63 38  2d 38 35 39 36 2d 64 32  |b40-42c8-8596-d2|
              000000a0  31 38 30 31 36 64 65 36  38 34 5c 22 7d 22 3a 7b  |18016de684\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hlfmx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hlfmx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838818464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838818464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:07:44.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7912" for this suite. @ 12/22/23 05:07:44.598
• [2.234 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 12/22/23 05:07:44.605
  Dec 22 05:07:44.605: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:07:44.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:07:44.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:07:44.627
  STEP: Counting existing ResourceQuota @ 12/22/23 05:07:44.63
  STEP: Creating a ResourceQuota @ 12/22/23 05:07:49.637
  STEP: Ensuring resource quota status is calculated @ 12/22/23 05:07:49.645
  STEP: Creating a Pod that fits quota @ 12/22/23 05:07:51.65
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/22/23 05:07:51.668
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/22/23 05:07:53.677
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/22/23 05:07:53.68
  STEP: Ensuring a pod cannot update its resource requirements @ 12/22/23 05:07:53.682
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/22/23 05:07:53.687
  STEP: Deleting the pod @ 12/22/23 05:07:55.692
  STEP: Ensuring resource quota status released the pod usage @ 12/22/23 05:07:55.706
  Dec 22 05:07:57.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1637" for this suite. @ 12/22/23 05:07:57.716
• [13.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/22/23 05:07:57.735
  Dec 22 05:07:57.736: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename watch @ 12/22/23 05:07:57.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:07:57.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:07:57.763
  STEP: creating a watch on configmaps with a certain label @ 12/22/23 05:07:57.766
  STEP: creating a new configmap @ 12/22/23 05:07:57.767
  STEP: modifying the configmap once @ 12/22/23 05:07:57.773
  STEP: changing the label value of the configmap @ 12/22/23 05:07:57.781
  STEP: Expecting to observe a delete notification for the watched object @ 12/22/23 05:07:57.79
  Dec 22 05:07:57.790: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9397  d8a06bab-2567-48c6-b865-a093531333ef 36177 0 2023-12-22 05:07:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:07:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:07:57.790: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9397  d8a06bab-2567-48c6-b865-a093531333ef 36178 0 2023-12-22 05:07:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:07:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:07:57.791: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9397  d8a06bab-2567-48c6-b865-a093531333ef 36179 0 2023-12-22 05:07:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:07:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/22/23 05:07:57.791
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/22/23 05:07:57.801
  STEP: changing the label value of the configmap back @ 12/22/23 05:08:07.803
  STEP: modifying the configmap a third time @ 12/22/23 05:08:07.824
  STEP: deleting the configmap @ 12/22/23 05:08:07.839
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/22/23 05:08:07.846
  Dec 22 05:08:07.847: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9397  d8a06bab-2567-48c6-b865-a093531333ef 36227 0 2023-12-22 05:07:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:08:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:08:07.847: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9397  d8a06bab-2567-48c6-b865-a093531333ef 36228 0 2023-12-22 05:07:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:08:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:08:07.847: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9397  d8a06bab-2567-48c6-b865-a093531333ef 36229 0 2023-12-22 05:07:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:08:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:08:07.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9397" for this suite. @ 12/22/23 05:08:07.854
• [10.125 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 12/22/23 05:08:07.862
  Dec 22 05:08:07.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:08:07.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:08:07.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:08:07.889
  STEP: Creating a ResourceQuota with best effort scope @ 12/22/23 05:08:07.893
  STEP: Ensuring ResourceQuota status is calculated @ 12/22/23 05:08:07.932
  STEP: Creating a ResourceQuota with not best effort scope @ 12/22/23 05:08:09.937
  STEP: Ensuring ResourceQuota status is calculated @ 12/22/23 05:08:09.944
  STEP: Creating a best-effort pod @ 12/22/23 05:08:11.948
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/22/23 05:08:11.964
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/22/23 05:08:13.968
  STEP: Deleting the pod @ 12/22/23 05:08:15.972
  STEP: Ensuring resource quota status released the pod usage @ 12/22/23 05:08:15.988
  STEP: Creating a not best-effort pod @ 12/22/23 05:08:17.997
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/22/23 05:08:18.017
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/22/23 05:08:20.022
  STEP: Deleting the pod @ 12/22/23 05:08:22.028
  STEP: Ensuring resource quota status released the pod usage @ 12/22/23 05:08:22.05
  Dec 22 05:08:24.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-960" for this suite. @ 12/22/23 05:08:24.06
• [16.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 12/22/23 05:08:24.17
  Dec 22 05:08:24.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename chunking @ 12/22/23 05:08:24.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:08:24.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:08:24.215
  STEP: creating a large number of resources @ 12/22/23 05:08:24.219
  STEP: retrieving those results in paged fashion several times @ 12/22/23 05:08:42.055
  Dec 22 05:08:42.064: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 22 05:08:42.068: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Dec 22 05:08:42.077: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 22 05:08:42.081: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 22 05:08:42.127: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 22 05:08:42.178: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Dec 22 05:08:42.228: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 22 05:08:42.279: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 22 05:08:42.329: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 22 05:08:42.378: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 22 05:08:42.428: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Dec 22 05:08:42.479: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 22 05:08:42.528: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 22 05:08:42.580: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 22 05:08:42.628: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Dec 22 05:08:42.678: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 22 05:08:42.729: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 22 05:08:42.779: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Dec 22 05:08:42.828: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Dec 22 05:08:42.878: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 22 05:08:42.929: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 22 05:08:42.979: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Dec 22 05:08:43.029: INFO: Retrieved 17/17 results with rv 36797 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY3OTcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 22 05:08:43.078: INFO: Retrieved 9/17 results with rv 36797 and continue 
  Dec 22 05:08:43.128: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 22 05:08:43.178: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Dec 22 05:08:43.229: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 22 05:08:43.281: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 22 05:08:43.329: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 22 05:08:43.378: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Dec 22 05:08:43.427: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 22 05:08:43.479: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 22 05:08:43.529: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 22 05:08:43.579: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 22 05:08:43.628: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Dec 22 05:08:43.689: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 22 05:08:43.735: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 22 05:08:43.788: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 22 05:08:43.828: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Dec 22 05:08:43.880: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 22 05:08:43.929: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 22 05:08:43.978: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Dec 22 05:08:44.029: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Dec 22 05:08:44.081: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 22 05:08:44.128: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 22 05:08:44.182: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Dec 22 05:08:44.233: INFO: Retrieved 17/17 results with rv 36800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MDAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 22 05:08:44.285: INFO: Retrieved 9/17 results with rv 36800 and continue 
  Dec 22 05:08:44.328: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 22 05:08:44.384: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Dec 22 05:08:44.428: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 22 05:08:44.478: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 22 05:08:44.528: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 22 05:08:44.578: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Dec 22 05:08:44.628: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 22 05:08:44.678: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 22 05:08:44.728: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 22 05:08:44.780: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 22 05:08:44.828: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Dec 22 05:08:44.878: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 22 05:08:44.928: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 22 05:08:44.987: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 22 05:08:45.028: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Dec 22 05:08:45.082: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 22 05:08:45.133: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 22 05:08:45.183: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Dec 22 05:08:45.243: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Dec 22 05:08:45.279: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 22 05:08:45.328: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 22 05:08:45.378: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Dec 22 05:08:45.430: INFO: Retrieved 17/17 results with rv 36812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 22 05:08:45.478: INFO: Retrieved 9/17 results with rv 36812 and continue 
  STEP: retrieving those results all at once @ 12/22/23 05:08:45.479
  Dec 22 05:08:45.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2469" for this suite. @ 12/22/23 05:08:45.58
• [21.462 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 12/22/23 05:08:45.633
  Dec 22 05:08:45.633: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 05:08:45.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:08:45.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:08:45.662
  STEP: Creating pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130 @ 12/22/23 05:08:45.666
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 05:08:47.688
  Dec 22 05:08:47.693: INFO: Initial restart count of pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c is 0
  Dec 22 05:08:47.696: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:08:49.879: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:08:51.884: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:08:53.890: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:08:55.895: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:08:57.899: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:08:59.903: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:01.908: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:03.913: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:05.918: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:07.923: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:09.928: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:11.933: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:13.937: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:15.941: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:17.945: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:19.951: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:21.956: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:23.961: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:25.967: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:27.974: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:29.979: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:31.984: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:33.988: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:35.993: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:37.998: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:40.052: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:42.057: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:44.061: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:46.065: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:48.071: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:50.076: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:52.081: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:54.090: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:56.097: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:09:58.102: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:00.107: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:02.111: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:04.125: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:06.132: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:08.137: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:10.148: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:12.154: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:14.159: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:16.164: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:18.170: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:20.176: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:22.180: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:24.186: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:26.191: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:28.196: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:30.201: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:32.208: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:34.213: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:36.218: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:38.222: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:40.227: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:42.231: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:44.235: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:46.240: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:48.245: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:50.252: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:52.266: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:54.269: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:56.276: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:10:58.279: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:00.284: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:02.291: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:04.297: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:06.304: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:08.308: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:10.314: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:12.325: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:14.329: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:16.335: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:18.339: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:20.343: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:22.349: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:24.353: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:26.357: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:28.362: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:30.367: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:32.375: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:34.380: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:36.385: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:38.389: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:40.393: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:42.399: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:44.403: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:46.410: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:48.415: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:50.423: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:52.429: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:54.436: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:56.446: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:11:58.450: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:00.455: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:02.460: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:04.466: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:06.471: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:08.475: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:10.481: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:12.485: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:14.490: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:16.498: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:18.506: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:20.519: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:22.524: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:24.532: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:26.536: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:28.540: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:30.547: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:32.552: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:34.557: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:36.563: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:38.568: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:40.574: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:42.579: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:44.584: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  Dec 22 05:12:46.588: INFO: Get pod busybox-9a86258d-3f94-4d4c-8ffe-e4b9f22cd10c in namespace container-probe-6130
  STEP: deleting the pod @ 12/22/23 05:12:48.589
  Dec 22 05:12:48.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6130" for this suite. @ 12/22/23 05:12:48.631
• [243.011 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 12/22/23 05:12:48.647
  Dec 22 05:12:48.653: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename podtemplate @ 12/22/23 05:12:48.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:12:48.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:12:48.69
  Dec 22 05:12:48.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8201" for this suite. @ 12/22/23 05:12:48.743
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 12/22/23 05:12:48.762
  Dec 22 05:12:48.762: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sched-preemption @ 12/22/23 05:12:48.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:12:48.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:12:48.786
  Dec 22 05:12:48.809: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 22 05:13:48.821: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/22/23 05:13:48.827
  Dec 22 05:13:48.912: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Dec 22 05:13:48.935: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Dec 22 05:13:48.995: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Dec 22 05:13:49.010: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Dec 22 05:13:49.060: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Dec 22 05:13:49.081: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  Dec 22 05:13:49.139: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  Dec 22 05:13:49.152: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/22/23 05:13:49.152
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/22/23 05:13:53.203
  Dec 22 05:13:57.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7688" for this suite. @ 12/22/23 05:13:57.344
• [68.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/22/23 05:13:57.356
  Dec 22 05:13:57.356: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/22/23 05:13:57.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:13:57.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:13:57.383
  STEP: Setting up the test @ 12/22/23 05:13:57.387
  STEP: Creating hostNetwork=false pod @ 12/22/23 05:13:57.387
  STEP: Creating hostNetwork=true pod @ 12/22/23 05:13:59.427
  STEP: Running the test @ 12/22/23 05:14:01.445
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/22/23 05:14:01.445
  Dec 22 05:14:01.445: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3450 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:14:01.446: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:14:01.446: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:14:01.446: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3450/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 22 05:14:01.644: INFO: Exec stderr: ""
  Dec 22 05:14:01.644: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3450 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:14:01.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:14:01.649: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:14:01.650: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3450/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 22 05:14:01.771: INFO: Exec stderr: ""
  Dec 22 05:14:01.771: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3450 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:14:01.771: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:14:01.772: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:14:01.772: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3450/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 22 05:14:01.915: INFO: Exec stderr: ""
  Dec 22 05:14:01.916: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3450 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:14:01.916: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:14:01.916: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:14:01.917: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3450/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 22 05:14:02.040: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/22/23 05:14:02.041
  Dec 22 05:14:02.041: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3450 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:14:02.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:14:02.041: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:14:02.041: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3450/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Dec 22 05:14:02.177: INFO: Exec stderr: ""
  Dec 22 05:14:02.177: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3450 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:14:02.177: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:14:02.178: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:14:02.178: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3450/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Dec 22 05:14:02.308: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/22/23 05:14:02.308
  Dec 22 05:14:02.309: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3450 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:14:02.309: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:14:02.309: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:14:02.310: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3450/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 22 05:14:02.424: INFO: Exec stderr: ""
  Dec 22 05:14:02.425: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3450 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:14:02.425: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:14:02.425: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:14:02.426: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3450/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 22 05:14:02.529: INFO: Exec stderr: ""
  Dec 22 05:14:02.529: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3450 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:14:02.529: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:14:02.530: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:14:02.530: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3450/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 22 05:14:02.636: INFO: Exec stderr: ""
  Dec 22 05:14:02.636: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3450 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:14:02.637: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:14:02.637: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:14:02.638: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3450/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 22 05:14:02.748: INFO: Exec stderr: ""
  Dec 22 05:14:02.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3450" for this suite. @ 12/22/23 05:14:02.771
• [5.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 12/22/23 05:14:02.788
  Dec 22 05:14:02.788: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 05:14:02.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:14:02.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:14:02.832
  STEP: Creating service test in namespace statefulset-320 @ 12/22/23 05:14:02.835
  STEP: Creating statefulset ss in namespace statefulset-320 @ 12/22/23 05:14:02.85
  Dec 22 05:14:03.095: INFO: Found 0 stateful pods, waiting for 1
  Dec 22 05:14:13.093: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/22/23 05:14:13.101
  STEP: Getting /status @ 12/22/23 05:14:13.113
  Dec 22 05:14:13.121: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/22/23 05:14:13.121
  Dec 22 05:14:13.135: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/22/23 05:14:13.135
  Dec 22 05:14:13.137: INFO: Observed &StatefulSet event: ADDED
  Dec 22 05:14:13.137: INFO: Found Statefulset ss in namespace statefulset-320 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 05:14:13.138: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/22/23 05:14:13.138
  Dec 22 05:14:13.138: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 22 05:14:13.146: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/22/23 05:14:13.146
  Dec 22 05:14:13.151: INFO: Observed &StatefulSet event: ADDED
  Dec 22 05:14:13.152: INFO: Observed Statefulset ss in namespace statefulset-320 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 05:14:13.152: INFO: Observed &StatefulSet event: MODIFIED
  Dec 22 05:14:13.153: INFO: Deleting all statefulset in ns statefulset-320
  Dec 22 05:14:13.159: INFO: Scaling statefulset ss to 0
  Dec 22 05:14:23.180: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 05:14:23.184: INFO: Deleting statefulset ss
  Dec 22 05:14:23.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-320" for this suite. @ 12/22/23 05:14:23.202
• [20.426 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/22/23 05:14:23.214
  Dec 22 05:14:23.215: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/22/23 05:14:23.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:14:23.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:14:23.249
  STEP: Creating 50 configmaps @ 12/22/23 05:14:23.254
  STEP: Creating RC which spawns configmap-volume pods @ 12/22/23 05:14:23.575
  Dec 22 05:14:23.592: INFO: Pod name wrapped-volume-race-ff3d3b57-9f86-424d-8699-fab9e4c560b6: Found 0 pods out of 5
  Dec 22 05:14:28.599: INFO: Pod name wrapped-volume-race-ff3d3b57-9f86-424d-8699-fab9e4c560b6: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/22/23 05:14:28.599
  STEP: Creating RC which spawns configmap-volume pods @ 12/22/23 05:14:28.624
  Dec 22 05:14:28.647: INFO: Pod name wrapped-volume-race-af6843da-1ce4-4baf-aa17-2fa33eb80bc4: Found 0 pods out of 5
  Dec 22 05:14:33.659: INFO: Pod name wrapped-volume-race-af6843da-1ce4-4baf-aa17-2fa33eb80bc4: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/22/23 05:14:33.66
  STEP: Creating RC which spawns configmap-volume pods @ 12/22/23 05:14:33.691
  Dec 22 05:14:33.722: INFO: Pod name wrapped-volume-race-b7bd16e8-2ec2-4745-94a8-96e95b1b3b5a: Found 0 pods out of 5
  Dec 22 05:14:38.744: INFO: Pod name wrapped-volume-race-b7bd16e8-2ec2-4745-94a8-96e95b1b3b5a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/22/23 05:14:38.744
  STEP: deleting ReplicationController wrapped-volume-race-b7bd16e8-2ec2-4745-94a8-96e95b1b3b5a in namespace emptydir-wrapper-899, will wait for the garbage collector to delete the pods @ 12/22/23 05:14:40.822
  Dec 22 05:14:40.885: INFO: Deleting ReplicationController wrapped-volume-race-b7bd16e8-2ec2-4745-94a8-96e95b1b3b5a took: 7.719358ms
  Dec 22 05:14:41.286: INFO: Terminating ReplicationController wrapped-volume-race-b7bd16e8-2ec2-4745-94a8-96e95b1b3b5a pods took: 401.226968ms
  STEP: deleting ReplicationController wrapped-volume-race-af6843da-1ce4-4baf-aa17-2fa33eb80bc4 in namespace emptydir-wrapper-899, will wait for the garbage collector to delete the pods @ 12/22/23 05:14:44.087
  Dec 22 05:14:44.149: INFO: Deleting ReplicationController wrapped-volume-race-af6843da-1ce4-4baf-aa17-2fa33eb80bc4 took: 7.674097ms
  Dec 22 05:14:44.250: INFO: Terminating ReplicationController wrapped-volume-race-af6843da-1ce4-4baf-aa17-2fa33eb80bc4 pods took: 100.634181ms
  STEP: deleting ReplicationController wrapped-volume-race-ff3d3b57-9f86-424d-8699-fab9e4c560b6 in namespace emptydir-wrapper-899, will wait for the garbage collector to delete the pods @ 12/22/23 05:14:47.351
  Dec 22 05:14:47.417: INFO: Deleting ReplicationController wrapped-volume-race-ff3d3b57-9f86-424d-8699-fab9e4c560b6 took: 7.619066ms
  Dec 22 05:14:47.519: INFO: Terminating ReplicationController wrapped-volume-race-ff3d3b57-9f86-424d-8699-fab9e4c560b6 pods took: 101.318736ms
  STEP: Cleaning up the configMaps @ 12/22/23 05:14:50.42
  Dec 22 05:14:50.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-899" for this suite. @ 12/22/23 05:14:50.76
• [27.552 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 12/22/23 05:14:50.768
  Dec 22 05:14:50.768: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 05:14:50.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:14:50.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:14:50.789
  STEP: creating the pod with failed condition @ 12/22/23 05:14:50.792
  STEP: updating the pod @ 12/22/23 05:16:50.802
  Dec 22 05:16:51.322: INFO: Successfully updated pod "var-expansion-92a6d106-88c1-4319-80ec-bd1a3e36b5ef"
  STEP: waiting for pod running @ 12/22/23 05:16:51.323
  STEP: deleting the pod gracefully @ 12/22/23 05:16:53.334
  Dec 22 05:16:53.334: INFO: Deleting pod "var-expansion-92a6d106-88c1-4319-80ec-bd1a3e36b5ef" in namespace "var-expansion-1488"
  Dec 22 05:16:53.342: INFO: Wait up to 5m0s for pod "var-expansion-92a6d106-88c1-4319-80ec-bd1a3e36b5ef" to be fully deleted
  Dec 22 05:17:25.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1488" for this suite. @ 12/22/23 05:17:25.449
• [154.694 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 12/22/23 05:17:25.462
  Dec 22 05:17:25.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubelet-test @ 12/22/23 05:17:25.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:25.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:25.489
  Dec 22 05:17:27.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-223" for this suite. @ 12/22/23 05:17:27.557
• [2.102 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 12/22/23 05:17:27.567
  Dec 22 05:17:27.567: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 05:17:27.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:27.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:27.593
  STEP: Creating a pod to test env composition @ 12/22/23 05:17:27.599
  STEP: Saw pod success @ 12/22/23 05:17:31.634
  Dec 22 05:17:31.638: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod var-expansion-8cd49ab7-9d26-466f-bb67-cca4e80a27c3 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 05:17:31.646
  Dec 22 05:17:31.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7537" for this suite. @ 12/22/23 05:17:31.672
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 12/22/23 05:17:31.679
  Dec 22 05:17:31.679: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:17:31.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:31.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:31.967
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:17:31.969
  STEP: Saw pod success @ 12/22/23 05:17:35.999
  Dec 22 05:17:36.006: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-42a7d078-2d8c-428e-a9ef-c38c6327d558 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:17:36.014
  Dec 22 05:17:36.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4798" for this suite. @ 12/22/23 05:17:36.037
• [4.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/22/23 05:17:36.05
  Dec 22 05:17:36.050: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename watch @ 12/22/23 05:17:36.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:36.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:36.479
  STEP: creating a new configmap @ 12/22/23 05:17:36.482
  STEP: modifying the configmap once @ 12/22/23 05:17:36.489
  STEP: modifying the configmap a second time @ 12/22/23 05:17:36.498
  STEP: deleting the configmap @ 12/22/23 05:17:36.506
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/22/23 05:17:36.513
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/22/23 05:17:36.514
  Dec 22 05:17:36.515: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4353  69721b5f-01ac-4a2a-87b1-f62a654af4f5 40317 0 2023-12-22 05:17:36 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-12-22 05:17:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:17:36.515: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4353  69721b5f-01ac-4a2a-87b1-f62a654af4f5 40318 0 2023-12-22 05:17:36 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-12-22 05:17:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:17:36.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4353" for this suite. @ 12/22/23 05:17:36.52
• [0.477 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 12/22/23 05:17:36.527
  Dec 22 05:17:36.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename endpointslice @ 12/22/23 05:17:36.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:36.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:36.55
  Dec 22 05:17:36.572: INFO: Endpoints addresses: [18.117.100.155 18.216.200.153 3.22.181.183] , ports: [6443]
  Dec 22 05:17:36.572: INFO: EndpointSlices addresses: [18.117.100.155 18.216.200.153 3.22.181.183] , ports: [6443]
  Dec 22 05:17:36.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7409" for this suite. @ 12/22/23 05:17:36.578
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 12/22/23 05:17:36.589
  Dec 22 05:17:36.589: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:17:36.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:36.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:36.614
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/22/23 05:17:36.617
  STEP: Saw pod success @ 12/22/23 05:17:40.644
  Dec 22 05:17:40.648: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-060f880e-17c8-4172-acca-bea157d6048b container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:17:40.656
  Dec 22 05:17:40.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7" for this suite. @ 12/22/23 05:17:40.678
• [4.096 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 12/22/23 05:17:40.684
  Dec 22 05:17:40.684: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sched-pred @ 12/22/23 05:17:40.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:40.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:40.711
  Dec 22 05:17:40.714: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 22 05:17:40.724: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 05:17:40.729: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-186.us-east-2.compute.internal before test
  Dec 22 05:17:40.741: INFO: cloud-controller-manager-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:55 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.741: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 05:17:40.741: INFO: etcd-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:39 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.741: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 05:17:40.741: INFO: helm-install-rke2-canal-xtrfp from kube-system started at 2023-12-22 03:42:17 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.741: INFO: 	Container helm ready: false, restart count 0
  Dec 22 05:17:40.741: INFO: helm-install-rke2-coredns-qj9lw from kube-system started at 2023-12-22 03:42:17 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.741: INFO: 	Container helm ready: false, restart count 0
  Dec 22 05:17:40.741: INFO: helm-install-rke2-ingress-nginx-vf5wl from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.741: INFO: 	Container helm ready: false, restart count 0
  Dec 22 05:17:40.741: INFO: helm-install-rke2-metrics-server-5mhqd from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container helm ready: false, restart count 0
  Dec 22 05:17:40.742: INFO: helm-install-rke2-snapshot-controller-crd-j4rkx from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container helm ready: false, restart count 0
  Dec 22 05:17:40.742: INFO: helm-install-rke2-snapshot-controller-ptzhz from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container helm ready: false, restart count 0
  Dec 22 05:17:40.742: INFO: helm-install-rke2-snapshot-validation-webhook-ggrfb from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container helm ready: false, restart count 0
  Dec 22 05:17:40.742: INFO: kube-apiserver-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:48 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: kube-controller-manager-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:53 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: kube-proxy-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:42:14 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: kube-scheduler-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:53 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: rke2-canal-7hv77 from kube-system started at 2023-12-22 03:42:26 +0000 UTC (2 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: rke2-coredns-rke2-coredns-5b8c65d87f-98jdx from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: rke2-coredns-rke2-coredns-autoscaler-945fbd459-7tnsg from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container autoscaler ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: rke2-ingress-nginx-controller-8gdc6 from kube-system started at 2023-12-22 03:43:18 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: rke2-metrics-server-544c8c66fc-jp6wb from kube-system started at 2023-12-22 03:43:10 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container metrics-server ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: rke2-snapshot-controller-59cc9cd8f4-mbf24 from kube-system started at 2023-12-22 03:43:10 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container rke2-snapshot-controller ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: rke2-snapshot-validation-webhook-54c5989b65-6wtsx from kube-system started at 2023-12-22 03:43:11 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-c85hz from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 05:17:40.742: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 05:17:40.742: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-122.us-east-2.compute.internal before test
  Dec 22 05:17:40.752: INFO: cloud-controller-manager-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.752: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: etcd-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:19 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.752: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: kube-apiserver-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:43 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.752: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: kube-controller-manager-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.752: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: kube-proxy-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:54 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.752: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: kube-scheduler-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.752: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: rke2-canal-z289m from kube-system started at 2023-12-22 03:44:49 +0000 UTC (2 container statuses recorded)
  Dec 22 05:17:40.752: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: rke2-coredns-rke2-coredns-5b8c65d87f-pdd2b from kube-system started at 2023-12-22 03:45:02 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.752: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: rke2-ingress-nginx-controller-65wsj from kube-system started at 2023-12-22 03:45:02 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.752: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-kz6fs from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 05:17:40.752: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 05:17:40.752: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-7-66.us-east-2.compute.internal before test
  Dec 22 05:17:40.763: INFO: kube-proxy-ip-172-31-7-66.us-east-2.compute.internal from kube-system started at 2023-12-22 03:46:58 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.764: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 05:17:40.764: INFO: rke2-canal-s7h7l from kube-system started at 2023-12-22 03:46:58 +0000 UTC (2 container statuses recorded)
  Dec 22 05:17:40.764: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 05:17:40.764: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 05:17:40.764: INFO: rke2-ingress-nginx-controller-tj9m5 from kube-system started at 2023-12-22 04:38:49 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.764: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 05:17:40.764: INFO: busybox-readonly-fs17d4831b-58ce-46d2-8da0-dffa6c6c823a from kubelet-test-223 started at 2023-12-22 05:17:25 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.764: INFO: 	Container busybox-readonly-fs17d4831b-58ce-46d2-8da0-dffa6c6c823a ready: true, restart count 0
  Dec 22 05:17:40.764: INFO: sonobuoy from sonobuoy started at 2023-12-22 04:25:24 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.764: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 22 05:17:40.764: INFO: sonobuoy-e2e-job-3715d743ce064b1f from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 05:17:40.764: INFO: 	Container e2e ready: true, restart count 0
  Dec 22 05:17:40.764: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 05:17:40.764: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-mwv6z from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 05:17:40.764: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 05:17:40.764: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 05:17:40.765: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-9-255.us-east-2.compute.internal before test
  Dec 22 05:17:40.775: INFO: cloud-controller-manager-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.775: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 05:17:40.775: INFO: etcd-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:39 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.775: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 05:17:40.775: INFO: kube-apiserver-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:08 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.776: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 05:17:40.776: INFO: kube-controller-manager-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.776: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 05:17:40.776: INFO: kube-proxy-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:16 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.776: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 05:17:40.776: INFO: kube-scheduler-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.776: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 05:17:40.776: INFO: rke2-canal-x86m4 from kube-system started at 2023-12-22 03:45:41 +0000 UTC (2 container statuses recorded)
  Dec 22 05:17:40.776: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 05:17:40.776: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 05:17:40.776: INFO: rke2-ingress-nginx-controller-2pcz6 from kube-system started at 2023-12-22 03:45:51 +0000 UTC (1 container statuses recorded)
  Dec 22 05:17:40.776: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 05:17:40.776: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-49277 from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 05:17:40.776: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 05:17:40.776: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/22/23 05:17:40.776
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/22/23 05:17:42.843
  STEP: Trying to apply a random label on the found node. @ 12/22/23 05:17:42.883
  STEP: verifying the node has the label kubernetes.io/e2e-93340285-f0da-4e0e-982b-3a0d8c9bad89 95 @ 12/22/23 05:17:42.899
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/22/23 05:17:42.907
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.7.66 on the node which pod4 resides and expect not scheduled @ 12/22/23 05:17:44.929
  STEP: removing the label kubernetes.io/e2e-93340285-f0da-4e0e-982b-3a0d8c9bad89 off the node ip-172-31-7-66.us-east-2.compute.internal @ 12/22/23 05:22:44.941
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-93340285-f0da-4e0e-982b-3a0d8c9bad89 @ 12/22/23 05:22:44.963
  Dec 22 05:22:44.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8065" for this suite. @ 12/22/23 05:22:45.007
• [304.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 12/22/23 05:22:45.04
  Dec 22 05:22:45.040: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 05:22:45.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:45.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:45.078
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/22/23 05:22:45.094
  Dec 22 05:22:45.094: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:22:47.071: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:22:54.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6539" for this suite. @ 12/22/23 05:22:54.737
• [9.703 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 12/22/23 05:22:54.743
  Dec 22 05:22:54.743: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename gc @ 12/22/23 05:22:54.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:54.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:54.765
  STEP: create the deployment @ 12/22/23 05:22:54.768
  W1222 05:22:54.774979      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/22/23 05:22:54.775
  STEP: delete the deployment @ 12/22/23 05:22:55.283
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/22/23 05:22:55.288
  STEP: Gathering metrics @ 12/22/23 05:22:55.808
  Dec 22 05:22:55.915: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 05:22:55.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1964" for this suite. @ 12/22/23 05:22:55.921
• [1.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 12/22/23 05:22:55.927
  Dec 22 05:22:55.928: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 05:22:55.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:55.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:55.946
  STEP: creating a Namespace @ 12/22/23 05:22:55.948
  STEP: patching the Namespace @ 12/22/23 05:22:55.968
  STEP: get the Namespace and ensuring it has the label @ 12/22/23 05:22:55.975
  Dec 22 05:22:55.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5783" for this suite. @ 12/22/23 05:22:55.982
  STEP: Destroying namespace "nspatchtest-4f29ae76-6cc5-4732-bcd9-1b7f94c0c17d-3822" for this suite. @ 12/22/23 05:22:55.987
• [0.066 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 12/22/23 05:22:55.994
  Dec 22 05:22:55.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 05:22:55.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:56.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:56.018
  Dec 22 05:22:56.034: INFO: created pod
  STEP: Saw pod success @ 12/22/23 05:23:00.046
  Dec 22 05:23:30.047: INFO: polling logs
  Dec 22 05:23:30.071: INFO: Pod logs: 
  I1222 05:22:56.976005       1 log.go:194] OK: Got token
  I1222 05:22:56.976154       1 log.go:194] validating with in-cluster discovery
  I1222 05:22:56.976599       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I1222 05:22:56.976765       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-2665:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000048ac0), NotBefore:(*jwt.NumericDate)(0xc000048bf8), IssuedAt:(*jwt.NumericDate)(0xc000048ad0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2665", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"59b9a50c-820a-4b27-9176-3c87da268616"}}}
  I1222 05:22:56.985856       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I1222 05:22:56.990097       1 log.go:194] OK: Validated signature on JWT
  I1222 05:22:56.990210       1 log.go:194] OK: Got valid claims from token!
  I1222 05:22:56.990247       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-2665:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000049b00), NotBefore:(*jwt.NumericDate)(0xc000049b28), IssuedAt:(*jwt.NumericDate)(0xc000049b08), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2665", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"59b9a50c-820a-4b27-9176-3c87da268616"}}}

  Dec 22 05:23:30.071: INFO: completed pod
  Dec 22 05:23:30.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2665" for this suite. @ 12/22/23 05:23:30.082
• [34.094 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 12/22/23 05:23:30.088
  Dec 22 05:23:30.088: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:23:30.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:23:30.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:23:30.111
  STEP: Setting up server cert @ 12/22/23 05:23:30.139
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:23:31.148
  STEP: Deploying the webhook pod @ 12/22/23 05:23:31.155
  STEP: Wait for the deployment to be ready @ 12/22/23 05:23:31.169
  Dec 22 05:23:31.183: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 05:23:33.192
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:23:33.206
  Dec 22 05:23:34.206: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/22/23 05:23:34.221
  STEP: create a pod that should be updated by the webhook @ 12/22/23 05:23:34.261
  Dec 22 05:23:34.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6865" for this suite. @ 12/22/23 05:23:34.425
  STEP: Destroying namespace "webhook-markers-9504" for this suite. @ 12/22/23 05:23:34.437
• [4.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 12/22/23 05:23:34.454
  Dec 22 05:23:34.454: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/22/23 05:23:34.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:23:34.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:23:34.486
  Dec 22 05:23:34.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:23:35.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2667" for this suite. @ 12/22/23 05:23:35.533
• [1.085 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 12/22/23 05:23:35.54
  Dec 22 05:23:35.540: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename dns @ 12/22/23 05:23:35.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:23:35.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:23:35.576
  STEP: Creating a test externalName service @ 12/22/23 05:23:35.578
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1700.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local; sleep 1; done
   @ 12/22/23 05:23:35.584
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1700.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local; sleep 1; done
   @ 12/22/23 05:23:35.584
  STEP: creating a pod to probe DNS @ 12/22/23 05:23:35.584
  STEP: submitting the pod to kubernetes @ 12/22/23 05:23:35.585
  STEP: retrieving the pod @ 12/22/23 05:23:37.607
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:23:37.611
  Dec 22 05:23:37.623: INFO: DNS probes using dns-test-818921d4-00cf-431a-a0dd-48da42a9578b succeeded

  STEP: changing the externalName to bar.example.com @ 12/22/23 05:23:37.623
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1700.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local; sleep 1; done
   @ 12/22/23 05:23:37.631
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1700.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local; sleep 1; done
   @ 12/22/23 05:23:37.631
  STEP: creating a second pod to probe DNS @ 12/22/23 05:23:37.631
  STEP: submitting the pod to kubernetes @ 12/22/23 05:23:37.631
  STEP: retrieving the pod @ 12/22/23 05:23:39.651
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:23:39.655
  Dec 22 05:23:39.666: INFO: File wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:23:39.671: INFO: File jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:23:39.671: INFO: Lookups using dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 failed for: [wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local]

  Dec 22 05:23:39.680: INFO: Pod client logs for webserver: 
  Dec 22 05:23:39.691: INFO: Pod client logs for querier: 
  Dec 22 05:23:39.700: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:23:44.659: INFO: File wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:23:44.663: INFO: File jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:23:44.663: INFO: Lookups using dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 failed for: [wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local]

  Dec 22 05:23:44.668: INFO: Pod client logs for webserver: 
  Dec 22 05:23:44.674: INFO: Pod client logs for querier: 
  Dec 22 05:23:44.681: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:23:49.659: INFO: File wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:23:49.662: INFO: File jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:23:49.662: INFO: Lookups using dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 failed for: [wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local]

  Dec 22 05:23:49.668: INFO: Pod client logs for webserver: 
  Dec 22 05:23:49.675: INFO: Pod client logs for querier: 
  Dec 22 05:23:49.683: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:23:54.659: INFO: File wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:23:54.663: INFO: File jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:23:54.664: INFO: Lookups using dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 failed for: [wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local]

  Dec 22 05:23:54.670: INFO: Pod client logs for webserver: 
  Dec 22 05:23:54.676: INFO: Pod client logs for querier: 
  Dec 22 05:23:54.682: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:23:59.659: INFO: File wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:23:59.662: INFO: File jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:23:59.662: INFO: Lookups using dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 failed for: [wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local]

  Dec 22 05:23:59.668: INFO: Pod client logs for webserver: 
  Dec 22 05:23:59.674: INFO: Pod client logs for querier: 
  Dec 22 05:23:59.682: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:24:04.660: INFO: File wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:24:04.664: INFO: File jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local from pod  dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 22 05:24:04.664: INFO: Lookups using dns-1700/dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 failed for: [wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local]

  Dec 22 05:24:04.671: INFO: Pod client logs for webserver: 
  Dec 22 05:24:04.677: INFO: Pod client logs for querier: 
  Dec 22 05:24:04.683: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:24:09.668: INFO: DNS probes using dns-test-b04873f8-6d4d-4877-a145-4cbfaa806575 succeeded

  STEP: changing the service to type=ClusterIP @ 12/22/23 05:24:09.668
  W1222 05:24:09.687615      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1700.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1700.svc.cluster.local; sleep 1; done
   @ 12/22/23 05:24:09.699
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1700.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1700.svc.cluster.local; sleep 1; done
   @ 12/22/23 05:24:09.699
  STEP: creating a third pod to probe DNS @ 12/22/23 05:24:09.699
  STEP: submitting the pod to kubernetes @ 12/22/23 05:24:09.702
  STEP: retrieving the pod @ 12/22/23 05:24:17.735
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:24:17.738
  Dec 22 05:24:17.750: INFO: DNS probes using dns-test-e4b752fe-d5d3-48fc-aa7c-48b81719fd9b succeeded

  STEP: deleting the pod @ 12/22/23 05:24:17.75
  STEP: deleting the pod @ 12/22/23 05:24:17.773
  STEP: deleting the pod @ 12/22/23 05:24:17.789
  STEP: deleting the test externalName service @ 12/22/23 05:24:17.812
  Dec 22 05:24:17.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1700" for this suite. @ 12/22/23 05:24:17.858
• [42.325 seconds]
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 12/22/23 05:24:17.865
  Dec 22 05:24:17.865: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename apf @ 12/22/23 05:24:17.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:24:17.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:24:17.91
  STEP: getting /apis @ 12/22/23 05:24:17.913
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/22/23 05:24:17.918
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/22/23 05:24:17.919
  STEP: creating @ 12/22/23 05:24:17.921
  STEP: getting @ 12/22/23 05:24:17.938
  STEP: listing @ 12/22/23 05:24:17.946
  STEP: watching @ 12/22/23 05:24:17.949
  Dec 22 05:24:17.949: INFO: starting watch
  STEP: patching @ 12/22/23 05:24:17.951
  STEP: updating @ 12/22/23 05:24:17.958
  Dec 22 05:24:17.971: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 12/22/23 05:24:17.972
  STEP: patching /status @ 12/22/23 05:24:17.976
  STEP: updating /status @ 12/22/23 05:24:17.987
  STEP: deleting @ 12/22/23 05:24:17.996
  STEP: deleting a collection @ 12/22/23 05:24:18.019
  Dec 22 05:24:18.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4274" for this suite. @ 12/22/23 05:24:18.057
• [0.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 12/22/23 05:24:18.068
  Dec 22 05:24:18.068: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 05:24:18.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:24:18.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:24:18.101
  STEP: creating the pod @ 12/22/23 05:24:18.109
  STEP: waiting for pod running @ 12/22/23 05:24:18.119
  STEP: creating a file in subpath @ 12/22/23 05:24:20.132
  Dec 22 05:24:20.139: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5906 PodName:var-expansion-c8a8b7a2-81f0-4ff2-bdc8-c542c20a5f25 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:24:20.140: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:24:20.140: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:24:20.140: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-5906/pods/var-expansion-c8a8b7a2-81f0-4ff2-bdc8-c542c20a5f25/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 12/22/23 05:24:20.385
  Dec 22 05:24:20.389: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5906 PodName:var-expansion-c8a8b7a2-81f0-4ff2-bdc8-c542c20a5f25 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:24:20.389: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:24:20.390: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:24:20.390: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-5906/pods/var-expansion-c8a8b7a2-81f0-4ff2-bdc8-c542c20a5f25/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 12/22/23 05:24:20.551
  Dec 22 05:24:21.064: INFO: Successfully updated pod "var-expansion-c8a8b7a2-81f0-4ff2-bdc8-c542c20a5f25"
  STEP: waiting for annotated pod running @ 12/22/23 05:24:21.064
  STEP: deleting the pod gracefully @ 12/22/23 05:24:21.068
  Dec 22 05:24:21.069: INFO: Deleting pod "var-expansion-c8a8b7a2-81f0-4ff2-bdc8-c542c20a5f25" in namespace "var-expansion-5906"
  Dec 22 05:24:21.083: INFO: Wait up to 5m0s for pod "var-expansion-c8a8b7a2-81f0-4ff2-bdc8-c542c20a5f25" to be fully deleted
  Dec 22 05:24:55.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5906" for this suite. @ 12/22/23 05:24:55.175
• [37.112 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 12/22/23 05:24:55.18
  Dec 22 05:24:55.180: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:24:55.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:24:55.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:24:55.204
  STEP: Creating configMap with name projected-configmap-test-volume-map-5ab80c01-f4d4-45f7-a444-5aef4f83d3b8 @ 12/22/23 05:24:55.209
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:24:55.218
  STEP: Saw pod success @ 12/22/23 05:24:59.24
  Dec 22 05:24:59.243: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-configmaps-080783a0-c836-45b2-a4dc-83338cce099a container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:24:59.248
  Dec 22 05:24:59.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1760" for this suite. @ 12/22/23 05:24:59.269
• [4.094 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 12/22/23 05:24:59.275
  Dec 22 05:24:59.275: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 05:24:59.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:24:59.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:24:59.297
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6998 @ 12/22/23 05:24:59.3
  STEP: changing the ExternalName service to type=NodePort @ 12/22/23 05:24:59.304
  STEP: creating replication controller externalname-service in namespace services-6998 @ 12/22/23 05:24:59.345
  I1222 05:24:59.357465      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6998, replica count: 2
  I1222 05:25:02.408958      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 05:25:02.409: INFO: Creating new exec pod
  Dec 22 05:25:05.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6998 exec execpodqg9b2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 22 05:25:05.659: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 22 05:25:05.659: INFO: stdout: ""
  Dec 22 05:25:06.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6998 exec execpodqg9b2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 22 05:25:06.652: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 22 05:25:06.652: INFO: stdout: "externalname-service-gtz8r"
  Dec 22 05:25:06.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6998 exec execpodqg9b2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.127.127 80'
  Dec 22 05:25:06.841: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 10.43.127.127 80\nConnection to 10.43.127.127 80 port [tcp/http] succeeded!\n"
  Dec 22 05:25:06.841: INFO: stdout: ""
  Dec 22 05:25:07.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6998 exec execpodqg9b2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.127.127 80'
  Dec 22 05:25:08.041: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.127.127 80\nConnection to 10.43.127.127 80 port [tcp/http] succeeded!\n"
  Dec 22 05:25:08.041: INFO: stdout: ""
  Dec 22 05:25:08.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6998 exec execpodqg9b2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.127.127 80'
  Dec 22 05:25:08.998: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.127.127 80\nConnection to 10.43.127.127 80 port [tcp/http] succeeded!\n"
  Dec 22 05:25:08.998: INFO: stdout: ""
  Dec 22 05:25:09.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6998 exec execpodqg9b2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.127.127 80'
  Dec 22 05:25:09.858: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.127.127 80\nConnection to 10.43.127.127 80 port [tcp/http] succeeded!\n"
  Dec 22 05:25:09.858: INFO: stdout: "externalname-service-ccrwd"
  Dec 22 05:25:09.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6998 exec execpodqg9b2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.255 31370'
  Dec 22 05:25:10.069: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.9.255 31370\nConnection to 172.31.9.255 31370 port [tcp/*] succeeded!\n"
  Dec 22 05:25:10.069: INFO: stdout: "externalname-service-gtz8r"
  Dec 22 05:25:10.070: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6998 exec execpodqg9b2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.186 31370'
  Dec 22 05:25:10.290: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.186 31370\nConnection to 172.31.3.186 31370 port [tcp/*] succeeded!\n"
  Dec 22 05:25:10.290: INFO: stdout: ""
  Dec 22 05:25:11.070: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6998 exec execpodqg9b2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.186 31370'
  Dec 22 05:25:11.271: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.186 31370\nConnection to 172.31.3.186 31370 port [tcp/*] succeeded!\n"
  Dec 22 05:25:11.271: INFO: stdout: "externalname-service-ccrwd"
  Dec 22 05:25:11.271: INFO: Cleaning up the ExternalName to NodePort test service
  Dec 22 05:25:11.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6998" for this suite. @ 12/22/23 05:25:11.311
• [12.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 12/22/23 05:25:11.325
  Dec 22 05:25:11.325: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename runtimeclass @ 12/22/23 05:25:11.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:25:11.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:25:11.346
  Dec 22 05:25:11.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8712" for this suite. @ 12/22/23 05:25:11.392
• [0.078 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 12/22/23 05:25:11.401
  Dec 22 05:25:11.401: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:25:11.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:25:11.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:25:11.422
  STEP: creating all guestbook components @ 12/22/23 05:25:11.429
  Dec 22 05:25:11.430: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Dec 22 05:25:11.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 create -f -'
  Dec 22 05:25:11.645: INFO: stderr: ""
  Dec 22 05:25:11.646: INFO: stdout: "service/agnhost-replica created\n"
  Dec 22 05:25:11.646: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Dec 22 05:25:11.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 create -f -'
  Dec 22 05:25:11.845: INFO: stderr: ""
  Dec 22 05:25:11.845: INFO: stdout: "service/agnhost-primary created\n"
  Dec 22 05:25:11.845: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Dec 22 05:25:11.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 create -f -'
  Dec 22 05:25:12.024: INFO: stderr: ""
  Dec 22 05:25:12.024: INFO: stdout: "service/frontend created\n"
  Dec 22 05:25:12.024: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Dec 22 05:25:12.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 create -f -'
  Dec 22 05:25:12.136: INFO: stderr: ""
  Dec 22 05:25:12.137: INFO: stdout: "deployment.apps/frontend created\n"
  Dec 22 05:25:12.137: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Dec 22 05:25:12.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 create -f -'
  Dec 22 05:25:12.278: INFO: stderr: ""
  Dec 22 05:25:12.278: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Dec 22 05:25:12.278: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Dec 22 05:25:12.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 create -f -'
  Dec 22 05:25:12.428: INFO: stderr: ""
  Dec 22 05:25:12.428: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/22/23 05:25:12.428
  Dec 22 05:25:12.428: INFO: Waiting for all frontend pods to be Running.
  Dec 22 05:25:17.481: INFO: Waiting for frontend to serve content.
  Dec 22 05:25:17.494: INFO: Trying to add a new entry to the guestbook.
  Dec 22 05:25:17.508: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/22/23 05:25:17.52
  Dec 22 05:25:17.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 delete --grace-period=0 --force -f -'
  Dec 22 05:25:17.641: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:25:17.641: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/22/23 05:25:17.641
  Dec 22 05:25:17.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 delete --grace-period=0 --force -f -'
  Dec 22 05:25:17.784: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:25:17.784: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/22/23 05:25:17.784
  Dec 22 05:25:17.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 delete --grace-period=0 --force -f -'
  Dec 22 05:25:17.897: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:25:17.897: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/22/23 05:25:17.897
  Dec 22 05:25:17.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 delete --grace-period=0 --force -f -'
  Dec 22 05:25:17.990: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:25:17.990: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/22/23 05:25:17.99
  Dec 22 05:25:17.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 delete --grace-period=0 --force -f -'
  Dec 22 05:25:18.100: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:25:18.100: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/22/23 05:25:18.1
  Dec 22 05:25:18.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6208 delete --grace-period=0 --force -f -'
  Dec 22 05:25:18.394: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:25:18.394: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Dec 22 05:25:18.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6208" for this suite. @ 12/22/23 05:25:18.4
• [7.008 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 12/22/23 05:25:18.41
  Dec 22 05:25:18.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 05:25:18.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:25:18.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:25:18.463
  Dec 22 05:25:18.476: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/22/23 05:25:20.567
  Dec 22 05:25:20.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 --namespace=crd-publish-openapi-8242 create -f -'
  Dec 22 05:25:20.725: INFO: stderr: ""
  Dec 22 05:25:20.725: INFO: stdout: "e2e-test-crd-publish-openapi-7664-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Dec 22 05:25:20.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 --namespace=crd-publish-openapi-8242 delete e2e-test-crd-publish-openapi-7664-crds test-foo'
  Dec 22 05:25:20.912: INFO: stderr: ""
  Dec 22 05:25:20.912: INFO: stdout: "e2e-test-crd-publish-openapi-7664-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Dec 22 05:25:20.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 --namespace=crd-publish-openapi-8242 apply -f -'
  Dec 22 05:25:21.067: INFO: stderr: ""
  Dec 22 05:25:21.067: INFO: stdout: "e2e-test-crd-publish-openapi-7664-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Dec 22 05:25:21.067: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 --namespace=crd-publish-openapi-8242 delete e2e-test-crd-publish-openapi-7664-crds test-foo'
  Dec 22 05:25:21.243: INFO: stderr: ""
  Dec 22 05:25:21.243: INFO: stdout: "e2e-test-crd-publish-openapi-7664-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/22/23 05:25:21.243
  Dec 22 05:25:21.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 --namespace=crd-publish-openapi-8242 create -f -'
  Dec 22 05:25:21.388: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/22/23 05:25:21.388
  Dec 22 05:25:21.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 --namespace=crd-publish-openapi-8242 create -f -'
  Dec 22 05:25:21.514: INFO: rc: 1
  Dec 22 05:25:21.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 --namespace=crd-publish-openapi-8242 apply -f -'
  Dec 22 05:25:21.654: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/22/23 05:25:21.654
  Dec 22 05:25:21.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 --namespace=crd-publish-openapi-8242 create -f -'
  Dec 22 05:25:21.755: INFO: rc: 1
  Dec 22 05:25:21.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 --namespace=crd-publish-openapi-8242 apply -f -'
  Dec 22 05:25:21.844: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/22/23 05:25:21.844
  Dec 22 05:25:21.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 explain e2e-test-crd-publish-openapi-7664-crds'
  Dec 22 05:25:21.929: INFO: stderr: ""
  Dec 22 05:25:21.929: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7664-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/22/23 05:25:21.929
  Dec 22 05:25:21.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 explain e2e-test-crd-publish-openapi-7664-crds.metadata'
  Dec 22 05:25:22.014: INFO: stderr: ""
  Dec 22 05:25:22.015: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7664-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Dec 22 05:25:22.015: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 explain e2e-test-crd-publish-openapi-7664-crds.spec'
  Dec 22 05:25:22.089: INFO: stderr: ""
  Dec 22 05:25:22.089: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7664-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Dec 22 05:25:22.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 explain e2e-test-crd-publish-openapi-7664-crds.spec.bars'
  Dec 22 05:25:22.169: INFO: stderr: ""
  Dec 22 05:25:22.170: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7664-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/22/23 05:25:22.17
  Dec 22 05:25:22.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-8242 explain e2e-test-crd-publish-openapi-7664-crds.spec.bars2'
  Dec 22 05:25:22.248: INFO: rc: 1
  Dec 22 05:25:24.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8242" for this suite. @ 12/22/23 05:25:24.508
• [6.104 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 12/22/23 05:25:24.514
  Dec 22 05:25:24.514: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:25:24.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:25:24.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:25:24.538
  STEP: Setting up server cert @ 12/22/23 05:25:24.563
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:25:25.974
  STEP: Deploying the webhook pod @ 12/22/23 05:25:25.981
  STEP: Wait for the deployment to be ready @ 12/22/23 05:25:25.992
  Dec 22 05:25:25.999: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 05:25:28.012
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:25:28.032
  Dec 22 05:25:29.032: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/22/23 05:25:29.039
  STEP: create a pod @ 12/22/23 05:25:29.061
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/22/23 05:25:31.085
  Dec 22 05:25:31.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=webhook-8577 attach --namespace=webhook-8577 to-be-attached-pod -i -c=container1'
  Dec 22 05:25:31.189: INFO: rc: 1
  Dec 22 05:25:31.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8577" for this suite. @ 12/22/23 05:25:31.258
  STEP: Destroying namespace "webhook-markers-5819" for this suite. @ 12/22/23 05:25:31.267
• [6.765 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 12/22/23 05:25:31.28
  Dec 22 05:25:31.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 05:25:31.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:25:31.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:25:31.305
  STEP: Creating ServiceAccount "e2e-sa-9dbgl"  @ 12/22/23 05:25:31.309
  Dec 22 05:25:31.315: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-9dbgl"  @ 12/22/23 05:25:31.315
  Dec 22 05:25:31.326: INFO: AutomountServiceAccountToken: true
  Dec 22 05:25:31.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1770" for this suite. @ 12/22/23 05:25:31.335
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 12/22/23 05:25:31.343
  Dec 22 05:25:31.343: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:25:31.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:25:31.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:25:31.363
  STEP: Creating configMap with name cm-test-opt-del-1453524e-4118-42ff-b012-4fd5087750df @ 12/22/23 05:25:31.372
  STEP: Creating configMap with name cm-test-opt-upd-60a222a4-6d51-49b2-9fec-95257e2b6b90 @ 12/22/23 05:25:31.377
  STEP: Creating the pod @ 12/22/23 05:25:31.381
  STEP: Deleting configmap cm-test-opt-del-1453524e-4118-42ff-b012-4fd5087750df @ 12/22/23 05:25:35.433
  STEP: Updating configmap cm-test-opt-upd-60a222a4-6d51-49b2-9fec-95257e2b6b90 @ 12/22/23 05:25:35.439
  STEP: Creating configMap with name cm-test-opt-create-5056fd45-cb87-43d9-82ff-6889dcc74c00 @ 12/22/23 05:25:35.444
  STEP: waiting to observe update in volume @ 12/22/23 05:25:35.449
  Dec 22 05:26:13.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6186" for this suite. @ 12/22/23 05:26:13.645
• [42.308 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 12/22/23 05:26:13.652
  Dec 22 05:26:13.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl-logs @ 12/22/23 05:26:13.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:26:13.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:26:13.674
  STEP: creating an pod @ 12/22/23 05:26:13.677
  Dec 22 05:26:13.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-logs-9569 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Dec 22 05:26:13.772: INFO: stderr: ""
  Dec 22 05:26:13.772: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/22/23 05:26:13.772
  Dec 22 05:26:13.772: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Dec 22 05:26:15.788: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/22/23 05:26:15.788
  Dec 22 05:26:15.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-logs-9569 logs logs-generator logs-generator'
  Dec 22 05:26:15.872: INFO: stderr: ""
  Dec 22 05:26:15.872: INFO: stdout: "I1222 05:26:14.743873       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/s45p 439\nI1222 05:26:14.943981       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/55b8 435\nI1222 05:26:15.144549       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/jhn 217\nI1222 05:26:15.344890       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/q6n 418\nI1222 05:26:15.544301       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/tn89 224\nI1222 05:26:15.744855       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/nlz5 476\n"
  STEP: limiting log lines @ 12/22/23 05:26:15.872
  Dec 22 05:26:15.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-logs-9569 logs logs-generator logs-generator --tail=1'
  Dec 22 05:26:15.955: INFO: stderr: ""
  Dec 22 05:26:15.955: INFO: stdout: "I1222 05:26:15.944362       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/nn5 534\n"
  Dec 22 05:26:15.955: INFO: got output "I1222 05:26:15.944362       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/nn5 534\n"
  STEP: limiting log bytes @ 12/22/23 05:26:15.955
  Dec 22 05:26:15.955: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-logs-9569 logs logs-generator logs-generator --limit-bytes=1'
  Dec 22 05:26:16.048: INFO: stderr: ""
  Dec 22 05:26:16.048: INFO: stdout: "I"
  Dec 22 05:26:16.048: INFO: got output "I"
  STEP: exposing timestamps @ 12/22/23 05:26:16.048
  Dec 22 05:26:16.049: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-logs-9569 logs logs-generator logs-generator --tail=1 --timestamps'
  Dec 22 05:26:16.146: INFO: stderr: ""
  Dec 22 05:26:16.146: INFO: stdout: "2023-12-22T05:26:15.944503985Z I1222 05:26:15.944362       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/nn5 534\n"
  Dec 22 05:26:16.147: INFO: got output "2023-12-22T05:26:15.944503985Z I1222 05:26:15.944362       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/nn5 534\n"
  STEP: restricting to a time range @ 12/22/23 05:26:16.147
  Dec 22 05:26:18.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-logs-9569 logs logs-generator logs-generator --since=1s'
  Dec 22 05:26:18.738: INFO: stderr: ""
  Dec 22 05:26:18.738: INFO: stdout: "I1222 05:26:17.744320       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/hrlp 239\nI1222 05:26:17.944651       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/x86 536\nI1222 05:26:18.143981       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/5fkl 325\nI1222 05:26:18.344285       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/2dqx 390\nI1222 05:26:18.544461       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/fwb 437\n"
  Dec 22 05:26:18.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-logs-9569 logs logs-generator logs-generator --since=24h'
  Dec 22 05:26:18.823: INFO: stderr: ""
  Dec 22 05:26:18.823: INFO: stdout: "I1222 05:26:14.743873       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/s45p 439\nI1222 05:26:14.943981       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/55b8 435\nI1222 05:26:15.144549       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/jhn 217\nI1222 05:26:15.344890       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/q6n 418\nI1222 05:26:15.544301       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/tn89 224\nI1222 05:26:15.744855       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/nlz5 476\nI1222 05:26:15.944362       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/nn5 534\nI1222 05:26:16.144561       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/xc5 455\nI1222 05:26:16.343886       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/ggt 251\nI1222 05:26:16.544310       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/pd6 461\nI1222 05:26:16.744605       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/p7m 546\nI1222 05:26:16.943912       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/h2l 264\nI1222 05:26:17.144189       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/g5j 576\nI1222 05:26:17.344489       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/745r 583\nI1222 05:26:17.543977       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/tsp 412\nI1222 05:26:17.744320       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/hrlp 239\nI1222 05:26:17.944651       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/x86 536\nI1222 05:26:18.143981       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/5fkl 325\nI1222 05:26:18.344285       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/2dqx 390\nI1222 05:26:18.544461       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/fwb 437\nI1222 05:26:18.744645       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/nhd 363\n"
  Dec 22 05:26:18.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-logs-9569 delete pod logs-generator'
  Dec 22 05:26:20.038: INFO: stderr: ""
  Dec 22 05:26:20.038: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Dec 22 05:26:20.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9569" for this suite. @ 12/22/23 05:26:20.043
• [6.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 12/22/23 05:26:20.049
  Dec 22 05:26:20.049: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:26:20.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:26:20.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:26:20.069
  STEP: creating Agnhost RC @ 12/22/23 05:26:20.072
  Dec 22 05:26:20.072: INFO: namespace kubectl-4162
  Dec 22 05:26:20.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-4162 create -f -'
  Dec 22 05:26:20.246: INFO: stderr: ""
  Dec 22 05:26:20.246: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/22/23 05:26:20.246
  Dec 22 05:26:21.250: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 05:26:21.250: INFO: Found 0 / 1
  Dec 22 05:26:22.250: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 05:26:22.250: INFO: Found 1 / 1
  Dec 22 05:26:22.250: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Dec 22 05:26:22.253: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 05:26:22.253: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 22 05:26:22.253: INFO: wait on agnhost-primary startup in kubectl-4162 
  Dec 22 05:26:22.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-4162 logs agnhost-primary-fmxpt agnhost-primary'
  Dec 22 05:26:22.493: INFO: stderr: ""
  Dec 22 05:26:22.493: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 12/22/23 05:26:22.493
  Dec 22 05:26:22.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-4162 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Dec 22 05:26:22.711: INFO: stderr: ""
  Dec 22 05:26:22.711: INFO: stdout: "service/rm2 exposed\n"
  Dec 22 05:26:22.716: INFO: Service rm2 in namespace kubectl-4162 found.
  STEP: exposing service @ 12/22/23 05:26:24.723
  Dec 22 05:26:24.723: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-4162 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Dec 22 05:26:24.879: INFO: stderr: ""
  Dec 22 05:26:24.879: INFO: stdout: "service/rm3 exposed\n"
  Dec 22 05:26:24.882: INFO: Service rm3 in namespace kubectl-4162 found.
  Dec 22 05:26:26.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4162" for this suite. @ 12/22/23 05:26:26.891
• [6.848 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 12/22/23 05:26:26.898
  Dec 22 05:26:26.898: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:26:26.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:26:26.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:26:26.927
  STEP: Counting existing ResourceQuota @ 12/22/23 05:26:26.931
  STEP: Creating a ResourceQuota @ 12/22/23 05:26:31.935
  STEP: Ensuring resource quota status is calculated @ 12/22/23 05:26:31.941
  Dec 22 05:26:33.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1063" for this suite. @ 12/22/23 05:26:33.949
• [7.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/22/23 05:26:33.958
  Dec 22 05:26:33.958: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename subpath @ 12/22/23 05:26:33.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:26:33.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:26:33.979
  STEP: Setting up data @ 12/22/23 05:26:33.981
  STEP: Creating pod pod-subpath-test-configmap-qmt9 @ 12/22/23 05:26:33.991
  STEP: Creating a pod to test atomic-volume-subpath @ 12/22/23 05:26:33.991
  STEP: Saw pod success @ 12/22/23 05:26:58.063
  Dec 22 05:26:58.066: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-subpath-test-configmap-qmt9 container test-container-subpath-configmap-qmt9: <nil>
  STEP: delete the pod @ 12/22/23 05:26:58.073
  STEP: Deleting pod pod-subpath-test-configmap-qmt9 @ 12/22/23 05:26:58.091
  Dec 22 05:26:58.092: INFO: Deleting pod "pod-subpath-test-configmap-qmt9" in namespace "subpath-2424"
  Dec 22 05:26:58.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2424" for this suite. @ 12/22/23 05:26:58.098
• [24.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 12/22/23 05:26:58.113
  Dec 22 05:26:58.113: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename dns @ 12/22/23 05:26:58.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:26:58.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:26:58.133
  STEP: Creating a test headless service @ 12/22/23 05:26:58.137
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9376.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9376.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9376.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9376.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9376.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9376.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9376.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9376.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9376.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 244.70.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.70.244_udp@PTR;check="$$(dig +tcp +noall +answer +search 244.70.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.70.244_tcp@PTR;sleep 1; done
   @ 12/22/23 05:26:58.162
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9376.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9376.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9376.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9376.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9376.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9376.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9376.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9376.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9376.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9376.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 244.70.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.70.244_udp@PTR;check="$$(dig +tcp +noall +answer +search 244.70.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.70.244_tcp@PTR;sleep 1; done
   @ 12/22/23 05:26:58.162
  STEP: creating a pod to probe DNS @ 12/22/23 05:26:58.162
  STEP: submitting the pod to kubernetes @ 12/22/23 05:26:58.162
  STEP: retrieving the pod @ 12/22/23 05:27:00.189
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:27:00.192
  Dec 22 05:27:00.200: INFO: Unable to read wheezy_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:00.203: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:00.206: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:00.210: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:00.225: INFO: Unable to read jessie_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:00.228: INFO: Unable to read jessie_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:00.232: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:00.235: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:00.247: INFO: Lookups using dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6 failed for: [wheezy_udp@dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_udp@dns-test-service.dns-9376.svc.cluster.local jessie_tcp@dns-test-service.dns-9376.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local]

  Dec 22 05:27:00.255: INFO: Pod client logs for webserver: 
  Dec 22 05:27:00.261: INFO: Pod client logs for querier: 
  Dec 22 05:27:00.266: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:27:05.198: INFO: Unable to read wheezy_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:05.201: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:05.205: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:05.208: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:05.224: INFO: Unable to read jessie_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:05.228: INFO: Unable to read jessie_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:05.232: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:05.235: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:05.250: INFO: Lookups using dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6 failed for: [wheezy_udp@dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_udp@dns-test-service.dns-9376.svc.cluster.local jessie_tcp@dns-test-service.dns-9376.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local]

  Dec 22 05:27:05.258: INFO: Pod client logs for webserver: 
  Dec 22 05:27:05.264: INFO: Pod client logs for querier: 
  Dec 22 05:27:05.279: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:27:10.197: INFO: Unable to read wheezy_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:10.201: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:10.204: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:10.208: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:10.223: INFO: Unable to read jessie_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:10.227: INFO: Unable to read jessie_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:10.230: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:10.234: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:10.248: INFO: Lookups using dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6 failed for: [wheezy_udp@dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_udp@dns-test-service.dns-9376.svc.cluster.local jessie_tcp@dns-test-service.dns-9376.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local]

  Dec 22 05:27:10.258: INFO: Pod client logs for webserver: 
  Dec 22 05:27:10.263: INFO: Pod client logs for querier: 
  Dec 22 05:27:10.269: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:27:15.197: INFO: Unable to read wheezy_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:15.201: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:15.204: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:15.208: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:15.225: INFO: Unable to read jessie_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:15.228: INFO: Unable to read jessie_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:15.233: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:15.236: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:15.250: INFO: Lookups using dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6 failed for: [wheezy_udp@dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_udp@dns-test-service.dns-9376.svc.cluster.local jessie_tcp@dns-test-service.dns-9376.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local]

  Dec 22 05:27:15.257: INFO: Pod client logs for webserver: 
  Dec 22 05:27:15.263: INFO: Pod client logs for querier: 
  Dec 22 05:27:15.269: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:27:20.197: INFO: Unable to read wheezy_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:20.200: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:20.203: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:20.206: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:20.222: INFO: Unable to read jessie_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:20.225: INFO: Unable to read jessie_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:20.228: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:20.231: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:20.242: INFO: Lookups using dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6 failed for: [wheezy_udp@dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_udp@dns-test-service.dns-9376.svc.cluster.local jessie_tcp@dns-test-service.dns-9376.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local]

  Dec 22 05:27:20.250: INFO: Pod client logs for webserver: 
  Dec 22 05:27:20.256: INFO: Pod client logs for querier: 
  Dec 22 05:27:20.265: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:27:25.202: INFO: Unable to read wheezy_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:25.208: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:25.211: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:25.215: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:25.241: INFO: Unable to read jessie_udp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:25.255: INFO: Unable to read jessie_tcp@dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:25.260: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:25.265: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local from pod dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6: the server could not find the requested resource (get pods dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6)
  Dec 22 05:27:25.285: INFO: Lookups using dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6 failed for: [wheezy_udp@dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@dns-test-service.dns-9376.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_udp@dns-test-service.dns-9376.svc.cluster.local jessie_tcp@dns-test-service.dns-9376.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9376.svc.cluster.local]

  Dec 22 05:27:25.307: INFO: Pod client logs for webserver: 
  Dec 22 05:27:25.320: INFO: Pod client logs for querier: 
  Dec 22 05:27:25.330: INFO: Pod client logs for jessie-querier: 
  Dec 22 05:27:30.264: INFO: DNS probes using dns-9376/dns-test-3ff90028-e4f1-46c1-a48a-07aa268339d6 succeeded

  STEP: deleting the pod @ 12/22/23 05:27:30.265
  STEP: deleting the test service @ 12/22/23 05:27:30.287
  STEP: deleting the test headless service @ 12/22/23 05:27:30.327
  Dec 22 05:27:30.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9376" for this suite. @ 12/22/23 05:27:30.383
• [32.278 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 12/22/23 05:27:30.392
  Dec 22 05:27:30.392: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:27:30.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:27:30.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:27:30.418
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/22/23 05:27:30.422
  STEP: Saw pod success @ 12/22/23 05:27:34.446
  Dec 22 05:27:34.450: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-768017f5-bbb4-4eee-95d9-047227f28cdc container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:27:34.458
  Dec 22 05:27:34.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1570" for this suite. @ 12/22/23 05:27:34.487
• [4.101 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 12/22/23 05:27:34.493
  Dec 22 05:27:34.493: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:27:34.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:27:34.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:27:34.527
  STEP: Setting up server cert @ 12/22/23 05:27:34.557
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:27:35.409
  STEP: Deploying the webhook pod @ 12/22/23 05:27:35.418
  STEP: Wait for the deployment to be ready @ 12/22/23 05:27:35.431
  Dec 22 05:27:35.447: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 05:27:37.458
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:27:37.468
  Dec 22 05:27:38.468: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/22/23 05:27:38.474
  STEP: create a namespace for the webhook @ 12/22/23 05:27:38.495
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/22/23 05:27:38.513
  Dec 22 05:27:38.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8826" for this suite. @ 12/22/23 05:27:38.596
  STEP: Destroying namespace "webhook-markers-1747" for this suite. @ 12/22/23 05:27:38.607
  STEP: Destroying namespace "fail-closed-namespace-4658" for this suite. @ 12/22/23 05:27:38.617
• [4.130 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 12/22/23 05:27:38.629
  Dec 22 05:27:38.629: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 05:27:38.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:27:38.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:27:38.652
  STEP: Creating a pod to test downward api env vars @ 12/22/23 05:27:38.655
  STEP: Saw pod success @ 12/22/23 05:27:42.678
  Dec 22 05:27:42.680: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downward-api-3e76ca43-2c7c-40da-acc5-feb3d8c209d6 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 05:27:42.688
  Dec 22 05:27:42.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1353" for this suite. @ 12/22/23 05:27:42.709
• [4.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/22/23 05:27:42.716
  Dec 22 05:27:42.716: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename init-container @ 12/22/23 05:27:42.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:27:42.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:27:42.739
  STEP: creating the pod @ 12/22/23 05:27:42.742
  Dec 22 05:27:42.742: INFO: PodSpec: initContainers in spec.initContainers
  Dec 22 05:28:25.385: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-377683b2-8272-4e30-9f39-35f1f0443f5f", GenerateName:"", Namespace:"init-container-6084", SelfLink:"", UID:"14bdcec2-0603-4304-a8e0-9166b602cf09", ResourceVersion:"44168", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 27, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"742772237"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"f14fe837c4f3ece9f78b7de1ab3d8cc9c900721a694c2c478f9c107bcf4178cb", "cni.projectcalico.org/podIP":"10.42.3.15/32", "cni.projectcalico.org/podIPs":"10.42.3.15/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 27, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a6c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 27, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 28, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a750), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-pj9qx", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0040b4be0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-pj9qx", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-pj9qx", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-pj9qx", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0032533e8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-7-66.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0007a5180), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003253460)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003253480)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003253488), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00325348c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0047f8250), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 22, 5, 27, 44, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 22, 5, 27, 42, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 22, 5, 27, 42, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 22, 5, 27, 42, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 22, 5, 27, 42, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.7.66", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.7.66"}}, PodIP:"10.42.3.15", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.3.15"}}, StartTime:time.Date(2023, time.December, 22, 5, 27, 42, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0007a52d0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0007a5340)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://8a46d2712fbe11d49c43c60ba437fe1fc2960143bb502bf63a302e1261a59b3d", Started:(*bool)(0xc00325352a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0040b4c40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00325353f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0040b4c20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00325350f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Dec 22 05:28:25.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6084" for this suite. @ 12/22/23 05:28:25.396
• [42.685 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 12/22/23 05:28:25.402
  Dec 22 05:28:25.402: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:28:25.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:28:25.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:28:25.428
  STEP: Setting up server cert @ 12/22/23 05:28:25.46
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:28:26.286
  STEP: Deploying the webhook pod @ 12/22/23 05:28:26.294
  STEP: Wait for the deployment to be ready @ 12/22/23 05:28:26.305
  Dec 22 05:28:26.317: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 05:28:28.327
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:28:28.337
  Dec 22 05:28:29.338: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 22 05:28:29.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8862-crds.webhook.example.com via the AdmissionRegistration API @ 12/22/23 05:28:29.855
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/22/23 05:28:29.875
  Dec 22 05:28:32.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8558" for this suite. @ 12/22/23 05:28:32.494
  STEP: Destroying namespace "webhook-markers-6881" for this suite. @ 12/22/23 05:28:32.499
• [7.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 12/22/23 05:28:32.506
  Dec 22 05:28:32.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 05:28:32.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:28:32.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:28:32.729
  STEP: reading a file in the container @ 12/22/23 05:28:34.761
  Dec 22 05:28:34.761: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-786 pod-service-account-23af8e12-c45f-42f9-80c5-5d4d32476fbd -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 12/22/23 05:28:34.966
  Dec 22 05:28:34.966: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-786 pod-service-account-23af8e12-c45f-42f9-80c5-5d4d32476fbd -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/22/23 05:28:35.168
  Dec 22 05:28:35.168: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-786 pod-service-account-23af8e12-c45f-42f9-80c5-5d4d32476fbd -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Dec 22 05:28:35.357: INFO: Got root ca configmap in namespace "svcaccounts-786"
  Dec 22 05:28:35.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-786" for this suite. @ 12/22/23 05:28:35.362
• [2.861 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/22/23 05:28:35.368
  Dec 22 05:28:35.368: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename proxy @ 12/22/23 05:28:35.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:28:35.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:28:35.39
  Dec 22 05:28:35.393: INFO: Creating pod...
  Dec 22 05:28:37.411: INFO: Creating service...
  Dec 22 05:28:37.424: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/pods/agnhost/proxy/some/path/with/DELETE
  Dec 22 05:28:37.443: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 22 05:28:37.444: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/pods/agnhost/proxy/some/path/with/GET
  Dec 22 05:28:37.447: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Dec 22 05:28:37.447: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/pods/agnhost/proxy/some/path/with/HEAD
  Dec 22 05:28:37.451: INFO: http.Client request:HEAD | StatusCode:200
  Dec 22 05:28:37.451: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/pods/agnhost/proxy/some/path/with/OPTIONS
  Dec 22 05:28:37.454: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 22 05:28:37.454: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/pods/agnhost/proxy/some/path/with/PATCH
  Dec 22 05:28:37.456: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 22 05:28:37.456: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/pods/agnhost/proxy/some/path/with/POST
  Dec 22 05:28:37.459: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 22 05:28:37.459: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/pods/agnhost/proxy/some/path/with/PUT
  Dec 22 05:28:37.462: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 22 05:28:37.462: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/services/test-service/proxy/some/path/with/DELETE
  Dec 22 05:28:37.465: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 22 05:28:37.465: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/services/test-service/proxy/some/path/with/GET
  Dec 22 05:28:37.468: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Dec 22 05:28:37.468: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/services/test-service/proxy/some/path/with/HEAD
  Dec 22 05:28:37.477: INFO: http.Client request:HEAD | StatusCode:200
  Dec 22 05:28:37.477: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/services/test-service/proxy/some/path/with/OPTIONS
  Dec 22 05:28:37.492: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 22 05:28:37.492: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/services/test-service/proxy/some/path/with/PATCH
  Dec 22 05:28:37.496: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 22 05:28:37.497: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/services/test-service/proxy/some/path/with/POST
  Dec 22 05:28:37.501: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 22 05:28:37.501: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8392/services/test-service/proxy/some/path/with/PUT
  Dec 22 05:28:37.506: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 22 05:28:37.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8392" for this suite. @ 12/22/23 05:28:37.514
• [2.154 seconds]
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 12/22/23 05:28:37.522
  Dec 22 05:28:37.522: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 05:28:37.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:28:37.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:28:37.55
  STEP: Create a Replicaset @ 12/22/23 05:28:37.565
  STEP: Verify that the required pods have come up. @ 12/22/23 05:28:37.572
  Dec 22 05:28:37.579: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 22 05:28:42.601: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 05:28:42.601
  STEP: Getting /status @ 12/22/23 05:28:42.601
  Dec 22 05:28:42.605: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/22/23 05:28:42.605
  Dec 22 05:28:42.619: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/22/23 05:28:42.619
  Dec 22 05:28:42.626: INFO: Observed &ReplicaSet event: ADDED
  Dec 22 05:28:42.626: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 05:28:42.626: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 05:28:42.627: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 05:28:42.627: INFO: Found replicaset test-rs in namespace replicaset-3839 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 22 05:28:42.627: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/22/23 05:28:42.627
  Dec 22 05:28:42.627: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 22 05:28:42.636: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/22/23 05:28:42.636
  Dec 22 05:28:42.639: INFO: Observed &ReplicaSet event: ADDED
  Dec 22 05:28:42.639: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 05:28:42.639: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 05:28:42.640: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 05:28:42.640: INFO: Observed replicaset test-rs in namespace replicaset-3839 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 05:28:42.640: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 05:28:42.640: INFO: Found replicaset test-rs in namespace replicaset-3839 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Dec 22 05:28:42.640: INFO: Replicaset test-rs has a patched status
  Dec 22 05:28:42.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3839" for this suite. @ 12/22/23 05:28:42.645
• [5.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 12/22/23 05:28:42.665
  Dec 22 05:28:42.666: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 05:28:42.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:28:42.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:28:42.697
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:28:42.701
  STEP: Saw pod success @ 12/22/23 05:28:46.727
  Dec 22 05:28:46.730: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-ddd357f4-c43d-4fa5-a130-32a4e71b3d78 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:28:46.738
  Dec 22 05:28:46.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3090" for this suite. @ 12/22/23 05:28:46.754
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 12/22/23 05:28:46.762
  Dec 22 05:28:46.762: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 05:28:46.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:28:46.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:28:46.785
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:28:46.789
  STEP: Saw pod success @ 12/22/23 05:28:50.82
  Dec 22 05:28:50.823: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-cea27395-0e00-4cdc-90d9-33dcef727193 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:28:50.829
  Dec 22 05:28:50.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2147" for this suite. @ 12/22/23 05:28:50.849
• [4.092 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/22/23 05:28:50.854
  Dec 22 05:28:50.854: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename events @ 12/22/23 05:28:50.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:28:50.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:28:50.877
  STEP: Create set of events @ 12/22/23 05:28:50.88
  STEP: get a list of Events with a label in the current namespace @ 12/22/23 05:28:50.897
  STEP: delete a list of events @ 12/22/23 05:28:50.902
  Dec 22 05:28:50.902: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/22/23 05:28:50.917
  Dec 22 05:28:50.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2219" for this suite. @ 12/22/23 05:28:50.923
• [0.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/22/23 05:28:50.945
  Dec 22 05:28:50.945: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename hostport @ 12/22/23 05:28:50.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:28:50.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:28:50.967
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/22/23 05:28:50.974
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.3.186 on the node which pod1 resides and expect scheduled @ 12/22/23 05:28:55.006
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.3.186 but use UDP protocol on the node which pod2 resides @ 12/22/23 05:28:59.029
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/22/23 05:29:03.081
  Dec 22 05:29:03.081: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.3.186 http://127.0.0.1:54323/hostname] Namespace:hostport-4753 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:29:03.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:29:03.082: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:29:03.082: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-4753/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.3.186+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.186, port: 54323 @ 12/22/23 05:29:03.888
  Dec 22 05:29:03.888: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.3.186:54323/hostname] Namespace:hostport-4753 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:29:03.888: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:29:03.889: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:29:03.889: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-4753/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.3.186%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.186, port: 54323 UDP @ 12/22/23 05:29:04.194
  Dec 22 05:29:04.194: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.3.186 54323] Namespace:hostport-4753 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:29:04.194: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:29:04.199: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:29:04.203: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-4753/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.3.186+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Dec 22 05:29:09.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4753" for this suite. @ 12/22/23 05:29:09.4
• [18.460 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 12/22/23 05:29:09.408
  Dec 22 05:29:09.408: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:29:09.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:29:09.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:29:09.431
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-2afc3b4b-a0ef-41e2-865d-4c5a005999d5 @ 12/22/23 05:29:09.437
  STEP: Creating the pod @ 12/22/23 05:29:09.441
  STEP: Updating configmap projected-configmap-test-upd-2afc3b4b-a0ef-41e2-865d-4c5a005999d5 @ 12/22/23 05:29:11.469
  STEP: waiting to observe update in volume @ 12/22/23 05:29:11.474
  Dec 22 05:29:13.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6943" for this suite. @ 12/22/23 05:29:13.496
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 12/22/23 05:29:13.505
  Dec 22 05:29:13.505: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 05:29:13.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:29:13.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:29:13.535
  Dec 22 05:29:13.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  W1222 05:29:16.126771      20 warnings.go:70] unknown field "alpha"
  W1222 05:29:16.126898      20 warnings.go:70] unknown field "beta"
  W1222 05:29:16.126931      20 warnings.go:70] unknown field "delta"
  W1222 05:29:16.126968      20 warnings.go:70] unknown field "epsilon"
  W1222 05:29:16.126979      20 warnings.go:70] unknown field "gamma"
  Dec 22 05:29:16.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9506" for this suite. @ 12/22/23 05:29:16.672
• [3.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 12/22/23 05:29:16.685
  Dec 22 05:29:16.686: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sched-preemption @ 12/22/23 05:29:16.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:29:16.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:29:16.706
  Dec 22 05:29:16.727: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 22 05:30:16.736: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/22/23 05:30:16.739
  Dec 22 05:30:16.739: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/22/23 05:30:16.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:16.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:16.76
  STEP: Finding an available node @ 12/22/23 05:30:16.764
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/22/23 05:30:16.764
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/22/23 05:30:18.787
  Dec 22 05:30:18.801: INFO: found a healthy node: ip-172-31-7-66.us-east-2.compute.internal
  Dec 22 05:30:24.875: INFO: pods created so far: [1 1 1]
  Dec 22 05:30:24.875: INFO: length of pods created so far: 3
  Dec 22 05:30:26.885: INFO: pods created so far: [2 2 1]
  Dec 22 05:30:34.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1683" for this suite. @ 12/22/23 05:30:34.059
  Dec 22 05:30:34.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-853" for this suite. @ 12/22/23 05:30:34.072
• [77.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 12/22/23 05:30:34.09
  Dec 22 05:30:34.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:30:34.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:34.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:34.123
  STEP: Setting up server cert @ 12/22/23 05:30:34.169
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:30:35.317
  STEP: Deploying the webhook pod @ 12/22/23 05:30:35.324
  STEP: Wait for the deployment to be ready @ 12/22/23 05:30:35.337
  Dec 22 05:30:35.345: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/22/23 05:30:37.355
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:30:37.364
  Dec 22 05:30:38.364: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/22/23 05:30:38.371
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/22/23 05:30:38.395
  Dec 22 05:30:38.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:30:38.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-922" for this suite. @ 12/22/23 05:30:38.482
  STEP: Destroying namespace "webhook-markers-1434" for this suite. @ 12/22/23 05:30:38.499
• [4.424 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 12/22/23 05:30:38.515
  Dec 22 05:30:38.515: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 05:30:38.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:38.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:38.538
  Dec 22 05:30:38.544: INFO: Got root ca configmap in namespace "svcaccounts-6246"
  Dec 22 05:30:38.562: INFO: Deleted root ca configmap in namespace "svcaccounts-6246"
  STEP: waiting for a new root ca configmap created @ 12/22/23 05:30:39.064
  Dec 22 05:30:39.145: INFO: Recreated root ca configmap in namespace "svcaccounts-6246"
  Dec 22 05:30:39.169: INFO: Updated root ca configmap in namespace "svcaccounts-6246"
  STEP: waiting for the root ca configmap reconciled @ 12/22/23 05:30:39.67
  Dec 22 05:30:39.673: INFO: Reconciled root ca configmap in namespace "svcaccounts-6246"
  Dec 22 05:30:39.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6246" for this suite. @ 12/22/23 05:30:39.678
• [1.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/22/23 05:30:39.686
  Dec 22 05:30:39.686: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/22/23 05:30:39.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:39.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:39.715
  STEP: creating a target pod @ 12/22/23 05:30:39.725
  STEP: adding an ephemeral container @ 12/22/23 05:30:43.751
  STEP: checking pod container endpoints @ 12/22/23 05:30:45.782
  Dec 22 05:30:45.782: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4751 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:30:45.782: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:30:45.782: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:30:45.782: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-4751/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Dec 22 05:30:45.901: INFO: Exec stderr: ""
  Dec 22 05:30:45.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4751" for this suite. @ 12/22/23 05:30:45.92
• [6.240 seconds]
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 12/22/23 05:30:45.928
  Dec 22 05:30:45.928: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename server-version @ 12/22/23 05:30:45.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:45.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:45.949
  STEP: Request ServerVersion @ 12/22/23 05:30:45.952
  STEP: Confirm major version @ 12/22/23 05:30:45.953
  Dec 22 05:30:45.953: INFO: Major version: 1
  STEP: Confirm minor version @ 12/22/23 05:30:45.953
  Dec 22 05:30:45.953: INFO: cleanMinorVersion: 29
  Dec 22 05:30:45.953: INFO: Minor version: 29
  Dec 22 05:30:45.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5673" for this suite. @ 12/22/23 05:30:45.958
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 12/22/23 05:30:45.965
  Dec 22 05:30:45.965: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename dns @ 12/22/23 05:30:45.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:45.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:45.988
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/22/23 05:30:45.991
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/22/23 05:30:45.991
  STEP: creating a pod to probe DNS @ 12/22/23 05:30:45.991
  STEP: submitting the pod to kubernetes @ 12/22/23 05:30:45.991
  STEP: retrieving the pod @ 12/22/23 05:30:48.01
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:30:48.019
  Dec 22 05:30:48.038: INFO: DNS probes using dns-1535/dns-test-a7865a5b-02a1-4290-af16-1678f9875ba7 succeeded

  STEP: deleting the pod @ 12/22/23 05:30:48.038
  Dec 22 05:30:48.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1535" for this suite. @ 12/22/23 05:30:48.065
• [2.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 12/22/23 05:30:48.081
  Dec 22 05:30:48.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:30:48.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:48.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:48.102
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/22/23 05:30:48.105
  Dec 22 05:30:48.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6701 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Dec 22 05:30:48.191: INFO: stderr: ""
  Dec 22 05:30:48.191: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/22/23 05:30:48.191
  Dec 22 05:30:48.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-6701 delete pods e2e-test-httpd-pod'
  Dec 22 05:30:49.898: INFO: stderr: ""
  Dec 22 05:30:49.898: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 22 05:30:49.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6701" for this suite. @ 12/22/23 05:30:49.908
• [1.835 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 12/22/23 05:30:49.917
  Dec 22 05:30:49.917: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:30:49.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:49.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:49.937
  STEP: Creating Pod @ 12/22/23 05:30:49.94
  STEP: Reading file content from the nginx-container @ 12/22/23 05:30:51.961
  Dec 22 05:30:51.961: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2348 PodName:pod-sharedvolume-d2b4e571-5b2f-4415-93dd-55c84c076049 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:30:51.961: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:30:51.962: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:30:51.963: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-2348/pods/pod-sharedvolume-d2b4e571-5b2f-4415-93dd-55c84c076049/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Dec 22 05:30:52.158: INFO: Exec stderr: ""
  Dec 22 05:30:52.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2348" for this suite. @ 12/22/23 05:30:52.168
• [2.257 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/22/23 05:30:52.181
  Dec 22 05:30:52.181: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename events @ 12/22/23 05:30:52.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:52.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:52.205
  STEP: creating a test event @ 12/22/23 05:30:52.208
  STEP: listing events in all namespaces @ 12/22/23 05:30:52.216
  STEP: listing events in test namespace @ 12/22/23 05:30:52.219
  STEP: listing events with field selection filtering on source @ 12/22/23 05:30:52.222
  STEP: listing events with field selection filtering on reportingController @ 12/22/23 05:30:52.224
  STEP: getting the test event @ 12/22/23 05:30:52.231
  STEP: patching the test event @ 12/22/23 05:30:52.233
  STEP: getting the test event @ 12/22/23 05:30:52.24
  STEP: updating the test event @ 12/22/23 05:30:52.242
  STEP: getting the test event @ 12/22/23 05:30:52.25
  STEP: deleting the test event @ 12/22/23 05:30:52.257
  STEP: listing events in all namespaces @ 12/22/23 05:30:52.263
  STEP: listing events in test namespace @ 12/22/23 05:30:52.267
  Dec 22 05:30:52.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3430" for this suite. @ 12/22/23 05:30:52.274
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 12/22/23 05:30:52.282
  Dec 22 05:30:52.283: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:30:52.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:52.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:52.305
  STEP: creating a replication controller @ 12/22/23 05:30:52.311
  Dec 22 05:30:52.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-517 create -f -'
  Dec 22 05:30:52.559: INFO: stderr: ""
  Dec 22 05:30:52.559: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/22/23 05:30:52.559
  Dec 22 05:30:52.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-517 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 05:30:52.673: INFO: stderr: ""
  Dec 22 05:30:52.673: INFO: stdout: "update-demo-nautilus-8j24q update-demo-nautilus-wfn5m "
  Dec 22 05:30:52.673: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-517 get pods update-demo-nautilus-8j24q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 05:30:52.757: INFO: stderr: ""
  Dec 22 05:30:52.757: INFO: stdout: ""
  Dec 22 05:30:52.757: INFO: update-demo-nautilus-8j24q is created but not running
  Dec 22 05:30:57.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-517 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 05:30:57.841: INFO: stderr: ""
  Dec 22 05:30:57.841: INFO: stdout: "update-demo-nautilus-8j24q update-demo-nautilus-wfn5m "
  Dec 22 05:30:57.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-517 get pods update-demo-nautilus-8j24q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 05:30:57.943: INFO: stderr: ""
  Dec 22 05:30:57.944: INFO: stdout: "true"
  Dec 22 05:30:57.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-517 get pods update-demo-nautilus-8j24q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 05:30:58.040: INFO: stderr: ""
  Dec 22 05:30:58.040: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 05:30:58.040: INFO: validating pod update-demo-nautilus-8j24q
  Dec 22 05:30:58.047: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 05:30:58.047: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 05:30:58.047: INFO: update-demo-nautilus-8j24q is verified up and running
  Dec 22 05:30:58.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-517 get pods update-demo-nautilus-wfn5m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 05:30:58.129: INFO: stderr: ""
  Dec 22 05:30:58.129: INFO: stdout: "true"
  Dec 22 05:30:58.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-517 get pods update-demo-nautilus-wfn5m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 05:30:58.208: INFO: stderr: ""
  Dec 22 05:30:58.208: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 05:30:58.208: INFO: validating pod update-demo-nautilus-wfn5m
  Dec 22 05:30:58.229: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 05:30:58.229: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 05:30:58.229: INFO: update-demo-nautilus-wfn5m is verified up and running
  STEP: using delete to clean up resources @ 12/22/23 05:30:58.229
  Dec 22 05:30:58.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-517 delete --grace-period=0 --force -f -'
  Dec 22 05:30:58.308: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:30:58.308: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Dec 22 05:30:58.308: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-517 get rc,svc -l name=update-demo --no-headers'
  Dec 22 05:30:58.462: INFO: stderr: "No resources found in kubectl-517 namespace.\n"
  Dec 22 05:30:58.462: INFO: stdout: ""
  Dec 22 05:30:58.462: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-517 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 22 05:30:58.622: INFO: stderr: ""
  Dec 22 05:30:58.622: INFO: stdout: ""
  Dec 22 05:30:58.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-517" for this suite. @ 12/22/23 05:30:58.627
• [6.353 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 12/22/23 05:30:58.636
  Dec 22 05:30:58.636: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 05:30:58.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:58.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:58.67
  STEP: creating a ServiceAccount @ 12/22/23 05:30:58.677
  STEP: watching for the ServiceAccount to be added @ 12/22/23 05:30:58.685
  STEP: patching the ServiceAccount @ 12/22/23 05:30:58.687
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/22/23 05:30:58.695
  STEP: deleting the ServiceAccount @ 12/22/23 05:30:58.698
  Dec 22 05:30:58.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2279" for this suite. @ 12/22/23 05:30:58.716
• [0.096 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 12/22/23 05:30:58.733
  Dec 22 05:30:58.733: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pv @ 12/22/23 05:30:58.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:58.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:58.752
  STEP: Creating initial PV and PVC @ 12/22/23 05:30:58.754
  Dec 22 05:30:58.754: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3432" @ 12/22/23 05:30:58.767
  STEP: Listing PVCs in namespace "pv-3432" @ 12/22/23 05:30:58.77
  STEP: Reading "pvc-rcgq8" Status @ 12/22/23 05:30:58.777
  STEP: Reading "pv-3432-5vw88" Status @ 12/22/23 05:30:58.783
  STEP: Patching "pvc-rcgq8" Status @ 12/22/23 05:30:58.791
  STEP: Patching "pv-3432-5vw88" Status @ 12/22/23 05:30:58.799
  STEP: Updating "pvc-rcgq8" Status @ 12/22/23 05:30:58.807
  STEP: Updating "pv-3432-5vw88" Status @ 12/22/23 05:30:58.817
  Dec 22 05:30:58.826: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Dec 22 05:30:58.826: INFO: Deleting PersistentVolumeClaim "pvc-rcgq8"
  Dec 22 05:30:58.833: INFO: Deleting PersistentVolume "pv-3432-5vw88"
  Dec 22 05:30:58.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3432" for this suite. @ 12/22/23 05:30:58.847
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 12/22/23 05:30:58.858
  Dec 22 05:30:58.861: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/22/23 05:30:58.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:58.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:58.913
  Dec 22 05:30:58.918: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 05:30:59.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7842" for this suite. @ 12/22/23 05:30:59.462
• [0.611 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 12/22/23 05:30:59.47
  Dec 22 05:30:59.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 05:30:59.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:59.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:59.5
  STEP: Creating ReplicationController "e2e-rc-r2rzb" @ 12/22/23 05:30:59.508
  Dec 22 05:30:59.513: INFO: Get Replication Controller "e2e-rc-r2rzb" to confirm replicas
  Dec 22 05:31:00.514: INFO: Get Replication Controller "e2e-rc-r2rzb" to confirm replicas
  Dec 22 05:31:00.519: INFO: Found 1 replicas for "e2e-rc-r2rzb" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-r2rzb" @ 12/22/23 05:31:00.519
  STEP: Updating a scale subresource @ 12/22/23 05:31:00.521
  STEP: Verifying replicas where modified for replication controller "e2e-rc-r2rzb" @ 12/22/23 05:31:00.989
  Dec 22 05:31:00.989: INFO: Get Replication Controller "e2e-rc-r2rzb" to confirm replicas
  Dec 22 05:31:01.990: INFO: Get Replication Controller "e2e-rc-r2rzb" to confirm replicas
  Dec 22 05:31:01.993: INFO: Found 2 replicas for "e2e-rc-r2rzb" replication controller
  Dec 22 05:31:01.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-156" for this suite. @ 12/22/23 05:31:01.997
• [2.532 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 12/22/23 05:31:02.003
  Dec 22 05:31:02.003: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 05:31:02.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:31:02.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:31:02.029
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6944 @ 12/22/23 05:31:02.032
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/22/23 05:31:02.043
  STEP: creating service externalsvc in namespace services-6944 @ 12/22/23 05:31:02.044
  STEP: creating replication controller externalsvc in namespace services-6944 @ 12/22/23 05:31:02.064
  I1222 05:31:02.074089      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-6944, replica count: 2
  I1222 05:31:05.124987      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/22/23 05:31:05.128
  Dec 22 05:31:05.141: INFO: Creating new exec pod
  Dec 22 05:31:07.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6944 exec execpodgbpxq -- /bin/sh -x -c nslookup clusterip-service.services-6944.svc.cluster.local'
  Dec 22 05:31:07.549: INFO: stderr: "+ nslookup clusterip-service.services-6944.svc.cluster.local\n"
  Dec 22 05:31:07.549: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-6944.svc.cluster.local\tcanonical name = externalsvc.services-6944.svc.cluster.local.\nName:\texternalsvc.services-6944.svc.cluster.local\nAddress: 10.43.223.95\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6944, will wait for the garbage collector to delete the pods @ 12/22/23 05:31:07.55
  Dec 22 05:31:07.609: INFO: Deleting ReplicationController externalsvc took: 5.507368ms
  Dec 22 05:31:07.710: INFO: Terminating ReplicationController externalsvc pods took: 100.992053ms
  Dec 22 05:31:11.030: INFO: Cleaning up the ClusterIP to ExternalName test service
  Dec 22 05:31:11.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6944" for this suite. @ 12/22/23 05:31:11.05
• [9.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 12/22/23 05:31:11.056
  Dec 22 05:31:11.056: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:31:11.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:31:11.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:31:11.077
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:31:11.08
  STEP: Saw pod success @ 12/22/23 05:31:15.107
  Dec 22 05:31:15.111: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-3f0f700c-de99-4334-a468-89c0379ff60d container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:31:15.119
  Dec 22 05:31:15.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-456" for this suite. @ 12/22/23 05:31:15.143
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 12/22/23 05:31:15.153
  Dec 22 05:31:15.153: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 05:31:15.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:31:15.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:31:15.175
  STEP: Creating pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070 @ 12/22/23 05:31:15.178
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 05:31:17.194
  Dec 22 05:31:17.197: INFO: Initial restart count of pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b is 0
  Dec 22 05:31:17.199: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:19.203: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:21.209: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:23.214: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:25.218: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:27.223: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:29.226: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:31.231: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:33.234: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:35.238: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:37.242: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:37.242: INFO: Restart count of pod container-probe-5070/liveness-ac14469d-8370-40e6-b20d-ef19a606789b is now 1 (20.045721661s elapsed)
  Dec 22 05:31:39.258: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:41.263: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:43.266: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:45.270: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:47.275: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:49.278: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:51.283: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:53.287: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:55.290: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:57.303: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:31:57.303: INFO: Restart count of pod container-probe-5070/liveness-ac14469d-8370-40e6-b20d-ef19a606789b is now 2 (40.10603644s elapsed)
  Dec 22 05:31:59.306: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:01.310: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:03.315: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:05.319: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:07.351: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:09.355: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:11.359: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:13.363: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:15.367: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:17.376: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:17.376: INFO: Restart count of pod container-probe-5070/liveness-ac14469d-8370-40e6-b20d-ef19a606789b is now 3 (1m0.179129954s elapsed)
  Dec 22 05:32:19.379: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:21.383: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:23.392: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:25.396: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:27.399: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:29.404: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:31.407: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:33.411: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:35.415: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:37.419: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:37.420: INFO: Restart count of pod container-probe-5070/liveness-ac14469d-8370-40e6-b20d-ef19a606789b is now 4 (1m20.223087604s elapsed)
  Dec 22 05:32:39.424: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:41.430: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:43.433: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:45.437: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:47.441: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:49.445: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:51.450: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:53.455: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:55.459: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:57.723: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:32:59.727: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:01.731: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:03.734: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:05.738: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:07.743: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:09.748: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:11.752: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:13.758: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:15.761: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:17.765: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:19.770: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:21.775: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:23.778: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:25.783: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:27.786: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:29.790: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:31.793: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:33.797: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:35.802: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:37.805: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:39.810: INFO: Get pod liveness-ac14469d-8370-40e6-b20d-ef19a606789b in namespace container-probe-5070
  Dec 22 05:33:39.810: INFO: Restart count of pod container-probe-5070/liveness-ac14469d-8370-40e6-b20d-ef19a606789b is now 5 (2m22.613290247s elapsed)
  STEP: deleting the pod @ 12/22/23 05:33:39.81
  Dec 22 05:33:39.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5070" for this suite. @ 12/22/23 05:33:39.834
• [144.687 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/22/23 05:33:39.842
  Dec 22 05:33:39.842: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:33:39.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:33:39.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:33:39.867
  Dec 22 05:33:39.878: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Dec 22 05:33:44.882: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 05:33:44.883
  Dec 22 05:33:44.883: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/22/23 05:33:44.894
  Dec 22 05:33:46.917: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7115",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27475fa4-9eef-4c04-b1f8-630d84e23f9a",
      ResourceVersion: (string) (len=5) "46563",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-58dcc84f74\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 05:33:46.923: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7115",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "412133b2-ff44-41ff-bb64-169903d22785",
      ResourceVersion: (string) (len=5) "46553",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "27475fa4-9eef-4c04-b1f8-630d84e23f9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 37 34 37 35 66  61 34 2d 39 65 65 66 2d  |\"27475fa4-9eef-|
              00000120  34 63 30 34 2d 62 31 66  38 2d 36 33 30 64 38 34  |4c04-b1f8-630d84|
              00000130  65 32 33 66 39 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e23f9a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:33:46.927: INFO: Pod "test-cleanup-deployment-58dcc84f74-nrxhw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-58dcc84f74-nrxhw",
      GenerateName: (string) (len=35) "test-cleanup-deployment-58dcc84f74-",
      Namespace: (string) (len=15) "deployment-7115",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43b947f2-16dd-4d1a-a30b-02908c658cc3",
      ResourceVersion: (string) (len=5) "46552",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "098c72663c02f1ae68edac72572dd3a8ca8d71c27ef0aa78393d40ebdf4ac4a6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.39/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.39/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
          UID: (types.UID) (len=36) "412133b2-ff44-41ff-bb64-169903d22785",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  32 31 33 33 62 32 2d 66  |d\":\"412133b2-f|
              00000090  66 34 34 2d 34 31 66 66  2d 62 62 36 34 2d 31 36  |f44-41ff-bb64-16|
              000000a0  39 39 30 33 64 32 32 37  38 35 5c 22 7d 22 3a 7b  |9903d22785\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820025,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 33 39  5c 22 7d 22 3a 7b 22 2e  |.42.3.39\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s8snw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s8snw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) (len=10) "10.42.3.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820026,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://8aeb583f77b2736fdba84e63cf6fe5d26d95f4bfa78033f9f75338d276ef29b6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:33:46.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7115" for this suite. @ 12/22/23 05:33:46.933
• [7.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 12/22/23 05:33:46.941
  Dec 22 05:33:46.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename endpointslice @ 12/22/23 05:33:46.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:33:46.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:33:46.962
  STEP: getting /apis @ 12/22/23 05:33:46.965
  STEP: getting /apis/discovery.k8s.io @ 12/22/23 05:33:46.969
  STEP: getting /apis/discovery.k8s.iov1 @ 12/22/23 05:33:46.97
  STEP: creating @ 12/22/23 05:33:46.972
  STEP: getting @ 12/22/23 05:33:46.989
  STEP: listing @ 12/22/23 05:33:46.992
  STEP: watching @ 12/22/23 05:33:46.995
  Dec 22 05:33:46.995: INFO: starting watch
  STEP: cluster-wide listing @ 12/22/23 05:33:46.997
  STEP: cluster-wide watching @ 12/22/23 05:33:47
  Dec 22 05:33:47.000: INFO: starting watch
  STEP: patching @ 12/22/23 05:33:47.002
  STEP: updating @ 12/22/23 05:33:47.007
  Dec 22 05:33:47.017: INFO: waiting for watch events with expected annotations
  Dec 22 05:33:47.017: INFO: saw patched and updated annotations
  STEP: deleting @ 12/22/23 05:33:47.018
  STEP: deleting a collection @ 12/22/23 05:33:47.028
  Dec 22 05:33:47.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3411" for this suite. @ 12/22/23 05:33:47.046
• [0.118 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/22/23 05:33:47.06
  Dec 22 05:33:47.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename watch @ 12/22/23 05:33:47.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:33:47.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:33:47.08
  STEP: getting a starting resourceVersion @ 12/22/23 05:33:47.083
  STEP: starting a background goroutine to produce watch events @ 12/22/23 05:33:47.086
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/22/23 05:33:47.086
  Dec 22 05:33:49.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6658" for this suite. @ 12/22/23 05:33:49.916
• [2.910 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/22/23 05:33:49.97
  Dec 22 05:33:49.970: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename cronjob @ 12/22/23 05:33:49.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:33:50
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:33:50.004
  STEP: Creating a suspended cronjob @ 12/22/23 05:33:50.008
  STEP: Ensuring no jobs are scheduled @ 12/22/23 05:33:50.015
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/22/23 05:38:50.021
  STEP: Removing cronjob @ 12/22/23 05:38:50.024
  Dec 22 05:38:50.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4781" for this suite. @ 12/22/23 05:38:50.035
• [300.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/22/23 05:38:50.043
  Dec 22 05:38:50.043: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename subpath @ 12/22/23 05:38:50.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:38:50.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:38:50.07
  STEP: Setting up data @ 12/22/23 05:38:50.073
  STEP: Creating pod pod-subpath-test-secret-hzkn @ 12/22/23 05:38:50.082
  STEP: Creating a pod to test atomic-volume-subpath @ 12/22/23 05:38:50.082
  STEP: Saw pod success @ 12/22/23 05:39:14.146
  Dec 22 05:39:14.149: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-subpath-test-secret-hzkn container test-container-subpath-secret-hzkn: <nil>
  STEP: delete the pod @ 12/22/23 05:39:14.178
  STEP: Deleting pod pod-subpath-test-secret-hzkn @ 12/22/23 05:39:14.194
  Dec 22 05:39:14.194: INFO: Deleting pod "pod-subpath-test-secret-hzkn" in namespace "subpath-6831"
  Dec 22 05:39:14.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6831" for this suite. @ 12/22/23 05:39:14.206
• [24.174 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 12/22/23 05:39:14.217
  Dec 22 05:39:14.217: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:39:14.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:39:14.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:39:14.249
  STEP: Creating the pod @ 12/22/23 05:39:14.253
  Dec 22 05:39:16.798: INFO: Successfully updated pod "annotationupdate4056497c-9501-4a82-896f-b3c347b96d29"
  Dec 22 05:39:18.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-544" for this suite. @ 12/22/23 05:39:18.82
• [4.610 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 12/22/23 05:39:18.828
  Dec 22 05:39:18.828: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubelet-test @ 12/22/23 05:39:18.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:39:18.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:39:18.854
  Dec 22 05:39:18.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5402" for this suite. @ 12/22/23 05:39:18.887
• [0.068 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/22/23 05:39:18.896
  Dec 22 05:39:18.896: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:39:18.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:39:18.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:39:18.923
  STEP: Creating projection with secret that has name projected-secret-test-map-508a83f3-b56c-4e08-b1c5-58e187724075 @ 12/22/23 05:39:18.928
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:39:18.934
  STEP: Saw pod success @ 12/22/23 05:39:22.96
  Dec 22 05:39:22.964: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-secrets-6d4e20f0-63c4-48e2-9c0c-524ba59f4da3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:39:22.971
  Dec 22 05:39:22.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4057" for this suite. @ 12/22/23 05:39:22.991
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 12/22/23 05:39:22.998
  Dec 22 05:39:22.998: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 05:39:22.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:39:23.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:39:23.019
  STEP: fetching services @ 12/22/23 05:39:23.022
  Dec 22 05:39:23.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1330" for this suite. @ 12/22/23 05:39:23.031
• [0.039 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 12/22/23 05:39:23.038
  Dec 22 05:39:23.038: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:39:23.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:39:23.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:39:23.061
  STEP: Creating projection with secret that has name secret-emptykey-test-2ad9c66b-d79b-423e-b049-8e0fa8455f2b @ 12/22/23 05:39:23.064
  Dec 22 05:39:23.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9740" for this suite. @ 12/22/23 05:39:23.07
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 12/22/23 05:39:23.079
  Dec 22 05:39:23.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:39:23.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:39:23.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:39:23.101
  STEP: Creating configMap with name configmap-test-volume-528f09b8-5e09-433c-93ab-2e7374d07ab4 @ 12/22/23 05:39:23.104
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:39:23.108
  STEP: Saw pod success @ 12/22/23 05:39:27.13
  Dec 22 05:39:27.133: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-configmaps-64653273-ade4-4f38-b325-ed5c85b60eeb container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:39:27.152
  Dec 22 05:39:27.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4553" for this suite. @ 12/22/23 05:39:27.17
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 12/22/23 05:39:27.176
  Dec 22 05:39:27.176: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:39:27.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:39:27.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:39:27.214
  STEP: Counting existing ResourceQuota @ 12/22/23 05:39:27.216
  STEP: Creating a ResourceQuota @ 12/22/23 05:39:32.219
  STEP: Ensuring resource quota status is calculated @ 12/22/23 05:39:32.225
  STEP: Creating a Service @ 12/22/23 05:39:34.23
  STEP: Creating a NodePort Service @ 12/22/23 05:39:34.266
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/22/23 05:39:34.531
  STEP: Ensuring resource quota status captures service creation @ 12/22/23 05:39:34.556
  STEP: Deleting Services @ 12/22/23 05:39:36.559
  STEP: Ensuring resource quota status released usage @ 12/22/23 05:39:36.605
  Dec 22 05:39:38.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9940" for this suite. @ 12/22/23 05:39:38.613
• [11.442 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/22/23 05:39:38.62
  Dec 22 05:39:38.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:39:38.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:39:38.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:39:38.644
  Dec 22 05:39:38.657: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Dec 22 05:39:43.665: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 05:39:43.665
  Dec 22 05:39:43.665: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Dec 22 05:39:45.670: INFO: Creating deployment "test-rollover-deployment"
  Dec 22 05:39:45.677: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Dec 22 05:39:47.685: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Dec 22 05:39:47.691: INFO: Ensure that both replica sets have 1 created replica
  Dec 22 05:39:47.697: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Dec 22 05:39:47.706: INFO: Updating deployment test-rollover-deployment
  Dec 22 05:39:47.707: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Dec 22 05:39:49.714: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Dec 22 05:39:49.719: INFO: Make sure deployment "test-rollover-deployment" is complete
  Dec 22 05:39:49.724: INFO: all replica sets need to contain the pod-template-hash label
  Dec 22 05:39:49.725: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 39, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:39:51.732: INFO: all replica sets need to contain the pod-template-hash label
  Dec 22 05:39:51.732: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 39, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:39:53.733: INFO: all replica sets need to contain the pod-template-hash label
  Dec 22 05:39:53.733: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 39, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:39:55.733: INFO: all replica sets need to contain the pod-template-hash label
  Dec 22 05:39:55.733: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 39, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:39:57.733: INFO: all replica sets need to contain the pod-template-hash label
  Dec 22 05:39:57.733: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 39, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 39, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:39:59.732: INFO: 
  Dec 22 05:39:59.732: INFO: Ensure that both old replica sets have no replicas
  Dec 22 05:39:59.739: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-862",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ba22172-7420-44fc-ba03-01f1d30c86e2",
      ResourceVersion: (string) (len=5) "48422",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820385,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 05:39:59.752: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-862",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18bad4ff-d577-4c9b-933d-d8020fd81a4d",
      ResourceVersion: (string) (len=5) "48412",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820387,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ba22172-7420-44fc-ba03-01f1d30c86e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 61 32 32 31  37 32 2d 37 34 32 30 2d  |\"9ba22172-7420-|
              00000120  34 34 66 63 2d 62 61 30  33 2d 30 31 66 31 64 33  |44fc-ba03-01f1d3|
              00000130  30 63 38 36 65 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0c86e2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:39:59.754: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Dec 22 05:39:59.754: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-862",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d61d3856-192a-474b-ab3d-0261acb9c226",
      ResourceVersion: (string) (len=5) "48420",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ba22172-7420-44fc-ba03-01f1d30c86e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 62 61 32 32 31 37 32  2d 37 34 32 30 2d 34 34  |9ba22172-7420-44|
              000000c0  66 63 2d 62 61 30 33 2d  30 31 66 31 64 33 30 63  |fc-ba03-01f1d30c|
              000000d0  38 36 65 32 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |86e2\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:39:59.759: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-862",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "882f1694-333f-4427-ab13-b5ff9e5d171a",
      ResourceVersion: (string) (len=5) "48354",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820385,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ba22172-7420-44fc-ba03-01f1d30c86e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 61 32 32 31  37 32 2d 37 34 32 30 2d  |\"9ba22172-7420-|
              00000120  34 34 66 63 2d 62 61 30  33 2d 30 31 66 31 64 33  |44fc-ba03-01f1d3|
              00000130  30 63 38 36 65 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0c86e2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:39:59.766: INFO: Pod "test-rollover-deployment-5d484bf7f9-6f4jb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-6f4jb",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=14) "deployment-862",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc8b335f-f357-4927-9d00-855faefb6f34",
      ResourceVersion: (string) (len=5) "48371",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820387,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7f2636625fcfad74fb3386221f7e5fea1e8071fdf4e8b17c38a338ba974e35d7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.46/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.46/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "18bad4ff-d577-4c9b-933d-d8020fd81a4d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 38  62 61 64 34 66 66 2d 64  |d\":\"18bad4ff-d|
              00000090  35 37 37 2d 34 63 39 62  2d 39 33 33 64 2d 64 38  |577-4c9b-933d-d8|
              000000a0  30 32 30 66 64 38 31 61  34 64 5c 22 7d 22 3a 7b  |020fd81a4d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 34 36  5c 22 7d 22 3a 7b 22 2e  |.42.3.46\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bv7cd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bv7cd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) (len=10) "10.42.3.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820387,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820388,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://4c277cebcd475100e4694d3b2da6c48354ae1faa49ee60c938f60e37b85ce9b3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:39:59.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-862" for this suite. @ 12/22/23 05:39:59.772
• [21.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 12/22/23 05:39:59.779
  Dec 22 05:39:59.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 05:39:59.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:39:59.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:39:59.803
  STEP: creating a Service @ 12/22/23 05:39:59.809
  STEP: watching for the Service to be added @ 12/22/23 05:39:59.821
  Dec 22 05:39:59.825: INFO: Found Service test-service-2hpwr in namespace services-8452 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32490}]
  Dec 22 05:39:59.825: INFO: Service test-service-2hpwr created
  STEP: Getting /status @ 12/22/23 05:39:59.825
  Dec 22 05:39:59.830: INFO: Service test-service-2hpwr has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/22/23 05:39:59.83
  STEP: watching for the Service to be patched @ 12/22/23 05:39:59.839
  Dec 22 05:39:59.843: INFO: observed Service test-service-2hpwr in namespace services-8452 with annotations: map[] & LoadBalancer: {[]}
  Dec 22 05:39:59.843: INFO: Found Service test-service-2hpwr in namespace services-8452 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Dec 22 05:39:59.843: INFO: Service test-service-2hpwr has service status patched
  STEP: updating the ServiceStatus @ 12/22/23 05:39:59.843
  Dec 22 05:39:59.852: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/22/23 05:39:59.853
  Dec 22 05:39:59.856: INFO: Observed Service test-service-2hpwr in namespace services-8452 with annotations: map[] & Conditions: {[]}
  Dec 22 05:39:59.856: INFO: Observed event: &Service{ObjectMeta:{test-service-2hpwr  services-8452  bc231fc1-ab45-477b-9e97-ebf0c76d8365 48431 0 2023-12-22 05:39:59 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-12-22 05:39:59 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-12-22 05:39:59 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32490,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.101.126,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.101.126],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Dec 22 05:39:59.856: INFO: Found Service test-service-2hpwr in namespace services-8452 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 22 05:39:59.856: INFO: Service test-service-2hpwr has service status updated
  STEP: patching the service @ 12/22/23 05:39:59.856
  STEP: watching for the Service to be patched @ 12/22/23 05:39:59.872
  Dec 22 05:39:59.878: INFO: observed Service test-service-2hpwr in namespace services-8452 with labels: map[test-service-static:true]
  Dec 22 05:39:59.878: INFO: observed Service test-service-2hpwr in namespace services-8452 with labels: map[test-service-static:true]
  Dec 22 05:39:59.878: INFO: observed Service test-service-2hpwr in namespace services-8452 with labels: map[test-service-static:true]
  Dec 22 05:39:59.878: INFO: Found Service test-service-2hpwr in namespace services-8452 with labels: map[test-service:patched test-service-static:true]
  Dec 22 05:39:59.878: INFO: Service test-service-2hpwr patched
  STEP: deleting the service @ 12/22/23 05:39:59.878
  STEP: watching for the Service to be deleted @ 12/22/23 05:39:59.893
  Dec 22 05:39:59.895: INFO: Observed event: ADDED
  Dec 22 05:39:59.895: INFO: Observed event: MODIFIED
  Dec 22 05:39:59.895: INFO: Observed event: MODIFIED
  Dec 22 05:39:59.895: INFO: Observed event: MODIFIED
  Dec 22 05:39:59.895: INFO: Found Service test-service-2hpwr in namespace services-8452 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Dec 22 05:39:59.895: INFO: Service test-service-2hpwr deleted
  Dec 22 05:39:59.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8452" for this suite. @ 12/22/23 05:39:59.899
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 12/22/23 05:39:59.907
  Dec 22 05:39:59.907: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:39:59.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:39:59.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:39:59.925
  STEP: Creating configMap with name cm-test-opt-del-4d9ceed0-3987-4946-978f-164b0d838528 @ 12/22/23 05:39:59.931
  STEP: Creating configMap with name cm-test-opt-upd-df904c3c-f79f-4ec6-9c8f-20a079b33cbe @ 12/22/23 05:39:59.935
  STEP: Creating the pod @ 12/22/23 05:39:59.939
  STEP: Deleting configmap cm-test-opt-del-4d9ceed0-3987-4946-978f-164b0d838528 @ 12/22/23 05:40:03.988
  STEP: Updating configmap cm-test-opt-upd-df904c3c-f79f-4ec6-9c8f-20a079b33cbe @ 12/22/23 05:40:03.999
  STEP: Creating configMap with name cm-test-opt-create-e8ea0c4a-988d-4003-b32d-9309366dd271 @ 12/22/23 05:40:04.004
  STEP: waiting to observe update in volume @ 12/22/23 05:40:04.012
  Dec 22 05:40:36.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5005" for this suite. @ 12/22/23 05:40:36.181
• [36.280 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 12/22/23 05:40:36.187
  Dec 22 05:40:36.187: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:40:36.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:36.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:36.221
  STEP: Creating configMap configmap-4996/configmap-test-d2f0743d-f46e-4fe7-bff4-b80d04bbfea3 @ 12/22/23 05:40:36.225
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:40:36.23
  STEP: Saw pod success @ 12/22/23 05:40:40.254
  Dec 22 05:40:40.258: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-configmaps-c21d2467-07f2-4aea-b38d-be4f156fd26a container env-test: <nil>
  STEP: delete the pod @ 12/22/23 05:40:40.269
  Dec 22 05:40:40.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4996" for this suite. @ 12/22/23 05:40:40.293
• [4.111 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 12/22/23 05:40:40.298
  Dec 22 05:40:40.298: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:40:40.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:40.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:40.322
  STEP: creating a Deployment @ 12/22/23 05:40:40.33
  Dec 22 05:40:40.330: INFO: Creating simple deployment test-deployment-5hwc2
  Dec 22 05:40:40.342: INFO: deployment "test-deployment-5hwc2" doesn't have the required revision set
  STEP: Getting /status @ 12/22/23 05:40:42.356
  Dec 22 05:40:42.360: INFO: Deployment test-deployment-5hwc2 has Conditions: [{Available True 2023-12-22 05:40:41 +0000 UTC 2023-12-22 05:40:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-12-22 05:40:41 +0000 UTC 2023-12-22 05:40:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5hwc2-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/22/23 05:40:42.36
  Dec 22 05:40:42.370: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 40, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 40, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 40, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 40, 40, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-5hwc2-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/22/23 05:40:42.37
  Dec 22 05:40:42.372: INFO: Observed &Deployment event: ADDED
  Dec 22 05:40:42.372: INFO: Observed Deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:40:40 +0000 UTC 2023-12-22 05:40:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5hwc2-5d576bd769"}
  Dec 22 05:40:42.372: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:40:42.372: INFO: Observed Deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:40:40 +0000 UTC 2023-12-22 05:40:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5hwc2-5d576bd769"}
  Dec 22 05:40:42.373: INFO: Observed Deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-22 05:40:40 +0000 UTC 2023-12-22 05:40:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 22 05:40:42.373: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:40:42.373: INFO: Observed Deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-22 05:40:40 +0000 UTC 2023-12-22 05:40:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 22 05:40:42.373: INFO: Observed Deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:40:40 +0000 UTC 2023-12-22 05:40:40 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-5hwc2-5d576bd769" is progressing.}
  Dec 22 05:40:42.373: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:40:42.373: INFO: Observed Deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-22 05:40:41 +0000 UTC 2023-12-22 05:40:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 22 05:40:42.373: INFO: Observed Deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:40:41 +0000 UTC 2023-12-22 05:40:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5hwc2-5d576bd769" has successfully progressed.}
  Dec 22 05:40:42.374: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:40:42.374: INFO: Observed Deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-22 05:40:41 +0000 UTC 2023-12-22 05:40:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 22 05:40:42.374: INFO: Observed Deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:40:41 +0000 UTC 2023-12-22 05:40:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5hwc2-5d576bd769" has successfully progressed.}
  Dec 22 05:40:42.374: INFO: Found Deployment test-deployment-5hwc2 in namespace deployment-6684 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 05:40:42.374: INFO: Deployment test-deployment-5hwc2 has an updated status
  STEP: patching the Statefulset Status @ 12/22/23 05:40:42.374
  Dec 22 05:40:42.374: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 22 05:40:42.381: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/22/23 05:40:42.381
  Dec 22 05:40:42.383: INFO: Observed &Deployment event: ADDED
  Dec 22 05:40:42.383: INFO: Observed deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:40:40 +0000 UTC 2023-12-22 05:40:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5hwc2-5d576bd769"}
  Dec 22 05:40:42.384: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:40:42.384: INFO: Observed deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:40:40 +0000 UTC 2023-12-22 05:40:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5hwc2-5d576bd769"}
  Dec 22 05:40:42.384: INFO: Observed deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-22 05:40:40 +0000 UTC 2023-12-22 05:40:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 22 05:40:42.384: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:40:42.384: INFO: Observed deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-22 05:40:40 +0000 UTC 2023-12-22 05:40:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 22 05:40:42.384: INFO: Observed deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:40:40 +0000 UTC 2023-12-22 05:40:40 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-5hwc2-5d576bd769" is progressing.}
  Dec 22 05:40:42.384: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:40:42.384: INFO: Observed deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-22 05:40:41 +0000 UTC 2023-12-22 05:40:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 22 05:40:42.384: INFO: Observed deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:40:41 +0000 UTC 2023-12-22 05:40:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5hwc2-5d576bd769" has successfully progressed.}
  Dec 22 05:40:42.385: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:40:42.385: INFO: Observed deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-22 05:40:41 +0000 UTC 2023-12-22 05:40:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 22 05:40:42.385: INFO: Observed deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:40:41 +0000 UTC 2023-12-22 05:40:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5hwc2-5d576bd769" has successfully progressed.}
  Dec 22 05:40:42.385: INFO: Observed deployment test-deployment-5hwc2 in namespace deployment-6684 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 05:40:42.385: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:40:42.385: INFO: Found deployment test-deployment-5hwc2 in namespace deployment-6684 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Dec 22 05:40:42.385: INFO: Deployment test-deployment-5hwc2 has a patched status
  Dec 22 05:40:42.390: INFO: Deployment "test-deployment-5hwc2":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-5hwc2",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6684",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea4b1a02-b417-4b26-a695-a8ce825aa869",
      ResourceVersion: (string) (len=5) "48726",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820440,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-5hwc2-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 05:40:42.395: INFO: New ReplicaSet "test-deployment-5hwc2-5d576bd769" of Deployment "test-deployment-5hwc2":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-5hwc2-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6684",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c991195-a310-4dbc-93b4-367031d5c439",
      ResourceVersion: (string) (len=5) "48706",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820440,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-5hwc2",
          UID: (types.UID) (len=36) "ea4b1a02-b417-4b26-a695-a8ce825aa869",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 65 61 34  |k:{\"uid\":\"ea4|
              00000120  62 31 61 30 32 2d 62 34  31 37 2d 34 62 32 36 2d  |b1a02-b417-4b26-|
              00000130  61 36 39 35 2d 61 38 63  65 38 32 35 61 61 38 36  |a695-a8ce825aa86|
              00000140  39 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |9\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:40:42.402: INFO: Pod "test-deployment-5hwc2-5d576bd769-ll9vm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-5hwc2-5d576bd769-ll9vm",
      GenerateName: (string) (len=33) "test-deployment-5hwc2-5d576bd769-",
      Namespace: (string) (len=15) "deployment-6684",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc81bb0d-5f08-4c2d-bc91-d0eb75a604c1",
      ResourceVersion: (string) (len=5) "48704",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820440,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.49/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6cabc453333429dcbbd095241212912c935a450ce65348624d6c4d3f74df8f6e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.49/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-5hwc2-5d576bd769",
          UID: (types.UID) (len=36) "2c991195-a310-4dbc-93b4-367031d5c439",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 32 63 39 39 31 31 39  35 2d 61 33 31 30 2d 34  |"2c991195-a310-4|
              000000a0  64 62 63 2d 39 33 62 34  2d 33 36 37 30 33 31 64  |dbc-93b4-367031d|
              000000b0  35 63 34 33 39 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |5c439\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 34 39  5c 22 7d 22 3a 7b 22 2e  |.42.3.49\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c2bsc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c2bsc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) (len=10) "10.42.3.49",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.49"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820440,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820441,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fa0a5c567050b0c1c92b56e6fe62391f1b87a23c191e027805cb91ba68daeeb5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:40:42.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6684" for this suite. @ 12/22/23 05:40:42.41
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 12/22/23 05:40:42.417
  Dec 22 05:40:42.417: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename discovery @ 12/22/23 05:40:42.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:42.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:42.441
  STEP: Setting up server cert @ 12/22/23 05:40:42.445
  Dec 22 05:40:43.019: INFO: Checking APIGroup: apiregistration.k8s.io
  Dec 22 05:40:43.021: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Dec 22 05:40:43.021: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Dec 22 05:40:43.021: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Dec 22 05:40:43.021: INFO: Checking APIGroup: apps
  Dec 22 05:40:43.022: INFO: PreferredVersion.GroupVersion: apps/v1
  Dec 22 05:40:43.022: INFO: Versions found [{apps/v1 v1}]
  Dec 22 05:40:43.022: INFO: apps/v1 matches apps/v1
  Dec 22 05:40:43.022: INFO: Checking APIGroup: events.k8s.io
  Dec 22 05:40:43.024: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Dec 22 05:40:43.024: INFO: Versions found [{events.k8s.io/v1 v1}]
  Dec 22 05:40:43.024: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Dec 22 05:40:43.024: INFO: Checking APIGroup: authentication.k8s.io
  Dec 22 05:40:43.025: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Dec 22 05:40:43.025: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Dec 22 05:40:43.025: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Dec 22 05:40:43.025: INFO: Checking APIGroup: authorization.k8s.io
  Dec 22 05:40:43.026: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Dec 22 05:40:43.026: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Dec 22 05:40:43.026: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Dec 22 05:40:43.026: INFO: Checking APIGroup: autoscaling
  Dec 22 05:40:43.027: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Dec 22 05:40:43.027: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Dec 22 05:40:43.027: INFO: autoscaling/v2 matches autoscaling/v2
  Dec 22 05:40:43.027: INFO: Checking APIGroup: batch
  Dec 22 05:40:43.027: INFO: PreferredVersion.GroupVersion: batch/v1
  Dec 22 05:40:43.027: INFO: Versions found [{batch/v1 v1}]
  Dec 22 05:40:43.028: INFO: batch/v1 matches batch/v1
  Dec 22 05:40:43.028: INFO: Checking APIGroup: certificates.k8s.io
  Dec 22 05:40:43.028: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Dec 22 05:40:43.028: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Dec 22 05:40:43.028: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Dec 22 05:40:43.028: INFO: Checking APIGroup: networking.k8s.io
  Dec 22 05:40:43.030: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Dec 22 05:40:43.030: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Dec 22 05:40:43.030: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Dec 22 05:40:43.030: INFO: Checking APIGroup: policy
  Dec 22 05:40:43.030: INFO: PreferredVersion.GroupVersion: policy/v1
  Dec 22 05:40:43.030: INFO: Versions found [{policy/v1 v1}]
  Dec 22 05:40:43.031: INFO: policy/v1 matches policy/v1
  Dec 22 05:40:43.031: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Dec 22 05:40:43.032: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Dec 22 05:40:43.032: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Dec 22 05:40:43.032: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Dec 22 05:40:43.032: INFO: Checking APIGroup: storage.k8s.io
  Dec 22 05:40:43.033: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Dec 22 05:40:43.033: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Dec 22 05:40:43.033: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Dec 22 05:40:43.033: INFO: Checking APIGroup: admissionregistration.k8s.io
  Dec 22 05:40:43.034: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Dec 22 05:40:43.034: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Dec 22 05:40:43.034: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Dec 22 05:40:43.034: INFO: Checking APIGroup: apiextensions.k8s.io
  Dec 22 05:40:43.035: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Dec 22 05:40:43.035: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Dec 22 05:40:43.035: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Dec 22 05:40:43.035: INFO: Checking APIGroup: scheduling.k8s.io
  Dec 22 05:40:43.036: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Dec 22 05:40:43.036: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Dec 22 05:40:43.036: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Dec 22 05:40:43.036: INFO: Checking APIGroup: coordination.k8s.io
  Dec 22 05:40:43.037: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Dec 22 05:40:43.037: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Dec 22 05:40:43.037: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Dec 22 05:40:43.037: INFO: Checking APIGroup: node.k8s.io
  Dec 22 05:40:43.038: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Dec 22 05:40:43.038: INFO: Versions found [{node.k8s.io/v1 v1}]
  Dec 22 05:40:43.038: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Dec 22 05:40:43.038: INFO: Checking APIGroup: discovery.k8s.io
  Dec 22 05:40:43.038: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Dec 22 05:40:43.039: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Dec 22 05:40:43.039: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Dec 22 05:40:43.039: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Dec 22 05:40:43.040: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Dec 22 05:40:43.040: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Dec 22 05:40:43.040: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Dec 22 05:40:43.040: INFO: Checking APIGroup: crd.projectcalico.org
  Dec 22 05:40:43.041: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  Dec 22 05:40:43.041: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  Dec 22 05:40:43.041: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  Dec 22 05:40:43.041: INFO: Checking APIGroup: helm.cattle.io
  Dec 22 05:40:43.042: INFO: PreferredVersion.GroupVersion: helm.cattle.io/v1
  Dec 22 05:40:43.042: INFO: Versions found [{helm.cattle.io/v1 v1}]
  Dec 22 05:40:43.042: INFO: helm.cattle.io/v1 matches helm.cattle.io/v1
  Dec 22 05:40:43.042: INFO: Checking APIGroup: k3s.cattle.io
  Dec 22 05:40:43.043: INFO: PreferredVersion.GroupVersion: k3s.cattle.io/v1
  Dec 22 05:40:43.043: INFO: Versions found [{k3s.cattle.io/v1 v1}]
  Dec 22 05:40:43.043: INFO: k3s.cattle.io/v1 matches k3s.cattle.io/v1
  Dec 22 05:40:43.043: INFO: Checking APIGroup: snapshot.storage.k8s.io
  Dec 22 05:40:43.044: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  Dec 22 05:40:43.044: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
  Dec 22 05:40:43.044: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  Dec 22 05:40:43.044: INFO: Checking APIGroup: metrics.k8s.io
  Dec 22 05:40:43.045: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Dec 22 05:40:43.045: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Dec 22 05:40:43.045: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Dec 22 05:40:43.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7844" for this suite. @ 12/22/23 05:40:43.05
• [0.640 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/22/23 05:40:43.057
  Dec 22 05:40:43.058: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pods @ 12/22/23 05:40:43.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:43.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:43.078
  STEP: creating pod @ 12/22/23 05:40:43.082
  Dec 22 05:40:45.112: INFO: Pod pod-hostip-cf5fd289-c35f-4ef9-b3e2-610f1fb78c62 has hostIP: 172.31.7.66
  Dec 22 05:40:45.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8985" for this suite. @ 12/22/23 05:40:45.116
• [2.065 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 12/22/23 05:40:45.124
  Dec 22 05:40:45.124: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 05:40:45.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:45.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:45.146
  Dec 22 05:40:45.149: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  W1222 05:40:47.685367      20 warnings.go:70] unknown field "alpha"
  W1222 05:40:47.685542      20 warnings.go:70] unknown field "beta"
  W1222 05:40:47.685789      20 warnings.go:70] unknown field "delta"
  W1222 05:40:47.685868      20 warnings.go:70] unknown field "epsilon"
  W1222 05:40:47.686366      20 warnings.go:70] unknown field "gamma"
  Dec 22 05:40:48.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7419" for this suite. @ 12/22/23 05:40:48.619
• [3.502 seconds]
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/22/23 05:40:48.626
  Dec 22 05:40:48.626: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:40:48.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:48.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:48.644
  STEP: Creating secret with name s-test-opt-del-4de7a131-0b90-4a84-91b7-8940df7d6c3a @ 12/22/23 05:40:48.65
  STEP: Creating secret with name s-test-opt-upd-d7ff16fd-d3e3-40a3-a8b7-4fcca7584bd5 @ 12/22/23 05:40:48.656
  STEP: Creating the pod @ 12/22/23 05:40:48.66
  STEP: Deleting secret s-test-opt-del-4de7a131-0b90-4a84-91b7-8940df7d6c3a @ 12/22/23 05:40:50.709
  STEP: Updating secret s-test-opt-upd-d7ff16fd-d3e3-40a3-a8b7-4fcca7584bd5 @ 12/22/23 05:40:50.716
  STEP: Creating secret with name s-test-opt-create-6c3bb09d-c935-49e5-8e0f-588e04586375 @ 12/22/23 05:40:50.726
  STEP: waiting to observe update in volume @ 12/22/23 05:40:50.741
  Dec 22 05:40:52.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8083" for this suite. @ 12/22/23 05:40:52.779
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 12/22/23 05:40:52.792
  Dec 22 05:40:52.792: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:40:52.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:52.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:52.816
  STEP: Creating configMap with name projected-configmap-test-volume-map-c185a1e0-e7ae-49d0-ae45-0b4a87490554 @ 12/22/23 05:40:52.818
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:40:52.823
  STEP: Saw pod success @ 12/22/23 05:40:56.849
  Dec 22 05:40:56.854: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-configmaps-7fede43e-0bb0-4d29-9d89-a2ab828e51dc container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:40:56.863
  Dec 22 05:40:56.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-325" for this suite. @ 12/22/23 05:40:56.884
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 12/22/23 05:40:56.898
  Dec 22 05:40:56.898: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename security-context-test @ 12/22/23 05:40:56.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:56.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:56.917
  Dec 22 05:41:00.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7697" for this suite. @ 12/22/23 05:41:00.949
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/22/23 05:41:00.961
  Dec 22 05:41:00.961: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:41:00.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:00.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:00.985
  STEP: creating a Deployment @ 12/22/23 05:41:00.996
  STEP: waiting for Deployment to be created @ 12/22/23 05:41:01.005
  STEP: waiting for all Replicas to be Ready @ 12/22/23 05:41:01.011
  Dec 22 05:41:01.014: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:41:01.014: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:41:01.022: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:41:01.022: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:41:01.050: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:41:01.051: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:41:01.073: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:41:01.074: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:41:02.456: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Dec 22 05:41:02.456: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Dec 22 05:41:02.818: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/22/23 05:41:02.819
  Dec 22 05:41:02.829: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/22/23 05:41:02.829
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 0
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:02.832: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:02.843: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:02.843: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:02.870: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:02.870: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:02.901: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  Dec 22 05:41:02.901: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  Dec 22 05:41:02.933: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  Dec 22 05:41:02.933: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  Dec 22 05:41:04.469: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:04.470: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:04.507: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  STEP: listing Deployments @ 12/22/23 05:41:04.507
  Dec 22 05:41:04.511: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/22/23 05:41:04.512
  Dec 22 05:41:04.532: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/22/23 05:41:04.532
  Dec 22 05:41:04.540: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:41:04.545: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:41:04.571: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:41:04.596: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:41:04.607: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:41:06.483: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:41:06.509: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:41:06.530: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:41:06.535: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:41:06.541: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:41:07.847: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/22/23 05:41:07.881
  STEP: fetching the DeploymentStatus @ 12/22/23 05:41:07.894
  Dec 22 05:41:07.901: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  Dec 22 05:41:07.901: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  Dec 22 05:41:07.902: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  Dec 22 05:41:07.902: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  Dec 22 05:41:07.902: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 1
  Dec 22 05:41:07.902: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:07.902: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:07.902: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:07.902: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:07.902: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 2
  Dec 22 05:41:07.903: INFO: observed Deployment test-deployment in namespace deployment-5478 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/22/23 05:41:07.903
  Dec 22 05:41:07.922: INFO: observed event type MODIFIED
  Dec 22 05:41:07.923: INFO: observed event type MODIFIED
  Dec 22 05:41:07.923: INFO: observed event type MODIFIED
  Dec 22 05:41:07.923: INFO: observed event type MODIFIED
  Dec 22 05:41:07.924: INFO: observed event type MODIFIED
  Dec 22 05:41:07.924: INFO: observed event type MODIFIED
  Dec 22 05:41:07.924: INFO: observed event type MODIFIED
  Dec 22 05:41:07.924: INFO: observed event type MODIFIED
  Dec 22 05:41:07.924: INFO: observed event type MODIFIED
  Dec 22 05:41:07.925: INFO: observed event type MODIFIED
  Dec 22 05:41:07.925: INFO: observed event type MODIFIED
  Dec 22 05:41:07.925: INFO: observed event type MODIFIED
  Dec 22 05:41:07.925: INFO: observed event type MODIFIED
  Dec 22 05:41:07.925: INFO: observed event type MODIFIED
  Dec 22 05:41:07.931: INFO: Log out all the ReplicaSets if there is no deployment created
  Dec 22 05:41:07.939: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "820e43bf-769a-4fd3-a252-21a4bf7a64c7",
      ResourceVersion: (string) (len=5) "49157",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "7506afa6-98ff-4af7-9e4b-151c1d80525b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 35 30 36  61 66 61 36 2d 39 38 66  |":\"7506afa6-98f|
              00000130  66 2d 34 61 66 37 2d 39  65 34 62 2d 31 35 31 63  |f-4af7-9e4b-151c|
              00000140  31 64 38 30 35 32 35 62  5c 22 7d 22 3a 7b 7d 7d  |1d80525b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 22 05:41:07.954: INFO: pod: "test-deployment-64fd565c98-phg2b":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-phg2b",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-5478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ca0fe17-937d-4f72-ac8e-c4f2970ff6a8",
      ResourceVersion: (string) (len=5) "49153",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820469,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b64feec48a0f1153d24c7802cb271a126980bf5602e4732b3baec18f0dc00dc4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.55/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.55/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "820e43bf-769a-4fd3-a252-21a4bf7a64c7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 32 30 65 34 33 62 66  |uid\":\"820e43bf|
              000000a0  2d 37 36 39 61 2d 34 66  64 33 2d 61 32 35 32 2d  |-769a-4fd3-a252-|
              000000b0  32 31 61 34 62 66 37 61  36 34 63 37 5c 22 7d 22  |21a4bf7a64c7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 35 35  5c 22 7d 22 3a 7b 22 2e  |.42.3.55\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tfwns",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tfwns",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) (len=10) "10.42.3.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820464,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://f49d44a5ccfadd9ff314c2a2795f6d9a827d686726556d6f4169dc8fa57f6db7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 22 05:41:07.956: INFO: pod: "test-deployment-64fd565c98-v9lfk":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-v9lfk",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-5478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "049ee7a8-e7c8-4195-bf89-e3d8855759fe",
      ResourceVersion: (string) (len=5) "49137",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0c4cbed2c3069cb24eea7e605ff8854f69efd360f7868ed8a6f5391098fdfe55",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.98/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.98/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "820e43bf-769a-4fd3-a252-21a4bf7a64c7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 32 30 65 34 33 62 66  |uid\":\"820e43bf|
              000000a0  2d 37 36 39 61 2d 34 66  64 33 2d 61 32 35 32 2d  |-769a-4fd3-a252-|
              000000b0  32 31 61 34 62 66 37 61  36 34 63 37 5c 22 7d 22  |21a4bf7a64c7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 39 38  5c 22 7d 22 3a 7b 22 2e  |.42.2.98\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jc55b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jc55b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-9-255.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.255"
        }
      },
      PodIP: (string) (len=10) "10.42.2.98",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.98"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820465,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://c5ca135a13a24169877d937fc75787ba4175920e6e0981c5285447d40137337a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 22 05:41:07.958: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b618f878-c9f9-4ff1-b88f-fb57c2218b4c",
      ResourceVersion: (string) (len=5) "49055",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "7506afa6-98ff-4af7-9e4b-151c1d80525b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 35 30 36  61 66 61 36 2d 39 38 66  |":\"7506afa6-98f|
              00000130  66 2d 34 61 66 37 2d 39  65 34 62 2d 31 35 31 63  |f-4af7-9e4b-151c|
              00000140  31 64 38 30 35 32 35 62  5c 22 7d 22 3a 7b 7d 7d  |1d80525b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 22 05:41:07.970: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e23bb050-2cab-4f8f-9605-df7ec460a0e8",
      ResourceVersion: (string) (len=5) "49149",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "7506afa6-98ff-4af7-9e4b-151c1d80525b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 35 30 36  61 66 61 36 2d 39 38 66  |":\"7506afa6-98f|
              00000130  66 2d 34 61 66 37 2d 39  65 34 62 2d 31 35 31 63  |f-4af7-9e4b-151c|
              00000140  31 64 38 30 35 32 35 62  5c 22 7d 22 3a 7b 7d 7d  |1d80525b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 22 05:41:07.996: INFO: pod: "test-deployment-79ff746c4-fjxpx":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-fjxpx",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6803aa5b-6135-4caf-bdc8-1b1bdb90d634",
      ResourceVersion: (string) (len=5) "49166",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f3f140676c3103e803353711eb4706e40517d55af7dae1ca7acfc6cee893240d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.99/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.99/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "e23bb050-2cab-4f8f-9605-df7ec460a0e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 32 33 62 62 30 35 30  |uid\":\"e23bb050|
              000000a0  2d 32 63 61 62 2d 34 66  38 66 2d 39 36 30 35 2d  |-2cab-4f8f-9605-|
              000000b0  64 66 37 65 63 34 36 30  61 30 65 38 5c 22 7d 22  |df7ec460a0e8\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 39 39  5c 22 7d 22 3a 7b 22 2e  |.42.2.99\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g8ddp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g8ddp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-9-255.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.255"
        }
      },
      PodIP: (string) (len=10) "10.42.2.99",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.99"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820467,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f522c678bcc9df76197218e89b7d7ec8e0c34e2278060340bacd235a61e4d6d2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 22 05:41:08.006: INFO: pod: "test-deployment-79ff746c4-g48h2":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-g48h2",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ecc594f-48c8-4fe8-ac70-cce60496e57b",
      ResourceVersion: (string) (len=5) "49165",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1ad6d5dfcc6a6015caa96a7c2fe0e04b2a152cd5a777bebe4b2dafb3a1abcf5f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.56/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.56/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "e23bb050-2cab-4f8f-9605-df7ec460a0e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 32 33 62 62 30 35 30  |uid\":\"e23bb050|
              000000a0  2d 32 63 61 62 2d 34 66  38 66 2d 39 36 30 35 2d  |-2cab-4f8f-9605-|
              000000b0  64 66 37 65 63 34 36 30  61 30 65 38 5c 22 7d 22  |df7ec460a0e8\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 35 36  5c 22 7d 22 3a 7b 22 2e  |.42.3.56\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b7n9c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b7n9c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) (len=10) "10.42.3.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820465,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dd8f7b700db1c21de5bad18738141e1e1f1d78c0693bccc154d3298a0a860cac",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 22 05:41:08.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5478" for this suite. @ 12/22/23 05:41:08.015
• [7.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 12/22/23 05:41:08.023
  Dec 22 05:41:08.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:41:08.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:08.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:08.047
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:41:08.055
  STEP: Saw pod success @ 12/22/23 05:41:12.083
  Dec 22 05:41:12.086: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-6e0a3a1f-5025-4c92-9abc-9acdcd4b3eb5 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:41:12.093
  Dec 22 05:41:12.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-856" for this suite. @ 12/22/23 05:41:12.112
• [4.095 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 12/22/23 05:41:12.119
  Dec 22 05:41:12.119: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 05:41:12.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:12.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:12.14
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:41:12.143
  STEP: Saw pod success @ 12/22/23 05:41:16.166
  Dec 22 05:41:16.170: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-bbbfae92-8c5f-4978-b6a2-e78f053cd73c container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:41:16.176
  Dec 22 05:41:16.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9665" for this suite. @ 12/22/23 05:41:16.196
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 12/22/23 05:41:16.206
  Dec 22 05:41:16.206: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:41:16.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:16.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:16.232
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:41:16.235
  STEP: Saw pod success @ 12/22/23 05:41:20.431
  Dec 22 05:41:20.434: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-704554c7-1862-427a-b1ce-c3c1367a30e1 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:41:20.442
  Dec 22 05:41:20.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4723" for this suite. @ 12/22/23 05:41:20.461
• [4.260 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 12/22/23 05:41:20.468
  Dec 22 05:41:20.468: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 05:41:20.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:20.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:20.491
  STEP: creating service endpoint-test2 in namespace services-2812 @ 12/22/23 05:41:20.494
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2812 to expose endpoints map[] @ 12/22/23 05:41:20.511
  Dec 22 05:41:20.527: INFO: successfully validated that service endpoint-test2 in namespace services-2812 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2812 @ 12/22/23 05:41:20.528
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2812 to expose endpoints map[pod1:[80]] @ 12/22/23 05:41:24.556
  Dec 22 05:41:24.579: INFO: successfully validated that service endpoint-test2 in namespace services-2812 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/22/23 05:41:24.58
  Dec 22 05:41:24.582: INFO: Creating new exec pod
  Dec 22 05:41:27.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-2812 exec execpod8hzbr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 22 05:41:27.852: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 22 05:41:27.852: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:41:27.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-2812 exec execpod8hzbr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.189.161 80'
  Dec 22 05:41:28.061: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.189.161 80\nConnection to 10.43.189.161 80 port [tcp/http] succeeded!\n"
  Dec 22 05:41:28.061: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2812 @ 12/22/23 05:41:28.061
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2812 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/22/23 05:41:30.078
  Dec 22 05:41:30.090: INFO: successfully validated that service endpoint-test2 in namespace services-2812 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/22/23 05:41:30.09
  Dec 22 05:41:31.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-2812 exec execpod8hzbr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 22 05:41:31.293: INFO: stderr: "+ echo+  hostName\nnc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 22 05:41:31.293: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:41:31.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-2812 exec execpod8hzbr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.189.161 80'
  Dec 22 05:41:31.634: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.189.161 80\nConnection to 10.43.189.161 80 port [tcp/http] succeeded!\n"
  Dec 22 05:41:31.635: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2812 @ 12/22/23 05:41:31.635
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2812 to expose endpoints map[pod2:[80]] @ 12/22/23 05:41:31.656
  Dec 22 05:41:31.692: INFO: successfully validated that service endpoint-test2 in namespace services-2812 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/22/23 05:41:31.693
  Dec 22 05:41:32.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-2812 exec execpod8hzbr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 22 05:41:32.878: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 22 05:41:32.878: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:41:32.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-2812 exec execpod8hzbr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.189.161 80'
  Dec 22 05:41:33.066: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.189.161 80\nConnection to 10.43.189.161 80 port [tcp/http] succeeded!\n"
  Dec 22 05:41:33.066: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2812 @ 12/22/23 05:41:33.066
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2812 to expose endpoints map[] @ 12/22/23 05:41:33.085
  Dec 22 05:41:33.098: INFO: successfully validated that service endpoint-test2 in namespace services-2812 exposes endpoints map[]
  Dec 22 05:41:33.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2812" for this suite. @ 12/22/23 05:41:33.126
• [12.664 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/22/23 05:41:33.133
  Dec 22 05:41:33.133: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:41:33.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:33.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:33.153
  STEP: Creating projection with secret that has name projected-secret-test-fa0a118d-45af-4e0e-a3c7-068336eb5083 @ 12/22/23 05:41:33.155
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:41:33.16
  STEP: Saw pod success @ 12/22/23 05:41:37.182
  Dec 22 05:41:37.185: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-secrets-63d04212-b733-4c26-abe4-bd32f0b28a8c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:41:37.192
  Dec 22 05:41:37.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8091" for this suite. @ 12/22/23 05:41:37.215
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 12/22/23 05:41:37.226
  Dec 22 05:41:37.226: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/22/23 05:41:37.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:37.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:37.245
  STEP: create the container to handle the HTTPGet hook request. @ 12/22/23 05:41:37.253
  STEP: create the pod with lifecycle hook @ 12/22/23 05:41:41.276
  STEP: delete the pod with lifecycle hook @ 12/22/23 05:41:45.293
  STEP: check prestop hook @ 12/22/23 05:41:47.309
  Dec 22 05:41:47.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1974" for this suite. @ 12/22/23 05:41:47.328
• [10.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 12/22/23 05:41:47.336
  Dec 22 05:41:47.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:41:47.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:47.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:47.371
  STEP: Setting up server cert @ 12/22/23 05:41:47.405
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:41:47.828
  STEP: Deploying the webhook pod @ 12/22/23 05:41:47.837
  STEP: Wait for the deployment to be ready @ 12/22/23 05:41:47.849
  Dec 22 05:41:47.856: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/22/23 05:41:49.866
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:41:49.875
  Dec 22 05:41:50.875: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/22/23 05:41:50.881
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/22/23 05:41:50.901
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/22/23 05:41:50.917
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/22/23 05:41:50.925
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/22/23 05:41:50.935
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/22/23 05:41:50.942
  Dec 22 05:41:50.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3256" for this suite. @ 12/22/23 05:41:51.004
  STEP: Destroying namespace "webhook-markers-9560" for this suite. @ 12/22/23 05:41:51.014
• [3.686 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/22/23 05:41:51.023
  Dec 22 05:41:51.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:41:51.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:51.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:51.076
  STEP: Creating secret with name s-test-opt-del-19358a34-55d1-4f75-9978-7dba94bfbc69 @ 12/22/23 05:41:51.087
  STEP: Creating secret with name s-test-opt-upd-29881459-4ca2-4f87-8d04-51eddb48e4d2 @ 12/22/23 05:41:51.091
  STEP: Creating the pod @ 12/22/23 05:41:51.096
  STEP: Deleting secret s-test-opt-del-19358a34-55d1-4f75-9978-7dba94bfbc69 @ 12/22/23 05:41:55.136
  STEP: Updating secret s-test-opt-upd-29881459-4ca2-4f87-8d04-51eddb48e4d2 @ 12/22/23 05:41:55.141
  STEP: Creating secret with name s-test-opt-create-9722e969-475a-4835-875f-083dec4efbea @ 12/22/23 05:41:55.148
  STEP: waiting to observe update in volume @ 12/22/23 05:41:55.153
  Dec 22 05:42:31.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3767" for this suite. @ 12/22/23 05:42:31.409
• [40.404 seconds]
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 12/22/23 05:42:31.427
  Dec 22 05:42:31.427: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 05:42:31.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:31.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:31.502
  STEP: creating an Endpoint @ 12/22/23 05:42:31.518
  STEP: waiting for available Endpoint @ 12/22/23 05:42:31.538
  STEP: listing all Endpoints @ 12/22/23 05:42:31.54
  STEP: updating the Endpoint @ 12/22/23 05:42:31.552
  STEP: fetching the Endpoint @ 12/22/23 05:42:31.559
  STEP: patching the Endpoint @ 12/22/23 05:42:31.569
  STEP: fetching the Endpoint @ 12/22/23 05:42:31.579
  STEP: deleting the Endpoint by Collection @ 12/22/23 05:42:31.582
  STEP: waiting for Endpoint deletion @ 12/22/23 05:42:31.59
  STEP: fetching the Endpoint @ 12/22/23 05:42:31.592
  Dec 22 05:42:31.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5492" for this suite. @ 12/22/23 05:42:31.6
• [0.179 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/22/23 05:42:31.607
  Dec 22 05:42:31.607: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename containers @ 12/22/23 05:42:31.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:31.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:31.628
  STEP: Creating a pod to test override command @ 12/22/23 05:42:31.632
  STEP: Saw pod success @ 12/22/23 05:42:35.659
  Dec 22 05:42:35.662: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod client-containers-93dff645-22ba-4e92-a1f2-5edf5f65d227 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:42:35.668
  Dec 22 05:42:35.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2711" for this suite. @ 12/22/23 05:42:35.687
• [4.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/22/23 05:42:35.695
  Dec 22 05:42:35.695: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename cronjob @ 12/22/23 05:42:35.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:35.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:35.72
  STEP: Creating a ForbidConcurrent cronjob @ 12/22/23 05:42:35.723
  STEP: Ensuring a job is scheduled @ 12/22/23 05:42:35.728
  STEP: Ensuring exactly one is scheduled @ 12/22/23 05:43:01.732
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/22/23 05:43:01.735
  STEP: Ensuring no more jobs are scheduled @ 12/22/23 05:43:01.737
  STEP: Removing cronjob @ 12/22/23 05:48:01.745
  Dec 22 05:48:01.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9704" for this suite. @ 12/22/23 05:48:01.757
• [326.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/22/23 05:48:01.767
  Dec 22 05:48:01.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:48:01.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:48:01.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:48:01.815
  STEP: Creating secret with name secret-test-map-a7c8afb7-c68b-4610-b7dc-d09bac5770da @ 12/22/23 05:48:01.818
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:48:01.829
  STEP: Saw pod success @ 12/22/23 05:48:05.86
  Dec 22 05:48:05.864: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-secrets-7de6c0d0-983c-4e63-98a2-6306832b5807 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:48:05.883
  Dec 22 05:48:05.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7705" for this suite. @ 12/22/23 05:48:05.902
• [4.140 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/22/23 05:48:05.908
  Dec 22 05:48:05.908: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:48:05.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:48:05.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:48:05.929
  STEP: Creating secret with name secret-test-9d7d077e-a18f-4738-bdee-1f26beb78053 @ 12/22/23 05:48:05.932
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:48:05.937
  STEP: Saw pod success @ 12/22/23 05:48:09.958
  Dec 22 05:48:09.964: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-secrets-bd481ec1-0af4-4b2e-9876-0fe953ab6ca1 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:48:09.974
  Dec 22 05:48:09.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6913" for this suite. @ 12/22/23 05:48:09.994
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 12/22/23 05:48:10.002
  Dec 22 05:48:10.002: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 05:48:10.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:48:10.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:48:10.027
  STEP: Creating a pod to test downward api env vars @ 12/22/23 05:48:10.03
  STEP: Saw pod success @ 12/22/23 05:48:14.056
  Dec 22 05:48:14.062: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downward-api-5d3b4b12-1f54-4c1b-91e3-dc91640d28bc container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 05:48:14.069
  Dec 22 05:48:14.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9334" for this suite. @ 12/22/23 05:48:14.091
• [4.097 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/22/23 05:48:14.099
  Dec 22 05:48:14.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:48:14.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:48:14.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:48:14.141
  Dec 22 05:48:14.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7078" for this suite. @ 12/22/23 05:48:14.208
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/22/23 05:48:14.22
  Dec 22 05:48:14.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:48:14.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:48:14.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:48:14.255
  Dec 22 05:48:14.259: INFO: Creating deployment "webserver-deployment"
  Dec 22 05:48:14.279: INFO: Waiting for observed generation 1
  Dec 22 05:48:16.292: INFO: Waiting for all required pods to come up
  Dec 22 05:48:16.298: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/22/23 05:48:16.298
  Dec 22 05:48:18.312: INFO: Waiting for deployment "webserver-deployment" to complete
  Dec 22 05:48:18.318: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Dec 22 05:48:18.327: INFO: Updating deployment webserver-deployment
  Dec 22 05:48:18.327: INFO: Waiting for observed generation 2
  Dec 22 05:48:20.342: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Dec 22 05:48:20.344: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Dec 22 05:48:20.350: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Dec 22 05:48:20.358: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Dec 22 05:48:20.358: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Dec 22 05:48:20.360: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Dec 22 05:48:20.365: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Dec 22 05:48:20.365: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Dec 22 05:48:20.374: INFO: Updating deployment webserver-deployment
  Dec 22 05:48:20.374: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Dec 22 05:48:20.383: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Dec 22 05:48:20.395: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Dec 22 05:48:20.427: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8ab1121-2e1c-49fa-97a2-50330a1e1c14",
      ResourceVersion: (string) (len=5) "51623",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 05:48:20.477: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
      ResourceVersion: (string) (len=5) "51625",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "b8ab1121-2e1c-49fa-97a2-50330a1e1c14",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 38 61 62 31 31  32 31 2d 32 65 31 63 2d  |\"b8ab1121-2e1c-|
              00000120  34 39 66 61 2d 39 37 61  32 2d 35 30 33 33 30 61  |49fa-97a2-50330a|
              00000130  31 65 31 63 31 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1e1c14\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:48:20.486: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Dec 22 05:48:20.487: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
      ResourceVersion: (string) (len=5) "51624",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "b8ab1121-2e1c-49fa-97a2-50330a1e1c14",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 38 61 62 31 31  32 31 2d 32 65 31 63 2d  |\"b8ab1121-2e1c-|
              00000120  34 39 66 61 2d 39 37 61  32 2d 35 30 33 33 30 61  |49fa-97a2-50330a|
              00000130  31 65 31 63 31 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1e1c14\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:48:20.567: INFO: Pod "webserver-deployment-557759b7c7-4sp8k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4sp8k",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1edfa00c-5037-4be0-91f8-7a597aaad664",
      ResourceVersion: (string) (len=5) "51471",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.83/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1fa17167290e9077a2566a29af878378178937be06a13ddea451595566d69630",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.83/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 38 33  5c 22 7d 22 3a 7b 22 2e  |.42.1.83\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7ph7d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7ph7d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-4-122.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.122"
        }
      },
      PodIP: (string) (len=10) "10.42.1.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820895,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://977054100be117ac0dd04997af8daa6d94ea4ed82ba3f1fc3da2385e4528ea83",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.577: INFO: Pod "webserver-deployment-557759b7c7-6s9w6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6s9w6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c32f7e29-6ad6-49e8-a832-35530f70e222",
      ResourceVersion: (string) (len=5) "51490",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7e614813f2b7f3046f3c4c586ef50d52c619ccb65331a4521db8c040143a9d79",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.82/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.82/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 38 32  5c 22 7d 22 3a 7b 22 2e  |.42.0.82\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kfpv8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kfpv8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-186.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.186",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.186"
        }
      },
      PodIP: (string) (len=10) "10.42.0.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820895,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5111ebd0ab03f74fc84e4f9c8424f5d220528ee13b2ded9ce18bb42684ded992",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.583: INFO: Pod "webserver-deployment-557759b7c7-8tcqn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8tcqn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05289294-419b-403c-ab59-719f28f1f514",
      ResourceVersion: (string) (len=5) "51644",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2gt7w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2gt7w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.596: INFO: Pod "webserver-deployment-557759b7c7-8vqbc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8vqbc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4498cd0e-5ac1-49cc-98f1-4ebbdfabfb50",
      ResourceVersion: (string) (len=5) "51502",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "16bfd5d072a1ba4ce8015663f8d26fb6e790e643440964cfed47f5b9f7f2615d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.72/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.72/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 37 32  5c 22 7d 22 3a 7b 22 2e  |.42.3.72\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p8g2c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p8g2c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) (len=10) "10.42.3.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820895,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://45077d7948659faf7f263b5a05094ffdfb2272ed4c549c2b2a689c392d44a368",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.604: INFO: Pod "webserver-deployment-557759b7c7-cfcls" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cfcls",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99d85c08-423b-4587-bfc0-511d993e4ae0",
      ResourceVersion: (string) (len=5) "51635",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-txfp6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-txfp6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.606: INFO: Pod "webserver-deployment-557759b7c7-dlpgr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dlpgr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68ff9ee5-1929-4817-ab6e-c217c7233eed",
      ResourceVersion: (string) (len=5) "51474",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c5e79cea4f133a7cd3c2ab4a1f515dffb56cb63e2672ac88418561c932bd0f0c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.84/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.84/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 38 34  5c 22 7d 22 3a 7b 22 2e  |.42.1.84\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ppgrm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ppgrm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-4-122.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.122"
        }
      },
      PodIP: (string) (len=10) "10.42.1.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820895,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9ceb0b8c620ca3bee3d4e44db3bbba1e616dc15cbc2734b1b32f916679725f30",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.616: INFO: Pod "webserver-deployment-557759b7c7-dv5g9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dv5g9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7cc42777-425e-474d-8915-72ce9e958eb9",
      ResourceVersion: (string) (len=5) "51651",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hpdvf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hpdvf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-4-122.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.122"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.619: INFO: Pod "webserver-deployment-557759b7c7-gwm2b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gwm2b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b6bb798-79ad-4f01-bd7a-145b5ac1373c",
      ResourceVersion: (string) (len=5) "51512",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1bc518095dd6a1803312d82bb3f86e0dfd83516983693705a96e3d535a051258",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.102/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.102/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 30  32 5c 22 7d 22 3a 7b 22  |.42.2.102\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nbk9j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nbk9j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-9-255.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.255"
        }
      },
      PodIP: (string) (len=11) "10.42.2.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820896,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://22785b3911847ff4d729846e86533596088c762b8e1bb30f90e9142f8f27819d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.622: INFO: Pod "webserver-deployment-557759b7c7-jnw7b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jnw7b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a3185f7-94ea-42c1-b481-c5f31a177b45",
      ResourceVersion: (string) (len=5) "51643",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s97sp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s97sp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.624: INFO: Pod "webserver-deployment-557759b7c7-kk75r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kk75r",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5150d1c3-2e41-4696-b65e-f60797518344",
      ResourceVersion: (string) (len=5) "51646",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fpc7q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fpc7q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.626: INFO: Pod "webserver-deployment-557759b7c7-q27b4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q27b4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ff1ae87-84c7-4f8a-b730-ab9350df379f",
      ResourceVersion: (string) (len=5) "51509",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.103/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5d8b3bd7c2dc479f5649d69b5b0027d3bbdca32d24b9c6ef817487101cc3adeb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.103/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 30  33 5c 22 7d 22 3a 7b 22  |.42.2.103\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5x5m2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5x5m2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-9-255.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.255"
        }
      },
      PodIP: (string) (len=11) "10.42.2.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820896,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://24a581421183c01d060712933729da7fda776bec3b6ab4397afc5bb84db284de",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.629: INFO: Pod "webserver-deployment-557759b7c7-s2hkk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-s2hkk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7cc9b1b-e7eb-4b11-843f-906cd55845dd",
      ResourceVersion: (string) (len=5) "51515",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a7152f6b3f736becb40d86a798d429c214e9c308c703dd03d6d4d40355ea3b01",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.101/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.101/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 30  31 5c 22 7d 22 3a 7b 22  |.42.2.101\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jph74",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jph74",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-9-255.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.255"
        }
      },
      PodIP: (string) (len=11) "10.42.2.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820896,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9f1b50365dc7f5ab74b0bd82841d73ba56bec6127bf708b84d3b91d2f60cf461",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.633: INFO: Pod "webserver-deployment-557759b7c7-wrn8r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wrn8r",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "729e293f-e0a4-4a6f-84b3-20da21a23c15",
      ResourceVersion: (string) (len=5) "51648",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8q4k6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8q4k6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.635: INFO: Pod "webserver-deployment-557759b7c7-x2cvh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-x2cvh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ef5e1b9-1f6e-47bf-86d8-1a333743d88f",
      ResourceVersion: (string) (len=5) "51642",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-59twp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-59twp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.636: INFO: Pod "webserver-deployment-557759b7c7-zh596" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zh596",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c0f4ab3-44ad-417b-8f0c-c80d482c5330",
      ResourceVersion: (string) (len=5) "51492",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4913001a9bcd34d88be36111054a60f99baf2b34125cc95e54b5a4311aae1175",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.83/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.83/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2099eb1a-ba45-4687-9bec-5243a9dc7e6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  39 39 65 62 31 61 2d 62  |d\":\"2099eb1a-b|
              00000090  61 34 35 2d 34 36 38 37  2d 39 62 65 63 2d 35 32  |a45-4687-9bec-52|
              000000a0  34 33 61 39 64 63 37 65  36 64 5c 22 7d 22 3a 7b  |43a9dc7e6d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 38 33  5c 22 7d 22 3a 7b 22 2e  |.42.0.83\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-86t7j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-86t7j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-186.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.186",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.186"
        }
      },
      PodIP: (string) (len=10) "10.42.0.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820895,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b6fc7517b17bfda4439556fa714732bd26d819e1ce5034c3d4cf6f6f175ed6e1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.638: INFO: Pod "webserver-deployment-9b4f5bf69-4dfcc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4dfcc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e9dc321-153a-497a-8f7c-29f5953b760d",
      ResourceVersion: (string) (len=5) "51657",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6pc2p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6pc2p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-186.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.640: INFO: Pod "webserver-deployment-9b4f5bf69-69vlr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-69vlr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa58c2bc-dce2-4c5d-ada6-887373ef0557",
      ResourceVersion: (string) (len=5) "51652",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nvkt4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nvkt4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-4-122.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.653: INFO: Pod "webserver-deployment-9b4f5bf69-7gx5k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7gx5k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2ef3a4f-8bd3-4bef-b4dc-29afc7f6dd01",
      ResourceVersion: (string) (len=5) "51581",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c85f4f2838cbccd0e85e85c4b9796711634f38764953c40efcffbe832178d821",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.73/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.73/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qz4n9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qz4n9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.660: INFO: Pod "webserver-deployment-9b4f5bf69-b5fqw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-b5fqw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ecc64600-3bc5-4011-9bea-4680a3b1e15a",
      ResourceVersion: (string) (len=5) "51655",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ls89t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ls89t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.661: INFO: Pod "webserver-deployment-9b4f5bf69-cgklh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cgklh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "017e5291-66fc-4ba5-87ad-5544bab1d5eb",
      ResourceVersion: (string) (len=5) "51654",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6t64z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6t64z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.662: INFO: Pod "webserver-deployment-9b4f5bf69-d7grm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-d7grm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8cc43d2b-c5fb-4ec6-81fe-ea3179be1f9b",
      ResourceVersion: (string) (len=5) "51656",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q9vzd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q9vzd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.674: INFO: Pod "webserver-deployment-9b4f5bf69-dtgld" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dtgld",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef471999-9636-4a9b-8a85-2a700a987401",
      ResourceVersion: (string) (len=5) "51582",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c396a52b1dca7dd5c9bec1f83b668d027b73eb9d9c67154058f1e20dc6e5fd61",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.84/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.84/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jgjvz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jgjvz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-186.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.186",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.186"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.688: INFO: Pod "webserver-deployment-9b4f5bf69-lmgss" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lmgss",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5644fcee-835b-4cb3-8b6b-2fccb5463d43",
      ResourceVersion: (string) (len=5) "51618",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2dd8df1566561e7b63d30b12837aa009dc64dfd803e3e840739e5934066a96f3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.104/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.104/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 31 30 34 5c 22  7d 22 3a 7b 22 2e 22 3a  |.2.104\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qj6cc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qj6cc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-9-255.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.255"
        }
      },
      PodIP: (string) (len=11) "10.42.2.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.696: INFO: Pod "webserver-deployment-9b4f5bf69-m7pmp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-m7pmp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8c40147-a79a-4b8f-9d46-11a373d1d2fa",
      ResourceVersion: (string) (len=5) "51612",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "002e696191e698ad5f996ee40a86dd94a9602189562146c0bc0d4f24c71796dd",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.85/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.85/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 38 35 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.85\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rlvjq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rlvjq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-4-122.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.122"
        }
      },
      PodIP: (string) (len=10) "10.42.1.85",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.85"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.703: INFO: Pod "webserver-deployment-9b4f5bf69-rl8xz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-rl8xz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "385c85e8-a3c0-44bc-8299-8469b7381b1b",
      ResourceVersion: (string) (len=5) "51647",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-prd64",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-prd64",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-9-255.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.255"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.708: INFO: Pod "webserver-deployment-9b4f5bf69-w7m2c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-w7m2c",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88ee68d1-37ca-41f8-bbd8-5ac9fd55133c",
      ResourceVersion: (string) (len=5) "51586",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.74/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.74/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "40b4d6c8427ad872b10e5a52c1730899c83e9235b13a97200adc5aff009a10c2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9x4md",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9x4md",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-7-66.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.7.66"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.714: INFO: Pod "webserver-deployment-9b4f5bf69-z2dqb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z2dqb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6180",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89b8faf1-68cd-4d24-862b-198ecd2304ef",
      ResourceVersion: (string) (len=5) "51653",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "76cb2fbb-08b4-497e-a194-9a3469802cc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  63 62 32 66 62 62 2d 30  |d\":\"76cb2fbb-0|
              00000090  38 62 34 2d 34 39 37 65  2d 61 31 39 34 2d 39 61  |8b4-497e-a194-9a|
              000000a0  33 34 36 39 38 30 32 63  63 35 5c 22 7d 22 3a 7b  |3469802cc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vq4pt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vq4pt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:48:20.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6180" for this suite. @ 12/22/23 05:48:20.734
• [6.530 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 12/22/23 05:48:20.754
  Dec 22 05:48:20.754: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 05:48:20.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:48:20.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:48:20.806
  STEP: Creating service test in namespace statefulset-1661 @ 12/22/23 05:48:20.814
  STEP: Creating statefulset ss in namespace statefulset-1661 @ 12/22/23 05:48:20.833
  Dec 22 05:48:20.855: INFO: Found 0 stateful pods, waiting for 1
  Dec 22 05:48:30.855: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/22/23 05:48:30.86
  STEP: updating a scale subresource @ 12/22/23 05:48:30.863
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/22/23 05:48:30.869
  STEP: Patch a scale subresource @ 12/22/23 05:48:30.879
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/22/23 05:48:30.886
  Dec 22 05:48:30.890: INFO: Deleting all statefulset in ns statefulset-1661
  Dec 22 05:48:30.899: INFO: Scaling statefulset ss to 0
  Dec 22 05:48:40.934: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 05:48:40.937: INFO: Deleting statefulset ss
  Dec 22 05:48:40.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1661" for this suite. @ 12/22/23 05:48:40.954
• [20.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 12/22/23 05:48:40.964
  Dec 22 05:48:40.964: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:48:40.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:48:40.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:48:40.986
  STEP: Creating resourceQuota "e2e-rq-status-4g8zj" @ 12/22/23 05:48:40.992
  Dec 22 05:48:41.000: INFO: Resource quota "e2e-rq-status-4g8zj" reports spec: hard cpu limit of 500m
  Dec 22 05:48:41.000: INFO: Resource quota "e2e-rq-status-4g8zj" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-4g8zj" /status @ 12/22/23 05:48:41
  STEP: Confirm /status for "e2e-rq-status-4g8zj" resourceQuota via watch @ 12/22/23 05:48:41.009
  Dec 22 05:48:41.011: INFO: observed resourceQuota "e2e-rq-status-4g8zj" in namespace "resourcequota-4221" with hard status: v1.ResourceList(nil)
  Dec 22 05:48:41.012: INFO: Found resourceQuota "e2e-rq-status-4g8zj" in namespace "resourcequota-4221" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Dec 22 05:48:41.012: INFO: ResourceQuota "e2e-rq-status-4g8zj" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/22/23 05:48:41.015
  Dec 22 05:48:41.021: INFO: Resource quota "e2e-rq-status-4g8zj" reports spec: hard cpu limit of 1
  Dec 22 05:48:41.021: INFO: Resource quota "e2e-rq-status-4g8zj" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-4g8zj" /status @ 12/22/23 05:48:41.021
  STEP: Confirm /status for "e2e-rq-status-4g8zj" resourceQuota via watch @ 12/22/23 05:48:41.036
  Dec 22 05:48:41.040: INFO: observed resourceQuota "e2e-rq-status-4g8zj" in namespace "resourcequota-4221" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Dec 22 05:48:41.040: INFO: Found resourceQuota "e2e-rq-status-4g8zj" in namespace "resourcequota-4221" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Dec 22 05:48:41.041: INFO: ResourceQuota "e2e-rq-status-4g8zj" /status was patched
  STEP: Get "e2e-rq-status-4g8zj" /status @ 12/22/23 05:48:41.041
  Dec 22 05:48:41.045: INFO: Resourcequota "e2e-rq-status-4g8zj" reports status: hard cpu of 1
  Dec 22 05:48:41.045: INFO: Resourcequota "e2e-rq-status-4g8zj" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-4g8zj" /status before checking Spec is unchanged @ 12/22/23 05:48:41.051
  Dec 22 05:48:41.067: INFO: Resourcequota "e2e-rq-status-4g8zj" reports status: hard cpu of 2
  Dec 22 05:48:41.068: INFO: Resourcequota "e2e-rq-status-4g8zj" reports status: hard memory of 2Gi
  Dec 22 05:48:41.071: INFO: observed resourceQuota "e2e-rq-status-4g8zj" in namespace "resourcequota-4221" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Dec 22 05:48:41.071: INFO: Found resourceQuota "e2e-rq-status-4g8zj" in namespace "resourcequota-4221" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Dec 22 05:48:41.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196e58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196ea0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196ed0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:48:46.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051971a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051971e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197218), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:48:51.077: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197500), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197578), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051975d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:48:56.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197800), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197830), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197878), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:01.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197b30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197b60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197b90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:06.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051961e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:11.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051964e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:16.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a2b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a2e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:21.076: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051968d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:26.079: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a600), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a630), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a6a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:31.077: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a990), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a9c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155a9f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:36.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196c30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196c60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196ca8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:41.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196ed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196f00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005196f48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:46.076: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197218), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197290), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051972f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:51.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155af18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155af78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155afd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:49:56.076: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155b2f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155b368), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155b3b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:01.078: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197758), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051977d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197800), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:06.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197c98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197ce0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005197d40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:11.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155b8c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155b920), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155b950), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:16.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155bc98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155bcc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00155bd28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:21.076: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c4198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c41c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c4240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:26.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c45d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c4600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c4630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:31.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c49c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c4a20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c4ac8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:36.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:41.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c4ea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c4f60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c5020), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:46.079: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be67b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be67e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:51.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c54d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c5500), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c5560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:50:56.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c5878), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c58c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c5920), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:01.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c5da0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c5e30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017c5ed8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:06.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:11.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503c420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503c480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503c510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:16.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6588), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be65e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:21.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503c900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503c930), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503c990), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:26.076: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be69c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:31.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503cd50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503cd80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503cde0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:36.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503d200), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503d230), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503d290), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:41.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503d680), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503d6e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503d710), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:46.076: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6e88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6ed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be6f18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:51.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be71d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be7248), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be72a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:51:56.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503dbc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503dc08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00503dc80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:52:01.074: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be75f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be7650), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be7680), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:52:06.078: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4g8zj", GenerateName:"", Namespace:"resourcequota-4221", SelfLink:"", UID:"a28fc072-a392-4e7a-b00b-db452ceb69ed", ResourceVersion:"52186", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 5, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4g8zj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be7908), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be7980), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 5, 48, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000be79b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 22 05:52:11.075: INFO: ResourceQuota "e2e-rq-status-4g8zj" Spec was unchanged and /status reset
  Dec 22 05:52:11.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4221" for this suite. @ 12/22/23 05:52:11.079
• [210.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 12/22/23 05:52:11.087
  Dec 22 05:52:11.087: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:52:11.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:52:11.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:52:11.111
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/22/23 05:52:11.114
  STEP: Saw pod success @ 12/22/23 05:52:15.134
  Dec 22 05:52:15.137: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-cbcf0b08-5c52-47db-aa5c-4aaeb810046b container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:52:15.154
  Dec 22 05:52:15.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8110" for this suite. @ 12/22/23 05:52:15.184
• [4.105 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 12/22/23 05:52:15.193
  Dec 22 05:52:15.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:52:15.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:52:15.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:52:15.23
  STEP: Creating configMap with name projected-configmap-test-volume-3e99efe2-3f62-4b50-9dc0-5515cbf2cb1b @ 12/22/23 05:52:15.234
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:52:15.241
  STEP: Saw pod success @ 12/22/23 05:52:19.263
  Dec 22 05:52:19.266: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-configmaps-2b4ce5be-09ed-4a23-81f7-cd883ca37b90 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:52:19.274
  Dec 22 05:52:19.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2689" for this suite. @ 12/22/23 05:52:19.299
• [4.117 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 12/22/23 05:52:19.311
  Dec 22 05:52:19.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 05:52:19.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:52:19.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:52:19.333
  STEP: Creating service test in namespace statefulset-7637 @ 12/22/23 05:52:19.336
  STEP: Creating a new StatefulSet @ 12/22/23 05:52:19.342
  Dec 22 05:52:19.362: INFO: Found 0 stateful pods, waiting for 3
  Dec 22 05:52:29.358: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 05:52:29.358: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 05:52:29.358: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/22/23 05:52:29.367
  Dec 22 05:52:29.387: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 12/22/23 05:52:29.387
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/22/23 05:52:39.397
  STEP: Performing a canary update @ 12/22/23 05:52:39.397
  Dec 22 05:52:39.416: INFO: Updating stateful set ss2
  Dec 22 05:52:39.423: INFO: Waiting for Pod statefulset-7637/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/22/23 05:52:49.423
  Dec 22 05:52:49.472: INFO: Found 1 stateful pods, waiting for 3
  Dec 22 05:52:59.466: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 05:52:59.467: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 05:52:59.467: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/22/23 05:52:59.475
  Dec 22 05:52:59.496: INFO: Updating stateful set ss2
  Dec 22 05:52:59.512: INFO: Waiting for Pod statefulset-7637/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Dec 22 05:53:09.524: INFO: Updating stateful set ss2
  Dec 22 05:53:09.539: INFO: Waiting for StatefulSet statefulset-7637/ss2 to complete update
  Dec 22 05:53:09.539: INFO: Waiting for Pod statefulset-7637/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Dec 22 05:53:19.532: INFO: Deleting all statefulset in ns statefulset-7637
  Dec 22 05:53:19.534: INFO: Scaling statefulset ss2 to 0
  Dec 22 05:53:29.546: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 05:53:29.549: INFO: Deleting statefulset ss2
  Dec 22 05:53:29.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7637" for this suite. @ 12/22/23 05:53:29.572
• [70.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/22/23 05:53:29.58
  Dec 22 05:53:29.580: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pods @ 12/22/23 05:53:29.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:53:29.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:53:29.6
  STEP: Create a pod @ 12/22/23 05:53:29.603
  STEP: patching /status @ 12/22/23 05:53:31.624
  Dec 22 05:53:31.633: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Dec 22 05:53:31.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6342" for this suite. @ 12/22/23 05:53:31.64
• [2.067 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 12/22/23 05:53:31.648
  Dec 22 05:53:31.648: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 05:53:31.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:53:31.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:53:31.672
  Dec 22 05:53:31.675: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/22/23 05:53:32.687
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/22/23 05:53:32.692
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/22/23 05:53:33.699
  Dec 22 05:53:33.709: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/22/23 05:53:33.709
  Dec 22 05:53:34.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9802" for this suite. @ 12/22/23 05:53:34.722
• [3.080 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 12/22/23 05:53:34.73
  Dec 22 05:53:34.730: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename ingressclass @ 12/22/23 05:53:34.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:53:34.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:53:34.759
  STEP: getting /apis @ 12/22/23 05:53:34.763
  STEP: getting /apis/networking.k8s.io @ 12/22/23 05:53:34.768
  STEP: getting /apis/networking.k8s.iov1 @ 12/22/23 05:53:34.77
  STEP: creating @ 12/22/23 05:53:34.771
  STEP: getting @ 12/22/23 05:53:34.788
  STEP: listing @ 12/22/23 05:53:34.791
  STEP: watching @ 12/22/23 05:53:34.794
  Dec 22 05:53:34.794: INFO: starting watch
  STEP: patching @ 12/22/23 05:53:34.796
  STEP: updating @ 12/22/23 05:53:34.801
  Dec 22 05:53:34.807: INFO: waiting for watch events with expected annotations
  Dec 22 05:53:34.807: INFO: saw patched and updated annotations
  STEP: deleting @ 12/22/23 05:53:34.807
  STEP: deleting a collection @ 12/22/23 05:53:34.822
  Dec 22 05:53:34.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2625" for this suite. @ 12/22/23 05:53:34.843
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 12/22/23 05:53:34.853
  Dec 22 05:53:34.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:53:34.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:53:34.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:53:34.875
  STEP: creating the pod @ 12/22/23 05:53:34.882
  Dec 22 05:53:34.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-3341 create -f -'
  Dec 22 05:53:35.132: INFO: stderr: ""
  Dec 22 05:53:35.132: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/22/23 05:53:37.141
  Dec 22 05:53:37.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-3341 label pods pause testing-label=testing-label-value'
  Dec 22 05:53:37.339: INFO: stderr: ""
  Dec 22 05:53:37.339: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/22/23 05:53:37.339
  Dec 22 05:53:37.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-3341 get pod pause -L testing-label'
  Dec 22 05:53:37.464: INFO: stderr: ""
  Dec 22 05:53:37.464: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/22/23 05:53:37.464
  Dec 22 05:53:37.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-3341 label pods pause testing-label-'
  Dec 22 05:53:37.579: INFO: stderr: ""
  Dec 22 05:53:37.579: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/22/23 05:53:37.579
  Dec 22 05:53:37.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-3341 get pod pause -L testing-label'
  Dec 22 05:53:37.671: INFO: stderr: ""
  Dec 22 05:53:37.671: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 12/22/23 05:53:37.672
  Dec 22 05:53:37.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-3341 delete --grace-period=0 --force -f -'
  Dec 22 05:53:37.762: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:53:37.762: INFO: stdout: "pod \"pause\" force deleted\n"
  Dec 22 05:53:37.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-3341 get rc,svc -l name=pause --no-headers'
  Dec 22 05:53:37.867: INFO: stderr: "No resources found in kubectl-3341 namespace.\n"
  Dec 22 05:53:37.867: INFO: stdout: ""
  Dec 22 05:53:37.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-3341 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 22 05:53:37.945: INFO: stderr: ""
  Dec 22 05:53:37.945: INFO: stdout: ""
  Dec 22 05:53:37.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3341" for this suite. @ 12/22/23 05:53:37.959
• [3.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 12/22/23 05:53:37.965
  Dec 22 05:53:37.965: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 05:53:37.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:53:37.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:53:37.986
  Dec 22 05:53:40.012: INFO: Deleting pod "var-expansion-4c51a68c-c627-4921-ace2-0f2cae510ede" in namespace "var-expansion-8814"
  Dec 22 05:53:40.020: INFO: Wait up to 5m0s for pod "var-expansion-4c51a68c-c627-4921-ace2-0f2cae510ede" to be fully deleted
  Dec 22 05:53:44.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8814" for this suite. @ 12/22/23 05:53:44.039
• [6.080 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 12/22/23 05:53:44.046
  Dec 22 05:53:44.046: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 05:53:44.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:53:44.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:53:44.072
  STEP: Creating pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957 @ 12/22/23 05:53:44.076
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 05:53:46.096
  Dec 22 05:53:46.098: INFO: Initial restart count of pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a is 0
  Dec 22 05:53:46.101: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:53:48.105: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:53:50.110: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:53:52.114: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:53:54.119: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:53:56.123: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:53:58.127: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:00.131: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:02.136: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:04.139: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:06.144: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:08.149: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:10.154: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:12.160: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:14.166: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:16.169: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:18.172: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:20.176: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:22.179: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:24.187: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:26.191: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:28.195: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:30.200: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:32.203: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:34.215: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:36.220: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:38.225: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:40.229: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:42.233: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:44.237: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:46.241: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:48.245: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:50.249: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:52.253: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:54.266: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:56.271: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:54:58.276: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:00.281: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:02.285: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:04.288: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:06.295: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:08.310: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:10.315: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:12.319: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:14.323: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:16.327: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:18.559: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:20.563: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:22.568: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:24.573: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:26.577: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:28.581: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:30.586: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:32.591: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:34.594: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:36.600: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:38.603: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:40.608: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:42.612: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:44.616: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:46.619: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:48.624: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:50.628: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:52.632: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:54.637: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:56.642: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:55:59.157: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:01.174: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:03.179: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:05.183: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:07.187: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:09.192: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:11.196: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:13.200: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:15.204: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:17.208: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:19.320: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:21.325: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:23.329: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:25.332: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:27.338: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:29.342: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:31.347: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:33.350: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:35.354: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:37.359: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:39.363: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:41.366: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:43.370: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:45.373: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:47.384: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:49.388: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:51.394: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:53.398: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:55.403: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:57.414: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:56:59.418: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:01.423: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:03.429: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:05.433: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:07.443: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:09.448: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:11.453: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:13.457: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:15.461: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:17.464: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:19.467: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:21.472: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:23.478: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:25.482: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:27.488: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:29.493: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:31.496: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:33.500: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:35.504: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:37.507: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:39.513: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:41.516: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:43.521: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  Dec 22 05:57:45.525: INFO: Get pod test-grpc-2b65e919-dc5f-4dc3-89f3-80f3ab30aa9a in namespace container-probe-7957
  STEP: deleting the pod @ 12/22/23 05:57:47.527
  Dec 22 05:57:47.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7957" for this suite. @ 12/22/23 05:57:47.579
• [243.545 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 12/22/23 05:57:47.597
  Dec 22 05:57:47.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename aggregator @ 12/22/23 05:57:47.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:57:47.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:57:47.627
  Dec 22 05:57:47.630: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Registering the sample API server. @ 12/22/23 05:57:47.632
  Dec 22 05:57:48.887: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Dec 22 05:57:48.913: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Dec 22 05:57:50.962: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:57:52.966: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:57:54.966: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:57:56.966: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:57:58.966: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:58:00.967: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:58:02.967: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:58:04.967: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:58:06.970: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:58:08.965: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:58:10.966: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 57, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 05:58:13.090: INFO: Waited 119.013552ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/22/23 05:58:13.135
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/22/23 05:58:13.138
  STEP: List APIServices @ 12/22/23 05:58:13.144
  Dec 22 05:58:13.152: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/22/23 05:58:13.152
  Dec 22 05:58:13.459: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/22/23 05:58:13.459
  Dec 22 05:58:13.470: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.December, 22, 5, 58, 12, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/22/23 05:58:13.47
  Dec 22 05:58:13.477: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-12-22 05:58:12 +0000 UTC Passed all checks passed}
  Dec 22 05:58:13.477: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 05:58:13.477: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/22/23 05:58:13.478
  Dec 22 05:58:13.489: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1970922372" @ 12/22/23 05:58:13.489
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/22/23 05:58:13.507
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/22/23 05:58:13.516
  STEP: Patch APIService Status @ 12/22/23 05:58:13.519
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/22/23 05:58:13.526
  Dec 22 05:58:13.530: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-12-22 05:58:12 +0000 UTC Passed all checks passed}
  Dec 22 05:58:13.530: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 05:58:13.530: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Dec 22 05:58:13.530: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 12/22/23 05:58:13.53
  STEP: Confirm that the generated APIService has been deleted @ 12/22/23 05:58:13.539
  Dec 22 05:58:13.540: INFO: Requesting list of APIServices to confirm quantity
  Dec 22 05:58:13.544: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Dec 22 05:58:13.544: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Dec 22 05:58:13.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6994" for this suite. @ 12/22/23 05:58:13.669
• [26.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 12/22/23 05:58:13.674
  Dec 22 05:58:13.674: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:58:13.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:58:13.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:58:13.694
  STEP: Creating configMap with name projected-configmap-test-volume-85a3303b-67bb-436a-9488-1547864af782 @ 12/22/23 05:58:13.697
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:58:13.703
  STEP: Saw pod success @ 12/22/23 05:58:17.739
  Dec 22 05:58:17.750: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-configmaps-0dbbb74b-c88d-4670-9782-635ea71209a7 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:58:17.774
  Dec 22 05:58:17.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8816" for this suite. @ 12/22/23 05:58:17.795
• [4.127 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 12/22/23 05:58:17.803
  Dec 22 05:58:17.803: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 05:58:17.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:58:17.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:58:17.831
  STEP: Creating pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397 @ 12/22/23 05:58:17.836
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 05:58:19.856
  Dec 22 05:58:19.859: INFO: Initial restart count of pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a is 0
  Dec 22 05:58:19.863: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:21.868: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:23.873: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:25.877: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:27.881: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:29.885: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:31.889: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:33.894: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:35.899: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:37.902: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:39.906: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:41.912: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:43.916: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:45.919: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:47.924: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:49.931: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:51.937: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:53.941: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:55.945: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:57.949: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:58:59.953: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:59:01.957: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:59:03.961: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:59:05.966: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:59:07.972: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:59:09.977: INFO: Get pod busybox-61f02657-ba16-45de-93c4-56edc507eb9a in namespace container-probe-2397
  Dec 22 05:59:09.977: INFO: Restart count of pod container-probe-2397/busybox-61f02657-ba16-45de-93c4-56edc507eb9a is now 1 (50.118158855s elapsed)
  STEP: deleting the pod @ 12/22/23 05:59:09.978
  Dec 22 05:59:09.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2397" for this suite. @ 12/22/23 05:59:09.995
• [52.200 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/22/23 05:59:10.003
  Dec 22 05:59:10.003: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:59:10.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:59:10.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:59:10.026
  STEP: Creating projection with secret that has name projected-secret-test-c2b39f28-09e5-45e9-a393-5ce959585afc @ 12/22/23 05:59:10.03
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:59:10.034
  STEP: Saw pod success @ 12/22/23 05:59:14.059
  Dec 22 05:59:14.062: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-secrets-42d04296-26cc-4048-a8bc-51abb4195fe4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:59:14.068
  Dec 22 05:59:14.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6862" for this suite. @ 12/22/23 05:59:14.085
• [4.091 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 12/22/23 05:59:14.095
  Dec 22 05:59:14.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:59:14.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:59:14.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:59:14.129
  STEP: Creating configMap with name configmap-test-volume-30caa6ba-4c24-46b5-9c38-49579a671966 @ 12/22/23 05:59:14.134
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:59:14.14
  STEP: Saw pod success @ 12/22/23 05:59:18.179
  Dec 22 05:59:18.182: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-configmaps-84ed6348-ce4c-4495-a6b2-56e1905530a9 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:59:18.189
  Dec 22 05:59:18.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-964" for this suite. @ 12/22/23 05:59:18.208
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 12/22/23 05:59:18.216
  Dec 22 05:59:18.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/22/23 05:59:18.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:59:18.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:59:18.242
  Dec 22 05:59:18.245: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 22 06:00:18.245: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 06:00:18.249: INFO: Starting informer...
  STEP: Starting pods... @ 12/22/23 06:00:18.249
  Dec 22 06:00:18.279: INFO: Pod1 is running on ip-172-31-7-66.us-east-2.compute.internal. Tainting Node
  Dec 22 06:00:22.505: INFO: Pod2 is running on ip-172-31-7-66.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/22/23 06:00:22.505
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/22/23 06:00:22.52
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/22/23 06:00:22.532
  Dec 22 06:00:28.596: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Dec 22 06:00:48.647: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/22/23 06:00:48.664
  Dec 22 06:00:48.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-927" for this suite. @ 12/22/23 06:00:48.691
• [90.495 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 12/22/23 06:00:48.712
  Dec 22 06:00:48.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename gc @ 12/22/23 06:00:48.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:00:48.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:00:48.763
  STEP: create the rc @ 12/22/23 06:00:48.775
  W1222 06:00:48.785076      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/22/23 06:00:54.793
  STEP: wait for the rc to be deleted @ 12/22/23 06:00:54.801
  Dec 22 06:00:55.822: INFO: 80 pods remaining
  Dec 22 06:00:55.823: INFO: 80 pods has nil DeletionTimestamp
  Dec 22 06:00:55.823: INFO: 
  Dec 22 06:00:56.942: INFO: 68 pods remaining
  Dec 22 06:00:56.959: INFO: 67 pods has nil DeletionTimestamp
  Dec 22 06:00:56.959: INFO: 
  Dec 22 06:00:57.849: INFO: 60 pods remaining
  Dec 22 06:00:57.849: INFO: 60 pods has nil DeletionTimestamp
  Dec 22 06:00:57.849: INFO: 
  Dec 22 06:00:58.820: INFO: 40 pods remaining
  Dec 22 06:00:58.820: INFO: 40 pods has nil DeletionTimestamp
  Dec 22 06:00:58.820: INFO: 
  Dec 22 06:00:59.923: INFO: 30 pods remaining
  Dec 22 06:00:59.923: INFO: 29 pods has nil DeletionTimestamp
  Dec 22 06:00:59.923: INFO: 
  Dec 22 06:01:00.839: INFO: 20 pods remaining
  Dec 22 06:01:00.839: INFO: 20 pods has nil DeletionTimestamp
  Dec 22 06:01:00.839: INFO: 
  STEP: Gathering metrics @ 12/22/23 06:01:01.814
  Dec 22 06:01:02.626: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 06:01:02.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3825" for this suite. @ 12/22/23 06:01:02.647
• [13.957 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 12/22/23 06:01:02.675
  Dec 22 06:01:02.675: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename job @ 12/22/23 06:01:02.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:01:02.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:01:02.7
  STEP: Creating a job @ 12/22/23 06:01:02.705
  STEP: Ensuring job reaches completions @ 12/22/23 06:01:02.72
  Dec 22 06:01:22.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5357" for this suite. @ 12/22/23 06:01:22.728
• [20.076 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 12/22/23 06:01:22.752
  Dec 22 06:01:22.752: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 06:01:22.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:01:22.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:01:22.774
  STEP: Creating replication controller my-hostname-basic-7aa35a74-e46c-40d2-bba3-5389b37d4da4 @ 12/22/23 06:01:22.777
  Dec 22 06:01:22.786: INFO: Pod name my-hostname-basic-7aa35a74-e46c-40d2-bba3-5389b37d4da4: Found 0 pods out of 1
  Dec 22 06:01:27.791: INFO: Pod name my-hostname-basic-7aa35a74-e46c-40d2-bba3-5389b37d4da4: Found 1 pods out of 1
  Dec 22 06:01:27.791: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-7aa35a74-e46c-40d2-bba3-5389b37d4da4" are running
  Dec 22 06:01:27.799: INFO: Pod "my-hostname-basic-7aa35a74-e46c-40d2-bba3-5389b37d4da4-dr69v" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 06:01:24 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 06:01:22 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 06:01:24 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 06:01:24 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 06:01:22 +0000 UTC Reason: Message:}])
  Dec 22 06:01:27.799: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/22/23 06:01:27.799
  Dec 22 06:01:27.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9485" for this suite. @ 12/22/23 06:01:27.822
• [5.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 12/22/23 06:01:27.835
  Dec 22 06:01:27.836: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename job @ 12/22/23 06:01:27.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:01:27.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:01:27.86
  STEP: Creating a job @ 12/22/23 06:01:27.864
  STEP: Ensuring active pods == parallelism @ 12/22/23 06:01:27.871
  STEP: delete a job @ 12/22/23 06:01:31.877
  STEP: deleting Job.batch foo in namespace job-1640, will wait for the garbage collector to delete the pods @ 12/22/23 06:01:31.877
  Dec 22 06:01:31.935: INFO: Deleting Job.batch foo took: 5.739184ms
  Dec 22 06:01:32.036: INFO: Terminating Job.batch foo pods took: 101.040513ms
  STEP: Ensuring job was deleted @ 12/22/23 06:01:33.337
  Dec 22 06:01:33.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1640" for this suite. @ 12/22/23 06:01:33.345
• [5.516 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 12/22/23 06:01:33.354
  Dec 22 06:01:33.354: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 06:01:33.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:01:33.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:01:33.376
  STEP: Creating a pod to test substitution in container's args @ 12/22/23 06:01:33.379
  STEP: Saw pod success @ 12/22/23 06:01:37.404
  Dec 22 06:01:37.407: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod var-expansion-64ca6321-b0c8-40d1-81f4-7eb4ad71207d container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 06:01:37.419
  Dec 22 06:01:37.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3476" for this suite. @ 12/22/23 06:01:37.441
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 12/22/23 06:01:37.449
  Dec 22 06:01:37.449: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 06:01:37.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:01:37.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:01:37.472
  STEP: Creating service test in namespace statefulset-6473 @ 12/22/23 06:01:37.475
  STEP: Looking for a node to schedule stateful set and pod @ 12/22/23 06:01:37.48
  STEP: Creating pod with conflicting port in namespace statefulset-6473 @ 12/22/23 06:01:37.488
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6473 @ 12/22/23 06:01:37.499
  STEP: Creating statefulset with conflicting port in namespace statefulset-6473 @ 12/22/23 06:01:41.512
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6473 @ 12/22/23 06:01:41.516
  Dec 22 06:01:41.546: INFO: Observed stateful pod in namespace: statefulset-6473, name: ss-0, uid: 720593ab-e23e-4c4c-897b-c051bd6a7842, status phase: Pending. Waiting for statefulset controller to delete.
  Dec 22 06:01:41.568: INFO: Observed stateful pod in namespace: statefulset-6473, name: ss-0, uid: 720593ab-e23e-4c4c-897b-c051bd6a7842, status phase: Failed. Waiting for statefulset controller to delete.
  Dec 22 06:01:41.587: INFO: Observed stateful pod in namespace: statefulset-6473, name: ss-0, uid: 720593ab-e23e-4c4c-897b-c051bd6a7842, status phase: Failed. Waiting for statefulset controller to delete.
  Dec 22 06:01:41.593: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-6473
  STEP: Removing pod with conflicting port in namespace statefulset-6473 @ 12/22/23 06:01:41.594
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6473 and will be in running state @ 12/22/23 06:01:41.63
  Dec 22 06:01:46.056: INFO: Deleting all statefulset in ns statefulset-6473
  Dec 22 06:01:46.059: INFO: Scaling statefulset ss to 0
  Dec 22 06:01:56.073: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 06:01:56.076: INFO: Deleting statefulset ss
  Dec 22 06:01:56.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6473" for this suite. @ 12/22/23 06:01:56.092
• [18.650 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 12/22/23 06:01:56.1
  Dec 22 06:01:56.100: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 06:01:56.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:01:56.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:01:56.122
  STEP: Creating simple DaemonSet "daemon-set" @ 12/22/23 06:01:56.148
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 06:01:56.156
  Dec 22 06:01:56.169: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 06:01:56.169: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 06:01:57.171: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 06:01:57.171: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 06:01:58.166: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 06:01:58.166: INFO: Node ip-172-31-7-66.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 06:01:59.164: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 06:01:59.164: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/22/23 06:01:59.167
  STEP: DeleteCollection of the DaemonSets @ 12/22/23 06:01:59.173
  STEP: Verify that ReplicaSets have been deleted @ 12/22/23 06:01:59.18
  Dec 22 06:01:59.190: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"57911"},"items":null}

  Dec 22 06:01:59.201: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"57911"},"items":[{"metadata":{"name":"daemon-set-htd8f","generateName":"daemon-set-","namespace":"daemonsets-5286","uid":"79a310af-c54a-404d-8123-a632ccf255bb","resourceVersion":"57896","creationTimestamp":"2023-12-22T06:01:56Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"c6fbbf5d1f3bfb4151a1bce156d45bb5cecef750c3b79306bf6a06afe8c15135","cni.projectcalico.org/podIP":"10.42.0.109/32","cni.projectcalico.org/podIPs":"10.42.0.109/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"12e96b78-9ded-49b4-8797-e2593af09ad4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"12e96b78-9ded-49b4-8797-e2593af09ad4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.109\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-zhx26","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-zhx26","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-3-186.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-3-186.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:57Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:56Z"}],"hostIP":"172.31.3.186","hostIPs":[{"ip":"172.31.3.186"}],"podIP":"10.42.0.109","podIPs":[{"ip":"10.42.0.109"}],"startTime":"2023-12-22T06:01:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-22T06:01:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0c5c88c9e89050ab6c28c262f49e2e6d50fd5ee90d09929611393ba175e5063c","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qgjdv","generateName":"daemon-set-","namespace":"daemonsets-5286","uid":"6109907c-4c85-4de1-9912-879a9f424081","resourceVersion":"57907","creationTimestamp":"2023-12-22T06:01:56Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"afd79d7e0df9b2dcff92f4f32933586238324e6ff2dba40fbb8b40f379d72b56","cni.projectcalico.org/podIP":"10.42.3.129/32","cni.projectcalico.org/podIPs":"10.42.3.129/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"12e96b78-9ded-49b4-8797-e2593af09ad4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"12e96b78-9ded-49b4-8797-e2593af09ad4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.3.129\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-sbh9b","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-sbh9b","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-7-66.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-7-66.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:56Z"}],"hostIP":"172.31.7.66","hostIPs":[{"ip":"172.31.7.66"}],"podIP":"10.42.3.129","podIPs":[{"ip":"10.42.3.129"}],"startTime":"2023-12-22T06:01:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-22T06:01:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://7cd6dd273d1b2977bccfe55ba40c861bbe3f69702aa45e8b53408d0bc8273966","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-tvf82","generateName":"daemon-set-","namespace":"daemonsets-5286","uid":"3559521f-e430-452b-b62b-395f500e9333","resourceVersion":"57902","creationTimestamp":"2023-12-22T06:01:56Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"c8c181c7f26065511690cf788e9796295a802f46fc5cb88a8eb06b52e8819767","cni.projectcalico.org/podIP":"10.42.2.136/32","cni.projectcalico.org/podIPs":"10.42.2.136/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"12e96b78-9ded-49b4-8797-e2593af09ad4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"12e96b78-9ded-49b4-8797-e2593af09ad4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.136\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-ldnf8","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-ldnf8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-9-255.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-9-255.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:57Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:56Z"}],"hostIP":"172.31.9.255","hostIPs":[{"ip":"172.31.9.255"}],"podIP":"10.42.2.136","podIPs":[{"ip":"10.42.2.136"}],"startTime":"2023-12-22T06:01:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-22T06:01:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8768502f1b7f7182516cc23ded56c03debb14bedcb255ce84c4321c9861be58f","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-wwphq","generateName":"daemon-set-","namespace":"daemonsets-5286","uid":"f50e5ba8-56fd-4639-8285-aaf98f55051c","resourceVersion":"57900","creationTimestamp":"2023-12-22T06:01:56Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"f59b845094cee39376277c31eec0faf4027b1050ed99458272b50331d63dd122","cni.projectcalico.org/podIP":"10.42.1.117/32","cni.projectcalico.org/podIPs":"10.42.1.117/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"12e96b78-9ded-49b4-8797-e2593af09ad4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"12e96b78-9ded-49b4-8797-e2593af09ad4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-22T06:01:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.117\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-szfg6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-szfg6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-4-122.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-4-122.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:57Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T06:01:56Z"}],"hostIP":"172.31.4.122","hostIPs":[{"ip":"172.31.4.122"}],"podIP":"10.42.1.117","podIPs":[{"ip":"10.42.1.117"}],"startTime":"2023-12-22T06:01:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-22T06:01:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ebc9031122ab7fda8fb7d96020fd4eaa24cb2f49bf4e6c915c88f19720a9b712","started":true}],"qosClass":"BestEffort"}}]}

  Dec 22 06:01:59.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5286" for this suite. @ 12/22/23 06:01:59.262
• [3.180 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 12/22/23 06:01:59.283
  Dec 22 06:01:59.283: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename cronjob @ 12/22/23 06:01:59.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:01:59.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:01:59.315
  STEP: Creating a cronjob @ 12/22/23 06:01:59.318
  STEP: creating @ 12/22/23 06:01:59.318
  STEP: getting @ 12/22/23 06:01:59.328
  STEP: listing @ 12/22/23 06:01:59.331
  STEP: watching @ 12/22/23 06:01:59.334
  Dec 22 06:01:59.334: INFO: starting watch
  STEP: cluster-wide listing @ 12/22/23 06:01:59.336
  STEP: cluster-wide watching @ 12/22/23 06:01:59.34
  Dec 22 06:01:59.340: INFO: starting watch
  STEP: patching @ 12/22/23 06:01:59.342
  STEP: updating @ 12/22/23 06:01:59.351
  Dec 22 06:01:59.364: INFO: waiting for watch events with expected annotations
  Dec 22 06:01:59.364: INFO: saw patched and updated annotations
  STEP: patching /status @ 12/22/23 06:01:59.364
  STEP: updating /status @ 12/22/23 06:01:59.372
  STEP: get /status @ 12/22/23 06:01:59.379
  STEP: deleting @ 12/22/23 06:01:59.383
  STEP: deleting a collection @ 12/22/23 06:01:59.395
  Dec 22 06:01:59.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1847" for this suite. @ 12/22/23 06:01:59.409
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 12/22/23 06:01:59.423
  Dec 22 06:01:59.424: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 06:01:59.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:01:59.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:01:59.448
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 06:01:59.454
  STEP: Saw pod success @ 12/22/23 06:02:03.491
  Dec 22 06:02:03.495: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-0566d566-893f-45f9-8c18-644ad25b35ca container client-container: <nil>
  STEP: delete the pod @ 12/22/23 06:02:03.504
  Dec 22 06:02:03.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7662" for this suite. @ 12/22/23 06:02:03.53
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 12/22/23 06:02:03.539
  Dec 22 06:02:03.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 06:02:03.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:02:03.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:02:03.561
  STEP: Creating pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876 @ 12/22/23 06:02:03.566
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 06:02:05.585
  Dec 22 06:02:05.587: INFO: Initial restart count of pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a is 0
  Dec 22 06:02:05.590: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:07.595: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:09.599: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:11.603: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:13.607: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:15.611: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:17.614: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:19.618: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:21.623: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:23.627: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:25.631: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:27.635: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:29.639: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:31.643: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:33.648: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:35.651: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:37.654: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:39.659: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:41.662: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:43.666: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:45.670: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:47.674: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:49.678: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:51.681: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:53.685: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:55.689: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:57.693: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:02:59.697: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:01.701: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:03.710: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:05.714: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:07.719: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:09.723: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:11.726: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:13.731: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:15.734: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:17.739: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:19.743: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:21.746: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:23.751: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:25.755: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:27.758: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:29.762: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:31.766: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:33.771: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:35.775: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:37.779: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:39.783: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:41.787: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:43.796: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:45.801: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:47.807: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:49.810: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:51.815: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:53.820: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:55.825: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:57.828: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:03:59.832: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:01.837: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:03.844: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:05.848: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:07.853: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:09.857: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:11.860: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:13.864: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:15.869: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:17.874: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:19.877: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:21.883: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:23.887: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:25.890: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:27.894: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:29.898: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:31.902: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:33.907: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:35.911: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:37.916: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:39.920: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:41.924: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:43.928: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:45.931: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:47.935: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:49.939: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:51.943: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:53.946: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:55.953: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:57.957: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:04:59.960: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:01.964: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:03.969: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:05.973: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:07.977: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:09.982: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:12.505: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:14.509: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:16.512: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:18.517: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:20.521: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:22.525: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:24.530: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:26.534: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:28.537: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:30.542: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:32.546: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:34.551: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:36.556: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:38.560: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:40.564: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:42.570: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:44.575: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:46.579: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:48.584: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:50.587: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:52.591: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:54.596: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:56.601: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:05:58.605: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:06:00.609: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:06:02.613: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  Dec 22 06:06:04.618: INFO: Get pod liveness-a6a82262-dfa8-4ba7-827b-e10a4d93a74a in namespace container-probe-9876
  STEP: deleting the pod @ 12/22/23 06:06:06.619
  Dec 22 06:06:06.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9876" for this suite. @ 12/22/23 06:06:06.655
• [243.132 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 12/22/23 06:06:06.675
  Dec 22 06:06:06.681: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sysctl @ 12/22/23 06:06:06.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:06:06.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:06:06.731
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/22/23 06:06:06.752
  STEP: Watching for error events or started pod @ 12/22/23 06:06:06.765
  STEP: Waiting for pod completion @ 12/22/23 06:06:08.769
  STEP: Checking that the pod succeeded @ 12/22/23 06:06:10.778
  STEP: Getting logs from the pod @ 12/22/23 06:06:10.778
  STEP: Checking that the sysctl is actually updated @ 12/22/23 06:06:10.794
  Dec 22 06:06:10.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8920" for this suite. @ 12/22/23 06:06:10.798
• [4.129 seconds]
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 12/22/23 06:06:10.803
  Dec 22 06:06:10.803: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename apf @ 12/22/23 06:06:10.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:06:10.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:06:10.833
  STEP: getting /apis @ 12/22/23 06:06:10.836
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/22/23 06:06:10.841
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/22/23 06:06:10.843
  STEP: creating @ 12/22/23 06:06:10.844
  STEP: getting @ 12/22/23 06:06:10.857
  STEP: listing @ 12/22/23 06:06:10.859
  STEP: watching @ 12/22/23 06:06:10.862
  Dec 22 06:06:10.862: INFO: starting watch
  STEP: patching @ 12/22/23 06:06:10.863
  STEP: updating @ 12/22/23 06:06:10.874
  Dec 22 06:06:10.885: INFO: waiting for watch events with expected annotations
  Dec 22 06:06:10.885: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 12/22/23 06:06:10.886
  STEP: patching /status @ 12/22/23 06:06:10.89
  STEP: updating /status @ 12/22/23 06:06:10.901
  STEP: deleting @ 12/22/23 06:06:10.914
  STEP: deleting a collection @ 12/22/23 06:06:10.924
  Dec 22 06:06:10.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-839" for this suite. @ 12/22/23 06:06:10.947
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/22/23 06:06:10.962
  Dec 22 06:06:10.962: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename containers @ 12/22/23 06:06:10.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:06:10.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:06:10.982
  STEP: Creating a pod to test override all @ 12/22/23 06:06:10.987
  STEP: Saw pod success @ 12/22/23 06:06:15.009
  Dec 22 06:06:15.012: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod client-containers-a4ec69a5-88cc-42a4-8839-3aa20897db5c container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 06:06:15.019
  Dec 22 06:06:15.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5155" for this suite. @ 12/22/23 06:06:15.037
• [4.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 12/22/23 06:06:15.045
  Dec 22 06:06:15.045: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 06:06:15.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:06:15.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:06:15.073
  STEP: Creating service test in namespace statefulset-8367 @ 12/22/23 06:06:15.077
  STEP: Creating a new StatefulSet @ 12/22/23 06:06:15.081
  Dec 22 06:06:15.099: INFO: Found 0 stateful pods, waiting for 3
  Dec 22 06:06:25.095: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 06:06:25.095: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 06:06:25.095: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 06:06:25.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-8367 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 06:06:25.309: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 06:06:25.309: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 06:06:25.309: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/22/23 06:06:35.317
  Dec 22 06:06:35.336: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 12/22/23 06:06:35.336
  STEP: Updating Pods in reverse ordinal order @ 12/22/23 06:06:45.343
  Dec 22 06:06:45.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-8367 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 06:06:45.546: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 06:06:45.546: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 06:06:45.546: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 06:06:55.561: INFO: Waiting for StatefulSet statefulset-8367/ss2 to complete update
  STEP: Rolling back to a previous revision @ 12/22/23 06:07:05.564
  Dec 22 06:07:05.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-8367 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 06:07:05.785: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 06:07:05.785: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 06:07:05.785: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 06:07:15.812: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 12/22/23 06:07:25.82
  Dec 22 06:07:25.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=statefulset-8367 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 06:07:26.069: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 06:07:26.069: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 06:07:26.069: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 06:07:36.082: INFO: Waiting for StatefulSet statefulset-8367/ss2 to complete update
  Dec 22 06:07:46.084: INFO: Deleting all statefulset in ns statefulset-8367
  Dec 22 06:07:46.086: INFO: Scaling statefulset ss2 to 0
  Dec 22 06:07:56.104: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 06:07:56.108: INFO: Deleting statefulset ss2
  Dec 22 06:07:56.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8367" for this suite. @ 12/22/23 06:07:56.134
• [101.098 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 12/22/23 06:07:56.143
  Dec 22 06:07:56.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 06:07:56.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:07:56.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:07:56.178
  STEP: apply creating a deployment @ 12/22/23 06:07:56.182
  Dec 22 06:07:56.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2731" for this suite. @ 12/22/23 06:07:56.206
• [0.084 seconds]
------------------------------
S
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/22/23 06:07:56.229
  Dec 22 06:07:56.229: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename prestop @ 12/22/23 06:07:56.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:07:56.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:07:56.251
  STEP: Creating server pod server in namespace prestop-8497 @ 12/22/23 06:07:56.255
  STEP: Waiting for pods to come up. @ 12/22/23 06:07:56.265
  STEP: Creating tester pod tester in namespace prestop-8497 @ 12/22/23 06:07:58.282
  STEP: Deleting pre-stop pod @ 12/22/23 06:08:00.295
  Dec 22 06:08:05.309: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 12/22/23 06:08:05.31
  Dec 22 06:08:05.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8497" for this suite. @ 12/22/23 06:08:05.343
• [9.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/22/23 06:08:05.36
  Dec 22 06:08:05.360: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename tables @ 12/22/23 06:08:05.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:08:05.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:08:05.404
  Dec 22 06:08:05.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4066" for this suite. @ 12/22/23 06:08:05.431
• [0.088 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 12/22/23 06:08:05.447
  Dec 22 06:08:05.447: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 06:08:05.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:08:05.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:08:05.497
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 06:08:05.504
  STEP: Saw pod success @ 12/22/23 06:08:09.535
  Dec 22 06:08:09.538: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-0394f0b0-af18-4320-b33c-2bc801795676 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 06:08:09.551
  Dec 22 06:08:09.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4637" for this suite. @ 12/22/23 06:08:09.57
• [4.131 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 12/22/23 06:08:09.58
  Dec 22 06:08:09.580: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename cronjob @ 12/22/23 06:08:09.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:08:09.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:08:09.603
  STEP: Creating a ReplaceConcurrent cronjob @ 12/22/23 06:08:09.606
  STEP: Ensuring a job is scheduled @ 12/22/23 06:08:09.612
  STEP: Ensuring exactly one is scheduled @ 12/22/23 06:09:01.616
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/22/23 06:09:01.619
  STEP: Ensuring the job is replaced with a new one @ 12/22/23 06:09:01.622
  STEP: Removing cronjob @ 12/22/23 06:10:01.626
  Dec 22 06:10:01.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9992" for this suite. @ 12/22/23 06:10:01.64
• [112.070 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 12/22/23 06:10:01.65
  Dec 22 06:10:01.650: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename webhook @ 12/22/23 06:10:01.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:10:01.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:10:01.688
  STEP: Setting up server cert @ 12/22/23 06:10:01.713
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 06:10:01.947
  STEP: Deploying the webhook pod @ 12/22/23 06:10:01.954
  STEP: Wait for the deployment to be ready @ 12/22/23 06:10:01.967
  Dec 22 06:10:01.975: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/22/23 06:10:03.984
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 06:10:03.995
  Dec 22 06:10:04.995: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 22 06:10:05.001: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3927-crds.webhook.example.com via the AdmissionRegistration API @ 12/22/23 06:10:05.515
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/22/23 06:10:05.535
  Dec 22 06:10:08.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-383" for this suite. @ 12/22/23 06:10:08.196
  STEP: Destroying namespace "webhook-markers-6601" for this suite. @ 12/22/23 06:10:08.202
• [6.558 seconds]
------------------------------
S
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/22/23 06:10:08.209
  Dec 22 06:10:08.209: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename conformance-tests @ 12/22/23 06:10:08.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:10:08.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:10:08.234
  STEP: Getting node addresses @ 12/22/23 06:10:08.237
  Dec 22 06:10:08.237: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Dec 22 06:10:08.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7392" for this suite. @ 12/22/23 06:10:08.247
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 12/22/23 06:10:08.261
  Dec 22 06:10:08.262: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 06:10:08.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:10:08.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:10:08.283
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6033 @ 12/22/23 06:10:08.286
  STEP: changing the ExternalName service to type=ClusterIP @ 12/22/23 06:10:08.291
  STEP: creating replication controller externalname-service in namespace services-6033 @ 12/22/23 06:10:08.311
  I1222 06:10:08.323349      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6033, replica count: 2
  I1222 06:10:11.374354      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 06:10:11.374: INFO: Creating new exec pod
  Dec 22 06:10:16.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6033 exec execpodtl44r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 22 06:10:16.623: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 22 06:10:16.623: INFO: stdout: ""
  Dec 22 06:10:17.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6033 exec execpodtl44r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 22 06:10:17.610: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 22 06:10:17.610: INFO: stdout: ""
  Dec 22 06:10:18.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6033 exec execpodtl44r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 22 06:10:18.584: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 22 06:10:18.584: INFO: stdout: ""
  Dec 22 06:10:19.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6033 exec execpodtl44r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 22 06:10:19.601: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 22 06:10:19.601: INFO: stdout: "externalname-service-n6vlv"
  Dec 22 06:10:19.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6033 exec execpodtl44r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.209.117 80'
  Dec 22 06:10:19.799: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.209.117 80\nConnection to 10.43.209.117 80 port [tcp/http] succeeded!\n"
  Dec 22 06:10:19.799: INFO: stdout: ""
  Dec 22 06:10:20.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-6033 exec execpodtl44r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.209.117 80'
  Dec 22 06:10:20.812: INFO: stderr: "+ nc -v -t -w 2 10.43.209.117 80\n+ echo hostName\nConnection to 10.43.209.117 80 port [tcp/http] succeeded!\n"
  Dec 22 06:10:20.812: INFO: stdout: "externalname-service-8jsds"
  Dec 22 06:10:20.812: INFO: Cleaning up the ExternalName to ClusterIP test service
  Dec 22 06:10:20.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6033" for this suite. @ 12/22/23 06:10:20.842
• [12.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 12/22/23 06:10:20.851
  Dec 22 06:10:20.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 06:10:20.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:10:20.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:10:20.87
  STEP: Creating the pod @ 12/22/23 06:10:20.873
  Dec 22 06:10:23.425: INFO: Successfully updated pod "labelsupdate3066fa45-aa32-4f90-9d7d-7e4c975144e0"
  Dec 22 06:10:25.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7441" for this suite. @ 12/22/23 06:10:25.448
• [4.604 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 12/22/23 06:10:25.457
  Dec 22 06:10:25.457: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 06:10:25.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:10:25.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:10:25.491
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 06:10:25.494
  STEP: Saw pod success @ 12/22/23 06:10:29.521
  Dec 22 06:10:29.523: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-5be48e6a-abdf-4d50-8b34-aa6efbfe7e9d container client-container: <nil>
  STEP: delete the pod @ 12/22/23 06:10:29.529
  Dec 22 06:10:29.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5824" for this suite. @ 12/22/23 06:10:29.547
• [4.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/22/23 06:10:29.552
  Dec 22 06:10:29.552: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename subpath @ 12/22/23 06:10:29.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:10:29.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:10:29.578
  STEP: Setting up data @ 12/22/23 06:10:29.581
  STEP: Creating pod pod-subpath-test-configmap-sxtc @ 12/22/23 06:10:29.594
  STEP: Creating a pod to test atomic-volume-subpath @ 12/22/23 06:10:29.594
  STEP: Saw pod success @ 12/22/23 06:10:55.676
  Dec 22 06:10:55.679: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-subpath-test-configmap-sxtc container test-container-subpath-configmap-sxtc: <nil>
  STEP: delete the pod @ 12/22/23 06:10:55.686
  STEP: Deleting pod pod-subpath-test-configmap-sxtc @ 12/22/23 06:10:55.7
  Dec 22 06:10:55.700: INFO: Deleting pod "pod-subpath-test-configmap-sxtc" in namespace "subpath-901"
  Dec 22 06:10:55.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-901" for this suite. @ 12/22/23 06:10:55.707
• [26.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 12/22/23 06:10:55.713
  Dec 22 06:10:55.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sched-preemption @ 12/22/23 06:10:55.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:10:55.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:10:55.749
  Dec 22 06:10:55.763: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 22 06:11:55.768: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/22/23 06:11:55.772
  Dec 22 06:11:55.811: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Dec 22 06:11:55.821: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Dec 22 06:11:55.894: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Dec 22 06:11:55.909: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Dec 22 06:11:55.961: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Dec 22 06:11:55.980: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  Dec 22 06:11:56.025: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  Dec 22 06:11:56.034: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/22/23 06:11:56.034
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/22/23 06:12:00.077
  Dec 22 06:12:04.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2082" for this suite. @ 12/22/23 06:12:04.338
• [68.640 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 12/22/23 06:12:04.353
  Dec 22 06:12:04.353: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/22/23 06:12:04.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:04.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:04.392
  Dec 22 06:12:04.397: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  Dec 22 06:12:10.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8401" for this suite. @ 12/22/23 06:12:10.991
• [6.650 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/22/23 06:12:11.004
  Dec 22 06:12:11.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pods @ 12/22/23 06:12:11.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:11.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:11.037
  STEP: creating a Pod with a static label @ 12/22/23 06:12:11.051
  STEP: watching for Pod to be ready @ 12/22/23 06:12:11.061
  Dec 22 06:12:11.065: INFO: observed Pod pod-test in namespace pods-1493 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Dec 22 06:12:11.067: INFO: observed Pod pod-test in namespace pods-1493 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC  }]
  Dec 22 06:12:11.091: INFO: observed Pod pod-test in namespace pods-1493 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC  }]
  Dec 22 06:12:11.541: INFO: observed Pod pod-test in namespace pods-1493 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC  }]
  Dec 22 06:12:12.955: INFO: Found Pod pod-test in namespace pods-1493 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:12 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 06:12:11 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/22/23 06:12:12.961
  STEP: getting the Pod and ensuring that it's patched @ 12/22/23 06:12:12.974
  STEP: replacing the Pod's status Ready condition to False @ 12/22/23 06:12:12.978
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/22/23 06:12:12.989
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/22/23 06:12:12.99
  STEP: watching for the Pod to be deleted @ 12/22/23 06:12:13
  Dec 22 06:12:13.003: INFO: observed event type MODIFIED
  Dec 22 06:12:14.973: INFO: observed event type MODIFIED
  Dec 22 06:12:15.362: INFO: observed event type MODIFIED
  Dec 22 06:12:15.446: INFO: observed event type MODIFIED
  Dec 22 06:12:15.965: INFO: observed event type MODIFIED
  Dec 22 06:12:15.992: INFO: observed event type MODIFIED
  Dec 22 06:12:16.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1493" for this suite. @ 12/22/23 06:12:16.008
• [5.013 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 12/22/23 06:12:16.018
  Dec 22 06:12:16.018: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 06:12:16.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:16.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:16.044
  Dec 22 06:12:16.068: INFO: created pod pod-service-account-defaultsa
  Dec 22 06:12:16.069: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Dec 22 06:12:16.075: INFO: created pod pod-service-account-mountsa
  Dec 22 06:12:16.075: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Dec 22 06:12:16.090: INFO: created pod pod-service-account-nomountsa
  Dec 22 06:12:16.090: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Dec 22 06:12:16.100: INFO: created pod pod-service-account-defaultsa-mountspec
  Dec 22 06:12:16.100: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Dec 22 06:12:16.122: INFO: created pod pod-service-account-mountsa-mountspec
  Dec 22 06:12:16.122: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Dec 22 06:12:16.139: INFO: created pod pod-service-account-nomountsa-mountspec
  Dec 22 06:12:16.139: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Dec 22 06:12:16.145: INFO: created pod pod-service-account-defaultsa-nomountspec
  Dec 22 06:12:16.145: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Dec 22 06:12:16.159: INFO: created pod pod-service-account-mountsa-nomountspec
  Dec 22 06:12:16.160: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Dec 22 06:12:16.171: INFO: created pod pod-service-account-nomountsa-nomountspec
  Dec 22 06:12:16.171: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Dec 22 06:12:16.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-253" for this suite. @ 12/22/23 06:12:16.184
• [0.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/22/23 06:12:16.209
  Dec 22 06:12:16.209: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 06:12:16.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:16.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:16.238
  STEP: Creating configMap with name configmap-projected-all-test-volume-511d8e90-dad8-428c-8123-3150f124e921 @ 12/22/23 06:12:16.241
  STEP: Creating secret with name secret-projected-all-test-volume-2c972d97-d790-459d-b9ad-4d9147442eea @ 12/22/23 06:12:16.246
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/22/23 06:12:16.257
  STEP: Saw pod success @ 12/22/23 06:12:20.286
  Dec 22 06:12:20.291: INFO: Trying to get logs from node ip-172-31-9-255.us-east-2.compute.internal pod projected-volume-aab9eeb6-83c6-48ec-830c-794a389b1efa container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 06:12:20.309
  Dec 22 06:12:20.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7963" for this suite. @ 12/22/23 06:12:20.329
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 12/22/23 06:12:20.336
  Dec 22 06:12:20.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 06:12:20.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:20.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:20.357
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/22/23 06:12:20.361
  STEP: When a replication controller with a matching selector is created @ 12/22/23 06:12:22.383
  STEP: Then the orphan pod is adopted @ 12/22/23 06:12:22.39
  Dec 22 06:12:23.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3410" for this suite. @ 12/22/23 06:12:23.404
• [3.073 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 12/22/23 06:12:23.41
  Dec 22 06:12:23.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 06:12:23.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:23.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:23.438
  STEP: Creating configMap with name projected-configmap-test-volume-9c4ab272-23da-4407-990e-00eef7709e69 @ 12/22/23 06:12:23.441
  STEP: Creating a pod to test consume configMaps @ 12/22/23 06:12:23.449
  STEP: Saw pod success @ 12/22/23 06:12:27.486
  Dec 22 06:12:27.489: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-configmaps-246a67ab-7574-4a83-9111-016ab1032546 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 06:12:27.503
  Dec 22 06:12:27.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3030" for this suite. @ 12/22/23 06:12:27.523
• [4.120 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 12/22/23 06:12:27.53
  Dec 22 06:12:27.530: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 06:12:27.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:27.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:27.551
  STEP: Creating configMap with name configmap-test-volume-fa8e9d0e-3d7e-4001-8611-62e6a87e53df @ 12/22/23 06:12:27.554
  STEP: Creating a pod to test consume configMaps @ 12/22/23 06:12:27.559
  STEP: Saw pod success @ 12/22/23 06:12:31.583
  Dec 22 06:12:31.590: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-configmaps-237e38f7-07f4-451b-a1ad-c199a30fef48 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 06:12:31.603
  Dec 22 06:12:31.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3145" for this suite. @ 12/22/23 06:12:31.626
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 12/22/23 06:12:31.635
  Dec 22 06:12:31.635: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename dns @ 12/22/23 06:12:31.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:31.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:31.674
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5588.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-5588.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/22/23 06:12:31.679
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5588.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5588.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/22/23 06:12:31.679
  STEP: creating a pod to probe /etc/hosts @ 12/22/23 06:12:31.679
  STEP: submitting the pod to kubernetes @ 12/22/23 06:12:31.68
  STEP: retrieving the pod @ 12/22/23 06:12:35.714
  STEP: looking for the results for each expected name from probers @ 12/22/23 06:12:35.718
  Dec 22 06:12:35.738: INFO: DNS probes using dns-5588/dns-test-b59f9df6-96c8-4314-8860-274b1e212f3b succeeded

  STEP: deleting the pod @ 12/22/23 06:12:35.739
  Dec 22 06:12:35.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5588" for this suite. @ 12/22/23 06:12:35.76
• [4.133 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 12/22/23 06:12:35.773
  Dec 22 06:12:35.773: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 06:12:35.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:35.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:35.796
  STEP: creating a ReplicationController @ 12/22/23 06:12:35.801
  STEP: waiting for RC to be added @ 12/22/23 06:12:35.807
  STEP: waiting for available Replicas @ 12/22/23 06:12:35.807
  STEP: patching ReplicationController @ 12/22/23 06:12:38.074
  STEP: waiting for RC to be modified @ 12/22/23 06:12:38.088
  STEP: patching ReplicationController status @ 12/22/23 06:12:38.088
  STEP: waiting for RC to be modified @ 12/22/23 06:12:38.094
  STEP: waiting for available Replicas @ 12/22/23 06:12:38.095
  STEP: fetching ReplicationController status @ 12/22/23 06:12:38.1
  STEP: patching ReplicationController scale @ 12/22/23 06:12:38.11
  STEP: waiting for RC to be modified @ 12/22/23 06:12:38.118
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/22/23 06:12:38.119
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/22/23 06:12:39.66
  STEP: updating ReplicationController status @ 12/22/23 06:12:39.664
  STEP: waiting for RC to be modified @ 12/22/23 06:12:39.672
  STEP: listing all ReplicationControllers @ 12/22/23 06:12:39.673
  STEP: checking that ReplicationController has expected values @ 12/22/23 06:12:39.682
  STEP: deleting ReplicationControllers by collection @ 12/22/23 06:12:39.682
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/22/23 06:12:39.69
  Dec 22 06:12:40.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1222 06:12:40.313462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7771" for this suite. @ 12/22/23 06:12:40.317
• [4.549 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 12/22/23 06:12:40.322
  Dec 22 06:12:40.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename csi-storageclass @ 12/22/23 06:12:40.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:40.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:40.342
  STEP: Creating a StorageClass @ 12/22/23 06:12:40.345
  STEP: Get StorageClass "e2e-ktkgg" @ 12/22/23 06:12:40.357
  STEP: Patching the StorageClass "e2e-ktkgg" @ 12/22/23 06:12:40.36
  STEP: Delete StorageClass "e2e-ktkgg" @ 12/22/23 06:12:40.367
  STEP: Confirm deletion of StorageClass "e2e-ktkgg" @ 12/22/23 06:12:40.372
  STEP: Create a replacement StorageClass @ 12/22/23 06:12:40.375
  STEP: Updating StorageClass "e2e-v2-jn5lc" @ 12/22/23 06:12:40.38
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-jn5lc=updated" @ 12/22/23 06:12:40.389
  STEP: Deleting StorageClass "e2e-v2-jn5lc" via DeleteCollection @ 12/22/23 06:12:40.393
  STEP: Confirm deletion of StorageClass "e2e-v2-jn5lc" @ 12/22/23 06:12:40.399
  Dec 22 06:12:40.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3967" for this suite. @ 12/22/23 06:12:40.405
• [0.088 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 12/22/23 06:12:40.411
  Dec 22 06:12:40.412: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 06:12:40.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:40.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:40.444
  STEP: Creating a ResourceQuota with terminating scope @ 12/22/23 06:12:40.447
  STEP: Ensuring ResourceQuota status is calculated @ 12/22/23 06:12:40.453
  E1222 06:12:41.313613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:12:42.313683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 12/22/23 06:12:42.456
  STEP: Ensuring ResourceQuota status is calculated @ 12/22/23 06:12:42.461
  E1222 06:12:43.313867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:12:44.314174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 12/22/23 06:12:44.468
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/22/23 06:12:44.482
  E1222 06:12:45.314789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:12:46.315443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/22/23 06:12:46.485
  E1222 06:12:47.315234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:12:48.315441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/22/23 06:12:48.49
  STEP: Ensuring resource quota status released the pod usage @ 12/22/23 06:12:48.506
  E1222 06:12:49.315492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:12:50.315684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 12/22/23 06:12:50.51
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/22/23 06:12:50.519
  E1222 06:12:51.316599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:12:52.316811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/22/23 06:12:52.523
  E1222 06:12:53.316917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:12:54.317057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/22/23 06:12:54.526
  STEP: Ensuring resource quota status released the pod usage @ 12/22/23 06:12:54.539
  E1222 06:12:55.317882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:12:56.318459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:12:56.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5129" for this suite. @ 12/22/23 06:12:56.546
• [16.140 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/22/23 06:12:56.552
  Dec 22 06:12:56.552: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename containers @ 12/22/23 06:12:56.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:56.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:56.577
  E1222 06:12:57.319854      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:12:58.320594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:12:58.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1838" for this suite. @ 12/22/23 06:12:58.613
• [2.069 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/22/23 06:12:58.621
  Dec 22 06:12:58.622: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename secrets @ 12/22/23 06:12:58.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:12:58.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:12:58.649
  STEP: Creating secret with name secret-test-5cfef243-ae21-491c-86d4-34ff0afe739b @ 12/22/23 06:12:58.652
  STEP: Creating a pod to test consume secrets @ 12/22/23 06:12:58.658
  E1222 06:12:59.321499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:00.321624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:01.323548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:02.323666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 06:13:03.033
  Dec 22 06:13:03.043: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-secrets-9ad2c139-cbeb-4565-a8d8-156072de2b13 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 06:13:03.055
  Dec 22 06:13:03.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3888" for this suite. @ 12/22/23 06:13:03.076
• [4.461 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/22/23 06:13:03.085
  Dec 22 06:13:03.085: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 06:13:03.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:13:03.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:13:03.12
  STEP: Creating secret with name projected-secret-test-60d3b4ce-8e86-4558-a434-fd62f2d426f7 @ 12/22/23 06:13:03.125
  STEP: Creating a pod to test consume secrets @ 12/22/23 06:13:03.132
  E1222 06:13:03.324627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:04.324945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:05.324916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:06.326359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 06:13:07.16
  Dec 22 06:13:07.163: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-projected-secrets-2586374b-3e03-47e3-bff2-6842e7983c82 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 06:13:07.175
  Dec 22 06:13:07.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2639" for this suite. @ 12/22/23 06:13:07.235
• [4.182 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 12/22/23 06:13:07.268
  Dec 22 06:13:07.268: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 06:13:07.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:13:07.315
  E1222 06:13:07.330695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:13:07.347
  Dec 22 06:13:07.356: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  W1222 06:13:07.358531      20 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004932bb0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1222 06:13:08.331821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:09.332675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1222 06:13:09.906264      20 warnings.go:70] unknown field "alpha"
  W1222 06:13:09.906302      20 warnings.go:70] unknown field "beta"
  W1222 06:13:09.906309      20 warnings.go:70] unknown field "delta"
  W1222 06:13:09.906316      20 warnings.go:70] unknown field "epsilon"
  W1222 06:13:09.906479      20 warnings.go:70] unknown field "gamma"
  E1222 06:13:10.333591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:10.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6866" for this suite. @ 12/22/23 06:13:10.446
• [3.183 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 12/22/23 06:13:10.451
  Dec 22 06:13:10.451: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 06:13:10.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:13:10.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:13:10.47
  Dec 22 06:13:10.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-104 create -f -'
  Dec 22 06:13:10.755: INFO: stderr: ""
  Dec 22 06:13:10.755: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Dec 22 06:13:10.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-104 create -f -'
  Dec 22 06:13:10.943: INFO: stderr: ""
  Dec 22 06:13:10.943: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/22/23 06:13:10.943
  E1222 06:13:11.333683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:11.947: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 06:13:11.947: INFO: Found 0 / 1
  E1222 06:13:12.334394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:12.948: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 06:13:12.948: INFO: Found 1 / 1
  Dec 22 06:13:12.948: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Dec 22 06:13:12.950: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 06:13:12.950: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 22 06:13:12.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-104 describe pod agnhost-primary-q2gxg'
  Dec 22 06:13:13.063: INFO: stderr: ""
  Dec 22 06:13:13.063: INFO: stdout: "Name:             agnhost-primary-q2gxg\nNamespace:        kubectl-104\nPriority:         0\nService Account:  default\nNode:             ip-172-31-7-66.us-east-2.compute.internal/172.31.7.66\nStart Time:       Fri, 22 Dec 2023 06:13:10 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 54a74dbd0ac2812159e06ede4789b68241204e551618e7c6555e4e4d56cddd1e\n                  cni.projectcalico.org/podIP: 10.42.3.160/32\n                  cni.projectcalico.org/podIPs: 10.42.3.160/32\nStatus:           Running\nIP:               10.42.3.160\nIPs:\n  IP:           10.42.3.160\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://7f28723d550ba6a2b6abbc32152fe4c84cb6b51449a354c5cb253d5886fbd682\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 22 Dec 2023 06:13:11 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-hf8fh (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-hf8fh:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-104/agnhost-primary-q2gxg to ip-172-31-7-66.us-east-2.compute.internal\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Dec 22 06:13:13.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-104 describe rc agnhost-primary'
  Dec 22 06:13:13.167: INFO: stderr: ""
  Dec 22 06:13:13.167: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-104\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-q2gxg\n"
  Dec 22 06:13:13.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-104 describe service agnhost-primary'
  Dec 22 06:13:13.271: INFO: stderr: ""
  Dec 22 06:13:13.271: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-104\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.43.239.201\nIPs:               10.43.239.201\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.42.3.160:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Dec 22 06:13:13.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-104 describe node ip-172-31-3-186.us-east-2.compute.internal'
  E1222 06:13:13.334903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:13.399: INFO: stderr: ""
  Dec 22 06:13:13.399: INFO: stdout: "Name:               ip-172-31-3-186.us-east-2.compute.internal\nRoles:              control-plane,etcd,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=rke2\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-3-186.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/master=true\n                    node.kubernetes.io/instance-type=rke2\n                    role-control-plane=true\n                    role-etcd=true\n                    role-worker=true\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.3.186\n                    etcd.rke2.cattle.io/local-snapshots-timestamp: 2023-12-22T03:42:14Z\n                    etcd.rke2.cattle.io/node-address: 172.31.3.186\n                    etcd.rke2.cattle.io/node-name: ip-172-31-3-186.us-east-2.compute.internal-c2492d1b\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"56:a2:5b:ad:0f:4f\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.3.186\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke2.io/encryption-config-hash: start-d475217a88acc9cd8cb5dd80abf9e75f6cdaf559f1c90b5a5835b7a867a1ef88\n                    rke2.io/external-ip: 3.22.181.183\n                    rke2.io/hostname: ip-172-31-3-186.us-east-2.compute.internal\n                    rke2.io/internal-ip: 172.31.3.186\n                    rke2.io/node-args:\n                      [\"server\",\"--write-kubeconfig-mode\",\"0644\",\"--tls-san\",\"fake.fqdn.value\",\"--node-name\",\"ip-172-31-3-186.us-east-2.compute.internal\",\"--pro...\n                    rke2.io/node-config-hash: VDHISXFFZXYEOMVJIKOO6JECO5JN63LVZHMJOGPBMB5BU4TAJUIQ====\n                    rke2.io/node-env: {}\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Fri, 22 Dec 2023 03:41:52 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-3-186.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 22 Dec 2023 06:13:11 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Fri, 22 Dec 2023 03:42:46 +0000   Fri, 22 Dec 2023 03:42:46 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Fri, 22 Dec 2023 06:10:17 +0000   Fri, 22 Dec 2023 03:41:52 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Fri, 22 Dec 2023 06:10:17 +0000   Fri, 22 Dec 2023 03:41:52 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Fri, 22 Dec 2023 06:10:17 +0000   Fri, 22 Dec 2023 03:41:52 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Fri, 22 Dec 2023 06:10:17 +0000   Fri, 22 Dec 2023 03:42:40 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\n  EtcdIsVoter          True    Fri, 22 Dec 2023 03:42:24 +0000   Fri, 22 Dec 2023 03:42:24 +0000   MemberNotLearner             Node is a voting member of the etcd cluster\nAddresses:\n  InternalIP:  172.31.3.186\n  ExternalIP:  3.22.181.183\n  Hostname:    ip-172-31-3-186.us-east-2.compute.internal\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      20937708Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3961848Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      20368202327\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3961848Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 ec2213cff6d1f323ddf66b2676b22e07\n  System UUID:                ec2213cf-f6d1-f323-ddf6-6b2676b22e07\n  Boot ID:                    a91a3872-863d-43c0-9534-e3da17e2dcf4\n  Kernel Version:             5.14.21-150400.22-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP4\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.11-k3s2\n  Kubelet Version:            v1.29.0+rke2r1\n  Kube-Proxy Version:         v1.29.0+rke2r1\nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nProviderID:                   rke2://ip-172-31-3-186.us-east-2.compute.internal\nNon-terminated Pods:          (14 in total)\n  Namespace                   Name                                                                   CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                                   ------------  ----------  ---------------  -------------  ---\n  kube-system                 cloud-controller-manager-ip-172-31-3-186.us-east-2.compute.internal    100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         151m\n  kube-system                 etcd-ip-172-31-3-186.us-east-2.compute.internal                        200m (10%)    0 (0%)      512Mi (13%)      0 (0%)         150m\n  kube-system                 kube-apiserver-ip-172-31-3-186.us-east-2.compute.internal              250m (12%)    0 (0%)      1Gi (26%)        0 (0%)         151m\n  kube-system                 kube-controller-manager-ip-172-31-3-186.us-east-2.compute.internal     200m (10%)    0 (0%)      256Mi (6%)       0 (0%)         151m\n  kube-system                 kube-proxy-ip-172-31-3-186.us-east-2.compute.internal                  250m (12%)    0 (0%)      128Mi (3%)       0 (0%)         150m\n  kube-system                 kube-scheduler-ip-172-31-3-186.us-east-2.compute.internal              100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         151m\n  kube-system                 rke2-canal-7hv77                                                       250m (12%)    0 (0%)      0 (0%)           0 (0%)         150m\n  kube-system                 rke2-coredns-rke2-coredns-5b8c65d87f-98jdx                             100m (5%)     100m (5%)   128Mi (3%)       128Mi (3%)     150m\n  kube-system                 rke2-coredns-rke2-coredns-autoscaler-945fbd459-7tnsg                   25m (1%)      100m (5%)   16Mi (0%)        64Mi (1%)      150m\n  kube-system                 rke2-ingress-nginx-controller-8gdc6                                    100m (5%)     0 (0%)      90Mi (2%)        0 (0%)         149m\n  kube-system                 rke2-metrics-server-544c8c66fc-jp6wb                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         150m\n  kube-system                 rke2-snapshot-controller-59cc9cd8f4-mbf24                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         150m\n  kube-system                 rke2-snapshot-validation-webhook-54c5989b65-6wtsx                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         150m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-981afab191b4443d-c85hz                0 (0%)        0 (0%)      0 (0%)           0 (0%)         107m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests      Limits\n  --------               --------      ------\n  cpu                    1575m (78%)   200m (10%)\n  memory                 2410Mi (62%)  192Mi (4%)\n  ephemeral-storage      0 (0%)        0 (0%)\n  hugepages-1Gi          0 (0%)        0 (0%)\n  hugepages-2Mi          0 (0%)        0 (0%)\n  scheduling.k8s.io/foo  0             0\nEvents:                  <none>\n"
  Dec 22 06:13:13.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=kubectl-104 describe namespace kubectl-104'
  Dec 22 06:13:13.492: INFO: stderr: ""
  Dec 22 06:13:13.492: INFO: stdout: "Name:         kubectl-104\nLabels:       e2e-framework=kubectl\n              e2e-run=6dd30d15-5141-4c39-ad10-0ce8c17ff4f8\n              kubernetes.io/metadata.name=kubectl-104\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Dec 22 06:13:13.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-104" for this suite. @ 12/22/23 06:13:13.496
• [3.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 12/22/23 06:13:13.521
  Dec 22 06:13:13.522: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-webhook @ 12/22/23 06:13:13.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:13:13.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:13:13.541
  STEP: Setting up server cert @ 12/22/23 06:13:13.544
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/22/23 06:13:14.088
  STEP: Deploying the custom resource conversion webhook pod @ 12/22/23 06:13:14.095
  STEP: Wait for the deployment to be ready @ 12/22/23 06:13:14.109
  Dec 22 06:13:14.135: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1222 06:13:14.335417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:15.335522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 06:13:16.145
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 06:13:16.157
  E1222 06:13:16.336569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:17.158: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Dec 22 06:13:17.164: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  E1222 06:13:17.338868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:18.339418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:19.340034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 12/22/23 06:13:19.732
  STEP: Create a v2 custom resource @ 12/22/23 06:13:19.749
  STEP: List CRs in v1 @ 12/22/23 06:13:19.783
  STEP: List CRs in v2 @ 12/22/23 06:13:19.79
  E1222 06:13:20.341010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:20.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7395" for this suite. @ 12/22/23 06:13:20.389
• [6.875 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 12/22/23 06:13:20.397
  Dec 22 06:13:20.397: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename configmap @ 12/22/23 06:13:20.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:13:20.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:13:20.448
  STEP: Creating configMap that has name configmap-test-emptyKey-9e1ca8f0-6f38-4764-ae2c-e737f530dd51 @ 12/22/23 06:13:20.459
  Dec 22 06:13:20.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5725" for this suite. @ 12/22/23 06:13:20.472
• [0.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 12/22/23 06:13:20.478
  Dec 22 06:13:20.478: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 06:13:20.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:13:20.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:13:20.503
  STEP: Counting existing ResourceQuota @ 12/22/23 06:13:20.509
  E1222 06:13:21.342175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:22.342238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:23.342382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:24.342885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:25.343557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/22/23 06:13:25.513
  STEP: Ensuring resource quota status is calculated @ 12/22/23 06:13:25.519
  E1222 06:13:26.343660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:27.343826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 12/22/23 06:13:27.522
  STEP: Ensuring resource quota status captures replication controller creation @ 12/22/23 06:13:27.533
  E1222 06:13:28.344361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:29.344799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 12/22/23 06:13:29.538
  STEP: Ensuring resource quota status released usage @ 12/22/23 06:13:29.544
  E1222 06:13:30.345263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:31.345390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:31.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5202" for this suite. @ 12/22/23 06:13:31.552
• [11.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/22/23 06:13:31.56
  Dec 22 06:13:31.560: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 06:13:31.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:13:31.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:13:31.58
  Dec 22 06:13:31.610: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 06:13:31.615
  Dec 22 06:13:31.624: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 06:13:31.624: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 06:13:32.345571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:32.626: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 06:13:32.626: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 06:13:33.345789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:33.627: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 06:13:33.627: INFO: Node ip-172-31-9-255.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 06:13:34.345915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:34.623: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 06:13:34.624: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/22/23 06:13:34.635
  STEP: Check that daemon pods images are updated. @ 12/22/23 06:13:34.648
  Dec 22 06:13:34.653: INFO: Wrong image for pod: daemon-set-6jtv6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 06:13:34.653: INFO: Wrong image for pod: daemon-set-dcvrr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 06:13:34.653: INFO: Wrong image for pod: daemon-set-qzbqc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 06:13:34.653: INFO: Wrong image for pod: daemon-set-xq84w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1222 06:13:35.345946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:35.653: INFO: Wrong image for pod: daemon-set-dcvrr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 06:13:35.653: INFO: Wrong image for pod: daemon-set-qzbqc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 06:13:35.653: INFO: Wrong image for pod: daemon-set-xq84w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1222 06:13:36.346074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:36.659: INFO: Wrong image for pod: daemon-set-dcvrr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 06:13:36.660: INFO: Pod daemon-set-dfpn7 is not available
  Dec 22 06:13:36.660: INFO: Wrong image for pod: daemon-set-qzbqc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 06:13:36.660: INFO: Wrong image for pod: daemon-set-xq84w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1222 06:13:37.346183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:37.652: INFO: Wrong image for pod: daemon-set-dcvrr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 06:13:37.652: INFO: Wrong image for pod: daemon-set-xq84w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1222 06:13:38.346699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:38.653: INFO: Wrong image for pod: daemon-set-dcvrr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 06:13:38.653: INFO: Pod daemon-set-mc5f7 is not available
  Dec 22 06:13:38.653: INFO: Wrong image for pod: daemon-set-xq84w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1222 06:13:39.347771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:39.653: INFO: Wrong image for pod: daemon-set-dcvrr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 06:13:39.653: INFO: Pod daemon-set-mc5f7 is not available
  Dec 22 06:13:39.653: INFO: Wrong image for pod: daemon-set-xq84w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1222 06:13:40.348643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:40.652: INFO: Wrong image for pod: daemon-set-dcvrr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 06:13:40.652: INFO: Pod daemon-set-nc7pp is not available
  E1222 06:13:41.349079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:42.349228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:42.654: INFO: Pod daemon-set-5j9dd is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/22/23 06:13:42.658
  Dec 22 06:13:42.666: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 06:13:42.667: INFO: Node ip-172-31-9-255.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 06:13:43.349354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:43.667: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 06:13:43.668: INFO: Node ip-172-31-9-255.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 06:13:44.349844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:44.666: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 06:13:44.666: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 06:13:44.682
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2867, will wait for the garbage collector to delete the pods @ 12/22/23 06:13:44.682
  Dec 22 06:13:44.742: INFO: Deleting DaemonSet.extensions daemon-set took: 6.139192ms
  Dec 22 06:13:44.843: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.283422ms
  E1222 06:13:45.350740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:46.351049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:46.947: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 06:13:46.947: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 06:13:46.949: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"62740"},"items":null}

  Dec 22 06:13:46.952: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"62740"},"items":null}

  Dec 22 06:13:46.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2867" for this suite. @ 12/22/23 06:13:46.973
• [15.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/22/23 06:13:46.981
  Dec 22 06:13:46.981: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pods @ 12/22/23 06:13:46.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:13:47.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:13:47.006
  STEP: creating the pod @ 12/22/23 06:13:47.008
  STEP: setting up watch @ 12/22/23 06:13:47.009
  STEP: submitting the pod to kubernetes @ 12/22/23 06:13:47.113
  STEP: verifying the pod is in kubernetes @ 12/22/23 06:13:47.12
  STEP: verifying pod creation was observed @ 12/22/23 06:13:47.123
  E1222 06:13:47.354361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:48.354888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 12/22/23 06:13:49.134
  STEP: verifying pod deletion was observed @ 12/22/23 06:13:49.146
  E1222 06:13:49.354913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:50.355170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:51.355550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:51.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5926" for this suite. @ 12/22/23 06:13:51.397
• [4.425 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/22/23 06:13:51.407
  Dec 22 06:13:51.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pods @ 12/22/23 06:13:51.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:13:51.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:13:51.989
  Dec 22 06:13:51.993: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: creating the pod @ 12/22/23 06:13:51.994
  STEP: submitting the pod to kubernetes @ 12/22/23 06:13:51.994
  E1222 06:13:52.355854      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:53.356591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:13:54.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-928" for this suite. @ 12/22/23 06:13:54.048
• [2.655 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 12/22/23 06:13:54.063
  Dec 22 06:13:54.063: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename gc @ 12/22/23 06:13:54.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:13:54.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:13:54.089
  STEP: create the rc @ 12/22/23 06:13:54.092
  W1222 06:13:54.098650      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1222 06:13:54.357232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:55.358074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:56.358323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:57.358668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:13:58.359438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/22/23 06:13:59.101
  STEP: wait for all pods to be garbage collected @ 12/22/23 06:13:59.108
  E1222 06:13:59.359967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:00.360744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:01.361587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:02.362075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:03.362192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/22/23 06:14:04.116
  Dec 22 06:14:04.311: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 06:14:04.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6341" for this suite. @ 12/22/23 06:14:04.317
• [10.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 12/22/23 06:14:04.325
  Dec 22 06:14:04.325: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 06:14:04.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:14:04.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:14:04.347
  STEP: creating service in namespace services-5738 @ 12/22/23 06:14:04.35
  STEP: creating service affinity-nodeport in namespace services-5738 @ 12/22/23 06:14:04.35
  E1222 06:14:04.363130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-nodeport in namespace services-5738 @ 12/22/23 06:14:04.391
  I1222 06:14:04.414591      20 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-5738, replica count: 3
  E1222 06:14:05.364156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:06.364593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:07.364829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1222 06:14:07.466381      20 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 06:14:07.475: INFO: Creating new exec pod
  E1222 06:14:08.365090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:09.365385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:10.365542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:14:10.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-5738 exec execpod-affinityllvxp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Dec 22 06:14:10.718: INFO: stderr: "+ + echo hostName\nnc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Dec 22 06:14:10.718: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 06:14:10.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-5738 exec execpod-affinityllvxp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.181.155 80'
  Dec 22 06:14:10.912: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.181.155 80\nConnection to 10.43.181.155 80 port [tcp/http] succeeded!\n"
  Dec 22 06:14:10.912: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 06:14:10.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-5738 exec execpod-affinityllvxp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.122 31239'
  Dec 22 06:14:11.125: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.4.122 31239\nConnection to 172.31.4.122 31239 port [tcp/*] succeeded!\n"
  Dec 22 06:14:11.125: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 06:14:11.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-5738 exec execpod-affinityllvxp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.7.66 31239'
  Dec 22 06:14:11.334: INFO: stderr: "+ + nc -v -t -w 2 172.31.7.66 31239\necho hostName\nConnection to 172.31.7.66 31239 port [tcp/*] succeeded!\n"
  Dec 22 06:14:11.334: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 06:14:11.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=services-5738 exec execpod-affinityllvxp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.3.186:31239/ ; done'
  E1222 06:14:11.366110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:14:11.616: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.3.186:31239/\n"
  Dec 22 06:14:11.617: INFO: stdout: "\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj\naffinity-nodeport-lkrtj"
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Received response from host: affinity-nodeport-lkrtj
  Dec 22 06:14:11.617: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5738, will wait for the garbage collector to delete the pods @ 12/22/23 06:14:11.63
  Dec 22 06:14:11.695: INFO: Deleting ReplicationController affinity-nodeport took: 5.904657ms
  Dec 22 06:14:11.796: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.484405ms
  E1222 06:14:12.366884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:13.367649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:14.368067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:15.368915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:14:15.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5738" for this suite. @ 12/22/23 06:14:15.535
• [11.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 12/22/23 06:14:15.54
  Dec 22 06:14:15.540: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 06:14:15.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:14:15.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:14:15.566
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/22/23 06:14:15.569
  E1222 06:14:16.369139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:17.369908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:18.369704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:19.370778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 06:14:19.596
  Dec 22 06:14:19.598: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-79d6cd02-afba-443b-8bc3-c61d17a59fe2 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 06:14:19.604
  Dec 22 06:14:19.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8032" for this suite. @ 12/22/23 06:14:19.628
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 12/22/23 06:14:19.647
  Dec 22 06:14:19.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 06:14:19.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:14:19.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:14:19.672
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 06:14:19.675
  E1222 06:14:20.370843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:21.370887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:22.371554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:23.372175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 06:14:23.941
  Dec 22 06:14:23.944: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-39a48e59-bf56-417b-bae3-3c00996d3ab5 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 06:14:23.951
  Dec 22 06:14:23.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2377" for this suite. @ 12/22/23 06:14:23.973
• [4.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 12/22/23 06:14:23.98
  Dec 22 06:14:23.981: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 06:14:23.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:14:24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:14:24.004
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/22/23 06:14:24.006
  E1222 06:14:24.372754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:25.373066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:26.374082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:27.376491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 06:14:28.027
  Dec 22 06:14:28.032: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod pod-b2c4c495-d3ac-42fe-a654-716800c98a63 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 06:14:28.041
  Dec 22 06:14:28.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1871" for this suite. @ 12/22/23 06:14:28.077
• [4.102 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 12/22/23 06:14:28.082
  Dec 22 06:14:28.082: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename discovery @ 12/22/23 06:14:28.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:14:28.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:14:28.107
  STEP: Setting up server cert @ 12/22/23 06:14:28.111
  E1222 06:14:28.375858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 12/22/23 06:14:28.888
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/22/23 06:14:28.89
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/22/23 06:14:28.891
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/22/23 06:14:28.892
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/22/23 06:14:28.893
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/22/23 06:14:28.894
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/22/23 06:14:28.895
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/22/23 06:14:28.896
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/22/23 06:14:28.898
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/22/23 06:14:28.899
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/22/23 06:14:28.9
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/22/23 06:14:28.901
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/22/23 06:14:28.902
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/22/23 06:14:28.903
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/22/23 06:14:28.905
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/22/23 06:14:28.906
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/22/23 06:14:28.907
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/22/23 06:14:28.908
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/22/23 06:14:28.908
  Dec 22 06:14:28.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6018" for this suite. @ 12/22/23 06:14:29.304
• [1.235 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 12/22/23 06:14:29.319
  Dec 22 06:14:29.319: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename controllerrevisions @ 12/22/23 06:14:29.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:14:29.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:14:29.34
  STEP: Creating DaemonSet "e2e-gngjt-daemon-set" @ 12/22/23 06:14:29.371
  E1222 06:14:29.376088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 06:14:29.377
  Dec 22 06:14:29.388: INFO: Number of nodes with available pods controlled by daemonset e2e-gngjt-daemon-set: 0
  Dec 22 06:14:29.388: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 06:14:30.376460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:14:30.535: INFO: Number of nodes with available pods controlled by daemonset e2e-gngjt-daemon-set: 0
  Dec 22 06:14:30.535: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 06:14:31.376552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:14:31.385: INFO: Number of nodes with available pods controlled by daemonset e2e-gngjt-daemon-set: 2
  Dec 22 06:14:31.385: INFO: Node ip-172-31-3-186.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 06:14:32.376879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:14:32.387: INFO: Number of nodes with available pods controlled by daemonset e2e-gngjt-daemon-set: 4
  Dec 22 06:14:32.387: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset e2e-gngjt-daemon-set
  STEP: Confirm DaemonSet "e2e-gngjt-daemon-set" successfully created with "daemonset-name=e2e-gngjt-daemon-set" label @ 12/22/23 06:14:32.392
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-gngjt-daemon-set" @ 12/22/23 06:14:32.399
  Dec 22 06:14:32.402: INFO: Located ControllerRevision: "e2e-gngjt-daemon-set-7dbd8b6b55"
  STEP: Patching ControllerRevision "e2e-gngjt-daemon-set-7dbd8b6b55" @ 12/22/23 06:14:32.405
  Dec 22 06:14:32.422: INFO: e2e-gngjt-daemon-set-7dbd8b6b55 has been patched
  STEP: Create a new ControllerRevision @ 12/22/23 06:14:32.422
  Dec 22 06:14:32.432: INFO: Created ControllerRevision: e2e-gngjt-daemon-set-686bb4c89f
  STEP: Confirm that there are two ControllerRevisions @ 12/22/23 06:14:32.433
  Dec 22 06:14:32.433: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 22 06:14:32.438: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-gngjt-daemon-set-7dbd8b6b55" @ 12/22/23 06:14:32.439
  STEP: Confirm that there is only one ControllerRevision @ 12/22/23 06:14:32.445
  Dec 22 06:14:32.445: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 22 06:14:32.449: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-gngjt-daemon-set-686bb4c89f" @ 12/22/23 06:14:32.452
  Dec 22 06:14:32.462: INFO: e2e-gngjt-daemon-set-686bb4c89f has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/22/23 06:14:32.462
  W1222 06:14:32.470141      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/22/23 06:14:32.47
  Dec 22 06:14:32.470: INFO: Requesting list of ControllerRevisions to confirm quantity
  E1222 06:14:33.379529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:14:33.471: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 22 06:14:33.475: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-gngjt-daemon-set-686bb4c89f=updated" @ 12/22/23 06:14:33.475
  STEP: Confirm that there is only one ControllerRevision @ 12/22/23 06:14:33.482
  Dec 22 06:14:33.483: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 22 06:14:33.495: INFO: Found 1 ControllerRevisions
  Dec 22 06:14:33.499: INFO: ControllerRevision "e2e-gngjt-daemon-set-6bfd77dc66" has revision 3
  STEP: Deleting DaemonSet "e2e-gngjt-daemon-set" @ 12/22/23 06:14:33.509
  STEP: deleting DaemonSet.extensions e2e-gngjt-daemon-set in namespace controllerrevisions-3678, will wait for the garbage collector to delete the pods @ 12/22/23 06:14:33.51
  Dec 22 06:14:33.571: INFO: Deleting DaemonSet.extensions e2e-gngjt-daemon-set took: 5.844985ms
  Dec 22 06:14:33.673: INFO: Terminating DaemonSet.extensions e2e-gngjt-daemon-set pods took: 101.996838ms
  E1222 06:14:34.380456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:14:35.077: INFO: Number of nodes with available pods controlled by daemonset e2e-gngjt-daemon-set: 0
  Dec 22 06:14:35.077: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-gngjt-daemon-set
  Dec 22 06:14:35.080: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"63388"},"items":null}

  Dec 22 06:14:35.083: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"63388"},"items":null}

  Dec 22 06:14:35.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-3678" for this suite. @ 12/22/23 06:14:35.103
• [5.790 seconds]
------------------------------
S
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/22/23 06:14:35.11
  Dec 22 06:14:35.110: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename certificates @ 12/22/23 06:14:35.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:14:35.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:14:35.13
  E1222 06:14:35.381159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 12/22/23 06:14:35.685
  STEP: getting /apis/certificates.k8s.io @ 12/22/23 06:14:35.69
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/22/23 06:14:35.692
  STEP: creating @ 12/22/23 06:14:35.693
  STEP: getting @ 12/22/23 06:14:35.708
  STEP: listing @ 12/22/23 06:14:35.713
  STEP: watching @ 12/22/23 06:14:35.716
  Dec 22 06:14:35.716: INFO: starting watch
  STEP: patching @ 12/22/23 06:14:35.717
  STEP: updating @ 12/22/23 06:14:35.725
  Dec 22 06:14:35.730: INFO: waiting for watch events with expected annotations
  Dec 22 06:14:35.730: INFO: saw patched and updated annotations
  STEP: getting /approval @ 12/22/23 06:14:35.73
  STEP: patching /approval @ 12/22/23 06:14:35.733
  STEP: updating /approval @ 12/22/23 06:14:36.175
  STEP: getting /status @ 12/22/23 06:14:36.181
  STEP: patching /status @ 12/22/23 06:14:36.184
  STEP: updating /status @ 12/22/23 06:14:36.191
  STEP: deleting @ 12/22/23 06:14:36.197
  STEP: deleting a collection @ 12/22/23 06:14:36.217
  Dec 22 06:14:36.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3257" for this suite. @ 12/22/23 06:14:36.235
• [1.130 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 12/22/23 06:14:36.24
  Dec 22 06:14:36.240: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/22/23 06:14:36.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:14:36.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:14:36.26
  STEP: fetching the /apis discovery document @ 12/22/23 06:14:36.262
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/22/23 06:14:36.264
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/22/23 06:14:36.264
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/22/23 06:14:36.264
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/22/23 06:14:36.265
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/22/23 06:14:36.265
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/22/23 06:14:36.266
  Dec 22 06:14:36.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8075" for this suite. @ 12/22/23 06:14:36.27
• [0.036 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 12/22/23 06:14:36.279
  Dec 22 06:14:36.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 06:14:36.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:14:36.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:14:36.3
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 06:14:36.303
  E1222 06:14:36.381586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:37.386785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:38.387252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:39.387473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 06:14:40.325
  Dec 22 06:14:40.330: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-31b13cb7-328f-4fae-b9ac-8ee562153a57 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 06:14:40.338
  Dec 22 06:14:40.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6170" for this suite. @ 12/22/23 06:14:40.367
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/22/23 06:14:40.376
  Dec 22 06:14:40.376: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename pods @ 12/22/23 06:14:40.377
  E1222 06:14:40.387928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:14:40.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:14:40.404
  E1222 06:14:41.388827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:42.389225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:43.389381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:44.389942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:45.390063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:46.390455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:47.390561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:48.391132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 06:14:48.498
  Dec 22 06:14:48.501: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod client-envvars-38e61490-8408-448d-a66a-6617a03636c1 container env3cont: <nil>
  STEP: delete the pod @ 12/22/23 06:14:48.508
  Dec 22 06:14:48.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1828" for this suite. @ 12/22/23 06:14:48.526
• [8.177 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 12/22/23 06:14:48.554
  Dec 22 06:14:48.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 06:14:48.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:14:48.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:14:48.6
  E1222 06:14:49.392064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:50.392638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:51.393382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:52.393628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:53.393948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:54.394142      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:55.394859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:56.394939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:57.395092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:58.395161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:14:59.396112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:00.396646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:01.397471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:02.398345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:03.400197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:04.400695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:05.400838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:06.401844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:07.403566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:08.404153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:09.405226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:10.405318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:11.405705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:12.406598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:13.407491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:14.407919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:15.408689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:16.408880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:17.409364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:18.409229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:19.409847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:20.411016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:21.411038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:22.411354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:23.411496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:24.412433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:25.412553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:26.413606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:27.419491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:28.420157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:29.420501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:30.420900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:31.421039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:32.421792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:33.422657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:34.423538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:35.423681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:36.424650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:37.425513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:38.425823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:39.426835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:40.426968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:41.427135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:42.427311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:43.428997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:44.429474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:45.430396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:46.431281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:47.432580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:48.433339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:15:48.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6808" for this suite. @ 12/22/23 06:15:48.631
• [60.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 12/22/23 06:15:48.646
  Dec 22 06:15:48.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 06:15:48.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:15:48.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:15:48.672
  STEP: Creating the pod @ 12/22/23 06:15:48.676
  E1222 06:15:49.434736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:50.435399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:51.436314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:52.436474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:15:53.225: INFO: Successfully updated pod "annotationupdate16719c67-6701-4f7b-bbce-3fbee986c805"
  E1222 06:15:53.438000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:54.439526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:15:55.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7247" for this suite. @ 12/22/23 06:15:55.273
• [6.632 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 12/22/23 06:15:55.28
  Dec 22 06:15:55.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename podtemplate @ 12/22/23 06:15:55.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:15:55.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:15:55.301
  STEP: Create set of pod templates @ 12/22/23 06:15:55.303
  Dec 22 06:15:55.308: INFO: created test-podtemplate-1
  Dec 22 06:15:55.313: INFO: created test-podtemplate-2
  Dec 22 06:15:55.318: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/22/23 06:15:55.318
  STEP: delete collection of pod templates @ 12/22/23 06:15:55.32
  Dec 22 06:15:55.320: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/22/23 06:15:55.333
  Dec 22 06:15:55.333: INFO: requesting list of pod templates to confirm quantity
  Dec 22 06:15:55.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1510" for this suite. @ 12/22/23 06:15:55.347
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 12/22/23 06:15:55.353
  Dec 22 06:15:55.353: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sched-pred @ 12/22/23 06:15:55.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:15:55.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:15:55.378
  Dec 22 06:15:55.381: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 22 06:15:55.392: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 06:15:55.401: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-186.us-east-2.compute.internal before test
  Dec 22 06:15:55.415: INFO: cloud-controller-manager-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:55 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: etcd-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:39 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: helm-install-rke2-canal-xtrfp from kube-system started at 2023-12-22 03:42:17 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:15:55.415: INFO: helm-install-rke2-coredns-qj9lw from kube-system started at 2023-12-22 03:42:17 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:15:55.415: INFO: helm-install-rke2-ingress-nginx-vf5wl from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:15:55.415: INFO: helm-install-rke2-metrics-server-5mhqd from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:15:55.415: INFO: helm-install-rke2-snapshot-controller-crd-j4rkx from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:15:55.415: INFO: helm-install-rke2-snapshot-controller-ptzhz from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:15:55.415: INFO: helm-install-rke2-snapshot-validation-webhook-ggrfb from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:15:55.415: INFO: kube-apiserver-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:48 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: kube-controller-manager-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:53 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: kube-proxy-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:42:14 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: kube-scheduler-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:53 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: rke2-canal-7hv77 from kube-system started at 2023-12-22 03:42:26 +0000 UTC (2 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: rke2-coredns-rke2-coredns-5b8c65d87f-98jdx from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: rke2-coredns-rke2-coredns-autoscaler-945fbd459-7tnsg from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container autoscaler ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: rke2-ingress-nginx-controller-8gdc6 from kube-system started at 2023-12-22 03:43:18 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: rke2-metrics-server-544c8c66fc-jp6wb from kube-system started at 2023-12-22 03:43:10 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container metrics-server ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: rke2-snapshot-controller-59cc9cd8f4-mbf24 from kube-system started at 2023-12-22 03:43:10 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container rke2-snapshot-controller ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: rke2-snapshot-validation-webhook-54c5989b65-6wtsx from kube-system started at 2023-12-22 03:43:11 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-c85hz from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 06:15:55.415: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 06:15:55.415: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-122.us-east-2.compute.internal before test
  Dec 22 06:15:55.424: INFO: cloud-controller-manager-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.424: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: etcd-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:19 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.424: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: kube-apiserver-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:43 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.424: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: kube-controller-manager-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.424: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: kube-proxy-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:54 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.424: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: kube-scheduler-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.424: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: rke2-canal-z289m from kube-system started at 2023-12-22 03:44:49 +0000 UTC (2 container statuses recorded)
  Dec 22 06:15:55.424: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: rke2-coredns-rke2-coredns-5b8c65d87f-pdd2b from kube-system started at 2023-12-22 03:45:02 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.424: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: rke2-ingress-nginx-controller-65wsj from kube-system started at 2023-12-22 03:45:02 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.424: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-kz6fs from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 06:15:55.424: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 06:15:55.424: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-7-66.us-east-2.compute.internal before test
  E1222 06:15:55.443370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:15:55.444: INFO: annotationupdate16719c67-6701-4f7b-bbce-3fbee986c805 from downward-api-7247 started at 2023-12-22 06:15:48 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.444: INFO: 	Container client-container ready: true, restart count 0
  Dec 22 06:15:55.444: INFO: kube-proxy-ip-172-31-7-66.us-east-2.compute.internal from kube-system started at 2023-12-22 03:46:58 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.444: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 06:15:55.444: INFO: rke2-canal-s7h7l from kube-system started at 2023-12-22 03:46:58 +0000 UTC (2 container statuses recorded)
  Dec 22 06:15:55.444: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 06:15:55.444: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 06:15:55.444: INFO: rke2-ingress-nginx-controller-zn7x5 from kube-system started at 2023-12-22 06:00:48 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.444: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 06:15:55.444: INFO: sonobuoy from sonobuoy started at 2023-12-22 04:25:24 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.444: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 22 06:15:55.444: INFO: sonobuoy-e2e-job-3715d743ce064b1f from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 06:15:55.444: INFO: 	Container e2e ready: true, restart count 0
  Dec 22 06:15:55.444: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 06:15:55.444: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-mwv6z from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 06:15:55.444: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 06:15:55.444: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 06:15:55.444: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-9-255.us-east-2.compute.internal before test
  Dec 22 06:15:55.453: INFO: cloud-controller-manager-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.453: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 06:15:55.454: INFO: etcd-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:39 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.454: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 06:15:55.454: INFO: kube-apiserver-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:08 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.455: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 06:15:55.459: INFO: kube-controller-manager-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.459: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 06:15:55.459: INFO: kube-proxy-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:16 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.460: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 06:15:55.460: INFO: kube-scheduler-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.460: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 06:15:55.460: INFO: rke2-canal-x86m4 from kube-system started at 2023-12-22 03:45:41 +0000 UTC (2 container statuses recorded)
  Dec 22 06:15:55.460: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 06:15:55.460: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 06:15:55.461: INFO: rke2-ingress-nginx-controller-2pcz6 from kube-system started at 2023-12-22 03:45:51 +0000 UTC (1 container statuses recorded)
  Dec 22 06:15:55.461: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 06:15:55.461: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-49277 from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 06:15:55.461: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 06:15:55.462: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-3-186.us-east-2.compute.internal @ 12/22/23 06:15:55.495
  STEP: verifying the node has the label node ip-172-31-4-122.us-east-2.compute.internal @ 12/22/23 06:15:55.551
  STEP: verifying the node has the label node ip-172-31-7-66.us-east-2.compute.internal @ 12/22/23 06:15:55.592
  STEP: verifying the node has the label node ip-172-31-9-255.us-east-2.compute.internal @ 12/22/23 06:15:55.638
  Dec 22 06:15:55.723: INFO: Pod annotationupdate16719c67-6701-4f7b-bbce-3fbee986c805 requesting resource cpu=0m on Node ip-172-31-7-66.us-east-2.compute.internal
  Dec 22 06:15:55.724: INFO: Pod cloud-controller-manager-ip-172-31-3-186.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.742: INFO: Pod cloud-controller-manager-ip-172-31-4-122.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-4-122.us-east-2.compute.internal
  Dec 22 06:15:55.742: INFO: Pod cloud-controller-manager-ip-172-31-9-255.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-9-255.us-east-2.compute.internal
  Dec 22 06:15:55.742: INFO: Pod etcd-ip-172-31-3-186.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.742: INFO: Pod etcd-ip-172-31-4-122.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-4-122.us-east-2.compute.internal
  Dec 22 06:15:55.742: INFO: Pod etcd-ip-172-31-9-255.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-9-255.us-east-2.compute.internal
  Dec 22 06:15:55.743: INFO: Pod kube-apiserver-ip-172-31-3-186.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.743: INFO: Pod kube-apiserver-ip-172-31-4-122.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-4-122.us-east-2.compute.internal
  Dec 22 06:15:55.743: INFO: Pod kube-apiserver-ip-172-31-9-255.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-9-255.us-east-2.compute.internal
  Dec 22 06:15:55.743: INFO: Pod kube-controller-manager-ip-172-31-3-186.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.743: INFO: Pod kube-controller-manager-ip-172-31-4-122.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-4-122.us-east-2.compute.internal
  Dec 22 06:15:55.743: INFO: Pod kube-controller-manager-ip-172-31-9-255.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-9-255.us-east-2.compute.internal
  Dec 22 06:15:55.744: INFO: Pod kube-proxy-ip-172-31-3-186.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.744: INFO: Pod kube-proxy-ip-172-31-4-122.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-4-122.us-east-2.compute.internal
  Dec 22 06:15:55.744: INFO: Pod kube-proxy-ip-172-31-7-66.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-7-66.us-east-2.compute.internal
  Dec 22 06:15:55.744: INFO: Pod kube-proxy-ip-172-31-9-255.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-9-255.us-east-2.compute.internal
  Dec 22 06:15:55.744: INFO: Pod kube-scheduler-ip-172-31-3-186.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.744: INFO: Pod kube-scheduler-ip-172-31-4-122.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-4-122.us-east-2.compute.internal
  Dec 22 06:15:55.744: INFO: Pod kube-scheduler-ip-172-31-9-255.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-9-255.us-east-2.compute.internal
  Dec 22 06:15:55.745: INFO: Pod rke2-canal-7hv77 requesting resource cpu=250m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.745: INFO: Pod rke2-canal-s7h7l requesting resource cpu=250m on Node ip-172-31-7-66.us-east-2.compute.internal
  Dec 22 06:15:55.745: INFO: Pod rke2-canal-x86m4 requesting resource cpu=250m on Node ip-172-31-9-255.us-east-2.compute.internal
  Dec 22 06:15:55.746: INFO: Pod rke2-canal-z289m requesting resource cpu=250m on Node ip-172-31-4-122.us-east-2.compute.internal
  Dec 22 06:15:55.746: INFO: Pod rke2-coredns-rke2-coredns-5b8c65d87f-98jdx requesting resource cpu=100m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.747: INFO: Pod rke2-coredns-rke2-coredns-5b8c65d87f-pdd2b requesting resource cpu=100m on Node ip-172-31-4-122.us-east-2.compute.internal
  Dec 22 06:15:55.747: INFO: Pod rke2-coredns-rke2-coredns-autoscaler-945fbd459-7tnsg requesting resource cpu=25m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.747: INFO: Pod rke2-ingress-nginx-controller-2pcz6 requesting resource cpu=100m on Node ip-172-31-9-255.us-east-2.compute.internal
  Dec 22 06:15:55.747: INFO: Pod rke2-ingress-nginx-controller-65wsj requesting resource cpu=100m on Node ip-172-31-4-122.us-east-2.compute.internal
  Dec 22 06:15:55.747: INFO: Pod rke2-ingress-nginx-controller-8gdc6 requesting resource cpu=100m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.747: INFO: Pod rke2-ingress-nginx-controller-zn7x5 requesting resource cpu=100m on Node ip-172-31-7-66.us-east-2.compute.internal
  Dec 22 06:15:55.747: INFO: Pod rke2-metrics-server-544c8c66fc-jp6wb requesting resource cpu=0m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.747: INFO: Pod rke2-snapshot-controller-59cc9cd8f4-mbf24 requesting resource cpu=0m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.747: INFO: Pod rke2-snapshot-validation-webhook-54c5989b65-6wtsx requesting resource cpu=0m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.747: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-7-66.us-east-2.compute.internal
  Dec 22 06:15:55.748: INFO: Pod sonobuoy-e2e-job-3715d743ce064b1f requesting resource cpu=0m on Node ip-172-31-7-66.us-east-2.compute.internal
  Dec 22 06:15:55.748: INFO: Pod sonobuoy-systemd-logs-daemon-set-981afab191b4443d-49277 requesting resource cpu=0m on Node ip-172-31-9-255.us-east-2.compute.internal
  Dec 22 06:15:55.748: INFO: Pod sonobuoy-systemd-logs-daemon-set-981afab191b4443d-c85hz requesting resource cpu=0m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.748: INFO: Pod sonobuoy-systemd-logs-daemon-set-981afab191b4443d-kz6fs requesting resource cpu=0m on Node ip-172-31-4-122.us-east-2.compute.internal
  Dec 22 06:15:55.748: INFO: Pod sonobuoy-systemd-logs-daemon-set-981afab191b4443d-mwv6z requesting resource cpu=0m on Node ip-172-31-7-66.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/22/23 06:15:55.748
  Dec 22 06:15:55.748: INFO: Creating a pod which consumes cpu=297m on Node ip-172-31-3-186.us-east-2.compute.internal
  Dec 22 06:15:55.770: INFO: Creating a pod which consumes cpu=315m on Node ip-172-31-4-122.us-east-2.compute.internal
  Dec 22 06:15:55.819: INFO: Creating a pod which consumes cpu=980m on Node ip-172-31-7-66.us-east-2.compute.internal
  Dec 22 06:15:55.825: INFO: Creating a pod which consumes cpu=385m on Node ip-172-31-9-255.us-east-2.compute.internal
  E1222 06:15:56.443924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:15:57.444235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/22/23 06:15:57.857
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0f6f6480-95a5-487f-acaa-40a19600a87e.17a312cd04e8bcf5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-947/filler-pod-0f6f6480-95a5-487f-acaa-40a19600a87e to ip-172-31-7-66.us-east-2.compute.internal] @ 12/22/23 06:15:57.861
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0f6f6480-95a5-487f-acaa-40a19600a87e.17a312cd3f79a412], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/22/23 06:15:57.861
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0f6f6480-95a5-487f-acaa-40a19600a87e.17a312cd439a8f4e], Reason = [Created], Message = [Created container filler-pod-0f6f6480-95a5-487f-acaa-40a19600a87e] @ 12/22/23 06:15:57.862
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0f6f6480-95a5-487f-acaa-40a19600a87e.17a312cd4e90baef], Reason = [Started], Message = [Started container filler-pod-0f6f6480-95a5-487f-acaa-40a19600a87e] @ 12/22/23 06:15:57.862
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2a4a0b89-59d5-4085-ad83-3c16b8640c0b.17a312cd00f2e53b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-947/filler-pod-2a4a0b89-59d5-4085-ad83-3c16b8640c0b to ip-172-31-3-186.us-east-2.compute.internal] @ 12/22/23 06:15:57.862
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2a4a0b89-59d5-4085-ad83-3c16b8640c0b.17a312cd3736666e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/22/23 06:15:57.862
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2a4a0b89-59d5-4085-ad83-3c16b8640c0b.17a312cd4fd3a708], Reason = [Created], Message = [Created container filler-pod-2a4a0b89-59d5-4085-ad83-3c16b8640c0b] @ 12/22/23 06:15:57.862
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2a4a0b89-59d5-4085-ad83-3c16b8640c0b.17a312cd60034b4d], Reason = [Started], Message = [Started container filler-pod-2a4a0b89-59d5-4085-ad83-3c16b8640c0b] @ 12/22/23 06:15:57.862
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e35154f1-9275-4fa7-b631-cd8a683577ef.17a312cd02d0d6c6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-947/filler-pod-e35154f1-9275-4fa7-b631-cd8a683577ef to ip-172-31-4-122.us-east-2.compute.internal] @ 12/22/23 06:15:57.862
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e35154f1-9275-4fa7-b631-cd8a683577ef.17a312cd315a25e4], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/22/23 06:15:57.862
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e35154f1-9275-4fa7-b631-cd8a683577ef.17a312cd326ece97], Reason = [Created], Message = [Created container filler-pod-e35154f1-9275-4fa7-b631-cd8a683577ef] @ 12/22/23 06:15:57.862
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e35154f1-9275-4fa7-b631-cd8a683577ef.17a312cd3d67c0f7], Reason = [Started], Message = [Started container filler-pod-e35154f1-9275-4fa7-b631-cd8a683577ef] @ 12/22/23 06:15:57.862
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe03df8a-583b-456e-8076-55d39b87a6a0.17a312cd05d924eb], Reason = [Scheduled], Message = [Successfully assigned sched-pred-947/filler-pod-fe03df8a-583b-456e-8076-55d39b87a6a0 to ip-172-31-9-255.us-east-2.compute.internal] @ 12/22/23 06:15:57.863
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe03df8a-583b-456e-8076-55d39b87a6a0.17a312cd37ba76cf], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/22/23 06:15:57.863
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe03df8a-583b-456e-8076-55d39b87a6a0.17a312cd38f51773], Reason = [Created], Message = [Created container filler-pod-fe03df8a-583b-456e-8076-55d39b87a6a0] @ 12/22/23 06:15:57.863
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe03df8a-583b-456e-8076-55d39b87a6a0.17a312cd49c7c038], Reason = [Started], Message = [Started container filler-pod-fe03df8a-583b-456e-8076-55d39b87a6a0] @ 12/22/23 06:15:57.863
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17a312cd7e2458ac], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.] @ 12/22/23 06:15:57.883
  E1222 06:15:58.444191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-7-66.us-east-2.compute.internal @ 12/22/23 06:15:58.874
  STEP: verifying the node doesn't have the label node @ 12/22/23 06:15:58.889
  STEP: removing the label node off the node ip-172-31-9-255.us-east-2.compute.internal @ 12/22/23 06:15:58.899
  STEP: verifying the node doesn't have the label node @ 12/22/23 06:15:58.933
  STEP: removing the label node off the node ip-172-31-3-186.us-east-2.compute.internal @ 12/22/23 06:15:58.944
  STEP: verifying the node doesn't have the label node @ 12/22/23 06:15:59.426
  E1222 06:15:59.444208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-4-122.us-east-2.compute.internal @ 12/22/23 06:15:59.46
  STEP: verifying the node doesn't have the label node @ 12/22/23 06:15:59.553
  Dec 22 06:15:59.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-947" for this suite. @ 12/22/23 06:15:59.585
• [4.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/22/23 06:15:59.622
  Dec 22 06:15:59.622: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/22/23 06:15:59.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:15:59.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:15:59.686
  STEP: Creating two CSIDrivers @ 12/22/23 06:15:59.691
  STEP: Getting "inline-driver-a1f5804b-4df8-4107-baa3-a9d70cac1dc4" & "inline-driver-05f7743f-9892-4457-9ceb-038c30071508" @ 12/22/23 06:15:59.726
  STEP: Patching the CSIDriver "inline-driver-05f7743f-9892-4457-9ceb-038c30071508" @ 12/22/23 06:15:59.732
  STEP: Updating the CSIDriver "inline-driver-05f7743f-9892-4457-9ceb-038c30071508" @ 12/22/23 06:15:59.741
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-5169" @ 12/22/23 06:15:59.749
  STEP: Deleting CSIDriver "inline-driver-a1f5804b-4df8-4107-baa3-a9d70cac1dc4" @ 12/22/23 06:15:59.752
  STEP: Confirm deletion of CSIDriver "inline-driver-a1f5804b-4df8-4107-baa3-a9d70cac1dc4" @ 12/22/23 06:15:59.767
  STEP: Deleting CSIDriver "inline-driver-05f7743f-9892-4457-9ceb-038c30071508" via DeleteCollection @ 12/22/23 06:15:59.772
  STEP: Confirm deletion of CSIDriver "inline-driver-05f7743f-9892-4457-9ceb-038c30071508" @ 12/22/23 06:15:59.779
  Dec 22 06:15:59.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5169" for this suite. @ 12/22/23 06:15:59.787
• [0.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 12/22/23 06:15:59.801
  Dec 22 06:15:59.801: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 06:15:59.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:15:59.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:15:59.829
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/22/23 06:15:59.834
  Dec 22 06:15:59.836: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  E1222 06:16:00.445817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:01.448876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:02.449577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:03.449985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:04.450968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:05.451514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:06.452065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:07.452129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/22/23 06:16:07.676
  Dec 22 06:16:07.677: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  E1222 06:16:08.452943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:09.453736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:16:09.841: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  E1222 06:16:10.454726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:11.455478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:12.455583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:13.462165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:14.462619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:15.463424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:16.463586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:17.463983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:16:17.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-552" for this suite. @ 12/22/23 06:16:17.654
• [17.872 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 12/22/23 06:16:17.673
  Dec 22 06:16:17.673: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename sched-pred @ 12/22/23 06:16:17.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:16:17.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:16:17.707
  Dec 22 06:16:17.711: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 22 06:16:17.732: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 06:16:17.736: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-186.us-east-2.compute.internal before test
  Dec 22 06:16:17.749: INFO: cloud-controller-manager-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:55 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.749: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 06:16:17.749: INFO: etcd-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:39 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.749: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 06:16:17.749: INFO: helm-install-rke2-canal-xtrfp from kube-system started at 2023-12-22 03:42:17 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.749: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:16:17.749: INFO: helm-install-rke2-coredns-qj9lw from kube-system started at 2023-12-22 03:42:17 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.749: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:16:17.749: INFO: helm-install-rke2-ingress-nginx-vf5wl from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.749: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:16:17.749: INFO: helm-install-rke2-metrics-server-5mhqd from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:16:17.750: INFO: helm-install-rke2-snapshot-controller-crd-j4rkx from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:16:17.750: INFO: helm-install-rke2-snapshot-controller-ptzhz from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:16:17.750: INFO: helm-install-rke2-snapshot-validation-webhook-ggrfb from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container helm ready: false, restart count 0
  Dec 22 06:16:17.750: INFO: kube-apiserver-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:48 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: kube-controller-manager-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:53 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: kube-proxy-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:42:14 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: kube-scheduler-ip-172-31-3-186.us-east-2.compute.internal from kube-system started at 2023-12-22 03:41:53 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: rke2-canal-7hv77 from kube-system started at 2023-12-22 03:42:26 +0000 UTC (2 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: rke2-coredns-rke2-coredns-5b8c65d87f-98jdx from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: rke2-coredns-rke2-coredns-autoscaler-945fbd459-7tnsg from kube-system started at 2023-12-22 03:42:40 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container autoscaler ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: rke2-ingress-nginx-controller-8gdc6 from kube-system started at 2023-12-22 03:43:18 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: rke2-metrics-server-544c8c66fc-jp6wb from kube-system started at 2023-12-22 03:43:10 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container metrics-server ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: rke2-snapshot-controller-59cc9cd8f4-mbf24 from kube-system started at 2023-12-22 03:43:10 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container rke2-snapshot-controller ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: rke2-snapshot-validation-webhook-54c5989b65-6wtsx from kube-system started at 2023-12-22 03:43:11 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-c85hz from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 06:16:17.750: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 06:16:17.750: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-122.us-east-2.compute.internal before test
  Dec 22 06:16:17.762: INFO: cloud-controller-manager-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.762: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: etcd-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:19 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.762: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: kube-apiserver-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:43 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.762: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: kube-controller-manager-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.762: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: kube-proxy-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:54 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.762: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: kube-scheduler-ip-172-31-4-122.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:48 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.762: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: rke2-canal-z289m from kube-system started at 2023-12-22 03:44:49 +0000 UTC (2 container statuses recorded)
  Dec 22 06:16:17.762: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: rke2-coredns-rke2-coredns-5b8c65d87f-pdd2b from kube-system started at 2023-12-22 03:45:02 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.762: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: rke2-ingress-nginx-controller-65wsj from kube-system started at 2023-12-22 03:45:02 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.762: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-kz6fs from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 06:16:17.762: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 06:16:17.762: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-7-66.us-east-2.compute.internal before test
  Dec 22 06:16:17.771: INFO: kube-proxy-ip-172-31-7-66.us-east-2.compute.internal from kube-system started at 2023-12-22 03:46:58 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.771: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 06:16:17.771: INFO: rke2-canal-s7h7l from kube-system started at 2023-12-22 03:46:58 +0000 UTC (2 container statuses recorded)
  Dec 22 06:16:17.771: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 06:16:17.772: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 06:16:17.772: INFO: rke2-ingress-nginx-controller-zn7x5 from kube-system started at 2023-12-22 06:00:48 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.772: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 06:16:17.772: INFO: sonobuoy from sonobuoy started at 2023-12-22 04:25:24 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.772: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 22 06:16:17.772: INFO: sonobuoy-e2e-job-3715d743ce064b1f from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 06:16:17.772: INFO: 	Container e2e ready: true, restart count 0
  Dec 22 06:16:17.772: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 06:16:17.772: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-mwv6z from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 06:16:17.772: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 06:16:17.772: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 06:16:17.772: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-9-255.us-east-2.compute.internal before test
  Dec 22 06:16:17.783: INFO: cloud-controller-manager-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.783: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Dec 22 06:16:17.783: INFO: etcd-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:44:39 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.784: INFO: 	Container etcd ready: true, restart count 0
  Dec 22 06:16:17.784: INFO: kube-apiserver-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:08 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.784: INFO: 	Container kube-apiserver ready: true, restart count 0
  Dec 22 06:16:17.784: INFO: kube-controller-manager-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.784: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Dec 22 06:16:17.784: INFO: kube-proxy-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:16 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.784: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 22 06:16:17.785: INFO: kube-scheduler-ip-172-31-9-255.us-east-2.compute.internal from kube-system started at 2023-12-22 03:45:13 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.785: INFO: 	Container kube-scheduler ready: true, restart count 0
  Dec 22 06:16:17.785: INFO: rke2-canal-x86m4 from kube-system started at 2023-12-22 03:45:41 +0000 UTC (2 container statuses recorded)
  Dec 22 06:16:17.785: INFO: 	Container calico-node ready: true, restart count 0
  Dec 22 06:16:17.785: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 22 06:16:17.785: INFO: rke2-ingress-nginx-controller-2pcz6 from kube-system started at 2023-12-22 03:45:51 +0000 UTC (1 container statuses recorded)
  Dec 22 06:16:17.785: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Dec 22 06:16:17.785: INFO: sonobuoy-systemd-logs-daemon-set-981afab191b4443d-49277 from sonobuoy started at 2023-12-22 04:25:27 +0000 UTC (2 container statuses recorded)
  Dec 22 06:16:17.785: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 06:16:17.785: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/22/23 06:16:17.785
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17a312d223654cc2], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 12/22/23 06:16:17.834
  E1222 06:16:18.464033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:16:18.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7066" for this suite. @ 12/22/23 06:16:18.833
• [1.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 12/22/23 06:16:18.853
  Dec 22 06:16:18.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename services @ 12/22/23 06:16:18.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:16:18.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:16:18.886
  Dec 22 06:16:18.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3111" for this suite. @ 12/22/23 06:16:18.904
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 12/22/23 06:16:18.925
  Dec 22 06:16:18.925: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename projected @ 12/22/23 06:16:18.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:16:18.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:16:18.963
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 06:16:18.967
  E1222 06:16:19.464698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:20.464813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:21.465020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:22.465306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 06:16:23.03
  Dec 22 06:16:23.034: INFO: Trying to get logs from node ip-172-31-7-66.us-east-2.compute.internal pod downwardapi-volume-b754e340-4e28-425b-9533-7ebd3cf6a49a container client-container: <nil>
  STEP: delete the pod @ 12/22/23 06:16:23.05
  Dec 22 06:16:23.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5933" for this suite. @ 12/22/23 06:16:23.083
• [4.166 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 12/22/23 06:16:23.093
  Dec 22 06:16:23.093: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 06:16:23.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:16:23.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:16:23.116
  Dec 22 06:16:23.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  E1222 06:16:23.465856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:24.466832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/22/23 06:16:25.337
  Dec 22 06:16:25.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-1620 --namespace=crd-publish-openapi-1620 create -f -'
  Dec 22 06:16:25.444: INFO: stderr: ""
  Dec 22 06:16:25.444: INFO: stdout: "e2e-test-crd-publish-openapi-692-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Dec 22 06:16:25.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-1620 --namespace=crd-publish-openapi-1620 delete e2e-test-crd-publish-openapi-692-crds test-cr'
  E1222 06:16:25.468118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:16:25.522: INFO: stderr: ""
  Dec 22 06:16:25.522: INFO: stdout: "e2e-test-crd-publish-openapi-692-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Dec 22 06:16:25.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-1620 --namespace=crd-publish-openapi-1620 apply -f -'
  Dec 22 06:16:25.618: INFO: stderr: ""
  Dec 22 06:16:25.618: INFO: stdout: "e2e-test-crd-publish-openapi-692-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Dec 22 06:16:25.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-1620 --namespace=crd-publish-openapi-1620 delete e2e-test-crd-publish-openapi-692-crds test-cr'
  Dec 22 06:16:25.719: INFO: stderr: ""
  Dec 22 06:16:25.719: INFO: stdout: "e2e-test-crd-publish-openapi-692-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/22/23 06:16:25.719
  Dec 22 06:16:25.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2632136478 --namespace=crd-publish-openapi-1620 explain e2e-test-crd-publish-openapi-692-crds'
  Dec 22 06:16:25.794: INFO: stderr: ""
  Dec 22 06:16:25.794: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-692-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1222 06:16:26.468564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:27.469215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:16:27.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1620" for this suite. @ 12/22/23 06:16:27.543
• [4.461 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 12/22/23 06:16:27.554
  Dec 22 06:16:27.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename ingress @ 12/22/23 06:16:27.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:16:27.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:16:27.577
  STEP: getting /apis @ 12/22/23 06:16:27.581
  STEP: getting /apis/networking.k8s.io @ 12/22/23 06:16:27.587
  STEP: getting /apis/networking.k8s.iov1 @ 12/22/23 06:16:27.589
  STEP: creating @ 12/22/23 06:16:27.59
  STEP: getting @ 12/22/23 06:16:27.775
  STEP: listing @ 12/22/23 06:16:27.818
  STEP: watching @ 12/22/23 06:16:27.831
  Dec 22 06:16:27.831: INFO: starting watch
  STEP: cluster-wide listing @ 12/22/23 06:16:27.834
  STEP: cluster-wide watching @ 12/22/23 06:16:27.838
  Dec 22 06:16:27.838: INFO: starting watch
  STEP: patching @ 12/22/23 06:16:27.843
  STEP: updating @ 12/22/23 06:16:27.892
  Dec 22 06:16:27.948: INFO: waiting for watch events with expected annotations
  Dec 22 06:16:27.949: INFO: saw patched and updated annotations
  STEP: patching /status @ 12/22/23 06:16:27.949
  STEP: updating /status @ 12/22/23 06:16:27.963
  STEP: get /status @ 12/22/23 06:16:27.995
  STEP: deleting @ 12/22/23 06:16:28.009
  STEP: deleting a collection @ 12/22/23 06:16:28.047
  Dec 22 06:16:28.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7225" for this suite. @ 12/22/23 06:16:28.1
• [0.570 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/22/23 06:16:28.124
  Dec 22 06:16:28.124: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename container-runtime @ 12/22/23 06:16:28.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:16:28.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:16:28.172
  STEP: create the container @ 12/22/23 06:16:28.176
  W1222 06:16:28.186491      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/22/23 06:16:28.186
  E1222 06:16:28.470272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:29.471022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:30.471173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:31.471976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/22/23 06:16:32.211
  STEP: the container should be terminated @ 12/22/23 06:16:32.214
  STEP: the termination message should be set @ 12/22/23 06:16:32.214
  Dec 22 06:16:32.214: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/22/23 06:16:32.214
  Dec 22 06:16:32.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7240" for this suite. @ 12/22/23 06:16:32.247
• [4.130 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 12/22/23 06:16:32.254
  Dec 22 06:16:32.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 06:16:32.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:16:32.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:16:32.277
  STEP: Given a ReplicationController is created @ 12/22/23 06:16:32.279
  STEP: When the matched label of one of its pods change @ 12/22/23 06:16:32.284
  Dec 22 06:16:32.288: INFO: Pod name pod-release: Found 0 pods out of 1
  E1222 06:16:32.472863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:33.472964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:34.473670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:35.473806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 06:16:36.474219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:16:37.293: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/22/23 06:16:37.312
  E1222 06:16:37.475096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 06:16:38.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7938" for this suite. @ 12/22/23 06:16:38.33
• [6.081 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/22/23 06:16:38.336
  Dec 22 06:16:38.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2632136478
  STEP: Building a namespace api object, basename watch @ 12/22/23 06:16:38.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 06:16:38.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 06:16:38.362
  STEP: creating a watch on configmaps @ 12/22/23 06:16:38.365
  STEP: creating a new configmap @ 12/22/23 06:16:38.366
  STEP: modifying the configmap once @ 12/22/23 06:16:38.371
  STEP: closing the watch once it receives two notifications @ 12/22/23 06:16:38.385
  Dec 22 06:16:38.385: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9979  591d4250-aaeb-4138-9571-7e2037c76c00 64420 0 2023-12-22 06:16:38 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-22 06:16:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 06:16:38.385: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9979  591d4250-aaeb-4138-9571-7e2037c76c00 64421 0 2023-12-22 06:16:38 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-22 06:16:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/22/23 06:16:38.386
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/22/23 06:16:38.396
  STEP: deleting the configmap @ 12/22/23 06:16:38.398
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/22/23 06:16:38.404
  Dec 22 06:16:38.404: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9979  591d4250-aaeb-4138-9571-7e2037c76c00 64423 0 2023-12-22 06:16:38 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-22 06:16:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 06:16:38.405: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9979  591d4250-aaeb-4138-9571-7e2037c76c00 64424 0 2023-12-22 06:16:38 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-22 06:16:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 06:16:38.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9979" for this suite. @ 12/22/23 06:16:38.409
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Dec 22 06:16:38.423: INFO: Running AfterSuite actions on node 1
  Dec 22 06:16:38.423: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:621
  E1222 06:16:38.475836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.111 seconds]
------------------------------

Ran 388 of 7407 Specs in 6658.777 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h51m0.599918786s
Test Suite Passed
