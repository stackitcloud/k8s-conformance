  I0131 06:01:15.639289      23 e2e.go:117] Starting e2e run "01c5356d-ad26-4dcb-82ac-b296ae9572e8" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1706680874 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Jan 31 06:01:15.926: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:01:15.928: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jan 31 06:01:15.976: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jan 31 06:01:15.980: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Jan 31 06:01:15.980: INFO: e2e test version: v1.29.0
  Jan 31 06:01:15.982: INFO: kube-apiserver version: v1.29.0-ckp
  Jan 31 06:01:15.982: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:01:15.987: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 01/31/24 06:01:16.171
  Jan 31 06:01:16.171: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/31/24 06:01:16.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:01:16.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:01:16.191
  STEP: create the container to handle the HTTPGet hook request. @ 01/31/24 06:01:16.2
  STEP: create the pod with lifecycle hook @ 01/31/24 06:01:18.224
  STEP: delete the pod with lifecycle hook @ 01/31/24 06:01:20.247
  STEP: check prestop hook @ 01/31/24 06:01:22.268
  Jan 31 06:01:22.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8990" for this suite. @ 01/31/24 06:01:22.313
• [6.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 01/31/24 06:01:22.323
  Jan 31 06:01:22.323: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:01:22.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:01:22.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:01:22.341
  STEP: Creating configMap with name projected-configmap-test-volume-4ab3edf1-2597-49ca-a87e-b3df72016a4b @ 01/31/24 06:01:22.345
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:01:22.349
  STEP: Saw pod success @ 01/31/24 06:01:26.375
  Jan 31 06:01:26.380: INFO: Trying to get logs from node nodea08 pod pod-projected-configmaps-24a1e4df-3b0d-429b-9223-1f7d7b376972 container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:01:26.407
  Jan 31 06:01:26.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5652" for this suite. @ 01/31/24 06:01:26.434
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 01/31/24 06:01:26.44
  Jan 31 06:01:26.440: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename security-context @ 01/31/24 06:01:26.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:01:26.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:01:26.467
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/31/24 06:01:26.472
  STEP: Saw pod success @ 01/31/24 06:01:30.495
  Jan 31 06:01:30.499: INFO: Trying to get logs from node nodea08 pod security-context-c20c6361-fc44-468f-95f8-abb88d5394e9 container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:01:30.508
  Jan 31 06:01:30.524: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3117" for this suite. @ 01/31/24 06:01:30.53
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 01/31/24 06:01:30.537
  Jan 31 06:01:30.537: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename gc @ 01/31/24 06:01:30.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:01:30.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:01:30.559
  STEP: create the rc @ 01/31/24 06:01:30.564
  W0131 06:01:30.569324      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/31/24 06:01:35.574
  STEP: wait for all pods to be garbage collected @ 01/31/24 06:01:35.581
  STEP: Gathering metrics @ 01/31/24 06:01:40.59
  Jan 31 06:01:40.721: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 31 06:01:40.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6488" for this suite. @ 01/31/24 06:01:40.726
• [10.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 01/31/24 06:01:40.733
  Jan 31 06:01:40.733: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/31/24 06:01:40.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:01:40.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:01:40.754
  STEP: Creating 50 configmaps @ 01/31/24 06:01:40.76
  STEP: Creating RC which spawns configmap-volume pods @ 01/31/24 06:01:40.996
  Jan 31 06:01:41.097: INFO: Pod name wrapped-volume-race-b30868a5-d024-44f1-8134-4ca43e37fc0b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/31/24 06:01:41.097
  STEP: Creating RC which spawns configmap-volume pods @ 01/31/24 06:01:43.173
  Jan 31 06:01:43.191: INFO: Pod name wrapped-volume-race-12335278-aa15-43f4-be7e-0bf52aa43cee: Found 0 pods out of 5
  Jan 31 06:01:48.206: INFO: Pod name wrapped-volume-race-12335278-aa15-43f4-be7e-0bf52aa43cee: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/31/24 06:01:48.206
  STEP: Creating RC which spawns configmap-volume pods @ 01/31/24 06:01:48.235
  Jan 31 06:01:48.259: INFO: Pod name wrapped-volume-race-6b027d26-5618-4b6e-8450-78dbc8c56693: Found 0 pods out of 5
  Jan 31 06:01:53.277: INFO: Pod name wrapped-volume-race-6b027d26-5618-4b6e-8450-78dbc8c56693: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/31/24 06:01:53.277
  STEP: deleting ReplicationController wrapped-volume-race-6b027d26-5618-4b6e-8450-78dbc8c56693 in namespace emptydir-wrapper-1370, will wait for the garbage collector to delete the pods @ 01/31/24 06:01:53.3
  Jan 31 06:01:53.363: INFO: Deleting ReplicationController wrapped-volume-race-6b027d26-5618-4b6e-8450-78dbc8c56693 took: 8.462531ms
  Jan 31 06:01:53.464: INFO: Terminating ReplicationController wrapped-volume-race-6b027d26-5618-4b6e-8450-78dbc8c56693 pods took: 100.840763ms
  STEP: deleting ReplicationController wrapped-volume-race-12335278-aa15-43f4-be7e-0bf52aa43cee in namespace emptydir-wrapper-1370, will wait for the garbage collector to delete the pods @ 01/31/24 06:01:54.766
  Jan 31 06:01:54.827: INFO: Deleting ReplicationController wrapped-volume-race-12335278-aa15-43f4-be7e-0bf52aa43cee took: 7.293217ms
  Jan 31 06:01:54.928: INFO: Terminating ReplicationController wrapped-volume-race-12335278-aa15-43f4-be7e-0bf52aa43cee pods took: 100.911174ms
  STEP: deleting ReplicationController wrapped-volume-race-b30868a5-d024-44f1-8134-4ca43e37fc0b in namespace emptydir-wrapper-1370, will wait for the garbage collector to delete the pods @ 01/31/24 06:01:55.93
  Jan 31 06:01:55.994: INFO: Deleting ReplicationController wrapped-volume-race-b30868a5-d024-44f1-8134-4ca43e37fc0b took: 8.631142ms
  Jan 31 06:01:56.095: INFO: Terminating ReplicationController wrapped-volume-race-b30868a5-d024-44f1-8134-4ca43e37fc0b pods took: 100.96523ms
  STEP: Cleaning up the configMaps @ 01/31/24 06:01:57.096
  Jan 31 06:01:57.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1370" for this suite. @ 01/31/24 06:01:57.388
• [16.661 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 01/31/24 06:01:57.396
  Jan 31 06:01:57.396: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename podtemplate @ 01/31/24 06:01:57.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:01:57.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:01:57.414
  Jan 31 06:01:57.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1686" for this suite. @ 01/31/24 06:01:57.454
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 01/31/24 06:01:57.46
  Jan 31 06:01:57.460: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename subjectreview @ 01/31/24 06:01:57.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:01:57.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:01:57.481
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7755" @ 01/31/24 06:01:57.486
  Jan 31 06:01:57.491: INFO: saUsername: "system:serviceaccount:subjectreview-7755:e2e"
  Jan 31 06:01:57.491: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7755"}
  Jan 31 06:01:57.491: INFO: saUID: "8aa37060-bcdb-40ad-8755-1e8e62e7bdc2"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7755:e2e" @ 01/31/24 06:01:57.491
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7755:e2e" @ 01/31/24 06:01:57.492
  Jan 31 06:01:57.495: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7755:e2e" api 'list' configmaps in "subjectreview-7755" namespace @ 01/31/24 06:01:57.495
  Jan 31 06:01:57.498: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7755:e2e" @ 01/31/24 06:01:57.498
  Jan 31 06:01:57.501: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jan 31 06:01:57.501: INFO: LocalSubjectAccessReview has been verified
  Jan 31 06:01:57.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7755" for this suite. @ 01/31/24 06:01:57.51
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 01/31/24 06:01:57.517
  Jan 31 06:01:57.517: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename tables @ 01/31/24 06:01:57.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:01:57.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:01:57.534
  Jan 31 06:01:57.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4244" for this suite. @ 01/31/24 06:01:57.548
• [0.038 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 01/31/24 06:01:57.555
  Jan 31 06:01:57.555: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:01:57.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:01:57.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:01:57.575
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/31/24 06:01:57.58
  STEP: Saw pod success @ 01/31/24 06:02:01.606
  Jan 31 06:02:01.610: INFO: Trying to get logs from node nodea08 pod pod-01bde357-a9db-448e-ba90-19de5918c988 container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:02:01.619
  Jan 31 06:02:01.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3804" for this suite. @ 01/31/24 06:02:01.642
• [4.095 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 01/31/24 06:02:01.65
  Jan 31 06:02:01.650: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename daemonsets @ 01/31/24 06:02:01.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:02:01.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:02:01.667
  Jan 31 06:02:01.686: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 01/31/24 06:02:01.692
  Jan 31 06:02:01.695: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:02:01.695: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 01/31/24 06:02:01.695
  Jan 31 06:02:01.715: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:02:01.715: INFO: Node nodeb29 is running 0 daemon pod, expected 1
  Jan 31 06:02:02.717: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 31 06:02:02.717: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 01/31/24 06:02:02.72
  Jan 31 06:02:02.739: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 31 06:02:02.739: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Jan 31 06:02:03.740: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:02:03.740: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 01/31/24 06:02:03.74
  Jan 31 06:02:03.757: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:02:03.757: INFO: Node nodeb29 is running 0 daemon pod, expected 1
  Jan 31 06:02:04.766: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:02:04.766: INFO: Node nodeb29 is running 0 daemon pod, expected 1
  Jan 31 06:02:05.757: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 31 06:02:05.757: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/31/24 06:02:05.765
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5889, will wait for the garbage collector to delete the pods @ 01/31/24 06:02:05.765
  Jan 31 06:02:05.828: INFO: Deleting DaemonSet.extensions daemon-set took: 7.629454ms
  Jan 31 06:02:05.929: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.514561ms
  Jan 31 06:02:08.733: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:02:08.733: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 31 06:02:08.742: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"142258"},"items":null}

  Jan 31 06:02:08.747: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"142258"},"items":null}

  Jan 31 06:02:08.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5889" for this suite. @ 01/31/24 06:02:08.78
• [7.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 01/31/24 06:02:08.788
  Jan 31 06:02:08.788: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 06:02:08.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:02:08.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:02:08.808
  STEP: Creating configMap with name configmap-test-volume-map-19057ec1-fc9e-458a-90d5-acf676628ce6 @ 01/31/24 06:02:08.813
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:02:08.817
  STEP: Saw pod success @ 01/31/24 06:02:12.842
  Jan 31 06:02:12.845: INFO: Trying to get logs from node nodea08 pod pod-configmaps-64d9ed3d-de0a-4cbe-a052-e9ce90c29c5a container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:02:12.853
  Jan 31 06:02:12.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-563" for this suite. @ 01/31/24 06:02:12.877
• [4.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 01/31/24 06:02:12.883
  Jan 31 06:02:12.883: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 06:02:12.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:02:12.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:02:12.903
  STEP: Creating a ResourceQuota with terminating scope @ 01/31/24 06:02:12.907
  STEP: Ensuring ResourceQuota status is calculated @ 01/31/24 06:02:12.913
  STEP: Creating a ResourceQuota with not terminating scope @ 01/31/24 06:02:14.923
  STEP: Ensuring ResourceQuota status is calculated @ 01/31/24 06:02:14.933
  STEP: Creating a long running pod @ 01/31/24 06:02:16.939
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 01/31/24 06:02:16.958
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 01/31/24 06:02:18.965
  STEP: Deleting the pod @ 01/31/24 06:02:20.971
  STEP: Ensuring resource quota status released the pod usage @ 01/31/24 06:02:20.985
  STEP: Creating a terminating pod @ 01/31/24 06:02:22.99
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 01/31/24 06:02:23.005
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 01/31/24 06:02:25.012
  STEP: Deleting the pod @ 01/31/24 06:02:27.018
  STEP: Ensuring resource quota status released the pod usage @ 01/31/24 06:02:27.029
  Jan 31 06:02:29.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-122" for this suite. @ 01/31/24 06:02:29.043
• [16.168 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 01/31/24 06:02:29.051
  Jan 31 06:02:29.051: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename controllerrevisions @ 01/31/24 06:02:29.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:02:29.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:02:29.078
  STEP: Creating DaemonSet "e2e-nv7vm-daemon-set" @ 01/31/24 06:02:29.104
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/31/24 06:02:29.112
  Jan 31 06:02:29.117: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:02:29.121: INFO: Number of nodes with available pods controlled by daemonset e2e-nv7vm-daemon-set: 0
  Jan 31 06:02:29.121: INFO: Node nodea08 is running 0 daemon pod, expected 1
  Jan 31 06:02:30.119: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:02:30.123: INFO: Number of nodes with available pods controlled by daemonset e2e-nv7vm-daemon-set: 1
  Jan 31 06:02:30.123: INFO: Node nodeb29 is running 0 daemon pod, expected 1
  Jan 31 06:02:31.120: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:02:31.124: INFO: Number of nodes with available pods controlled by daemonset e2e-nv7vm-daemon-set: 2
  Jan 31 06:02:31.124: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-nv7vm-daemon-set
  STEP: Confirm DaemonSet "e2e-nv7vm-daemon-set" successfully created with "daemonset-name=e2e-nv7vm-daemon-set" label @ 01/31/24 06:02:31.129
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-nv7vm-daemon-set" @ 01/31/24 06:02:31.137
  Jan 31 06:02:31.141: INFO: Located ControllerRevision: "e2e-nv7vm-daemon-set-5548bb6499"
  STEP: Patching ControllerRevision "e2e-nv7vm-daemon-set-5548bb6499" @ 01/31/24 06:02:31.145
  Jan 31 06:02:31.152: INFO: e2e-nv7vm-daemon-set-5548bb6499 has been patched
  STEP: Create a new ControllerRevision @ 01/31/24 06:02:31.152
  Jan 31 06:02:31.158: INFO: Created ControllerRevision: e2e-nv7vm-daemon-set-79c9dfdcd7
  STEP: Confirm that there are two ControllerRevisions @ 01/31/24 06:02:31.158
  Jan 31 06:02:31.158: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan 31 06:02:31.163: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-nv7vm-daemon-set-5548bb6499" @ 01/31/24 06:02:31.163
  STEP: Confirm that there is only one ControllerRevision @ 01/31/24 06:02:31.169
  Jan 31 06:02:31.169: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan 31 06:02:31.172: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-nv7vm-daemon-set-79c9dfdcd7" @ 01/31/24 06:02:31.176
  Jan 31 06:02:31.188: INFO: e2e-nv7vm-daemon-set-79c9dfdcd7 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 01/31/24 06:02:31.188
  W0131 06:02:31.194876      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 01/31/24 06:02:31.195
  Jan 31 06:02:31.195: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan 31 06:02:32.195: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan 31 06:02:32.201: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-nv7vm-daemon-set-79c9dfdcd7=updated" @ 01/31/24 06:02:32.201
  STEP: Confirm that there is only one ControllerRevision @ 01/31/24 06:02:32.209
  Jan 31 06:02:32.209: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan 31 06:02:32.213: INFO: Found 1 ControllerRevisions
  Jan 31 06:02:32.216: INFO: ControllerRevision "e2e-nv7vm-daemon-set-688cbbd58" has revision 3
  STEP: Deleting DaemonSet "e2e-nv7vm-daemon-set" @ 01/31/24 06:02:32.22
  STEP: deleting DaemonSet.extensions e2e-nv7vm-daemon-set in namespace controllerrevisions-1257, will wait for the garbage collector to delete the pods @ 01/31/24 06:02:32.22
  Jan 31 06:02:32.281: INFO: Deleting DaemonSet.extensions e2e-nv7vm-daemon-set took: 7.166102ms
  Jan 31 06:02:32.382: INFO: Terminating DaemonSet.extensions e2e-nv7vm-daemon-set pods took: 100.992926ms
  Jan 31 06:02:33.787: INFO: Number of nodes with available pods controlled by daemonset e2e-nv7vm-daemon-set: 0
  Jan 31 06:02:33.787: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-nv7vm-daemon-set
  Jan 31 06:02:33.790: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"142415"},"items":null}

  Jan 31 06:02:33.795: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"142415"},"items":null}

  Jan 31 06:02:33.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1257" for this suite. @ 01/31/24 06:02:33.812
• [4.767 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 01/31/24 06:02:33.818
  Jan 31 06:02:33.818: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubelet-test @ 01/31/24 06:02:33.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:02:33.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:02:33.839
  Jan 31 06:02:35.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7298" for this suite. @ 01/31/24 06:02:35.88
• [2.069 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 01/31/24 06:02:35.888
  Jan 31 06:02:35.888: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:02:35.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:02:35.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:02:35.906
  Jan 31 06:02:35.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-7018 version'
  Jan 31 06:02:36.015: INFO: stderr: ""
  Jan 31 06:02:36.015: INFO: stdout: "Client Version: v1.29.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.0-ckp\n"
  Jan 31 06:02:36.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7018" for this suite. @ 01/31/24 06:02:36.019
• [0.137 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 01/31/24 06:02:36.025
  Jan 31 06:02:36.025: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:02:36.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:02:36.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:02:36.043
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:02:36.048
  STEP: Saw pod success @ 01/31/24 06:02:40.072
  Jan 31 06:02:40.077: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-f03da4fe-06ae-4067-8013-b8cc8bdfcbc1 container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:02:40.086
  Jan 31 06:02:40.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7628" for this suite. @ 01/31/24 06:02:40.109
• [4.090 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 01/31/24 06:02:40.116
  Jan 31 06:02:40.116: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pods @ 01/31/24 06:02:40.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:02:40.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:02:40.139
  STEP: creating a Pod with a static label @ 01/31/24 06:02:40.15
  STEP: watching for Pod to be ready @ 01/31/24 06:02:40.159
  Jan 31 06:02:40.161: INFO: observed Pod pod-test in namespace pods-2972 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jan 31 06:02:40.166: INFO: observed Pod pod-test in namespace pods-2972 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 06:02:40 +0000 UTC  }]
  Jan 31 06:02:40.180: INFO: observed Pod pod-test in namespace pods-2972 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 06:02:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 06:02:40 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 06:02:40 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 06:02:40 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 06:02:40 +0000 UTC  }]
  Jan 31 06:02:40.896: INFO: Found Pod pod-test in namespace pods-2972 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 06:02:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 06:02:40 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 06:02:40 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 06:02:40 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 06:02:40 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 01/31/24 06:02:40.9
  STEP: getting the Pod and ensuring that it's patched @ 01/31/24 06:02:40.912
  STEP: replacing the Pod's status Ready condition to False @ 01/31/24 06:02:40.915
  STEP: check the Pod again to ensure its Ready conditions are False @ 01/31/24 06:02:40.927
  STEP: deleting the Pod via a Collection with a LabelSelector @ 01/31/24 06:02:40.927
  STEP: watching for the Pod to be deleted @ 01/31/24 06:02:40.936
  Jan 31 06:02:40.938: INFO: observed event type MODIFIED
  Jan 31 06:02:42.910: INFO: observed event type MODIFIED
  Jan 31 06:02:43.187: INFO: observed event type MODIFIED
  Jan 31 06:02:43.912: INFO: observed event type MODIFIED
  Jan 31 06:02:43.924: INFO: observed event type MODIFIED
  Jan 31 06:02:43.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2972" for this suite. @ 01/31/24 06:02:43.935
• [3.824 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 01/31/24 06:02:43.941
  Jan 31 06:02:43.941: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 06:02:43.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:02:43.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:02:43.96
  STEP: Discovering how many secrets are in namespace by default @ 01/31/24 06:02:43.965
  STEP: Counting existing ResourceQuota @ 01/31/24 06:02:48.97
  STEP: Creating a ResourceQuota @ 01/31/24 06:02:53.976
  STEP: Ensuring resource quota status is calculated @ 01/31/24 06:02:53.983
  STEP: Creating a Secret @ 01/31/24 06:02:55.989
  STEP: Ensuring resource quota status captures secret creation @ 01/31/24 06:02:56.005
  STEP: Deleting a secret @ 01/31/24 06:02:58.01
  STEP: Ensuring resource quota status released usage @ 01/31/24 06:02:58.016
  Jan 31 06:03:00.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4947" for this suite. @ 01/31/24 06:03:00.029
• [16.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 01/31/24 06:03:00.036
  Jan 31 06:03:00.036: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename svcaccounts @ 01/31/24 06:03:00.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:03:00.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:03:00.058
  Jan 31 06:03:00.083: INFO: created pod pod-service-account-defaultsa
  Jan 31 06:03:00.083: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jan 31 06:03:00.089: INFO: created pod pod-service-account-mountsa
  Jan 31 06:03:00.089: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jan 31 06:03:00.097: INFO: created pod pod-service-account-nomountsa
  Jan 31 06:03:00.097: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jan 31 06:03:00.104: INFO: created pod pod-service-account-defaultsa-mountspec
  Jan 31 06:03:00.105: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jan 31 06:03:00.112: INFO: created pod pod-service-account-mountsa-mountspec
  Jan 31 06:03:00.112: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jan 31 06:03:00.118: INFO: created pod pod-service-account-nomountsa-mountspec
  Jan 31 06:03:00.118: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jan 31 06:03:00.124: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jan 31 06:03:00.124: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jan 31 06:03:00.129: INFO: created pod pod-service-account-mountsa-nomountspec
  Jan 31 06:03:00.129: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jan 31 06:03:00.134: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jan 31 06:03:00.134: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jan 31 06:03:00.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4766" for this suite. @ 01/31/24 06:03:00.14
• [0.113 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 01/31/24 06:03:00.15
  Jan 31 06:03:00.150: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:03:00.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:03:00.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:03:00.169
  STEP: Creating a pod to test downward api env vars @ 01/31/24 06:03:00.174
  STEP: Saw pod success @ 01/31/24 06:03:04.2
  Jan 31 06:03:04.204: INFO: Trying to get logs from node nodea08 pod downward-api-d096208d-acef-4c9b-a707-664473504ece container dapi-container: <nil>
  STEP: delete the pod @ 01/31/24 06:03:04.215
  Jan 31 06:03:04.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1115" for this suite. @ 01/31/24 06:03:04.235
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 01/31/24 06:03:04.242
  Jan 31 06:03:04.242: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename runtimeclass @ 01/31/24 06:03:04.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:03:04.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:03:04.262
  STEP: getting /apis @ 01/31/24 06:03:04.267
  STEP: getting /apis/node.k8s.io @ 01/31/24 06:03:04.275
  STEP: getting /apis/node.k8s.io/v1 @ 01/31/24 06:03:04.277
  STEP: creating @ 01/31/24 06:03:04.279
  STEP: watching @ 01/31/24 06:03:04.295
  Jan 31 06:03:04.295: INFO: starting watch
  STEP: getting @ 01/31/24 06:03:04.303
  STEP: listing @ 01/31/24 06:03:04.306
  STEP: patching @ 01/31/24 06:03:04.31
  STEP: updating @ 01/31/24 06:03:04.315
  Jan 31 06:03:04.320: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 01/31/24 06:03:04.32
  STEP: deleting a collection @ 01/31/24 06:03:04.331
  Jan 31 06:03:04.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7631" for this suite. @ 01/31/24 06:03:04.349
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 01/31/24 06:03:04.356
  Jan 31 06:03:04.356: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pod-network-test @ 01/31/24 06:03:04.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:03:04.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:03:04.376
  STEP: Performing setup for networking test in namespace pod-network-test-1176 @ 01/31/24 06:03:04.381
  STEP: creating a selector @ 01/31/24 06:03:04.381
  STEP: Creating the service pods in kubernetes @ 01/31/24 06:03:04.381
  Jan 31 06:03:04.381: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/31/24 06:03:26.494
  Jan 31 06:03:28.514: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan 31 06:03:28.515: INFO: Breadth first check of 10.244.1.26 on host 192.168.100.28...
  Jan 31 06:03:28.519: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.27:9080/dial?request=hostname&protocol=http&host=10.244.1.26&port=8083&tries=1'] Namespace:pod-network-test-1176 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:03:28.519: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:03:28.520: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:03:28.520: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1176/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.27%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.26%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan 31 06:03:28.643: INFO: Waiting for responses: map[]
  Jan 31 06:03:28.644: INFO: reached 10.244.1.26 after 0/1 tries
  Jan 31 06:03:28.644: INFO: Breadth first check of 10.244.2.12 on host 192.168.100.129...
  Jan 31 06:03:28.652: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.27:9080/dial?request=hostname&protocol=http&host=10.244.2.12&port=8083&tries=1'] Namespace:pod-network-test-1176 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:03:28.653: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:03:28.654: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:03:28.654: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1176/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.27%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.12%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan 31 06:03:33.771: INFO: Waiting for responses: map[netserver-1:{}]
  Jan 31 06:03:35.771: INFO: 
  Output of kubectl describe pod pod-network-test-1176/netserver-0:

  Jan 31 06:03:35.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=pod-network-test-1176 describe pod netserver-0 --namespace=pod-network-test-1176'
  Jan 31 06:03:35.906: INFO: stderr: ""
  Jan 31 06:03:35.906: INFO: stdout: "Name:             netserver-0\nNamespace:        pod-network-test-1176\nPriority:         0\nService Account:  default\nNode:             nodea08/192.168.100.28\nStart Time:       Wed, 31 Jan 2024 06:03:04 +0000\nLabels:           selector-b7cbcf16-1d00-4fb9-84de-895982e8bf46=true\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.26\nIPs:\n  IP:  10.244.1.26\nContainers:\n  webserver:\n    Container ID:  containerd://edb40c9aaa4c9dc98afb9076d936361e6faad4c483f097478e2fa77bf7882bb9\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:      registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Wed, 31 Jan 2024 06:03:05 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mswt7 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-mswt7:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=nodea08\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  31s   default-scheduler  Successfully assigned pod-network-test-1176/netserver-0 to nodea08\n  Normal  Pulled     31s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    31s   kubelet            Created container webserver\n  Normal  Started    30s   kubelet            Started container webserver\n"
  Jan 31 06:03:35.906: INFO: Name:             netserver-0
  Namespace:        pod-network-test-1176
  Priority:         0
  Service Account:  default
  Node:             nodea08/192.168.100.28
  Start Time:       Wed, 31 Jan 2024 06:03:04 +0000
  Labels:           selector-b7cbcf16-1d00-4fb9-84de-895982e8bf46=true
  Annotations:      <none>
  Status:           Running
  IP:               10.244.1.26
  IPs:
    IP:  10.244.1.26
  Containers:
    webserver:
      Container ID:  containerd://edb40c9aaa4c9dc98afb9076d936361e6faad4c483f097478e2fa77bf7882bb9
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.45
      Image ID:      registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Wed, 31 Jan 2024 06:03:05 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mswt7 (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-mswt7:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=nodea08
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  31s   default-scheduler  Successfully assigned pod-network-test-1176/netserver-0 to nodea08
    Normal  Pulled     31s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.45" already present on machine
    Normal  Created    31s   kubelet            Created container webserver
    Normal  Started    30s   kubelet            Started container webserver

  Jan 31 06:03:35.907: INFO: 
  Output of kubectl describe pod pod-network-test-1176/netserver-1:

  Jan 31 06:03:35.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=pod-network-test-1176 describe pod netserver-1 --namespace=pod-network-test-1176'
  Jan 31 06:03:36.022: INFO: stderr: ""
  Jan 31 06:03:36.022: INFO: stdout: "Name:             netserver-1\nNamespace:        pod-network-test-1176\nPriority:         0\nService Account:  default\nNode:             nodeb29/192.168.100.129\nStart Time:       Wed, 31 Jan 2024 06:03:04 +0000\nLabels:           selector-b7cbcf16-1d00-4fb9-84de-895982e8bf46=true\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.2.12\nIPs:\n  IP:  10.244.2.12\nContainers:\n  webserver:\n    Container ID:  containerd://94f9b5b777a6f5e4a6ecdbe80952dc7c5c4da2be3db8f0fa03551499e80de244\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:      registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Wed, 31 Jan 2024 06:03:05 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-bfsxc (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-bfsxc:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=nodeb29\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  32s   default-scheduler  Successfully assigned pod-network-test-1176/netserver-1 to nodeb29\n  Normal  Pulled     32s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    32s   kubelet            Created container webserver\n  Normal  Started    31s   kubelet            Started container webserver\n"
  Jan 31 06:03:36.022: INFO: Name:             netserver-1
  Namespace:        pod-network-test-1176
  Priority:         0
  Service Account:  default
  Node:             nodeb29/192.168.100.129
  Start Time:       Wed, 31 Jan 2024 06:03:04 +0000
  Labels:           selector-b7cbcf16-1d00-4fb9-84de-895982e8bf46=true
  Annotations:      <none>
  Status:           Running
  IP:               10.244.2.12
  IPs:
    IP:  10.244.2.12
  Containers:
    webserver:
      Container ID:  containerd://94f9b5b777a6f5e4a6ecdbe80952dc7c5c4da2be3db8f0fa03551499e80de244
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.45
      Image ID:      registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Wed, 31 Jan 2024 06:03:05 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-bfsxc (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-bfsxc:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=nodeb29
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  32s   default-scheduler  Successfully assigned pod-network-test-1176/netserver-1 to nodeb29
    Normal  Pulled     32s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.45" already present on machine
    Normal  Created    32s   kubelet            Created container webserver
    Normal  Started    31s   kubelet            Started container webserver

  Jan 31 06:03:36.023: INFO: encountered error during dial (did not find expected responses... 
  Tries 1
  Command curl -g -q -s 'http://10.244.1.27:9080/dial?request=hostname&protocol=http&host=10.244.2.12&port=8083&tries=1'
  retrieved map[]
  expected map[netserver-1:{}])
  Jan 31 06:03:36.023: INFO: ...failed...will try again in next pass
  Jan 31 06:03:36.023: INFO: Going to retry 1 out of 2 pods....
  Jan 31 06:03:36.023: INFO: Doublechecking 1 pods in host 192.168.100.129 which weren't seen the first time.
  Jan 31 06:03:36.023: INFO: Now attempting to probe pod [[[ 10.244.2.12 ]]]
  Jan 31 06:03:36.027: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.27:9080/dial?request=hostname&protocol=http&host=10.244.2.12&port=8083&tries=1'] Namespace:pod-network-test-1176 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:03:36.027: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:03:36.029: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:03:36.029: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1176/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.27%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.12%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan 31 06:03:36.147: INFO: Waiting for responses: map[]
  Jan 31 06:03:36.147: INFO: reached 10.244.2.12 after 0/34 tries
  Jan 31 06:03:36.147: INFO: Was able to reach 10.244.2.12 on 192.168.100.129 
  Jan 31 06:03:36.147: INFO: ... Done probing pod [[[ 10.244.2.12 ]]]
  Jan 31 06:03:36.147: INFO: succeeded at polling 2 out of 2 connections
  Jan 31 06:03:36.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1176" for this suite. @ 01/31/24 06:03:36.154
• [31.806 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 01/31/24 06:03:36.163
  Jan 31 06:03:36.163: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sysctl @ 01/31/24 06:03:36.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:03:36.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:03:36.184
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 01/31/24 06:03:36.188
  STEP: Watching for error events or started pod @ 01/31/24 06:03:36.196
  STEP: Waiting for pod completion @ 01/31/24 06:03:38.204
  STEP: Checking that the pod succeeded @ 01/31/24 06:03:40.217
  STEP: Getting logs from the pod @ 01/31/24 06:03:40.217
  STEP: Checking that the sysctl is actually updated @ 01/31/24 06:03:40.226
  Jan 31 06:03:40.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5409" for this suite. @ 01/31/24 06:03:40.232
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 01/31/24 06:03:40.242
  Jan 31 06:03:40.242: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:03:40.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:03:40.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:03:40.261
  Jan 31 06:03:40.266: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-2630 create -f -'
  Jan 31 06:03:40.467: INFO: stderr: ""
  Jan 31 06:03:40.467: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jan 31 06:03:40.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-2630 create -f -'
  Jan 31 06:03:40.671: INFO: stderr: ""
  Jan 31 06:03:40.671: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/31/24 06:03:40.671
  Jan 31 06:03:41.676: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 31 06:03:41.676: INFO: Found 0 / 1
  Jan 31 06:03:42.676: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 31 06:03:42.676: INFO: Found 1 / 1
  Jan 31 06:03:42.676: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jan 31 06:03:42.681: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 31 06:03:42.681: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan 31 06:03:42.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-2630 describe pod agnhost-primary-dptbg'
  Jan 31 06:03:42.789: INFO: stderr: ""
  Jan 31 06:03:42.789: INFO: stdout: "Name:             agnhost-primary-dptbg\nNamespace:        kubectl-2630\nPriority:         0\nService Account:  default\nNode:             nodeb29/192.168.100.129\nStart Time:       Wed, 31 Jan 2024 06:03:40 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.2.13\nIPs:\n  IP:           10.244.2.13\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://f23830a9fcc82e1a6dbc5e24fd38d9912de3c2c6a794a32a6329580e4e178eb9\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 31 Jan 2024 06:03:41 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-7tqc7 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-7tqc7:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-2630/agnhost-primary-dptbg to nodeb29\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Jan 31 06:03:42.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-2630 describe rc agnhost-primary'
  Jan 31 06:03:42.900: INFO: stderr: ""
  Jan 31 06:03:42.900: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2630\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-dptbg\n"
  Jan 31 06:03:42.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-2630 describe service agnhost-primary'
  Jan 31 06:03:43.003: INFO: stderr: ""
  Jan 31 06:03:43.003: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2630\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.109.40.109\nIPs:               10.109.40.109\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.2.13:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jan 31 06:03:43.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-2630 describe node nodea08'
  Jan 31 06:03:43.139: INFO: stderr: ""
  Jan 31 06:03:43.139: INFO: stdout: "Name:               nodea08\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=nodea08\n                    kubernetes.io/os=linux\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"5a:03:e4:b4:48:9b\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.100.28\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 30 Jan 2024 08:42:17 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  nodea08\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 31 Jan 2024 06:03:39 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 30 Jan 2024 10:24:18 +0000   Tue, 30 Jan 2024 10:24:18 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Wed, 31 Jan 2024 05:59:19 +0000   Wed, 31 Jan 2024 04:06:57 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 31 Jan 2024 05:59:19 +0000   Wed, 31 Jan 2024 04:06:57 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 31 Jan 2024 05:59:19 +0000   Wed, 31 Jan 2024 04:06:57 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 31 Jan 2024 05:59:19 +0000   Wed, 31 Jan 2024 04:06:57 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.100.28\n  Hostname:    nodea08\nCapacity:\n  cpu:                    16\n  ephemeral-storage:      162406320Ki\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 65841680Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    16\n  ephemeral-storage:      149673664265\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 65739280Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 e6ac3d3104d049c5a03abc003db64424\n  System UUID:                e6ac3d31-04d0-49c5-a03a-bc003db64424\n  Boot ID:                    15c7faf7-f2bd-43c2-8b23-a7c7ad39ab86\n  Kernel Version:             5.15.0-87-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.18\n  Kubelet Version:            v1.29.0-ckp\n  Kube-Proxy Version:         v1.29.0-ckp\nPodCIDR:                      10.244.1.0/24\nPodCIDRs:                     10.244.1.0/24\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-flannel                kube-flannel-ds-kh6sw                                      100m (0%)     0 (0%)      50Mi (0%)        0 (0%)         19h\n  kube-system                 kube-proxy-sn68b                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         21h\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         2m30s\n  sonobuoy                    sonobuoy-e2e-job-057bc96fa8de4553                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         2m29s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-b358b7ceaa5f4c01-zmssj    0 (0%)        0 (0%)      0 (0%)           0 (0%)         2m29s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests   Limits\n  --------               --------   ------\n  cpu                    100m (0%)  0 (0%)\n  memory                 50Mi (0%)  0 (0%)\n  ephemeral-storage      0 (0%)     0 (0%)\n  hugepages-1Gi          0 (0%)     0 (0%)\n  hugepages-2Mi          0 (0%)     0 (0%)\n  example.com/fakecpu    0          0\n  scheduling.k8s.io/foo  0          0\nEvents:                  <none>\n"
  Jan 31 06:03:43.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-2630 describe namespace kubectl-2630'
  Jan 31 06:03:43.238: INFO: stderr: ""
  Jan 31 06:03:43.238: INFO: stdout: "Name:         kubectl-2630\nLabels:       e2e-framework=kubectl\n              e2e-run=01c5356d-ad26-4dcb-82ac-b296ae9572e8\n              kubernetes.io/metadata.name=kubectl-2630\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jan 31 06:03:43.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2630" for this suite. @ 01/31/24 06:03:43.244
• [3.008 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 01/31/24 06:03:43.25
  Jan 31 06:03:43.250: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename security-context @ 01/31/24 06:03:43.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:03:43.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:03:43.27
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/31/24 06:03:43.274
  STEP: Saw pod success @ 01/31/24 06:03:47.298
  Jan 31 06:03:47.303: INFO: Trying to get logs from node nodea08 pod security-context-8a4082b7-6170-4ba7-91a0-63fb858c1c13 container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:03:47.311
  Jan 31 06:03:47.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4135" for this suite. @ 01/31/24 06:03:47.336
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 01/31/24 06:03:47.344
  Jan 31 06:03:47.344: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replicaset @ 01/31/24 06:03:47.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:03:47.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:03:47.363
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 01/31/24 06:03:47.368
  STEP: When a replicaset with a matching selector is created @ 01/31/24 06:03:49.392
  STEP: Then the orphan pod is adopted @ 01/31/24 06:03:49.4
  STEP: When the matched label of one of its pods change @ 01/31/24 06:03:50.411
  Jan 31 06:03:50.416: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/31/24 06:03:50.43
  Jan 31 06:03:51.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4911" for this suite. @ 01/31/24 06:03:51.447
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 01/31/24 06:03:51.456
  Jan 31 06:03:51.456: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:03:51.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:03:51.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:03:51.477
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/31/24 06:03:51.481
  STEP: Saw pod success @ 01/31/24 06:03:55.505
  Jan 31 06:03:55.510: INFO: Trying to get logs from node nodeb29 pod pod-a2d19fe2-38b4-4923-b118-69760bf8851f container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:03:55.535
  Jan 31 06:03:55.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8921" for this suite. @ 01/31/24 06:03:55.556
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 01/31/24 06:03:55.561
  Jan 31 06:03:55.561: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:03:55.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:03:55.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:03:55.581
  STEP: Creating Pod @ 01/31/24 06:03:55.586
  STEP: Reading file content from the nginx-container @ 01/31/24 06:03:57.605
  Jan 31 06:03:57.605: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8064 PodName:pod-sharedvolume-94277fa8-27ec-4477-8011-c1192011ad2d ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:03:57.605: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:03:57.607: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:03:57.607: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-8064/pods/pod-sharedvolume-94277fa8-27ec-4477-8011-c1192011ad2d/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jan 31 06:03:57.742: INFO: Exec stderr: ""
  Jan 31 06:03:57.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8064" for this suite. @ 01/31/24 06:03:57.749
• [2.196 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 01/31/24 06:03:57.759
  Jan 31 06:03:57.759: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename deployment @ 01/31/24 06:03:57.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:03:57.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:03:57.78
  Jan 31 06:03:57.784: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jan 31 06:03:57.793: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jan 31 06:04:02.799: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/31/24 06:04:02.799
  Jan 31 06:04:02.799: INFO: Creating deployment "test-rolling-update-deployment"
  Jan 31 06:04:02.807: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jan 31 06:04:02.815: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Jan 31 06:04:04.824: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jan 31 06:04:04.827: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jan 31 06:04:04.839: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4683",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fb2e517-9179-4bea-800d-256efcfd7475",
      ResourceVersion: (string) (len=6) "143131",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842277842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 31 06:04:04.847: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4683",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df08e7c3-a912-47ee-a9c4-5ae11ef3ac5d",
      ResourceVersion: (string) (len=6) "143118",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842277842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "4fb2e517-9179-4bea-800d-256efcfd7475",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 62 32 65 35  31 37 2d 39 31 37 39 2d  |\"4fb2e517-9179-|
              00000120  34 62 65 61 2d 38 30 30  64 2d 32 35 36 65 66 63  |4bea-800d-256efc|
              00000130  66 64 37 34 37 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fd7475\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 06:04:04.849: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jan 31 06:04:04.849: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4683",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f40374c-22de-478a-b1d2-85fea580adbe",
      ResourceVersion: (string) (len=6) "143130",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842277837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "4fb2e517-9179-4bea-800d-256efcfd7475",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 34 66 62 32 65 35 31  |"uid\":\"4fb2e51|
              000000b0  37 2d 39 31 37 39 2d 34  62 65 61 2d 38 30 30 64  |7-9179-4bea-800d|
              000000c0  2d 32 35 36 65 66 63 66  64 37 34 37 35 5c 22 7d  |-256efcfd7475\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 06:04:04.856: INFO: Pod "test-rolling-update-deployment-7f5c55c64-qfht7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-qfht7",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-4683",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b2676c3-2a43-4356-aec1-40848724aa0b",
      ResourceVersion: (string) (len=6) "143117",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842277842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "df08e7c3-a912-47ee-a9c4-5ae11ef3ac5d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 66  30 38 65 37 63 33 2d 61  |d\":\"df08e7c3-a|
              00000090  39 31 32 2d 34 37 65 65  2d 61 39 63 34 2d 35 61  |912-47ee-a9c4-5a|
              000000a0  65 31 31 65 66 33 61 63  35 64 5c 22 7d 22 3a 7b  |e11ef3ac5d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  33 5c 22 7d 22 3a 7b 22  |.244.1.33\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zljjn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zljjn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) (len=11) "10.244.1.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842277842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842277843,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://f07944d39f149c33282b9a22f497a66016ed150b96e20ef3ec8d03e7ae95c324",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 06:04:04.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4683" for this suite. @ 01/31/24 06:04:04.866
• [7.113 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 01/31/24 06:04:04.872
  Jan 31 06:04:04.872: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:04:04.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:04:04.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:04:04.893
  STEP: creating a collection of services @ 01/31/24 06:04:04.898
  Jan 31 06:04:04.898: INFO: Creating e2e-svc-a-4crjw
  Jan 31 06:04:04.909: INFO: Creating e2e-svc-b-qb4dn
  Jan 31 06:04:04.927: INFO: Creating e2e-svc-c-px4k9
  STEP: deleting service collection @ 01/31/24 06:04:04.944
  Jan 31 06:04:04.976: INFO: Collection of services has been deleted
  Jan 31 06:04:04.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-777" for this suite. @ 01/31/24 06:04:04.98
• [0.114 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 01/31/24 06:04:04.986
  Jan 31 06:04:04.986: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/31/24 06:04:04.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:04:05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:04:05.005
  STEP: set up a multi version CRD @ 01/31/24 06:04:05.01
  Jan 31 06:04:05.011: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: mark a version not serverd @ 01/31/24 06:04:08.692
  STEP: check the unserved version gets removed @ 01/31/24 06:04:08.72
  STEP: check the other version is not changed @ 01/31/24 06:04:09.6
  Jan 31 06:04:12.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7726" for this suite. @ 01/31/24 06:04:12.535
• [7.555 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 01/31/24 06:04:12.543
  Jan 31 06:04:12.543: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/31/24 06:04:12.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:04:12.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:04:12.566
  STEP: create the container to handle the HTTPGet hook request. @ 01/31/24 06:04:12.575
  STEP: create the pod with lifecycle hook @ 01/31/24 06:04:14.6
  STEP: check poststart hook @ 01/31/24 06:04:16.621
  STEP: delete the pod with lifecycle hook @ 01/31/24 06:04:16.63
  Jan 31 06:04:18.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7309" for this suite. @ 01/31/24 06:04:18.661
• [6.124 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 01/31/24 06:04:18.668
  Jan 31 06:04:18.668: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename init-container @ 01/31/24 06:04:18.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:04:18.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:04:18.689
  STEP: creating the pod @ 01/31/24 06:04:18.694
  Jan 31 06:04:18.694: INFO: PodSpec: initContainers in spec.initContainers
  Jan 31 06:04:22.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8497" for this suite. @ 01/31/24 06:04:22.614
• [3.953 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 01/31/24 06:04:22.622
  Jan 31 06:04:22.622: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pod-network-test @ 01/31/24 06:04:22.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:04:22.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:04:22.644
  STEP: Performing setup for networking test in namespace pod-network-test-4628 @ 01/31/24 06:04:22.648
  STEP: creating a selector @ 01/31/24 06:04:22.648
  STEP: Creating the service pods in kubernetes @ 01/31/24 06:04:22.648
  Jan 31 06:04:22.648: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/31/24 06:04:34.728
  Jan 31 06:04:36.765: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan 31 06:04:36.765: INFO: Going to poll 10.244.1.36 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Jan 31 06:04:36.768: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.36:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4628 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:04:36.768: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:04:36.769: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:04:36.770: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4628/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.36%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan 31 06:04:36.872: INFO: Found all 1 expected endpoints: [netserver-0]
  Jan 31 06:04:36.872: INFO: Going to poll 10.244.2.17 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Jan 31 06:04:36.876: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.17:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4628 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:04:36.877: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:04:36.878: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:04:36.878: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4628/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.17%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan 31 06:04:36.985: INFO: Found all 1 expected endpoints: [netserver-1]
  Jan 31 06:04:36.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4628" for this suite. @ 01/31/24 06:04:36.993
• [14.377 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 01/31/24 06:04:36.999
  Jan 31 06:04:36.999: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:04:37.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:04:37.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:04:37.023
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:04:37.029
  STEP: Saw pod success @ 01/31/24 06:04:41.055
  Jan 31 06:04:41.060: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-9e1785d7-379b-441e-acc8-86fc7148622b container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:04:41.069
  Jan 31 06:04:41.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9215" for this suite. @ 01/31/24 06:04:41.093
• [4.099 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 01/31/24 06:04:41.099
  Jan 31 06:04:41.099: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:04:41.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:04:41.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:04:41.117
  STEP: create deployment with httpd image @ 01/31/24 06:04:41.121
  Jan 31 06:04:41.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8455 create -f -'
  Jan 31 06:04:41.273: INFO: stderr: ""
  Jan 31 06:04:41.273: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 01/31/24 06:04:41.273
  Jan 31 06:04:41.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8455 diff -f -'
  Jan 31 06:04:41.457: INFO: rc: 1
  Jan 31 06:04:41.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8455 delete -f -'
  Jan 31 06:04:41.547: INFO: stderr: ""
  Jan 31 06:04:41.547: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jan 31 06:04:41.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8455" for this suite. @ 01/31/24 06:04:41.554
• [0.460 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 01/31/24 06:04:41.559
  Jan 31 06:04:41.559: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename runtimeclass @ 01/31/24 06:04:41.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:04:41.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:04:41.6
  Jan 31 06:04:43.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1605" for this suite. @ 01/31/24 06:04:43.638
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 01/31/24 06:04:43.646
  Jan 31 06:04:43.646: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename ingress @ 01/31/24 06:04:43.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:04:43.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:04:43.665
  STEP: getting /apis @ 01/31/24 06:04:43.67
  STEP: getting /apis/networking.k8s.io @ 01/31/24 06:04:43.676
  STEP: getting /apis/networking.k8s.iov1 @ 01/31/24 06:04:43.678
  STEP: creating @ 01/31/24 06:04:43.68
  STEP: getting @ 01/31/24 06:04:43.699
  STEP: listing @ 01/31/24 06:04:43.702
  STEP: watching @ 01/31/24 06:04:43.706
  Jan 31 06:04:43.706: INFO: starting watch
  STEP: cluster-wide listing @ 01/31/24 06:04:43.709
  STEP: cluster-wide watching @ 01/31/24 06:04:43.712
  Jan 31 06:04:43.712: INFO: starting watch
  STEP: patching @ 01/31/24 06:04:43.714
  STEP: updating @ 01/31/24 06:04:43.72
  Jan 31 06:04:43.729: INFO: waiting for watch events with expected annotations
  Jan 31 06:04:43.730: INFO: saw patched and updated annotations
  STEP: patching /status @ 01/31/24 06:04:43.73
  STEP: updating /status @ 01/31/24 06:04:43.739
  STEP: get /status @ 01/31/24 06:04:43.748
  STEP: deleting @ 01/31/24 06:04:43.752
  STEP: deleting a collection @ 01/31/24 06:04:43.764
  Jan 31 06:04:43.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3816" for this suite. @ 01/31/24 06:04:43.783
• [0.143 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 01/31/24 06:04:43.789
  Jan 31 06:04:43.789: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:04:43.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:04:43.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:04:43.814
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:04:43.819
  STEP: Saw pod success @ 01/31/24 06:04:47.844
  Jan 31 06:04:47.848: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-f2176fe6-acbb-4050-bce9-378211cdc44d container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:04:47.858
  Jan 31 06:04:47.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3665" for this suite. @ 01/31/24 06:04:47.88
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 01/31/24 06:04:47.887
  Jan 31 06:04:47.887: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename subpath @ 01/31/24 06:04:47.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:04:47.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:04:47.907
  STEP: Setting up data @ 01/31/24 06:04:47.912
  STEP: Creating pod pod-subpath-test-projected-9hs4 @ 01/31/24 06:04:47.922
  STEP: Creating a pod to test atomic-volume-subpath @ 01/31/24 06:04:47.922
  STEP: Saw pod success @ 01/31/24 06:05:12.012
  Jan 31 06:05:12.016: INFO: Trying to get logs from node nodea08 pod pod-subpath-test-projected-9hs4 container test-container-subpath-projected-9hs4: <nil>
  STEP: delete the pod @ 01/31/24 06:05:12.025
  STEP: Deleting pod pod-subpath-test-projected-9hs4 @ 01/31/24 06:05:12.04
  Jan 31 06:05:12.040: INFO: Deleting pod "pod-subpath-test-projected-9hs4" in namespace "subpath-2355"
  Jan 31 06:05:12.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2355" for this suite. @ 01/31/24 06:05:12.049
• [24.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 01/31/24 06:05:12.056
  Jan 31 06:05:12.056: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 06:05:12.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:05:12.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:05:12.076
  STEP: Setting up server cert @ 01/31/24 06:05:12.101
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 06:05:12.547
  STEP: Deploying the webhook pod @ 01/31/24 06:05:12.558
  STEP: Wait for the deployment to be ready @ 01/31/24 06:05:12.571
  Jan 31 06:05:12.581: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/31/24 06:05:14.597
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 06:05:14.614
  Jan 31 06:05:15.615: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/31/24 06:05:15.626
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/31/24 06:05:15.657
  STEP: Creating a dummy validating-webhook-configuration object @ 01/31/24 06:05:15.679
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 01/31/24 06:05:15.693
  STEP: Creating a dummy mutating-webhook-configuration object @ 01/31/24 06:05:15.7
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 01/31/24 06:05:15.713
  Jan 31 06:05:15.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8709" for this suite. @ 01/31/24 06:05:15.773
  STEP: Destroying namespace "webhook-markers-5814" for this suite. @ 01/31/24 06:05:15.778
• [3.728 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 01/31/24 06:05:15.784
  Jan 31 06:05:15.784: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:05:15.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:05:15.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:05:15.805
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:05:15.81
  STEP: Saw pod success @ 01/31/24 06:05:19.836
  Jan 31 06:05:19.840: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-a7afac2e-1fe2-421b-98d5-78f5f5537cdc container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:05:19.85
  Jan 31 06:05:19.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5077" for this suite. @ 01/31/24 06:05:19.875
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 01/31/24 06:05:19.883
  Jan 31 06:05:19.883: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubelet-test @ 01/31/24 06:05:19.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:05:19.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:05:19.904
  Jan 31 06:05:21.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4274" for this suite. @ 01/31/24 06:05:21.949
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 01/31/24 06:05:21.957
  Jan 31 06:05:21.957: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename deployment @ 01/31/24 06:05:21.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:05:21.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:05:21.98
  Jan 31 06:05:21.985: INFO: Creating simple deployment test-new-deployment
  Jan 31 06:05:22.000: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 01/31/24 06:05:24.019
  STEP: updating a scale subresource @ 01/31/24 06:05:24.024
  STEP: verifying the deployment Spec.Replicas was modified @ 01/31/24 06:05:24.034
  STEP: Patch a scale subresource @ 01/31/24 06:05:24.038
  Jan 31 06:05:24.059: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4580",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e65044b8-eebf-4e49-9e86-1cd367879647",
      ResourceVersion: (string) (len=6) "143738",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842277921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 31 06:05:24.067: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4580",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5da14c9b-9252-436a-820d-f0137a59c56e",
      ResourceVersion: (string) (len=6) "143744",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842277921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "e65044b8-eebf-4e49-9e86-1cd367879647",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 36 35 30 34 34  62 38 2d 65 65 62 66 2d  |\"e65044b8-eebf-|
              00000120  34 65 34 39 2d 39 65 38  36 2d 31 63 64 33 36 37  |4e49-9e86-1cd367|
              00000130  38 37 39 36 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |879647\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 06:05:24.076: INFO: Pod "test-new-deployment-557759b7c7-ct4vf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-ct4vf",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4580",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbedd6fb-c861-423f-b892-a1dde013cccb",
      ResourceVersion: (string) (len=6) "143733",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842277921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5da14c9b-9252-436a-820d-f0137a59c56e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  61 31 34 63 39 62 2d 39  |d\":\"5da14c9b-9|
              00000090  32 35 32 2d 34 33 36 61  2d 38 32 30 64 2d 66 30  |252-436a-820d-f0|
              000000a0  31 33 37 61 35 39 63 35  36 65 5c 22 7d 22 3a 7b  |137a59c56e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 34  35 5c 22 7d 22 3a 7b 22  |.244.1.45\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zcx8f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zcx8f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) (len=11) "10.244.1.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842277922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842277922,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e365627645c68bc4924c545edc45189c41f0475cb6763f3a80cfac27679bb9df",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 06:05:24.081: INFO: Pod "test-new-deployment-557759b7c7-zsmtc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-zsmtc",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4580",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a27f791-f9ce-473e-a0ae-d99c1c2b1574",
      ResourceVersion: (string) (len=6) "143747",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842277924,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5da14c9b-9252-436a-820d-f0137a59c56e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  61 31 34 63 39 62 2d 39  |d\":\"5da14c9b-9|
              00000090  32 35 32 2d 34 33 36 61  2d 38 32 30 64 2d 66 30  |252-436a-820d-f0|
              000000a0  31 33 37 61 35 39 63 35  36 65 5c 22 7d 22 3a 7b  |137a59c56e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t59q9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t59q9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842277924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.129"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842277924,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 06:05:24.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4580" for this suite. @ 01/31/24 06:05:24.09
• [2.140 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 01/31/24 06:05:24.097
  Jan 31 06:05:24.097: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubelet-test @ 01/31/24 06:05:24.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:05:24.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:05:24.118
  Jan 31 06:05:28.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8518" for this suite. @ 01/31/24 06:05:28.146
• [4.056 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 01/31/24 06:05:28.153
  Jan 31 06:05:28.153: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/31/24 06:05:28.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:05:28.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:05:28.176
  Jan 31 06:05:28.181: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/31/24 06:05:29.524
  Jan 31 06:05:29.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-4564 --namespace=crd-publish-openapi-4564 create -f -'
  Jan 31 06:05:31.658: INFO: stderr: ""
  Jan 31 06:05:31.658: INFO: stdout: "e2e-test-crd-publish-openapi-9505-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jan 31 06:05:31.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-4564 --namespace=crd-publish-openapi-4564 delete e2e-test-crd-publish-openapi-9505-crds test-cr'
  Jan 31 06:05:31.783: INFO: stderr: ""
  Jan 31 06:05:31.783: INFO: stdout: "e2e-test-crd-publish-openapi-9505-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jan 31 06:05:31.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-4564 --namespace=crd-publish-openapi-4564 apply -f -'
  Jan 31 06:05:31.897: INFO: stderr: ""
  Jan 31 06:05:31.897: INFO: stdout: "e2e-test-crd-publish-openapi-9505-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jan 31 06:05:31.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-4564 --namespace=crd-publish-openapi-4564 delete e2e-test-crd-publish-openapi-9505-crds test-cr'
  Jan 31 06:05:32.002: INFO: stderr: ""
  Jan 31 06:05:32.002: INFO: stdout: "e2e-test-crd-publish-openapi-9505-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 01/31/24 06:05:32.002
  Jan 31 06:05:32.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-4564 explain e2e-test-crd-publish-openapi-9505-crds'
  Jan 31 06:05:32.096: INFO: stderr: ""
  Jan 31 06:05:32.096: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9505-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jan 31 06:05:33.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4564" for this suite. @ 01/31/24 06:05:33.505
• [5.360 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 01/31/24 06:05:33.513
  Jan 31 06:05:33.514: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:05:33.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:05:33.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:05:33.535
  STEP: Creating projection with secret that has name projected-secret-test-31fabfe2-af8d-4ff7-825d-a97103e6925b @ 01/31/24 06:05:33.54
  STEP: Creating a pod to test consume secrets @ 01/31/24 06:05:33.544
  STEP: Saw pod success @ 01/31/24 06:05:37.568
  Jan 31 06:05:37.573: INFO: Trying to get logs from node nodea08 pod pod-projected-secrets-e930d7b0-7b2e-4f37-9d8d-c8a2634c72fc container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 06:05:37.583
  Jan 31 06:05:37.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6772" for this suite. @ 01/31/24 06:05:37.604
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 01/31/24 06:05:37.613
  Jan 31 06:05:37.613: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 06:05:37.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:05:37.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:05:37.637
  STEP: Setting up server cert @ 01/31/24 06:05:37.66
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 06:05:38.061
  STEP: Deploying the webhook pod @ 01/31/24 06:05:38.068
  STEP: Wait for the deployment to be ready @ 01/31/24 06:05:38.086
  Jan 31 06:05:38.095: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/31/24 06:05:40.11
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 06:05:40.128
  Jan 31 06:05:41.128: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan 31 06:05:41.138: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8950-crds.webhook.example.com via the AdmissionRegistration API @ 01/31/24 06:05:41.655
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/31/24 06:05:41.683
  Jan 31 06:05:44.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9807" for this suite. @ 01/31/24 06:05:44.292
  STEP: Destroying namespace "webhook-markers-1623" for this suite. @ 01/31/24 06:05:44.299
• [6.696 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 01/31/24 06:05:44.309
  Jan 31 06:05:44.309: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:05:44.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:05:44.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:05:44.329
  STEP: creating service nodeport-test with type=NodePort in namespace services-6997 @ 01/31/24 06:05:44.334
  STEP: creating replication controller nodeport-test in namespace services-6997 @ 01/31/24 06:05:44.351
  I0131 06:05:44.358286      23 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-6997, replica count: 2
  I0131 06:05:47.410745      23 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 31 06:05:47.410: INFO: Creating new exec pod
  Jan 31 06:05:50.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-6997 exec execpodzd4vg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jan 31 06:05:50.655: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jan 31 06:05:50.655: INFO: stdout: "nodeport-test-spcld"
  Jan 31 06:05:50.656: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-6997 exec execpodzd4vg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.251.135 80'
  Jan 31 06:05:50.853: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.251.135 80\nConnection to 10.99.251.135 80 port [tcp/http] succeeded!\n"
  Jan 31 06:05:50.853: INFO: stdout: "nodeport-test-w9zrp"
  Jan 31 06:05:50.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-6997 exec execpodzd4vg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.28 31042'
  Jan 31 06:05:51.071: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.28 31042\nConnection to 192.168.100.28 31042 port [tcp/*] succeeded!\n"
  Jan 31 06:05:51.071: INFO: stdout: "nodeport-test-w9zrp"
  Jan 31 06:05:51.071: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-6997 exec execpodzd4vg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 31042'
  Jan 31 06:05:51.284: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 31042\nConnection to 192.168.100.129 31042 port [tcp/*] succeeded!\n"
  Jan 31 06:05:51.284: INFO: stdout: ""
  Jan 31 06:05:52.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-6997 exec execpodzd4vg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 31042'
  Jan 31 06:05:52.283: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 31042\nConnection to 192.168.100.129 31042 port [tcp/*] succeeded!\n"
  Jan 31 06:05:52.283: INFO: stdout: ""
  Jan 31 06:05:53.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-6997 exec execpodzd4vg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 31042'
  Jan 31 06:05:53.308: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 31042\nConnection to 192.168.100.129 31042 port [tcp/*] succeeded!\n"
  Jan 31 06:05:53.308: INFO: stdout: ""
  Jan 31 06:05:54.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-6997 exec execpodzd4vg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 31042'
  Jan 31 06:05:54.287: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 31042\nConnection to 192.168.100.129 31042 port [tcp/*] succeeded!\n"
  Jan 31 06:05:54.288: INFO: stdout: "nodeport-test-w9zrp"
  Jan 31 06:05:54.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6997" for this suite. @ 01/31/24 06:05:54.294
• [9.992 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 01/31/24 06:05:54.301
  Jan 31 06:05:54.301: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 06:05:54.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:05:54.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:05:54.324
  STEP: Creating a ResourceQuota with best effort scope @ 01/31/24 06:05:54.329
  STEP: Ensuring ResourceQuota status is calculated @ 01/31/24 06:05:54.333
  STEP: Creating a ResourceQuota with not best effort scope @ 01/31/24 06:05:56.339
  STEP: Ensuring ResourceQuota status is calculated @ 01/31/24 06:05:56.346
  STEP: Creating a best-effort pod @ 01/31/24 06:05:58.353
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 01/31/24 06:05:58.37
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 01/31/24 06:06:00.375
  STEP: Deleting the pod @ 01/31/24 06:06:02.382
  STEP: Ensuring resource quota status released the pod usage @ 01/31/24 06:06:02.395
  STEP: Creating a not best-effort pod @ 01/31/24 06:06:04.4
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 01/31/24 06:06:04.413
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 01/31/24 06:06:06.418
  STEP: Deleting the pod @ 01/31/24 06:06:08.425
  STEP: Ensuring resource quota status released the pod usage @ 01/31/24 06:06:08.435
  Jan 31 06:06:10.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8698" for this suite. @ 01/31/24 06:06:10.447
• [16.155 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 01/31/24 06:06:10.457
  Jan 31 06:06:10.457: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename endpointslice @ 01/31/24 06:06:10.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:06:10.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:06:10.476
  Jan 31 06:06:10.491: INFO: Endpoints addresses: [192.168.100.86] , ports: [6443]
  Jan 31 06:06:10.491: INFO: EndpointSlices addresses: [192.168.100.86] , ports: [6443]
  Jan 31 06:06:10.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4826" for this suite. @ 01/31/24 06:06:10.497
• [0.047 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 01/31/24 06:06:10.505
  Jan 31 06:06:10.505: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename limitrange @ 01/31/24 06:06:10.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:06:10.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:06:10.523
  STEP: Creating a LimitRange @ 01/31/24 06:06:10.528
  STEP: Setting up watch @ 01/31/24 06:06:10.528
  STEP: Submitting a LimitRange @ 01/31/24 06:06:10.633
  STEP: Verifying LimitRange creation was observed @ 01/31/24 06:06:10.641
  STEP: Fetching the LimitRange to ensure it has proper values @ 01/31/24 06:06:10.641
  Jan 31 06:06:10.646: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jan 31 06:06:10.646: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 01/31/24 06:06:10.646
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 01/31/24 06:06:10.652
  Jan 31 06:06:10.657: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jan 31 06:06:10.657: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 01/31/24 06:06:10.657
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 01/31/24 06:06:10.663
  Jan 31 06:06:10.667: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jan 31 06:06:10.667: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 01/31/24 06:06:10.668
  STEP: Failing to create a Pod with more than max resources @ 01/31/24 06:06:10.671
  STEP: Updating a LimitRange @ 01/31/24 06:06:10.674
  STEP: Verifying LimitRange updating is effective @ 01/31/24 06:06:10.679
  STEP: Creating a Pod with less than former min resources @ 01/31/24 06:06:12.685
  STEP: Failing to create a Pod with more than max resources @ 01/31/24 06:06:12.691
  STEP: Deleting a LimitRange @ 01/31/24 06:06:12.695
  STEP: Verifying the LimitRange was deleted @ 01/31/24 06:06:12.7
  Jan 31 06:06:17.706: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 01/31/24 06:06:17.706
  Jan 31 06:06:17.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4977" for this suite. @ 01/31/24 06:06:17.724
• [7.225 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 01/31/24 06:06:17.73
  Jan 31 06:06:17.730: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename runtimeclass @ 01/31/24 06:06:17.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:06:17.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:06:17.753
  STEP: Deleting RuntimeClass runtimeclass-439-delete-me @ 01/31/24 06:06:17.762
  STEP: Waiting for the RuntimeClass to disappear @ 01/31/24 06:06:17.768
  Jan 31 06:06:17.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-439" for this suite. @ 01/31/24 06:06:17.782
• [0.057 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 01/31/24 06:06:17.788
  Jan 31 06:06:17.788: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replicaset @ 01/31/24 06:06:17.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:06:17.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:06:17.807
  Jan 31 06:06:17.812: INFO: Creating ReplicaSet my-hostname-basic-1740936a-1a5f-4f1b-a5d8-10113345c411
  Jan 31 06:06:17.820: INFO: Pod name my-hostname-basic-1740936a-1a5f-4f1b-a5d8-10113345c411: Found 0 pods out of 1
  Jan 31 06:06:22.825: INFO: Pod name my-hostname-basic-1740936a-1a5f-4f1b-a5d8-10113345c411: Found 1 pods out of 1
  Jan 31 06:06:22.825: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-1740936a-1a5f-4f1b-a5d8-10113345c411" is running
  Jan 31 06:06:22.828: INFO: Pod "my-hostname-basic-1740936a-1a5f-4f1b-a5d8-10113345c411-nh7f2" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-31 06:06:18 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-31 06:06:17 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-31 06:06:18 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-31 06:06:18 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-31 06:06:17 +0000 UTC Reason: Message:}])
  Jan 31 06:06:22.828: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/31/24 06:06:22.828
  Jan 31 06:06:22.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4117" for this suite. @ 01/31/24 06:06:22.842
• [5.059 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 01/31/24 06:06:22.847
  Jan 31 06:06:22.848: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename discovery @ 01/31/24 06:06:22.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:06:22.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:06:22.863
  STEP: Setting up server cert @ 01/31/24 06:06:22.869
  STEP: Requesting APIResourceList from "/api/v1" @ 01/31/24 06:06:23.294
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 01/31/24 06:06:23.297
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 01/31/24 06:06:23.299
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 01/31/24 06:06:23.301
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 01/31/24 06:06:23.303
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 01/31/24 06:06:23.305
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 01/31/24 06:06:23.308
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 01/31/24 06:06:23.31
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 01/31/24 06:06:23.312
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 01/31/24 06:06:23.314
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 01/31/24 06:06:23.316
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 01/31/24 06:06:23.318
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 01/31/24 06:06:23.32
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 01/31/24 06:06:23.322
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 01/31/24 06:06:23.324
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 01/31/24 06:06:23.326
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 01/31/24 06:06:23.328
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 01/31/24 06:06:23.331
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 01/31/24 06:06:23.334
  Jan 31 06:06:23.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9091" for this suite. @ 01/31/24 06:06:23.342
• [0.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 01/31/24 06:06:23.353
  Jan 31 06:06:23.353: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename subpath @ 01/31/24 06:06:23.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:06:23.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:06:23.372
  STEP: Setting up data @ 01/31/24 06:06:23.377
  STEP: Creating pod pod-subpath-test-secret-x85j @ 01/31/24 06:06:23.386
  STEP: Creating a pod to test atomic-volume-subpath @ 01/31/24 06:06:23.387
  STEP: Saw pod success @ 01/31/24 06:06:47.473
  Jan 31 06:06:47.477: INFO: Trying to get logs from node nodea08 pod pod-subpath-test-secret-x85j container test-container-subpath-secret-x85j: <nil>
  STEP: delete the pod @ 01/31/24 06:06:47.492
  STEP: Deleting pod pod-subpath-test-secret-x85j @ 01/31/24 06:06:47.509
  Jan 31 06:06:47.509: INFO: Deleting pod "pod-subpath-test-secret-x85j" in namespace "subpath-5997"
  Jan 31 06:06:47.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5997" for this suite. @ 01/31/24 06:06:47.518
• [24.170 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 01/31/24 06:06:47.524
  Jan 31 06:06:47.524: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 06:06:47.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:06:47.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:06:47.543
  STEP: Setting up server cert @ 01/31/24 06:06:47.569
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 06:06:48.096
  STEP: Deploying the webhook pod @ 01/31/24 06:06:48.107
  STEP: Wait for the deployment to be ready @ 01/31/24 06:06:48.122
  Jan 31 06:06:48.130: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/31/24 06:06:50.146
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 06:06:50.16
  Jan 31 06:06:51.160: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/31/24 06:06:51.242
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/31/24 06:06:51.277
  STEP: Deleting the collection of validation webhooks @ 01/31/24 06:06:51.305
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/31/24 06:06:51.343
  Jan 31 06:06:51.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5542" for this suite. @ 01/31/24 06:06:51.389
  STEP: Destroying namespace "webhook-markers-688" for this suite. @ 01/31/24 06:06:51.395
• [3.875 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 01/31/24 06:06:51.399
  Jan 31 06:06:51.400: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 06:06:51.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:06:51.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:06:51.419
  STEP: Creating configMap configmap-2806/configmap-test-37d82940-a569-4d58-a27e-715c3c9d848d @ 01/31/24 06:06:51.423
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:06:51.428
  STEP: Saw pod success @ 01/31/24 06:06:55.453
  Jan 31 06:06:55.458: INFO: Trying to get logs from node nodea08 pod pod-configmaps-cc791b8c-1640-43e1-ae73-a8f58aaf73e9 container env-test: <nil>
  STEP: delete the pod @ 01/31/24 06:06:55.468
  Jan 31 06:06:55.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2806" for this suite. @ 01/31/24 06:06:55.491
• [4.098 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 01/31/24 06:06:55.497
  Jan 31 06:06:55.498: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/31/24 06:06:55.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:06:55.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:06:55.519
  STEP: create the container to handle the HTTPGet hook request. @ 01/31/24 06:06:55.528
  STEP: create the pod with lifecycle hook @ 01/31/24 06:06:57.555
  STEP: delete the pod with lifecycle hook @ 01/31/24 06:06:59.577
  STEP: check prestop hook @ 01/31/24 06:07:01.595
  Jan 31 06:07:01.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9645" for this suite. @ 01/31/24 06:07:01.625
• [6.135 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 01/31/24 06:07:01.633
  Jan 31 06:07:01.633: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 06:07:01.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:07:01.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:07:01.651
  STEP: Creating configMap configmap-6208/configmap-test-7f50bfd6-b330-45bb-915d-6a0bb5f7a135 @ 01/31/24 06:07:01.656
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:07:01.662
  STEP: Saw pod success @ 01/31/24 06:07:05.684
  Jan 31 06:07:05.687: INFO: Trying to get logs from node nodea08 pod pod-configmaps-4a6cdbb1-e9a7-4c11-adf2-15a48e6c8f0e container env-test: <nil>
  STEP: delete the pod @ 01/31/24 06:07:05.697
  Jan 31 06:07:05.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6208" for this suite. @ 01/31/24 06:07:05.714
• [4.087 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 01/31/24 06:07:05.72
  Jan 31 06:07:05.720: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 06:07:05.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:07:05.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:07:05.737
  STEP: Creating configMap with name configmap-test-volume-c0bc7d8d-aff1-4417-96c6-b0bdfebe9ab9 @ 01/31/24 06:07:05.741
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:07:05.746
  STEP: Saw pod success @ 01/31/24 06:07:09.77
  Jan 31 06:07:09.774: INFO: Trying to get logs from node nodea08 pod pod-configmaps-89eb546e-331d-4b9e-a863-d2a59930e89d container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:07:09.783
  Jan 31 06:07:09.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8133" for this suite. @ 01/31/24 06:07:09.808
• [4.094 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 01/31/24 06:07:09.814
  Jan 31 06:07:09.814: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename gc @ 01/31/24 06:07:09.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:07:09.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:07:09.836
  STEP: create the rc1 @ 01/31/24 06:07:09.846
  STEP: create the rc2 @ 01/31/24 06:07:09.851
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 01/31/24 06:07:15.864
  STEP: delete the rc simpletest-rc-to-be-deleted @ 01/31/24 06:07:16.353
  STEP: wait for the rc to be deleted @ 01/31/24 06:07:16.361
  Jan 31 06:07:21.385: INFO: 71 pods remaining
  Jan 31 06:07:21.385: INFO: 71 pods has nil DeletionTimestamp
  Jan 31 06:07:21.385: INFO: 
  STEP: Gathering metrics @ 01/31/24 06:07:26.382
  Jan 31 06:07:26.503: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 31 06:07:26.503: INFO: Deleting pod "simpletest-rc-to-be-deleted-24nk9" in namespace "gc-1561"
  Jan 31 06:07:26.516: INFO: Deleting pod "simpletest-rc-to-be-deleted-2hglx" in namespace "gc-1561"
  Jan 31 06:07:26.527: INFO: Deleting pod "simpletest-rc-to-be-deleted-2mb2q" in namespace "gc-1561"
  Jan 31 06:07:26.535: INFO: Deleting pod "simpletest-rc-to-be-deleted-2nsc7" in namespace "gc-1561"
  Jan 31 06:07:26.543: INFO: Deleting pod "simpletest-rc-to-be-deleted-2tw2b" in namespace "gc-1561"
  Jan 31 06:07:26.551: INFO: Deleting pod "simpletest-rc-to-be-deleted-4g6xk" in namespace "gc-1561"
  Jan 31 06:07:26.561: INFO: Deleting pod "simpletest-rc-to-be-deleted-4hrr6" in namespace "gc-1561"
  Jan 31 06:07:26.571: INFO: Deleting pod "simpletest-rc-to-be-deleted-4nrd7" in namespace "gc-1561"
  Jan 31 06:07:26.581: INFO: Deleting pod "simpletest-rc-to-be-deleted-4s9nm" in namespace "gc-1561"
  Jan 31 06:07:26.591: INFO: Deleting pod "simpletest-rc-to-be-deleted-4t2l4" in namespace "gc-1561"
  Jan 31 06:07:26.599: INFO: Deleting pod "simpletest-rc-to-be-deleted-527pt" in namespace "gc-1561"
  Jan 31 06:07:26.609: INFO: Deleting pod "simpletest-rc-to-be-deleted-5cnwg" in namespace "gc-1561"
  Jan 31 06:07:26.616: INFO: Deleting pod "simpletest-rc-to-be-deleted-5gbxw" in namespace "gc-1561"
  Jan 31 06:07:26.624: INFO: Deleting pod "simpletest-rc-to-be-deleted-5kp84" in namespace "gc-1561"
  Jan 31 06:07:26.643: INFO: Deleting pod "simpletest-rc-to-be-deleted-5lkjb" in namespace "gc-1561"
  Jan 31 06:07:26.672: INFO: Deleting pod "simpletest-rc-to-be-deleted-67kfj" in namespace "gc-1561"
  Jan 31 06:07:26.679: INFO: Deleting pod "simpletest-rc-to-be-deleted-6886q" in namespace "gc-1561"
  Jan 31 06:07:26.687: INFO: Deleting pod "simpletest-rc-to-be-deleted-6gfnw" in namespace "gc-1561"
  Jan 31 06:07:26.698: INFO: Deleting pod "simpletest-rc-to-be-deleted-6k8dc" in namespace "gc-1561"
  Jan 31 06:07:26.709: INFO: Deleting pod "simpletest-rc-to-be-deleted-7tb42" in namespace "gc-1561"
  Jan 31 06:07:26.715: INFO: Deleting pod "simpletest-rc-to-be-deleted-89mwr" in namespace "gc-1561"
  Jan 31 06:07:26.726: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bv5q" in namespace "gc-1561"
  Jan 31 06:07:26.736: INFO: Deleting pod "simpletest-rc-to-be-deleted-8cw95" in namespace "gc-1561"
  Jan 31 06:07:26.744: INFO: Deleting pod "simpletest-rc-to-be-deleted-8krp9" in namespace "gc-1561"
  Jan 31 06:07:26.753: INFO: Deleting pod "simpletest-rc-to-be-deleted-95hkt" in namespace "gc-1561"
  Jan 31 06:07:26.761: INFO: Deleting pod "simpletest-rc-to-be-deleted-9j79r" in namespace "gc-1561"
  Jan 31 06:07:26.772: INFO: Deleting pod "simpletest-rc-to-be-deleted-9tp2t" in namespace "gc-1561"
  Jan 31 06:07:26.783: INFO: Deleting pod "simpletest-rc-to-be-deleted-9z4ss" in namespace "gc-1561"
  Jan 31 06:07:26.791: INFO: Deleting pod "simpletest-rc-to-be-deleted-b2xjc" in namespace "gc-1561"
  Jan 31 06:07:26.799: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9v9z" in namespace "gc-1561"
  Jan 31 06:07:26.807: INFO: Deleting pod "simpletest-rc-to-be-deleted-bqrjk" in namespace "gc-1561"
  Jan 31 06:07:26.817: INFO: Deleting pod "simpletest-rc-to-be-deleted-c5kdn" in namespace "gc-1561"
  Jan 31 06:07:26.826: INFO: Deleting pod "simpletest-rc-to-be-deleted-c8wwv" in namespace "gc-1561"
  Jan 31 06:07:26.837: INFO: Deleting pod "simpletest-rc-to-be-deleted-ckv85" in namespace "gc-1561"
  Jan 31 06:07:26.849: INFO: Deleting pod "simpletest-rc-to-be-deleted-crk4x" in namespace "gc-1561"
  Jan 31 06:07:26.858: INFO: Deleting pod "simpletest-rc-to-be-deleted-cspqn" in namespace "gc-1561"
  Jan 31 06:07:26.868: INFO: Deleting pod "simpletest-rc-to-be-deleted-dc4vl" in namespace "gc-1561"
  Jan 31 06:07:26.880: INFO: Deleting pod "simpletest-rc-to-be-deleted-dmx2c" in namespace "gc-1561"
  Jan 31 06:07:26.891: INFO: Deleting pod "simpletest-rc-to-be-deleted-dq4hb" in namespace "gc-1561"
  Jan 31 06:07:26.903: INFO: Deleting pod "simpletest-rc-to-be-deleted-dsw88" in namespace "gc-1561"
  Jan 31 06:07:26.913: INFO: Deleting pod "simpletest-rc-to-be-deleted-dt88t" in namespace "gc-1561"
  Jan 31 06:07:26.925: INFO: Deleting pod "simpletest-rc-to-be-deleted-dzmtz" in namespace "gc-1561"
  Jan 31 06:07:26.936: INFO: Deleting pod "simpletest-rc-to-be-deleted-f89cz" in namespace "gc-1561"
  Jan 31 06:07:26.944: INFO: Deleting pod "simpletest-rc-to-be-deleted-f9j45" in namespace "gc-1561"
  Jan 31 06:07:26.956: INFO: Deleting pod "simpletest-rc-to-be-deleted-fmmbh" in namespace "gc-1561"
  Jan 31 06:07:26.963: INFO: Deleting pod "simpletest-rc-to-be-deleted-fxsq9" in namespace "gc-1561"
  Jan 31 06:07:26.974: INFO: Deleting pod "simpletest-rc-to-be-deleted-fxx26" in namespace "gc-1561"
  Jan 31 06:07:26.982: INFO: Deleting pod "simpletest-rc-to-be-deleted-g644s" in namespace "gc-1561"
  Jan 31 06:07:26.996: INFO: Deleting pod "simpletest-rc-to-be-deleted-gc7df" in namespace "gc-1561"
  Jan 31 06:07:27.004: INFO: Deleting pod "simpletest-rc-to-be-deleted-gdxh5" in namespace "gc-1561"
  Jan 31 06:07:27.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1561" for this suite. @ 01/31/24 06:07:27.019
• [17.210 seconds]
------------------------------
SSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 01/31/24 06:07:27.024
  Jan 31 06:07:27.024: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename conformance-tests @ 01/31/24 06:07:27.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:07:27.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:07:27.043
  STEP: Getting node addresses @ 01/31/24 06:07:27.047
  Jan 31 06:07:27.047: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jan 31 06:07:27.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4340" for this suite. @ 01/31/24 06:07:27.057
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 01/31/24 06:07:27.062
  Jan 31 06:07:27.062: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 06:07:27.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:07:27.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:07:27.078
  STEP: Creating a ResourceQuota @ 01/31/24 06:07:27.081
  STEP: Getting a ResourceQuota @ 01/31/24 06:07:27.086
  STEP: Listing all ResourceQuotas with LabelSelector @ 01/31/24 06:07:27.092
  STEP: Patching the ResourceQuota @ 01/31/24 06:07:27.095
  STEP: Deleting a Collection of ResourceQuotas @ 01/31/24 06:07:27.1
  STEP: Verifying the deleted ResourceQuota @ 01/31/24 06:07:27.107
  Jan 31 06:07:27.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6801" for this suite. @ 01/31/24 06:07:27.114
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 01/31/24 06:07:27.121
  Jan 31 06:07:27.121: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:07:27.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:07:27.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:07:27.14
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:07:27.144
  STEP: Saw pod success @ 01/31/24 06:07:31.166
  Jan 31 06:07:31.170: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-82db6676-bca0-4ced-a78f-e4e11e128ad7 container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:07:31.179
  Jan 31 06:07:31.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-150" for this suite. @ 01/31/24 06:07:31.198
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 01/31/24 06:07:31.206
  Jan 31 06:07:31.206: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 06:07:31.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:07:31.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:07:31.224
  STEP: Creating secret with name secret-test-4f3292f1-0a15-420a-a9c6-949b0619fb02 @ 01/31/24 06:07:31.229
  STEP: Creating a pod to test consume secrets @ 01/31/24 06:07:31.234
  STEP: Saw pod success @ 01/31/24 06:07:35.26
  Jan 31 06:07:35.264: INFO: Trying to get logs from node nodea08 pod pod-secrets-41628f75-fd8e-4404-b590-d78ef0d706c2 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 06:07:35.273
  Jan 31 06:07:35.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6982" for this suite. @ 01/31/24 06:07:35.294
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 01/31/24 06:07:35.302
  Jan 31 06:07:35.302: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename init-container @ 01/31/24 06:07:35.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:07:35.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:07:35.322
  STEP: creating the pod @ 01/31/24 06:07:35.328
  Jan 31 06:07:35.328: INFO: PodSpec: initContainers in spec.initContainers
  Jan 31 06:08:18.125: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-bef75768-ae6f-4408-8412-f7917ae2b5e9", GenerateName:"", Namespace:"init-container-3502", SelfLink:"", UID:"cbebd95d-6ad3-40c6-adfd-1252b39587d4", ResourceVersion:"146626", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 7, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"328318664"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 7, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d2c1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 8, 18, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d2c210), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-7l97t", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0048f4f20), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-7l97t", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-7l97t", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-7l97t", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00479fc40), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"nodea08", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00476ba40), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00479fcc0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00479fce0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00479fce8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00479fcec), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc003925d20), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 31, 6, 7, 36, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 31, 6, 7, 35, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 31, 6, 7, 35, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 31, 6, 7, 35, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 31, 6, 7, 35, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.100.28", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.100.28"}}, PodIP:"10.244.1.112", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.112"}}, StartTime:time.Date(2024, time.January, 31, 6, 7, 35, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00476bb20)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00476bb90)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://c23983373a97d139375fea20f1562f33c660f388437dfc7816575560f40f427d", Started:(*bool)(0xc00479fd8a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0048f4f80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00479fd9f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0048f4f60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00479fd6f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jan 31 06:08:18.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3502" for this suite. @ 01/31/24 06:08:18.131
• [42.835 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 01/31/24 06:08:18.139
  Jan 31 06:08:18.139: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename dns @ 01/31/24 06:08:18.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:08:18.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:08:18.161
  STEP: Creating a test headless service @ 01/31/24 06:08:18.166
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 30.56.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.56.30_udp@PTR;check="$$(dig +tcp +noall +answer +search 30.56.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.56.30_tcp@PTR;sleep 1; done
   @ 01/31/24 06:08:18.183
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8497.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 30.56.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.56.30_udp@PTR;check="$$(dig +tcp +noall +answer +search 30.56.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.56.30_tcp@PTR;sleep 1; done
   @ 01/31/24 06:08:18.183
  STEP: creating a pod to probe DNS @ 01/31/24 06:08:18.183
  STEP: submitting the pod to kubernetes @ 01/31/24 06:08:18.183
  STEP: retrieving the pod @ 01/31/24 06:08:20.204
  STEP: looking for the results for each expected name from probers @ 01/31/24 06:08:20.208
  Jan 31 06:08:20.215: INFO: Unable to read wheezy_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:20.219: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:20.223: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:20.228: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:20.251: INFO: Unable to read jessie_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:20.255: INFO: Unable to read jessie_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:20.261: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:20.265: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:20.282: INFO: Lookups using dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2 failed for: [wheezy_udp@dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_udp@dns-test-service.dns-8497.svc.cluster.local jessie_tcp@dns-test-service.dns-8497.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local]

  Jan 31 06:08:20.290: INFO: Pod client logs for webserver: 
  Jan 31 06:08:20.298: INFO: Pod client logs for querier: 
  Jan 31 06:08:20.305: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:08:25.218: INFO: Unable to read wheezy_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:25.224: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:25.230: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:25.235: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:25.262: INFO: Unable to read jessie_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:25.267: INFO: Unable to read jessie_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:25.272: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:25.277: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:25.297: INFO: Lookups using dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2 failed for: [wheezy_udp@dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_udp@dns-test-service.dns-8497.svc.cluster.local jessie_tcp@dns-test-service.dns-8497.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local]

  Jan 31 06:08:25.305: INFO: Pod client logs for webserver: 
  Jan 31 06:08:25.313: INFO: Pod client logs for querier: 
  Jan 31 06:08:25.321: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:08:30.218: INFO: Unable to read wheezy_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:30.223: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:30.229: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:30.234: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:30.257: INFO: Unable to read jessie_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:30.261: INFO: Unable to read jessie_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:30.266: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:30.271: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:30.291: INFO: Lookups using dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2 failed for: [wheezy_udp@dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_udp@dns-test-service.dns-8497.svc.cluster.local jessie_tcp@dns-test-service.dns-8497.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local]

  Jan 31 06:08:30.300: INFO: Pod client logs for webserver: 
  Jan 31 06:08:30.309: INFO: Pod client logs for querier: 
  Jan 31 06:08:30.317: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:08:35.214: INFO: Unable to read wheezy_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:35.219: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:35.224: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:35.228: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:35.251: INFO: Unable to read jessie_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:35.255: INFO: Unable to read jessie_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:35.260: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:35.264: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:35.283: INFO: Lookups using dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2 failed for: [wheezy_udp@dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_udp@dns-test-service.dns-8497.svc.cluster.local jessie_tcp@dns-test-service.dns-8497.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local]

  Jan 31 06:08:35.291: INFO: Pod client logs for webserver: 
  Jan 31 06:08:35.298: INFO: Pod client logs for querier: 
  Jan 31 06:08:35.306: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:08:40.217: INFO: Unable to read wheezy_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:40.222: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:40.227: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:40.232: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:40.253: INFO: Unable to read jessie_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:40.258: INFO: Unable to read jessie_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:40.262: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:40.267: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:40.285: INFO: Lookups using dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2 failed for: [wheezy_udp@dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_udp@dns-test-service.dns-8497.svc.cluster.local jessie_tcp@dns-test-service.dns-8497.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local]

  Jan 31 06:08:40.293: INFO: Pod client logs for webserver: 
  Jan 31 06:08:40.302: INFO: Pod client logs for querier: 
  Jan 31 06:08:40.309: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:08:45.214: INFO: Unable to read wheezy_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:45.219: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:45.223: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:45.227: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:45.249: INFO: Unable to read jessie_udp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:45.253: INFO: Unable to read jessie_tcp@dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:45.257: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:45.262: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local from pod dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2: the server could not find the requested resource (get pods dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2)
  Jan 31 06:08:45.280: INFO: Lookups using dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2 failed for: [wheezy_udp@dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@dns-test-service.dns-8497.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_udp@dns-test-service.dns-8497.svc.cluster.local jessie_tcp@dns-test-service.dns-8497.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8497.svc.cluster.local]

  Jan 31 06:08:45.287: INFO: Pod client logs for webserver: 
  Jan 31 06:08:45.294: INFO: Pod client logs for querier: 
  Jan 31 06:08:45.301: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:08:50.290: INFO: DNS probes using dns-8497/dns-test-fe101d70-0b00-4e41-9edc-d24a40fe53f2 succeeded

  STEP: deleting the pod @ 01/31/24 06:08:50.291
  STEP: deleting the test service @ 01/31/24 06:08:50.311
  STEP: deleting the test headless service @ 01/31/24 06:08:50.328
  Jan 31 06:08:50.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8497" for this suite. @ 01/31/24 06:08:50.342
• [32.208 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 01/31/24 06:08:50.347
  Jan 31 06:08:50.347: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:08:50.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:08:50.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:08:50.365
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/31/24 06:08:50.368
  Jan 31 06:08:50.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3939 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jan 31 06:08:50.467: INFO: stderr: ""
  Jan 31 06:08:50.467: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 01/31/24 06:08:50.467
  Jan 31 06:08:50.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3939 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jan 31 06:08:50.567: INFO: stderr: ""
  Jan 31 06:08:50.567: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/31/24 06:08:50.567
  Jan 31 06:08:50.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3939 delete pods e2e-test-httpd-pod'
  Jan 31 06:08:52.277: INFO: stderr: ""
  Jan 31 06:08:52.277: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jan 31 06:08:52.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3939" for this suite. @ 01/31/24 06:08:52.283
• [1.942 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 01/31/24 06:08:52.288
  Jan 31 06:08:52.289: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename runtimeclass @ 01/31/24 06:08:52.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:08:52.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:08:52.309
  Jan 31 06:08:52.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1850" for this suite. @ 01/31/24 06:08:52.326
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 01/31/24 06:08:52.336
  Jan 31 06:08:52.336: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename security-context-test @ 01/31/24 06:08:52.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:08:52.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:08:52.354
  Jan 31 06:08:56.390: INFO: Got logs for pod "busybox-privileged-false-efce17f9-d278-4599-a88f-1a8142e873a2": "ip: RTNETLINK answers: Operation not permitted\n"
  Jan 31 06:08:56.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7669" for this suite. @ 01/31/24 06:08:56.396
• [4.067 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 01/31/24 06:08:56.403
  Jan 31 06:08:56.403: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename cronjob @ 01/31/24 06:08:56.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:08:56.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:08:56.426
  STEP: Creating a cronjob @ 01/31/24 06:08:56.431
  STEP: creating @ 01/31/24 06:08:56.431
  STEP: getting @ 01/31/24 06:08:56.438
  STEP: listing @ 01/31/24 06:08:56.441
  STEP: watching @ 01/31/24 06:08:56.445
  Jan 31 06:08:56.445: INFO: starting watch
  STEP: cluster-wide listing @ 01/31/24 06:08:56.447
  STEP: cluster-wide watching @ 01/31/24 06:08:56.45
  Jan 31 06:08:56.450: INFO: starting watch
  STEP: patching @ 01/31/24 06:08:56.452
  STEP: updating @ 01/31/24 06:08:56.46
  Jan 31 06:08:56.469: INFO: waiting for watch events with expected annotations
  Jan 31 06:08:56.469: INFO: saw patched and updated annotations
  STEP: patching /status @ 01/31/24 06:08:56.469
  STEP: updating /status @ 01/31/24 06:08:56.476
  STEP: get /status @ 01/31/24 06:08:56.484
  STEP: deleting @ 01/31/24 06:08:56.487
  STEP: deleting a collection @ 01/31/24 06:08:56.5
  Jan 31 06:08:56.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2606" for this suite. @ 01/31/24 06:08:56.513
• [0.116 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 01/31/24 06:08:56.519
  Jan 31 06:08:56.519: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename gc @ 01/31/24 06:08:56.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:08:56.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:08:56.536
  STEP: create the deployment @ 01/31/24 06:08:56.54
  W0131 06:08:56.547244      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/31/24 06:08:56.547
  STEP: delete the deployment @ 01/31/24 06:08:57.052
  STEP: wait for all rs to be garbage collected @ 01/31/24 06:08:57.058
  STEP: expected 0 pods, got 2 pods @ 01/31/24 06:08:57.062
  STEP: Gathering metrics @ 01/31/24 06:08:57.571
  Jan 31 06:08:57.693: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 31 06:08:57.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3945" for this suite. @ 01/31/24 06:08:57.698
• [1.185 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 01/31/24 06:08:57.705
  Jan 31 06:08:57.705: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename daemonsets @ 01/31/24 06:08:57.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:08:57.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:08:57.722
  Jan 31 06:08:57.742: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/31/24 06:08:57.749
  Jan 31 06:08:57.754: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:08:57.757: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:08:57.757: INFO: Node nodea08 is running 0 daemon pod, expected 1
  Jan 31 06:08:58.756: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:08:58.760: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 31 06:08:58.760: INFO: Node nodea08 is running 0 daemon pod, expected 1
  Jan 31 06:08:59.756: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:08:59.760: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 31 06:08:59.760: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 01/31/24 06:08:59.776
  STEP: Check that daemon pods images are updated. @ 01/31/24 06:08:59.787
  Jan 31 06:08:59.794: INFO: Wrong image for pod: daemon-set-hgnjc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan 31 06:08:59.795: INFO: Wrong image for pod: daemon-set-s58nh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan 31 06:08:59.800: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:09:00.792: INFO: Pod daemon-set-ccfhh is not available
  Jan 31 06:09:00.792: INFO: Wrong image for pod: daemon-set-hgnjc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan 31 06:09:00.797: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:09:01.791: INFO: Pod daemon-set-ccfhh is not available
  Jan 31 06:09:01.791: INFO: Wrong image for pod: daemon-set-hgnjc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan 31 06:09:01.796: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:09:02.792: INFO: Pod daemon-set-xq4km is not available
  Jan 31 06:09:02.796: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 01/31/24 06:09:02.796
  Jan 31 06:09:02.800: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:09:02.804: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 31 06:09:02.804: INFO: Node nodeb29 is running 0 daemon pod, expected 1
  Jan 31 06:09:03.803: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:09:03.809: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 31 06:09:03.809: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/31/24 06:09:03.828
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8165, will wait for the garbage collector to delete the pods @ 01/31/24 06:09:03.828
  Jan 31 06:09:03.889: INFO: Deleting DaemonSet.extensions daemon-set took: 6.609562ms
  Jan 31 06:09:03.990: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.11408ms
  Jan 31 06:09:05.595: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:09:05.596: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 31 06:09:05.600: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"146976"},"items":null}

  Jan 31 06:09:05.605: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"146976"},"items":null}

  Jan 31 06:09:05.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8165" for this suite. @ 01/31/24 06:09:05.623
• [7.925 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 01/31/24 06:09:05.63
  Jan 31 06:09:05.630: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:09:05.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:09:05.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:09:05.65
  STEP: creating all guestbook components @ 01/31/24 06:09:05.654
  Jan 31 06:09:05.654: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jan 31 06:09:05.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 create -f -'
  Jan 31 06:09:05.850: INFO: stderr: ""
  Jan 31 06:09:05.850: INFO: stdout: "service/agnhost-replica created\n"
  Jan 31 06:09:05.850: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jan 31 06:09:05.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 create -f -'
  Jan 31 06:09:06.033: INFO: stderr: ""
  Jan 31 06:09:06.033: INFO: stdout: "service/agnhost-primary created\n"
  Jan 31 06:09:06.034: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jan 31 06:09:06.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 create -f -'
  Jan 31 06:09:06.244: INFO: stderr: ""
  Jan 31 06:09:06.244: INFO: stdout: "service/frontend created\n"
  Jan 31 06:09:06.244: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jan 31 06:09:06.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 create -f -'
  Jan 31 06:09:06.384: INFO: stderr: ""
  Jan 31 06:09:06.384: INFO: stdout: "deployment.apps/frontend created\n"
  Jan 31 06:09:06.384: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jan 31 06:09:06.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 create -f -'
  Jan 31 06:09:06.526: INFO: stderr: ""
  Jan 31 06:09:06.526: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jan 31 06:09:06.526: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jan 31 06:09:06.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 create -f -'
  Jan 31 06:09:06.669: INFO: stderr: ""
  Jan 31 06:09:06.669: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 01/31/24 06:09:06.669
  Jan 31 06:09:06.669: INFO: Waiting for all frontend pods to be Running.
  Jan 31 06:09:11.720: INFO: Waiting for frontend to serve content.
  Jan 31 06:09:11.737: INFO: Trying to add a new entry to the guestbook.
  Jan 31 06:09:11.754: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 01/31/24 06:09:11.764
  Jan 31 06:09:11.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 delete --grace-period=0 --force -f -'
  Jan 31 06:09:11.872: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 31 06:09:11.872: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 01/31/24 06:09:11.872
  Jan 31 06:09:11.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 delete --grace-period=0 --force -f -'
  Jan 31 06:09:11.982: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 31 06:09:11.982: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/31/24 06:09:11.982
  Jan 31 06:09:11.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 delete --grace-period=0 --force -f -'
  Jan 31 06:09:12.084: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 31 06:09:12.084: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/31/24 06:09:12.084
  Jan 31 06:09:12.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 delete --grace-period=0 --force -f -'
  Jan 31 06:09:12.171: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 31 06:09:12.171: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/31/24 06:09:12.172
  Jan 31 06:09:12.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 delete --grace-period=0 --force -f -'
  Jan 31 06:09:12.268: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 31 06:09:12.268: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/31/24 06:09:12.268
  Jan 31 06:09:12.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3945 delete --grace-period=0 --force -f -'
  Jan 31 06:09:12.355: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 31 06:09:12.355: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jan 31 06:09:12.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3945" for this suite. @ 01/31/24 06:09:12.36
• [6.736 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 01/31/24 06:09:12.367
  Jan 31 06:09:12.367: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-runtime @ 01/31/24 06:09:12.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:09:12.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:09:12.386
  STEP: create the container @ 01/31/24 06:09:12.39
  W0131 06:09:12.399028      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 01/31/24 06:09:12.399
  STEP: get the container status @ 01/31/24 06:09:15.415
  STEP: the container should be terminated @ 01/31/24 06:09:15.421
  STEP: the termination message should be set @ 01/31/24 06:09:15.422
  Jan 31 06:09:15.422: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/31/24 06:09:15.422
  Jan 31 06:09:15.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1407" for this suite. @ 01/31/24 06:09:15.442
• [3.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 01/31/24 06:09:15.448
  Jan 31 06:09:15.448: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 06:09:15.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:09:15.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:09:15.465
  STEP: Setting up server cert @ 01/31/24 06:09:15.483
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 06:09:15.841
  STEP: Deploying the webhook pod @ 01/31/24 06:09:15.851
  STEP: Wait for the deployment to be ready @ 01/31/24 06:09:15.866
  Jan 31 06:09:15.875: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/31/24 06:09:17.888
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 06:09:17.902
  Jan 31 06:09:18.903: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/31/24 06:09:18.991
  STEP: Creating a configMap that should be mutated @ 01/31/24 06:09:19.014
  STEP: Deleting the collection of validation webhooks @ 01/31/24 06:09:19.062
  STEP: Creating a configMap that should not be mutated @ 01/31/24 06:09:19.1
  Jan 31 06:09:19.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-939" for this suite. @ 01/31/24 06:09:19.145
  STEP: Destroying namespace "webhook-markers-6171" for this suite. @ 01/31/24 06:09:19.152
• [3.709 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 01/31/24 06:09:19.158
  Jan 31 06:09:19.158: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:09:19.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:09:19.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:09:19.177
  STEP: Creating configMap with name projected-configmap-test-volume-map-8a854dba-b918-4ac9-a52d-0a5360e41caf @ 01/31/24 06:09:19.182
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:09:19.187
  STEP: Saw pod success @ 01/31/24 06:09:23.211
  Jan 31 06:09:23.215: INFO: Trying to get logs from node nodea08 pod pod-projected-configmaps-88a587d7-69e7-49a1-b2ab-a2f2357b7edc container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:09:23.224
  Jan 31 06:09:23.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9236" for this suite. @ 01/31/24 06:09:23.248
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 01/31/24 06:09:23.254
  Jan 31 06:09:23.254: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:09:23.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:09:23.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:09:23.275
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:09:23.28
  STEP: Saw pod success @ 01/31/24 06:09:27.306
  Jan 31 06:09:27.310: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-73934047-9837-45de-8e4a-b388a09c722d container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:09:27.318
  Jan 31 06:09:27.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7174" for this suite. @ 01/31/24 06:09:27.34
• [4.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 01/31/24 06:09:27.346
  Jan 31 06:09:27.347: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 06:09:27.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:09:27.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:09:27.368
  STEP: Setting up server cert @ 01/31/24 06:09:27.39
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 06:09:27.655
  STEP: Deploying the webhook pod @ 01/31/24 06:09:27.662
  STEP: Wait for the deployment to be ready @ 01/31/24 06:09:27.677
  Jan 31 06:09:27.686: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/31/24 06:09:29.7
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 06:09:29.715
  Jan 31 06:09:30.715: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 01/31/24 06:09:30.723
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 01/31/24 06:09:30.726
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 01/31/24 06:09:30.726
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 01/31/24 06:09:30.726
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 01/31/24 06:09:30.728
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/31/24 06:09:30.728
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/31/24 06:09:30.73
  Jan 31 06:09:30.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5707" for this suite. @ 01/31/24 06:09:30.769
  STEP: Destroying namespace "webhook-markers-3877" for this suite. @ 01/31/24 06:09:30.773
• [3.431 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 01/31/24 06:09:30.778
  Jan 31 06:09:30.778: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 06:09:30.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:09:30.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:09:30.795
  STEP: Creating secret with name secret-test-4666ccdd-b384-45f4-895d-c7a0c2fe1baf @ 01/31/24 06:09:30.798
  STEP: Creating a pod to test consume secrets @ 01/31/24 06:09:30.802
  STEP: Saw pod success @ 01/31/24 06:09:34.827
  Jan 31 06:09:34.831: INFO: Trying to get logs from node nodea08 pod pod-secrets-58359908-fe25-4f99-b588-e79951db6269 container secret-env-test: <nil>
  STEP: delete the pod @ 01/31/24 06:09:34.839
  Jan 31 06:09:34.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5531" for this suite. @ 01/31/24 06:09:34.856
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 01/31/24 06:09:34.861
  Jan 31 06:09:34.861: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replication-controller @ 01/31/24 06:09:34.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:09:34.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:09:34.877
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 01/31/24 06:09:34.881
  STEP: When a replication controller with a matching selector is created @ 01/31/24 06:09:36.9
  STEP: Then the orphan pod is adopted @ 01/31/24 06:09:36.906
  Jan 31 06:09:37.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1110" for this suite. @ 01/31/24 06:09:37.922
• [3.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 01/31/24 06:09:37.934
  Jan 31 06:09:37.934: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 06:09:37.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:09:37.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:09:37.956
  STEP: Creating resourceQuota "e2e-rq-status-ssgdz" @ 01/31/24 06:09:37.964
  Jan 31 06:09:37.973: INFO: Resource quota "e2e-rq-status-ssgdz" reports spec: hard cpu limit of 500m
  Jan 31 06:09:37.973: INFO: Resource quota "e2e-rq-status-ssgdz" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-ssgdz" /status @ 01/31/24 06:09:37.973
  STEP: Confirm /status for "e2e-rq-status-ssgdz" resourceQuota via watch @ 01/31/24 06:09:37.984
  Jan 31 06:09:37.986: INFO: observed resourceQuota "e2e-rq-status-ssgdz" in namespace "resourcequota-9456" with hard status: v1.ResourceList(nil)
  Jan 31 06:09:37.986: INFO: Found resourceQuota "e2e-rq-status-ssgdz" in namespace "resourcequota-9456" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jan 31 06:09:37.986: INFO: ResourceQuota "e2e-rq-status-ssgdz" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 01/31/24 06:09:37.99
  Jan 31 06:09:37.995: INFO: Resource quota "e2e-rq-status-ssgdz" reports spec: hard cpu limit of 1
  Jan 31 06:09:37.995: INFO: Resource quota "e2e-rq-status-ssgdz" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-ssgdz" /status @ 01/31/24 06:09:37.995
  STEP: Confirm /status for "e2e-rq-status-ssgdz" resourceQuota via watch @ 01/31/24 06:09:38.003
  Jan 31 06:09:38.006: INFO: observed resourceQuota "e2e-rq-status-ssgdz" in namespace "resourcequota-9456" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jan 31 06:09:38.006: INFO: Found resourceQuota "e2e-rq-status-ssgdz" in namespace "resourcequota-9456" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jan 31 06:09:38.006: INFO: ResourceQuota "e2e-rq-status-ssgdz" /status was patched
  STEP: Get "e2e-rq-status-ssgdz" /status @ 01/31/24 06:09:38.006
  Jan 31 06:09:38.010: INFO: Resourcequota "e2e-rq-status-ssgdz" reports status: hard cpu of 1
  Jan 31 06:09:38.010: INFO: Resourcequota "e2e-rq-status-ssgdz" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-ssgdz" /status before checking Spec is unchanged @ 01/31/24 06:09:38.013
  Jan 31 06:09:38.019: INFO: Resourcequota "e2e-rq-status-ssgdz" reports status: hard cpu of 2
  Jan 31 06:09:38.019: INFO: Resourcequota "e2e-rq-status-ssgdz" reports status: hard memory of 2Gi
  Jan 31 06:09:38.021: INFO: Found resourceQuota "e2e-rq-status-ssgdz" in namespace "resourcequota-9456" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jan 31 06:09:38.024: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cd3a58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cd3a88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cd3ae8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:09:43.026: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cd3f20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cd3f98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cd3fc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:09:48.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2588), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b25b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:09:53.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040643a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004064420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004064450), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:09:58.026: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca2d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:03.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040647b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004064840), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004064888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:08.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004064c00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004064c60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004064c90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:13.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca738), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca768), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca7e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:18.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcaae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcab58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcab88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:23.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004065068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040650b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004065110), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:28.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040654d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004065518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004065560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:33.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2a08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2a38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2a68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:38.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004065758), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040657b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040657e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:43.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcaf60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcafd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcb008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:48.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcb338), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcb368), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcb3b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:53.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004065ad0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004065b30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004065b60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:10:58.026: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004065e90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004065ec0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004065f20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:03.034: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80120), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a801c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:08.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a805b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:13.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2f18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2f78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2fa8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:18.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b33f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3440), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b34d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:23.026: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a809c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a809f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80a38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:28.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3848), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b38a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3908), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:33.026: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcb830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcb860), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcb8c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:38.030: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b22b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:43.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a802a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:48.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b25a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:53.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e3c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:11:58.026: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e7f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:03.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2948), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b29d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:08.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2d38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2d68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b2dc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:13.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337eb40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337eb70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337ebe8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:18.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337ef78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337efc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337f008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:23.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3128), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3188), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:28.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3740), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3770), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b37a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:33.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337f2f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337f350), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337f380), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:38.030: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3aa0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3b00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3b48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:43.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a807f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:48.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3f38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005b3f68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca000), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:53.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80b88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80be8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80c18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:12:58.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca288), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca318), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:03.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80ff0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a81020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a81080), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:08.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a81458), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a814a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a814e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:13.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca6a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca6d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca738), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:18.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcaa68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcaab0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcaae0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:23.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a81800), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a81848), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a81890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:28.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a81b90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a81bc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a81c20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:33.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcae28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcae88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcaeb8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:38.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcb200), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcb230), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcb290), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:43.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e3c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:48.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e7f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337e888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:53.029: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca2b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:13:58.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337eb70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337ebe8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337ec18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:14:03.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca678), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fca6c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:14:08.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcaa08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcaa38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcaa98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:14:13.027: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337efc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337f008), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00337f050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:14:18.030: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcac90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcacd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fcad38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:14:23.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-ssgdz", GenerateName:"", Namespace:"resourcequota-9456", SelfLink:"", UID:"1e23b1fe-5b93-416a-b900-607b49bc8c55", ResourceVersion:"147525", Generation:0, CreationTimestamp:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-ssgdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a80270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 31, 6, 9, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a802a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan 31 06:14:28.028: INFO: ResourceQuota "e2e-rq-status-ssgdz" Spec was unchanged and /status reset
  Jan 31 06:14:28.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9456" for this suite. @ 01/31/24 06:14:28.037
• [290.109 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 01/31/24 06:14:28.044
  Jan 31 06:14:28.044: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename watch @ 01/31/24 06:14:28.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:14:28.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:14:28.067
  STEP: creating a watch on configmaps with label A @ 01/31/24 06:14:28.072
  STEP: creating a watch on configmaps with label B @ 01/31/24 06:14:28.074
  STEP: creating a watch on configmaps with label A or B @ 01/31/24 06:14:28.076
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 01/31/24 06:14:28.078
  Jan 31 06:14:28.083: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3657  1e99f39c-42c8-448d-8b86-38a2fa60471f 147989 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:14:28.083: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3657  1e99f39c-42c8-448d-8b86-38a2fa60471f 147989 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 01/31/24 06:14:28.083
  Jan 31 06:14:28.091: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3657  1e99f39c-42c8-448d-8b86-38a2fa60471f 147992 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:14:28.091: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3657  1e99f39c-42c8-448d-8b86-38a2fa60471f 147992 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 01/31/24 06:14:28.091
  Jan 31 06:14:28.097: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3657  1e99f39c-42c8-448d-8b86-38a2fa60471f 147993 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:14:28.097: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3657  1e99f39c-42c8-448d-8b86-38a2fa60471f 147993 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 01/31/24 06:14:28.098
  Jan 31 06:14:28.102: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3657  1e99f39c-42c8-448d-8b86-38a2fa60471f 147994 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:14:28.102: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3657  1e99f39c-42c8-448d-8b86-38a2fa60471f 147994 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 01/31/24 06:14:28.102
  Jan 31 06:14:28.106: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3657  17257868-e1b4-400f-a041-bd72680568ff 147995 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:14:28.107: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3657  17257868-e1b4-400f-a041-bd72680568ff 147995 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 01/31/24 06:14:38.109
  Jan 31 06:14:38.119: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3657  17257868-e1b4-400f-a041-bd72680568ff 148015 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:14:38.119: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3657  17257868-e1b4-400f-a041-bd72680568ff 148015 0 2024-01-31 06:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:14:48.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3657" for this suite. @ 01/31/24 06:14:48.13
• [20.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 01/31/24 06:14:48.138
  Jan 31 06:14:48.138: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:14:48.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:14:48.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:14:48.158
  STEP: creating service in namespace services-9837 @ 01/31/24 06:14:48.163
  STEP: creating service affinity-clusterip-transition in namespace services-9837 @ 01/31/24 06:14:48.163
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9837 @ 01/31/24 06:14:48.177
  I0131 06:14:48.184247      23 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-9837, replica count: 3
  I0131 06:14:51.235743      23 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 31 06:14:51.244: INFO: Creating new exec pod
  Jan 31 06:14:54.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-9837 exec execpod-affinityrgwgg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jan 31 06:14:54.499: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jan 31 06:14:54.499: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 06:14:54.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-9837 exec execpod-affinityrgwgg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.97.130 80'
  Jan 31 06:14:54.712: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.97.130 80\nConnection to 10.104.97.130 80 port [tcp/http] succeeded!\n"
  Jan 31 06:14:54.712: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 06:14:54.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-9837 exec execpod-affinityrgwgg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.104.97.130:80/ ; done'
  Jan 31 06:14:55.087: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n"
  Jan 31 06:14:55.087: INFO: stdout: "\naffinity-clusterip-transition-xdv6k\naffinity-clusterip-transition-xdv6k\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-c2vm2\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-c2vm2\naffinity-clusterip-transition-c2vm2\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-c2vm2\naffinity-clusterip-transition-c2vm2\naffinity-clusterip-transition-c2vm2\naffinity-clusterip-transition-xdv6k\naffinity-clusterip-transition-xdv6k\naffinity-clusterip-transition-c2vm2\naffinity-clusterip-transition-c2vm2\naffinity-clusterip-transition-c2vm2"
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-xdv6k
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-xdv6k
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-c2vm2
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-c2vm2
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-c2vm2
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-c2vm2
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-c2vm2
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-c2vm2
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-xdv6k
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-xdv6k
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-c2vm2
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-c2vm2
  Jan 31 06:14:55.087: INFO: Received response from host: affinity-clusterip-transition-c2vm2
  Jan 31 06:14:55.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-9837 exec execpod-affinityrgwgg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.104.97.130:80/ ; done'
  Jan 31 06:14:55.442: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.97.130:80/\n"
  Jan 31 06:14:55.442: INFO: stdout: "\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4\naffinity-clusterip-transition-jd7p4"
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Received response from host: affinity-clusterip-transition-jd7p4
  Jan 31 06:14:55.442: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9837, will wait for the garbage collector to delete the pods @ 01/31/24 06:14:55.461
  Jan 31 06:14:55.521: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.89126ms
  Jan 31 06:14:55.623: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.157558ms
  Jan 31 06:14:58.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9837" for this suite. @ 01/31/24 06:14:58.655
• [10.523 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 01/31/24 06:14:58.661
  Jan 31 06:14:58.661: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename watch @ 01/31/24 06:14:58.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:14:58.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:14:58.682
  STEP: creating a watch on configmaps with a certain label @ 01/31/24 06:14:58.687
  STEP: creating a new configmap @ 01/31/24 06:14:58.689
  STEP: modifying the configmap once @ 01/31/24 06:14:58.694
  STEP: changing the label value of the configmap @ 01/31/24 06:14:58.701
  STEP: Expecting to observe a delete notification for the watched object @ 01/31/24 06:14:58.711
  Jan 31 06:14:58.711: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-693  e93638a6-01e5-4057-9d3e-37a1acc08b84 148146 0 2024-01-31 06:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:14:58.712: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-693  e93638a6-01e5-4057-9d3e-37a1acc08b84 148147 0 2024-01-31 06:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:14:58.712: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-693  e93638a6-01e5-4057-9d3e-37a1acc08b84 148148 0 2024-01-31 06:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-31 06:14:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 01/31/24 06:14:58.712
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 01/31/24 06:14:58.72
  STEP: changing the label value of the configmap back @ 01/31/24 06:15:08.723
  STEP: modifying the configmap a third time @ 01/31/24 06:15:08.735
  STEP: deleting the configmap @ 01/31/24 06:15:08.744
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 01/31/24 06:15:08.749
  Jan 31 06:15:08.749: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-693  e93638a6-01e5-4057-9d3e-37a1acc08b84 148192 0 2024-01-31 06:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-31 06:15:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:15:08.750: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-693  e93638a6-01e5-4057-9d3e-37a1acc08b84 148193 0 2024-01-31 06:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-31 06:15:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:15:08.750: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-693  e93638a6-01e5-4057-9d3e-37a1acc08b84 148194 0 2024-01-31 06:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-31 06:15:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:15:08.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-693" for this suite. @ 01/31/24 06:15:08.756
• [10.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 01/31/24 06:15:08.762
  Jan 31 06:15:08.762: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename daemonsets @ 01/31/24 06:15:08.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:15:08.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:15:08.781
  STEP: Creating simple DaemonSet "daemon-set" @ 01/31/24 06:15:08.799
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/31/24 06:15:08.805
  Jan 31 06:15:08.812: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:15:08.815: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:15:08.815: INFO: Node nodea08 is running 0 daemon pod, expected 1
  Jan 31 06:15:09.816: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:15:09.820: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 31 06:15:09.820: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 01/31/24 06:15:09.824
  STEP: DeleteCollection of the DaemonSets @ 01/31/24 06:15:09.828
  STEP: Verify that ReplicaSets have been deleted @ 01/31/24 06:15:09.835
  Jan 31 06:15:09.849: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"148227"},"items":null}

  Jan 31 06:15:09.854: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"148227"},"items":[{"metadata":{"name":"daemon-set-5nrzw","generateName":"daemon-set-","namespace":"daemonsets-3130","uid":"ee961861-5ea2-4aa5-bfee-209f3f515362","resourceVersion":"148225","creationTimestamp":"2024-01-31T06:15:08Z","deletionTimestamp":"2024-01-31T06:15:39Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a9b3e010-97dc-4102-96e5-c1857a082d5a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-01-31T06:15:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a9b3e010-97dc-4102-96e5-c1857a082d5a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-01-31T06:15:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.132\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2qlt6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2qlt6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nodea08","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nodea08"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-31T06:15:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-31T06:15:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-31T06:15:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-31T06:15:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-31T06:15:08Z"}],"hostIP":"192.168.100.28","hostIPs":[{"ip":"192.168.100.28"}],"podIP":"10.244.1.132","podIPs":[{"ip":"10.244.1.132"}],"startTime":"2024-01-31T06:15:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-01-31T06:15:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1cc0d075ab25c4f14d6507066d2ab507f0906f5375269cf4fafae7d7cad43734","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-t5qns","generateName":"daemon-set-","namespace":"daemonsets-3130","uid":"802a6822-72d0-4616-a948-1e295ffd6e49","resourceVersion":"148226","creationTimestamp":"2024-01-31T06:15:08Z","deletionTimestamp":"2024-01-31T06:15:39Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a9b3e010-97dc-4102-96e5-c1857a082d5a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-01-31T06:15:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a9b3e010-97dc-4102-96e5-c1857a082d5a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-01-31T06:15:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.75\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-66zqx","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-66zqx","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nodeb29","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nodeb29"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-31T06:15:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-31T06:15:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-31T06:15:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-31T06:15:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-31T06:15:08Z"}],"hostIP":"192.168.100.129","hostIPs":[{"ip":"192.168.100.129"}],"podIP":"10.244.2.75","podIPs":[{"ip":"10.244.2.75"}],"startTime":"2024-01-31T06:15:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-01-31T06:15:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f541ee0fc6027ceac099862c402b648581093808aa60b155f1974ba29ead2985","started":true}],"qosClass":"BestEffort"}}]}

  Jan 31 06:15:09.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3130" for this suite. @ 01/31/24 06:15:09.871
• [1.115 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 01/31/24 06:15:09.877
  Jan 31 06:15:09.877: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:15:09.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:15:09.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:15:09.898
  STEP: creating Agnhost RC @ 01/31/24 06:15:09.903
  Jan 31 06:15:09.903: INFO: namespace kubectl-4537
  Jan 31 06:15:09.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-4537 create -f -'
  Jan 31 06:15:10.108: INFO: stderr: ""
  Jan 31 06:15:10.108: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/31/24 06:15:10.108
  Jan 31 06:15:11.115: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 31 06:15:11.115: INFO: Found 0 / 1
  Jan 31 06:15:12.115: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 31 06:15:12.115: INFO: Found 1 / 1
  Jan 31 06:15:12.115: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jan 31 06:15:12.120: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 31 06:15:12.120: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan 31 06:15:12.120: INFO: wait on agnhost-primary startup in kubectl-4537 
  Jan 31 06:15:12.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-4537 logs agnhost-primary-9rkmj agnhost-primary'
  Jan 31 06:15:12.253: INFO: stderr: ""
  Jan 31 06:15:12.253: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 01/31/24 06:15:12.253
  Jan 31 06:15:12.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-4537 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jan 31 06:15:12.366: INFO: stderr: ""
  Jan 31 06:15:12.366: INFO: stdout: "service/rm2 exposed\n"
  Jan 31 06:15:12.370: INFO: Service rm2 in namespace kubectl-4537 found.
  STEP: exposing service @ 01/31/24 06:15:14.379
  Jan 31 06:15:14.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-4537 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jan 31 06:15:14.494: INFO: stderr: ""
  Jan 31 06:15:14.494: INFO: stdout: "service/rm3 exposed\n"
  Jan 31 06:15:14.498: INFO: Service rm3 in namespace kubectl-4537 found.
  Jan 31 06:15:16.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4537" for this suite. @ 01/31/24 06:15:16.513
• [6.643 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 01/31/24 06:15:16.52
  Jan 31 06:15:16.520: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename field-validation @ 01/31/24 06:15:16.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:15:16.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:15:16.548
  Jan 31 06:15:16.553: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:15:19.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3050" for this suite. @ 01/31/24 06:15:19.687
• [3.175 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 01/31/24 06:15:19.696
  Jan 31 06:15:19.696: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename daemonsets @ 01/31/24 06:15:19.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:15:19.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:15:19.716
  STEP: Creating simple DaemonSet "daemon-set" @ 01/31/24 06:15:19.743
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/31/24 06:15:19.749
  Jan 31 06:15:19.753: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:15:19.757: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:15:19.757: INFO: Node nodea08 is running 0 daemon pod, expected 1
  Jan 31 06:15:20.756: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:15:20.760: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 31 06:15:20.761: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 01/31/24 06:15:20.764
  Jan 31 06:15:20.769: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 01/31/24 06:15:20.769
  Jan 31 06:15:20.781: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 01/31/24 06:15:20.781
  Jan 31 06:15:20.784: INFO: Observed &DaemonSet event: ADDED
  Jan 31 06:15:20.784: INFO: Observed &DaemonSet event: MODIFIED
  Jan 31 06:15:20.784: INFO: Observed &DaemonSet event: MODIFIED
  Jan 31 06:15:20.785: INFO: Observed &DaemonSet event: MODIFIED
  Jan 31 06:15:20.785: INFO: Found daemon set daemon-set in namespace daemonsets-2263 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan 31 06:15:20.785: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 01/31/24 06:15:20.785
  STEP: watching for the daemon set status to be patched @ 01/31/24 06:15:20.793
  Jan 31 06:15:20.796: INFO: Observed &DaemonSet event: ADDED
  Jan 31 06:15:20.796: INFO: Observed &DaemonSet event: MODIFIED
  Jan 31 06:15:20.797: INFO: Observed &DaemonSet event: MODIFIED
  Jan 31 06:15:20.797: INFO: Observed &DaemonSet event: MODIFIED
  Jan 31 06:15:20.797: INFO: Observed daemon set daemon-set in namespace daemonsets-2263 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan 31 06:15:20.797: INFO: Observed &DaemonSet event: MODIFIED
  Jan 31 06:15:20.797: INFO: Found daemon set daemon-set in namespace daemonsets-2263 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jan 31 06:15:20.797: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 01/31/24 06:15:20.801
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2263, will wait for the garbage collector to delete the pods @ 01/31/24 06:15:20.801
  Jan 31 06:15:20.862: INFO: Deleting DaemonSet.extensions daemon-set took: 7.115075ms
  Jan 31 06:15:20.963: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.046307ms
  Jan 31 06:15:22.768: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:15:22.768: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 31 06:15:22.773: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"148387"},"items":null}

  Jan 31 06:15:22.776: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"148387"},"items":null}

  Jan 31 06:15:22.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2263" for this suite. @ 01/31/24 06:15:22.797
• [3.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 01/31/24 06:15:22.805
  Jan 31 06:15:22.805: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/31/24 06:15:22.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:15:22.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:15:22.825
  STEP: Cleaning up the secret @ 01/31/24 06:15:24.865
  STEP: Cleaning up the configmap @ 01/31/24 06:15:24.871
  STEP: Cleaning up the pod @ 01/31/24 06:15:24.876
  Jan 31 06:15:24.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9359" for this suite. @ 01/31/24 06:15:24.892
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 01/31/24 06:15:24.901
  Jan 31 06:15:24.901: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename disruption @ 01/31/24 06:15:24.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:15:24.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:15:24.921
  STEP: Creating a kubernetes client @ 01/31/24 06:15:24.926
  Jan 31 06:15:24.926: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename disruption-2 @ 01/31/24 06:15:24.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:15:24.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:15:24.944
  STEP: Waiting for the pdb to be processed @ 01/31/24 06:15:24.954
  STEP: Waiting for the pdb to be processed @ 01/31/24 06:15:26.964
  STEP: Waiting for the pdb to be processed @ 01/31/24 06:15:26.975
  STEP: listing a collection of PDBs across all namespaces @ 01/31/24 06:15:28.981
  STEP: listing a collection of PDBs in namespace disruption-9354 @ 01/31/24 06:15:28.985
  STEP: deleting a collection of PDBs @ 01/31/24 06:15:28.988
  STEP: Waiting for the PDB collection to be deleted @ 01/31/24 06:15:29
  Jan 31 06:15:29.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1214" for this suite. @ 01/31/24 06:15:29.008
  Jan 31 06:15:29.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9354" for this suite. @ 01/31/24 06:15:29.018
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 01/31/24 06:15:29.024
  Jan 31 06:15:29.024: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename events @ 01/31/24 06:15:29.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:15:29.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:15:29.044
  STEP: creating a test event @ 01/31/24 06:15:29.049
  STEP: listing all events in all namespaces @ 01/31/24 06:15:29.053
  STEP: patching the test event @ 01/31/24 06:15:29.059
  STEP: fetching the test event @ 01/31/24 06:15:29.066
  STEP: updating the test event @ 01/31/24 06:15:29.07
  STEP: getting the test event @ 01/31/24 06:15:29.08
  STEP: deleting the test event @ 01/31/24 06:15:29.083
  STEP: listing all events in all namespaces @ 01/31/24 06:15:29.088
  Jan 31 06:15:29.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7714" for this suite. @ 01/31/24 06:15:29.096
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 01/31/24 06:15:29.103
  Jan 31 06:15:29.103: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename statefulset @ 01/31/24 06:15:29.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:15:29.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:15:29.12
  STEP: Creating service test in namespace statefulset-9721 @ 01/31/24 06:15:29.125
  STEP: Creating a new StatefulSet @ 01/31/24 06:15:29.129
  Jan 31 06:15:29.143: INFO: Found 0 stateful pods, waiting for 3
  Jan 31 06:15:39.145: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 06:15:39.145: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 06:15:39.145: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 06:15:39.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-9721 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 31 06:15:39.362: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 31 06:15:39.362: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 31 06:15:39.362: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/31/24 06:15:49.373
  Jan 31 06:15:49.397: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 01/31/24 06:15:49.397
  STEP: Updating Pods in reverse ordinal order @ 01/31/24 06:15:59.41
  Jan 31 06:15:59.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-9721 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 31 06:15:59.616: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 31 06:15:59.616: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 31 06:15:59.616: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 01/31/24 06:16:09.636
  Jan 31 06:16:09.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-9721 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 31 06:16:09.837: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 31 06:16:09.837: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 31 06:16:09.838: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 31 06:16:19.869: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 01/31/24 06:16:29.883
  Jan 31 06:16:29.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-9721 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 31 06:16:30.124: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 31 06:16:30.124: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 31 06:16:30.124: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 31 06:16:40.148: INFO: Deleting all statefulset in ns statefulset-9721
  Jan 31 06:16:40.151: INFO: Scaling statefulset ss2 to 0
  Jan 31 06:16:50.173: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 31 06:16:50.176: INFO: Deleting statefulset ss2
  Jan 31 06:16:50.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9721" for this suite. @ 01/31/24 06:16:50.2
• [81.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 01/31/24 06:16:50.208
  Jan 31 06:16:50.208: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sched-pred @ 01/31/24 06:16:50.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:16:50.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:16:50.224
  Jan 31 06:16:50.228: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan 31 06:16:50.235: INFO: Waiting for terminating namespaces to be deleted...
  Jan 31 06:16:50.238: INFO: 
  Logging pods the apiserver thinks is on node nodea08 before test
  Jan 31 06:16:50.245: INFO: kube-flannel-ds-kh6sw from kube-flannel started at 2024-01-30 10:24:14 +0000 UTC (1 container statuses recorded)
  Jan 31 06:16:50.245: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 31 06:16:50.245: INFO: kube-proxy-sn68b from kube-system started at 2024-01-30 08:42:19 +0000 UTC (1 container statuses recorded)
  Jan 31 06:16:50.245: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 31 06:16:50.245: INFO: sonobuoy from sonobuoy started at 2024-01-31 06:01:13 +0000 UTC (1 container statuses recorded)
  Jan 31 06:16:50.245: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan 31 06:16:50.245: INFO: sonobuoy-e2e-job-057bc96fa8de4553 from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 06:16:50.245: INFO: 	Container e2e ready: true, restart count 0
  Jan 31 06:16:50.245: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 06:16:50.245: INFO: sonobuoy-systemd-logs-daemon-set-b358b7ceaa5f4c01-zmssj from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 06:16:50.245: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 06:16:50.245: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan 31 06:16:50.245: INFO: 
  Logging pods the apiserver thinks is on node nodeb29 before test
  Jan 31 06:16:50.250: INFO: kube-flannel-ds-rh7j4 from kube-flannel started at 2024-01-30 08:42:26 +0000 UTC (1 container statuses recorded)
  Jan 31 06:16:50.250: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 31 06:16:50.250: INFO: kube-proxy-bd7d8 from kube-system started at 2024-01-30 08:42:26 +0000 UTC (1 container statuses recorded)
  Jan 31 06:16:50.250: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 31 06:16:50.250: INFO: sonobuoy-systemd-logs-daemon-set-b358b7ceaa5f4c01-9bvwd from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 06:16:50.250: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 06:16:50.250: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 01/31/24 06:16:50.25
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17af5a1065b0c666], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 01/31/24 06:16:50.281
  Jan 31 06:16:51.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6747" for this suite. @ 01/31/24 06:16:51.282
• [1.080 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 01/31/24 06:16:51.288
  Jan 31 06:16:51.288: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 06:16:51.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:16:51.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:16:51.307
  STEP: Creating secret with name secret-test-map-4595baa1-d9a6-4844-a1c7-35ddf8026ab4 @ 01/31/24 06:16:51.311
  STEP: Creating a pod to test consume secrets @ 01/31/24 06:16:51.316
  STEP: Saw pod success @ 01/31/24 06:16:55.338
  Jan 31 06:16:55.342: INFO: Trying to get logs from node nodea08 pod pod-secrets-a296d74d-e954-4192-b906-675b3441bd94 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 06:16:55.361
  Jan 31 06:16:55.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9994" for this suite. @ 01/31/24 06:16:55.377
• [4.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 01/31/24 06:16:55.387
  Jan 31 06:16:55.387: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:16:55.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:16:55.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:16:55.404
  STEP: Starting the proxy @ 01/31/24 06:16:55.408
  Jan 31 06:16:55.409: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-3155 proxy --unix-socket=/tmp/kubectl-proxy-unix3201577796/test'
  STEP: retrieving proxy /api/ output @ 01/31/24 06:16:55.479
  Jan 31 06:16:55.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3155" for this suite. @ 01/31/24 06:16:55.485
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 01/31/24 06:16:55.492
  Jan 31 06:16:55.492: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename statefulset @ 01/31/24 06:16:55.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:16:55.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:16:55.509
  STEP: Creating service test in namespace statefulset-6022 @ 01/31/24 06:16:55.513
  Jan 31 06:16:55.525: INFO: Found 0 stateful pods, waiting for 1
  Jan 31 06:17:05.528: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 01/31/24 06:17:05.536
  W0131 06:17:05.544974      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jan 31 06:17:05.552: INFO: Found 1 stateful pods, waiting for 2
  Jan 31 06:17:15.555: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 06:17:15.555: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 01/31/24 06:17:15.562
  STEP: Delete all of the StatefulSets @ 01/31/24 06:17:15.566
  STEP: Verify that StatefulSets have been deleted @ 01/31/24 06:17:15.573
  Jan 31 06:17:15.577: INFO: Deleting all statefulset in ns statefulset-6022
  Jan 31 06:17:15.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6022" for this suite. @ 01/31/24 06:17:15.593
• [20.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 01/31/24 06:17:15.599
  Jan 31 06:17:15.599: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:17:15.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:17:15.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:17:15.617
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4391 @ 01/31/24 06:17:15.622
  STEP: changing the ExternalName service to type=NodePort @ 01/31/24 06:17:15.626
  STEP: creating replication controller externalname-service in namespace services-4391 @ 01/31/24 06:17:15.675
  I0131 06:17:15.684363      23 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4391, replica count: 2
  I0131 06:17:18.736220      23 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 31 06:17:18.736: INFO: Creating new exec pod
  Jan 31 06:17:21.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jan 31 06:17:21.988: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jan 31 06:17:21.988: INFO: stdout: "externalname-service-gvsqd"
  Jan 31 06:17:21.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.199.225 80'
  Jan 31 06:17:22.188: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.199.225 80\nConnection to 10.109.199.225 80 port [tcp/http] succeeded!\n"
  Jan 31 06:17:22.188: INFO: stdout: "externalname-service-gvsqd"
  Jan 31 06:17:22.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.28 30112'
  Jan 31 06:17:22.392: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.28 30112\nConnection to 192.168.100.28 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:22.393: INFO: stdout: ""
  Jan 31 06:17:23.189: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.28 30112'
  Jan 31 06:17:23.402: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.28 30112\nConnection to 192.168.100.28 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:23.402: INFO: stdout: "externalname-service-fz7xs"
  Jan 31 06:17:23.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 30112'
  Jan 31 06:17:23.605: INFO: stderr: "+ echo hostName+ \nnc -v -t -w 2 192.168.100.129 30112\nConnection to 192.168.100.129 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:23.605: INFO: stdout: ""
  Jan 31 06:17:24.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 30112'
  Jan 31 06:17:24.605: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 30112\nConnection to 192.168.100.129 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:24.606: INFO: stdout: ""
  Jan 31 06:17:25.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 30112'
  Jan 31 06:17:25.620: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 30112\nConnection to 192.168.100.129 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:25.620: INFO: stdout: ""
  Jan 31 06:17:26.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 30112'
  Jan 31 06:17:26.614: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 30112\nConnection to 192.168.100.129 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:26.614: INFO: stdout: ""
  Jan 31 06:17:27.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 30112'
  Jan 31 06:17:27.625: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 30112\nConnection to 192.168.100.129 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:27.626: INFO: stdout: ""
  Jan 31 06:17:28.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 30112'
  Jan 31 06:17:28.606: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 30112\nConnection to 192.168.100.129 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:28.606: INFO: stdout: ""
  Jan 31 06:17:29.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 30112'
  Jan 31 06:17:29.619: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 30112\nConnection to 192.168.100.129 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:29.619: INFO: stdout: ""
  Jan 31 06:17:30.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 30112'
  Jan 31 06:17:30.609: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 30112\nConnection to 192.168.100.129 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:30.609: INFO: stdout: ""
  Jan 31 06:17:31.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 30112'
  Jan 31 06:17:31.613: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 30112\nConnection to 192.168.100.129 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:31.613: INFO: stdout: ""
  Jan 31 06:17:32.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 30112'
  Jan 31 06:17:32.605: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 30112\nConnection to 192.168.100.129 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:32.605: INFO: stdout: ""
  Jan 31 06:17:33.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4391 exec execpod8d4wh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 30112'
  Jan 31 06:17:33.612: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 30112\nConnection to 192.168.100.129 30112 port [tcp/*] succeeded!\n"
  Jan 31 06:17:33.612: INFO: stdout: "externalname-service-fz7xs"
  Jan 31 06:17:33.612: INFO: Cleaning up the ExternalName to NodePort test service
  Jan 31 06:17:33.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4391" for this suite. @ 01/31/24 06:17:33.64
• [18.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 01/31/24 06:17:33.648
  Jan 31 06:17:33.648: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:17:33.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:17:33.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:17:33.667
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:17:33.671
  STEP: Saw pod success @ 01/31/24 06:17:37.697
  Jan 31 06:17:37.700: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-cf64ebc7-253b-4b4a-9017-12fd6c9aa620 container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:17:37.709
  Jan 31 06:17:37.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6662" for this suite. @ 01/31/24 06:17:37.734
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 01/31/24 06:17:37.745
  Jan 31 06:17:37.745: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/31/24 06:17:37.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:17:37.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:17:37.768
  STEP: creating a target pod @ 01/31/24 06:17:37.772
  STEP: adding an ephemeral container @ 01/31/24 06:17:39.793
  STEP: checking pod container endpoints @ 01/31/24 06:17:41.816
  Jan 31 06:17:41.816: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9608 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:17:41.816: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:17:41.817: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:17:41.817: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-9608/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jan 31 06:17:41.933: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 01/31/24 06:17:41.942
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 01/31/24 06:17:41.947
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 01/31/24 06:17:41.96
  Jan 31 06:17:41.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9608" for this suite. @ 01/31/24 06:17:41.972
• [4.233 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 01/31/24 06:17:41.978
  Jan 31 06:17:41.978: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 06:17:41.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:17:41.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:17:41.996
  STEP: Setting up server cert @ 01/31/24 06:17:42.018
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 06:17:42.509
  STEP: Deploying the webhook pod @ 01/31/24 06:17:42.517
  STEP: Wait for the deployment to be ready @ 01/31/24 06:17:42.529
  Jan 31 06:17:42.537: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/31/24 06:17:44.552
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 06:17:44.566
  Jan 31 06:17:45.566: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 01/31/24 06:17:45.576
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/31/24 06:17:45.577
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 01/31/24 06:17:45.602
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 01/31/24 06:17:46.614
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/31/24 06:17:46.614
  STEP: Having no error when timeout is longer than webhook latency @ 01/31/24 06:17:47.648
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/31/24 06:17:47.648
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 01/31/24 06:17:52.694
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/31/24 06:17:52.694
  Jan 31 06:17:57.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9353" for this suite. @ 01/31/24 06:17:57.775
  STEP: Destroying namespace "webhook-markers-8368" for this suite. @ 01/31/24 06:17:57.78
• [15.807 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 01/31/24 06:17:57.786
  Jan 31 06:17:57.786: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename dns @ 01/31/24 06:17:57.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:17:57.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:17:57.803
  STEP: Creating a test headless service @ 01/31/24 06:17:57.807
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8664 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8664;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8664 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8664;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8664.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8664.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8664.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8664.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8664.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8664.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8664.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8664.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8664.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8664.svc;check="$$(dig +notcp +noall +answer +search 210.134.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.134.210_udp@PTR;check="$$(dig +tcp +noall +answer +search 210.134.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.134.210_tcp@PTR;sleep 1; done
   @ 01/31/24 06:17:57.826
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8664 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8664;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8664 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8664;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8664.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8664.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8664.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8664.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8664.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8664.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8664.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8664.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8664.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8664.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8664.svc;check="$$(dig +notcp +noall +answer +search 210.134.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.134.210_udp@PTR;check="$$(dig +tcp +noall +answer +search 210.134.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.134.210_tcp@PTR;sleep 1; done
   @ 01/31/24 06:17:57.826
  STEP: creating a pod to probe DNS @ 01/31/24 06:17:57.827
  STEP: submitting the pod to kubernetes @ 01/31/24 06:17:57.827
  STEP: retrieving the pod @ 01/31/24 06:17:59.846
  STEP: looking for the results for each expected name from probers @ 01/31/24 06:17:59.851
  Jan 31 06:17:59.856: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.861: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.867: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.871: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.876: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.880: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.885: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.889: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.912: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.916: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.920: INFO: Unable to read jessie_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.925: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.929: INFO: Unable to read jessie_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.934: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.938: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.943: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:17:59.959: INFO: Lookups using dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8664 wheezy_tcp@dns-test-service.dns-8664 wheezy_udp@dns-test-service.dns-8664.svc wheezy_tcp@dns-test-service.dns-8664.svc wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8664 jessie_tcp@dns-test-service.dns-8664 jessie_udp@dns-test-service.dns-8664.svc jessie_tcp@dns-test-service.dns-8664.svc jessie_udp@_http._tcp.dns-test-service.dns-8664.svc jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc]

  Jan 31 06:17:59.967: INFO: Pod client logs for webserver: 
  Jan 31 06:17:59.974: INFO: Pod client logs for querier: 
  Jan 31 06:17:59.983: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:18:04.856: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.860: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.865: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.870: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.875: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.879: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.883: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.888: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.911: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.915: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.919: INFO: Unable to read jessie_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.924: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.928: INFO: Unable to read jessie_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.933: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.937: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.942: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:04.960: INFO: Lookups using dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8664 wheezy_tcp@dns-test-service.dns-8664 wheezy_udp@dns-test-service.dns-8664.svc wheezy_tcp@dns-test-service.dns-8664.svc wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8664 jessie_tcp@dns-test-service.dns-8664 jessie_udp@dns-test-service.dns-8664.svc jessie_tcp@dns-test-service.dns-8664.svc jessie_udp@_http._tcp.dns-test-service.dns-8664.svc jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc]

  Jan 31 06:18:04.969: INFO: Pod client logs for webserver: 
  Jan 31 06:18:04.976: INFO: Pod client logs for querier: 
  Jan 31 06:18:04.984: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:18:09.860: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.865: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.870: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.874: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.878: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.882: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.887: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.892: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.913: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.918: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.922: INFO: Unable to read jessie_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.927: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.931: INFO: Unable to read jessie_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.935: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.940: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.944: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:09.961: INFO: Lookups using dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8664 wheezy_tcp@dns-test-service.dns-8664 wheezy_udp@dns-test-service.dns-8664.svc wheezy_tcp@dns-test-service.dns-8664.svc wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8664 jessie_tcp@dns-test-service.dns-8664 jessie_udp@dns-test-service.dns-8664.svc jessie_tcp@dns-test-service.dns-8664.svc jessie_udp@_http._tcp.dns-test-service.dns-8664.svc jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc]

  Jan 31 06:18:09.968: INFO: Pod client logs for webserver: 
  Jan 31 06:18:09.975: INFO: Pod client logs for querier: 
  Jan 31 06:18:09.983: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:18:14.856: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.861: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.866: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.872: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.876: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.881: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.886: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.891: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.913: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.917: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.922: INFO: Unable to read jessie_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.926: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.931: INFO: Unable to read jessie_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.936: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.940: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.945: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:14.963: INFO: Lookups using dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8664 wheezy_tcp@dns-test-service.dns-8664 wheezy_udp@dns-test-service.dns-8664.svc wheezy_tcp@dns-test-service.dns-8664.svc wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8664 jessie_tcp@dns-test-service.dns-8664 jessie_udp@dns-test-service.dns-8664.svc jessie_tcp@dns-test-service.dns-8664.svc jessie_udp@_http._tcp.dns-test-service.dns-8664.svc jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc]

  Jan 31 06:18:14.971: INFO: Pod client logs for webserver: 
  Jan 31 06:18:14.979: INFO: Pod client logs for querier: 
  Jan 31 06:18:14.986: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:18:19.860: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.866: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.871: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.876: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.881: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.886: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.890: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.895: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.917: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.921: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.926: INFO: Unable to read jessie_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.930: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.935: INFO: Unable to read jessie_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.939: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.944: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.948: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:19.965: INFO: Lookups using dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8664 wheezy_tcp@dns-test-service.dns-8664 wheezy_udp@dns-test-service.dns-8664.svc wheezy_tcp@dns-test-service.dns-8664.svc wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8664 jessie_tcp@dns-test-service.dns-8664 jessie_udp@dns-test-service.dns-8664.svc jessie_tcp@dns-test-service.dns-8664.svc jessie_udp@_http._tcp.dns-test-service.dns-8664.svc jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc]

  Jan 31 06:18:19.973: INFO: Pod client logs for webserver: 
  Jan 31 06:18:19.980: INFO: Pod client logs for querier: 
  Jan 31 06:18:19.986: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:18:24.857: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.861: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.867: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.871: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.879: INFO: Unable to read wheezy_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.884: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.889: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.893: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.916: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.920: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.924: INFO: Unable to read jessie_udp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.928: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664 from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.933: INFO: Unable to read jessie_udp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.937: INFO: Unable to read jessie_tcp@dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.941: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.945: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc from pod dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7: the server could not find the requested resource (get pods dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7)
  Jan 31 06:18:24.963: INFO: Lookups using dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8664 wheezy_tcp@dns-test-service.dns-8664 wheezy_udp@dns-test-service.dns-8664.svc wheezy_tcp@dns-test-service.dns-8664.svc wheezy_udp@_http._tcp.dns-test-service.dns-8664.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8664.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8664 jessie_tcp@dns-test-service.dns-8664 jessie_udp@dns-test-service.dns-8664.svc jessie_tcp@dns-test-service.dns-8664.svc jessie_udp@_http._tcp.dns-test-service.dns-8664.svc jessie_tcp@_http._tcp.dns-test-service.dns-8664.svc]

  Jan 31 06:18:24.971: INFO: Pod client logs for webserver: 
  Jan 31 06:18:24.980: INFO: Pod client logs for querier: 
  Jan 31 06:18:24.988: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:18:29.959: INFO: DNS probes using dns-8664/dns-test-2590b014-b8b7-4c23-a88e-e19d1ff14fc7 succeeded

  STEP: deleting the pod @ 01/31/24 06:18:29.959
  STEP: deleting the test service @ 01/31/24 06:18:29.976
  STEP: deleting the test headless service @ 01/31/24 06:18:29.993
  Jan 31 06:18:30.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8664" for this suite. @ 01/31/24 06:18:30.004
• [32.224 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 01/31/24 06:18:30.011
  Jan 31 06:18:30.011: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename podtemplate @ 01/31/24 06:18:30.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:18:30.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:18:30.029
  STEP: Create set of pod templates @ 01/31/24 06:18:30.034
  Jan 31 06:18:30.040: INFO: created test-podtemplate-1
  Jan 31 06:18:30.044: INFO: created test-podtemplate-2
  Jan 31 06:18:30.049: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 01/31/24 06:18:30.049
  STEP: delete collection of pod templates @ 01/31/24 06:18:30.052
  Jan 31 06:18:30.052: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 01/31/24 06:18:30.064
  Jan 31 06:18:30.064: INFO: requesting list of pod templates to confirm quantity
  Jan 31 06:18:30.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-633" for this suite. @ 01/31/24 06:18:30.071
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 01/31/24 06:18:30.081
  Jan 31 06:18:30.081: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:18:30.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:18:30.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:18:30.099
  STEP: Creating configMap with name cm-test-opt-del-604e6907-8376-42b0-8cff-7e477512de6d @ 01/31/24 06:18:30.108
  STEP: Creating configMap with name cm-test-opt-upd-e99f20ea-1137-42b0-a055-8b491528bdeb @ 01/31/24 06:18:30.112
  STEP: Creating the pod @ 01/31/24 06:18:30.118
  STEP: Deleting configmap cm-test-opt-del-604e6907-8376-42b0-8cff-7e477512de6d @ 01/31/24 06:18:32.165
  STEP: Updating configmap cm-test-opt-upd-e99f20ea-1137-42b0-a055-8b491528bdeb @ 01/31/24 06:18:32.171
  STEP: Creating configMap with name cm-test-opt-create-855c8190-47c3-4863-8bc1-146dacec859f @ 01/31/24 06:18:32.177
  STEP: waiting to observe update in volume @ 01/31/24 06:18:32.182
  Jan 31 06:19:36.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6702" for this suite. @ 01/31/24 06:19:36.625
• [66.552 seconds]
------------------------------
SS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 01/31/24 06:19:36.633
  Jan 31 06:19:36.633: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename ingressclass @ 01/31/24 06:19:36.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:19:36.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:19:36.656
  STEP: getting /apis @ 01/31/24 06:19:36.662
  STEP: getting /apis/networking.k8s.io @ 01/31/24 06:19:36.668
  STEP: getting /apis/networking.k8s.iov1 @ 01/31/24 06:19:36.67
  STEP: creating @ 01/31/24 06:19:36.673
  STEP: getting @ 01/31/24 06:19:36.689
  STEP: listing @ 01/31/24 06:19:36.692
  STEP: watching @ 01/31/24 06:19:36.695
  Jan 31 06:19:36.695: INFO: starting watch
  STEP: patching @ 01/31/24 06:19:36.698
  STEP: updating @ 01/31/24 06:19:36.703
  Jan 31 06:19:36.708: INFO: waiting for watch events with expected annotations
  Jan 31 06:19:36.708: INFO: saw patched and updated annotations
  STEP: deleting @ 01/31/24 06:19:36.708
  STEP: deleting a collection @ 01/31/24 06:19:36.721
  Jan 31 06:19:36.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-599" for this suite. @ 01/31/24 06:19:36.738
• [0.110 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 01/31/24 06:19:36.743
  Jan 31 06:19:36.743: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename proxy @ 01/31/24 06:19:36.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:19:36.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:19:36.76
  STEP: starting an echo server on multiple ports @ 01/31/24 06:19:36.78
  STEP: creating replication controller proxy-service-dzq46 in namespace proxy-3951 @ 01/31/24 06:19:36.78
  I0131 06:19:36.787341      23 runners.go:197] Created replication controller with name: proxy-service-dzq46, namespace: proxy-3951, replica count: 1
  I0131 06:19:37.839180      23 runners.go:197] proxy-service-dzq46 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0131 06:19:38.840486      23 runners.go:197] proxy-service-dzq46 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 31 06:19:38.845: INFO: setup took 2.080655477s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 01/31/24 06:19:38.845
  Jan 31 06:19:38.855: INFO: (0) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 9.507027ms)
  Jan 31 06:19:38.855: INFO: (0) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 9.44284ms)
  Jan 31 06:19:38.855: INFO: (0) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 10.096348ms)
  Jan 31 06:19:38.855: INFO: (0) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 10.132415ms)
  Jan 31 06:19:38.856: INFO: (0) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 10.460106ms)
  Jan 31 06:19:38.857: INFO: (0) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 11.51261ms)
  Jan 31 06:19:38.857: INFO: (0) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 11.843903ms)
  Jan 31 06:19:38.857: INFO: (0) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 11.59993ms)
  Jan 31 06:19:38.857: INFO: (0) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 11.761303ms)
  Jan 31 06:19:38.859: INFO: (0) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 13.277517ms)
  Jan 31 06:19:38.859: INFO: (0) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 13.183002ms)
  Jan 31 06:19:38.867: INFO: (0) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 21.174604ms)
  Jan 31 06:19:38.867: INFO: (0) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 21.672902ms)
  Jan 31 06:19:38.867: INFO: (0) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 21.452644ms)
  Jan 31 06:19:38.867: INFO: (0) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 21.455387ms)
  Jan 31 06:19:38.867: INFO: (0) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 22.087381ms)
  Jan 31 06:19:38.872: INFO: (1) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 4.472639ms)
  Jan 31 06:19:38.872: INFO: (1) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 4.772943ms)
  Jan 31 06:19:38.873: INFO: (1) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 5.471016ms)
  Jan 31 06:19:38.873: INFO: (1) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 5.426833ms)
  Jan 31 06:19:38.873: INFO: (1) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 5.453672ms)
  Jan 31 06:19:38.873: INFO: (1) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 5.74873ms)
  Jan 31 06:19:38.874: INFO: (1) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 6.021028ms)
  Jan 31 06:19:38.874: INFO: (1) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.939044ms)
  Jan 31 06:19:38.874: INFO: (1) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 6.2115ms)
  Jan 31 06:19:38.874: INFO: (1) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 6.102838ms)
  Jan 31 06:19:38.875: INFO: (1) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 7.519074ms)
  Jan 31 06:19:38.875: INFO: (1) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 7.615463ms)
  Jan 31 06:19:38.875: INFO: (1) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 7.511909ms)
  Jan 31 06:19:38.875: INFO: (1) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 7.51167ms)
  Jan 31 06:19:38.875: INFO: (1) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 7.584656ms)
  Jan 31 06:19:38.876: INFO: (1) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 8.461905ms)
  Jan 31 06:19:38.881: INFO: (2) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 3.722306ms)
  Jan 31 06:19:38.881: INFO: (2) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 4.165467ms)
  Jan 31 06:19:38.881: INFO: (2) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 4.386819ms)
  Jan 31 06:19:38.882: INFO: (2) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 4.485287ms)
  Jan 31 06:19:38.882: INFO: (2) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.487589ms)
  Jan 31 06:19:38.882: INFO: (2) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 5.093977ms)
  Jan 31 06:19:38.882: INFO: (2) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 4.678876ms)
  Jan 31 06:19:38.883: INFO: (2) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 5.038282ms)
  Jan 31 06:19:38.883: INFO: (2) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 5.577826ms)
  Jan 31 06:19:38.883: INFO: (2) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 6.755936ms)
  Jan 31 06:19:38.883: INFO: (2) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 5.338753ms)
  Jan 31 06:19:38.883: INFO: (2) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 5.663543ms)
  Jan 31 06:19:38.883: INFO: (2) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 7.02029ms)
  Jan 31 06:19:38.884: INFO: (2) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.300587ms)
  Jan 31 06:19:38.884: INFO: (2) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 7.145435ms)
  Jan 31 06:19:38.884: INFO: (2) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 6.346772ms)
  Jan 31 06:19:38.890: INFO: (3) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 5.479698ms)
  Jan 31 06:19:38.890: INFO: (3) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 5.819065ms)
  Jan 31 06:19:38.890: INFO: (3) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 5.685214ms)
  Jan 31 06:19:38.891: INFO: (3) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 6.425318ms)
  Jan 31 06:19:38.891: INFO: (3) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.920299ms)
  Jan 31 06:19:38.891: INFO: (3) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 6.76975ms)
  Jan 31 06:19:38.891: INFO: (3) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 6.819387ms)
  Jan 31 06:19:38.891: INFO: (3) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 7.148942ms)
  Jan 31 06:19:38.892: INFO: (3) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 7.446559ms)
  Jan 31 06:19:38.892: INFO: (3) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 7.351125ms)
  Jan 31 06:19:38.893: INFO: (3) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 7.99101ms)
  Jan 31 06:19:38.893: INFO: (3) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 8.123069ms)
  Jan 31 06:19:38.893: INFO: (3) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 8.247752ms)
  Jan 31 06:19:38.893: INFO: (3) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 8.137546ms)
  Jan 31 06:19:38.893: INFO: (3) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 8.145703ms)
  Jan 31 06:19:38.893: INFO: (3) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 8.085214ms)
  Jan 31 06:19:38.899: INFO: (4) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 5.861577ms)
  Jan 31 06:19:38.899: INFO: (4) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 5.841271ms)
  Jan 31 06:19:38.899: INFO: (4) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 6.565116ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 6.427505ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 6.45158ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 6.738379ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 6.586404ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 6.576106ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.659879ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 6.743022ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 6.869428ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 6.659661ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 7.042531ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 7.286659ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 7.372543ms)
  Jan 31 06:19:38.900: INFO: (4) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 7.546336ms)
  Jan 31 06:19:38.904: INFO: (5) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 3.45119ms)
  Jan 31 06:19:38.905: INFO: (5) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 4.455492ms)
  Jan 31 06:19:38.906: INFO: (5) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 4.970342ms)
  Jan 31 06:19:38.906: INFO: (5) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.594747ms)
  Jan 31 06:19:38.906: INFO: (5) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 5.536198ms)
  Jan 31 06:19:38.906: INFO: (5) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 5.717692ms)
  Jan 31 06:19:38.906: INFO: (5) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 5.75256ms)
  Jan 31 06:19:38.907: INFO: (5) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 6.156641ms)
  Jan 31 06:19:38.907: INFO: (5) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 6.248822ms)
  Jan 31 06:19:38.907: INFO: (5) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.01703ms)
  Jan 31 06:19:38.907: INFO: (5) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 6.001282ms)
  Jan 31 06:19:38.907: INFO: (5) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 6.172371ms)
  Jan 31 06:19:38.907: INFO: (5) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 6.149757ms)
  Jan 31 06:19:38.907: INFO: (5) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 6.60194ms)
  Jan 31 06:19:38.907: INFO: (5) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 6.19633ms)
  Jan 31 06:19:38.907: INFO: (5) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 6.255942ms)
  Jan 31 06:19:38.914: INFO: (6) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 7.084736ms)
  Jan 31 06:19:38.915: INFO: (6) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 7.917099ms)
  Jan 31 06:19:38.916: INFO: (6) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 8.371489ms)
  Jan 31 06:19:38.916: INFO: (6) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 8.320669ms)
  Jan 31 06:19:38.916: INFO: (6) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 8.575125ms)
  Jan 31 06:19:38.917: INFO: (6) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 9.381469ms)
  Jan 31 06:19:38.917: INFO: (6) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 9.546047ms)
  Jan 31 06:19:38.917: INFO: (6) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 9.654821ms)
  Jan 31 06:19:38.917: INFO: (6) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 9.641292ms)
  Jan 31 06:19:38.918: INFO: (6) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 10.14205ms)
  Jan 31 06:19:38.918: INFO: (6) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 10.367227ms)
  Jan 31 06:19:38.918: INFO: (6) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 10.425012ms)
  Jan 31 06:19:38.918: INFO: (6) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 10.221877ms)
  Jan 31 06:19:38.918: INFO: (6) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 10.422712ms)
  Jan 31 06:19:38.918: INFO: (6) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 10.525485ms)
  Jan 31 06:19:38.918: INFO: (6) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 10.786466ms)
  Jan 31 06:19:38.924: INFO: (7) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.226308ms)
  Jan 31 06:19:38.924: INFO: (7) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.424396ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.931826ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 5.780557ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 5.824237ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.822024ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 6.225874ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 6.073327ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 5.967254ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 6.175597ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 6.146756ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 6.391008ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 6.578132ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 6.340689ms)
  Jan 31 06:19:38.925: INFO: (7) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.763595ms)
  Jan 31 06:19:38.926: INFO: (7) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 6.509676ms)
  Jan 31 06:19:38.931: INFO: (8) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 4.759504ms)
  Jan 31 06:19:38.931: INFO: (8) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.017994ms)
  Jan 31 06:19:38.931: INFO: (8) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 4.964039ms)
  Jan 31 06:19:38.931: INFO: (8) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 4.980471ms)
  Jan 31 06:19:38.931: INFO: (8) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 5.13801ms)
  Jan 31 06:19:38.931: INFO: (8) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.104893ms)
  Jan 31 06:19:38.931: INFO: (8) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.326371ms)
  Jan 31 06:19:38.931: INFO: (8) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 5.404581ms)
  Jan 31 06:19:38.931: INFO: (8) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 5.570403ms)
  Jan 31 06:19:38.932: INFO: (8) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 6.089877ms)
  Jan 31 06:19:38.932: INFO: (8) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 6.217947ms)
  Jan 31 06:19:38.932: INFO: (8) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 6.214509ms)
  Jan 31 06:19:38.932: INFO: (8) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 6.217056ms)
  Jan 31 06:19:38.932: INFO: (8) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 6.33561ms)
  Jan 31 06:19:38.932: INFO: (8) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.646149ms)
  Jan 31 06:19:38.932: INFO: (8) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 6.467156ms)
  Jan 31 06:19:38.936: INFO: (9) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 3.995387ms)
  Jan 31 06:19:38.937: INFO: (9) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 4.652465ms)
  Jan 31 06:19:38.937: INFO: (9) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 4.727389ms)
  Jan 31 06:19:38.937: INFO: (9) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 4.90951ms)
  Jan 31 06:19:38.937: INFO: (9) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 4.762885ms)
  Jan 31 06:19:38.938: INFO: (9) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 4.970161ms)
  Jan 31 06:19:38.938: INFO: (9) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 4.854295ms)
  Jan 31 06:19:38.938: INFO: (9) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 4.971336ms)
  Jan 31 06:19:38.938: INFO: (9) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 4.80098ms)
  Jan 31 06:19:38.938: INFO: (9) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 4.903779ms)
  Jan 31 06:19:38.938: INFO: (9) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 5.120052ms)
  Jan 31 06:19:38.938: INFO: (9) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 5.647189ms)
  Jan 31 06:19:38.939: INFO: (9) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 5.868871ms)
  Jan 31 06:19:38.939: INFO: (9) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 5.957919ms)
  Jan 31 06:19:38.939: INFO: (9) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 6.18675ms)
  Jan 31 06:19:38.939: INFO: (9) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 6.386288ms)
  Jan 31 06:19:38.942: INFO: (10) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 3.446589ms)
  Jan 31 06:19:38.942: INFO: (10) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 3.437673ms)
  Jan 31 06:19:38.944: INFO: (10) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 4.422286ms)
  Jan 31 06:19:38.944: INFO: (10) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 4.442957ms)
  Jan 31 06:19:38.946: INFO: (10) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 6.801773ms)
  Jan 31 06:19:38.946: INFO: (10) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 6.936727ms)
  Jan 31 06:19:38.946: INFO: (10) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 6.695131ms)
  Jan 31 06:19:38.946: INFO: (10) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 6.715401ms)
  Jan 31 06:19:38.946: INFO: (10) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 6.661223ms)
  Jan 31 06:19:38.946: INFO: (10) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 6.721954ms)
  Jan 31 06:19:38.946: INFO: (10) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 6.701697ms)
  Jan 31 06:19:38.946: INFO: (10) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 6.971783ms)
  Jan 31 06:19:38.947: INFO: (10) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 7.463231ms)
  Jan 31 06:19:38.947: INFO: (10) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 7.424614ms)
  Jan 31 06:19:38.947: INFO: (10) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 7.47626ms)
  Jan 31 06:19:38.947: INFO: (10) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 7.542796ms)
  Jan 31 06:19:38.951: INFO: (11) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 4.381345ms)
  Jan 31 06:19:38.952: INFO: (11) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 5.005616ms)
  Jan 31 06:19:38.952: INFO: (11) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.411286ms)
  Jan 31 06:19:38.952: INFO: (11) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 5.212958ms)
  Jan 31 06:19:38.952: INFO: (11) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 5.362387ms)
  Jan 31 06:19:38.953: INFO: (11) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.555779ms)
  Jan 31 06:19:38.953: INFO: (11) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 5.613693ms)
  Jan 31 06:19:38.953: INFO: (11) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 5.633804ms)
  Jan 31 06:19:38.953: INFO: (11) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.762542ms)
  Jan 31 06:19:38.953: INFO: (11) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 5.862492ms)
  Jan 31 06:19:38.953: INFO: (11) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 5.75937ms)
  Jan 31 06:19:38.953: INFO: (11) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.058235ms)
  Jan 31 06:19:38.953: INFO: (11) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 6.108808ms)
  Jan 31 06:19:38.953: INFO: (11) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 5.984693ms)
  Jan 31 06:19:38.953: INFO: (11) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 6.00972ms)
  Jan 31 06:19:38.953: INFO: (11) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 6.047411ms)
  Jan 31 06:19:38.958: INFO: (12) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.165563ms)
  Jan 31 06:19:38.959: INFO: (12) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.228598ms)
  Jan 31 06:19:38.959: INFO: (12) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 5.435157ms)
  Jan 31 06:19:38.959: INFO: (12) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 5.982882ms)
  Jan 31 06:19:38.959: INFO: (12) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 6.112193ms)
  Jan 31 06:19:38.959: INFO: (12) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 6.053522ms)
  Jan 31 06:19:38.960: INFO: (12) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 6.324633ms)
  Jan 31 06:19:38.960: INFO: (12) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 6.179768ms)
  Jan 31 06:19:38.960: INFO: (12) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 6.246421ms)
  Jan 31 06:19:38.960: INFO: (12) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 6.337518ms)
  Jan 31 06:19:38.960: INFO: (12) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 6.448373ms)
  Jan 31 06:19:38.960: INFO: (12) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 6.604487ms)
  Jan 31 06:19:38.960: INFO: (12) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 6.937124ms)
  Jan 31 06:19:38.960: INFO: (12) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 6.690289ms)
  Jan 31 06:19:38.960: INFO: (12) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 6.828234ms)
  Jan 31 06:19:38.960: INFO: (12) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.999381ms)
  Jan 31 06:19:38.964: INFO: (13) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 3.199045ms)
  Jan 31 06:19:38.964: INFO: (13) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 3.593129ms)
  Jan 31 06:19:38.965: INFO: (13) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 3.715354ms)
  Jan 31 06:19:38.965: INFO: (13) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 3.502932ms)
  Jan 31 06:19:38.965: INFO: (13) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 4.184916ms)
  Jan 31 06:19:38.966: INFO: (13) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 4.231268ms)
  Jan 31 06:19:38.966: INFO: (13) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 5.253105ms)
  Jan 31 06:19:38.966: INFO: (13) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 4.731591ms)
  Jan 31 06:19:38.966: INFO: (13) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 4.951507ms)
  Jan 31 06:19:38.967: INFO: (13) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 5.415281ms)
  Jan 31 06:19:38.967: INFO: (13) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 5.365282ms)
  Jan 31 06:19:38.967: INFO: (13) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 5.509246ms)
  Jan 31 06:19:38.967: INFO: (13) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 5.602046ms)
  Jan 31 06:19:38.967: INFO: (13) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 5.523938ms)
  Jan 31 06:19:38.967: INFO: (13) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 5.711581ms)
  Jan 31 06:19:38.967: INFO: (13) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 5.744401ms)
  Jan 31 06:19:38.970: INFO: (14) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 3.021962ms)
  Jan 31 06:19:38.971: INFO: (14) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 3.75471ms)
  Jan 31 06:19:38.971: INFO: (14) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 3.490945ms)
  Jan 31 06:19:38.971: INFO: (14) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 3.75466ms)
  Jan 31 06:19:38.971: INFO: (14) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 3.876803ms)
  Jan 31 06:19:38.972: INFO: (14) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 4.431401ms)
  Jan 31 06:19:38.972: INFO: (14) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 4.469953ms)
  Jan 31 06:19:38.972: INFO: (14) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 5.111093ms)
  Jan 31 06:19:38.972: INFO: (14) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 5.042989ms)
  Jan 31 06:19:38.972: INFO: (14) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 4.494573ms)
  Jan 31 06:19:38.972: INFO: (14) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 5.153896ms)
  Jan 31 06:19:38.974: INFO: (14) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 6.258522ms)
  Jan 31 06:19:38.974: INFO: (14) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.552251ms)
  Jan 31 06:19:38.974: INFO: (14) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 6.704266ms)
  Jan 31 06:19:38.974: INFO: (14) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 6.444243ms)
  Jan 31 06:19:38.974: INFO: (14) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 6.184177ms)
  Jan 31 06:19:38.979: INFO: (15) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.128961ms)
  Jan 31 06:19:38.980: INFO: (15) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 5.113954ms)
  Jan 31 06:19:38.980: INFO: (15) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.398879ms)
  Jan 31 06:19:38.979: INFO: (15) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 5.085277ms)
  Jan 31 06:19:38.980: INFO: (15) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 5.443951ms)
  Jan 31 06:19:38.980: INFO: (15) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 5.345144ms)
  Jan 31 06:19:38.980: INFO: (15) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.097649ms)
  Jan 31 06:19:38.980: INFO: (15) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 5.0673ms)
  Jan 31 06:19:38.980: INFO: (15) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.239725ms)
  Jan 31 06:19:38.981: INFO: (15) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 6.105197ms)
  Jan 31 06:19:38.981: INFO: (15) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 6.306441ms)
  Jan 31 06:19:38.981: INFO: (15) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 6.485807ms)
  Jan 31 06:19:38.981: INFO: (15) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 6.249588ms)
  Jan 31 06:19:38.981: INFO: (15) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 6.265681ms)
  Jan 31 06:19:38.981: INFO: (15) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 6.62377ms)
  Jan 31 06:19:38.981: INFO: (15) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.557606ms)
  Jan 31 06:19:38.987: INFO: (16) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 3.96508ms)
  Jan 31 06:19:38.987: INFO: (16) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 3.955346ms)
  Jan 31 06:19:38.987: INFO: (16) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 4.194365ms)
  Jan 31 06:19:38.987: INFO: (16) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 4.21381ms)
  Jan 31 06:19:38.988: INFO: (16) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 4.618143ms)
  Jan 31 06:19:38.989: INFO: (16) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 5.863453ms)
  Jan 31 06:19:38.988: INFO: (16) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 4.595489ms)
  Jan 31 06:19:38.988: INFO: (16) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 5.176333ms)
  Jan 31 06:19:38.988: INFO: (16) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 4.964778ms)
  Jan 31 06:19:38.988: INFO: (16) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.059717ms)
  Jan 31 06:19:38.989: INFO: (16) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 5.738216ms)
  Jan 31 06:19:38.989: INFO: (16) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 5.877166ms)
  Jan 31 06:19:38.989: INFO: (16) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 5.562486ms)
  Jan 31 06:19:38.989: INFO: (16) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 5.607074ms)
  Jan 31 06:19:38.989: INFO: (16) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 5.86415ms)
  Jan 31 06:19:38.989: INFO: (16) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 6.311644ms)
  Jan 31 06:19:38.995: INFO: (17) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 5.421164ms)
  Jan 31 06:19:38.995: INFO: (17) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 5.360711ms)
  Jan 31 06:19:38.996: INFO: (17) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.821115ms)
  Jan 31 06:19:38.996: INFO: (17) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 6.130147ms)
  Jan 31 06:19:38.996: INFO: (17) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 6.14982ms)
  Jan 31 06:19:38.996: INFO: (17) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 6.270669ms)
  Jan 31 06:19:38.996: INFO: (17) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 6.408799ms)
  Jan 31 06:19:38.996: INFO: (17) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 6.213675ms)
  Jan 31 06:19:38.996: INFO: (17) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 6.203275ms)
  Jan 31 06:19:38.996: INFO: (17) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 6.378572ms)
  Jan 31 06:19:38.996: INFO: (17) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.405239ms)
  Jan 31 06:19:38.996: INFO: (17) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 6.396807ms)
  Jan 31 06:19:38.997: INFO: (17) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 6.41576ms)
  Jan 31 06:19:38.997: INFO: (17) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 6.669261ms)
  Jan 31 06:19:38.997: INFO: (17) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 6.970099ms)
  Jan 31 06:19:38.997: INFO: (17) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 6.793894ms)
  Jan 31 06:19:39.003: INFO: (18) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 4.963048ms)
  Jan 31 06:19:39.003: INFO: (18) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 5.263934ms)
  Jan 31 06:19:39.003: INFO: (18) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.12923ms)
  Jan 31 06:19:39.003: INFO: (18) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 6.009624ms)
  Jan 31 06:19:39.003: INFO: (18) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.004789ms)
  Jan 31 06:19:39.003: INFO: (18) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 5.119019ms)
  Jan 31 06:19:39.003: INFO: (18) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 5.173418ms)
  Jan 31 06:19:39.003: INFO: (18) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 5.110719ms)
  Jan 31 06:19:39.003: INFO: (18) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 5.279604ms)
  Jan 31 06:19:39.004: INFO: (18) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 5.991496ms)
  Jan 31 06:19:39.004: INFO: (18) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 5.824305ms)
  Jan 31 06:19:39.004: INFO: (18) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 6.787196ms)
  Jan 31 06:19:39.004: INFO: (18) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 6.12662ms)
  Jan 31 06:19:39.004: INFO: (18) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 6.335244ms)
  Jan 31 06:19:39.004: INFO: (18) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 7.020313ms)
  Jan 31 06:19:39.004: INFO: (18) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 6.77933ms)
  Jan 31 06:19:39.011: INFO: (19) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:162/proxy/: bar (200; 6.932497ms)
  Jan 31 06:19:39.011: INFO: (19) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:462/proxy/: tls qux (200; 7.012977ms)
  Jan 31 06:19:39.011: INFO: (19) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:443/proxy/tlsrewritem... (200; 6.733519ms)
  Jan 31 06:19:39.012: INFO: (19) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:160/proxy/: foo (200; 7.390891ms)
  Jan 31 06:19:39.012: INFO: (19) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:160/proxy/: foo (200; 7.271237ms)
  Jan 31 06:19:39.012: INFO: (19) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname2/proxy/: tls qux (200; 7.378222ms)
  Jan 31 06:19:39.012: INFO: (19) /api/v1/namespaces/proxy-3951/services/https:proxy-service-dzq46:tlsportname1/proxy/: tls baz (200; 7.365814ms)
  Jan 31 06:19:39.012: INFO: (19) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:1080/proxy/rewriteme">test<... (200; 7.361361ms)
  Jan 31 06:19:39.012: INFO: (19) /api/v1/namespaces/proxy-3951/pods/https:proxy-service-dzq46-prz7z:460/proxy/: tls baz (200; 7.468669ms)
  Jan 31 06:19:39.012: INFO: (19) /api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/http:proxy-service-dzq46-prz7z:1080/proxy/rewriteme">... (200; 7.416532ms)
  Jan 31 06:19:39.012: INFO: (19) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/: <a href="/api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z/proxy/rewriteme">test</a> (200; 7.529476ms)
  Jan 31 06:19:39.012: INFO: (19) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname2/proxy/: bar (200; 7.596927ms)
  Jan 31 06:19:39.012: INFO: (19) /api/v1/namespaces/proxy-3951/pods/proxy-service-dzq46-prz7z:162/proxy/: bar (200; 7.66564ms)
  Jan 31 06:19:39.013: INFO: (19) /api/v1/namespaces/proxy-3951/services/http:proxy-service-dzq46:portname1/proxy/: foo (200; 8.189891ms)
  Jan 31 06:19:39.013: INFO: (19) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname1/proxy/: foo (200; 8.092808ms)
  Jan 31 06:19:39.013: INFO: (19) /api/v1/namespaces/proxy-3951/services/proxy-service-dzq46:portname2/proxy/: bar (200; 8.105485ms)
  STEP: deleting ReplicationController proxy-service-dzq46 in namespace proxy-3951, will wait for the garbage collector to delete the pods @ 01/31/24 06:19:39.013
  Jan 31 06:19:39.074: INFO: Deleting ReplicationController proxy-service-dzq46 took: 7.064851ms
  Jan 31 06:19:39.175: INFO: Terminating ReplicationController proxy-service-dzq46 pods took: 100.742725ms
  Jan 31 06:19:41.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3951" for this suite. @ 01/31/24 06:19:41.781
• [5.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 01/31/24 06:19:41.788
  Jan 31 06:19:41.788: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename proxy @ 01/31/24 06:19:41.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:19:41.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:19:41.804
  Jan 31 06:19:41.808: INFO: Creating pod...
  Jan 31 06:19:43.825: INFO: Creating service...
  Jan 31 06:19:43.840: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/pods/agnhost/proxy/some/path/with/DELETE
  Jan 31 06:19:43.846: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan 31 06:19:43.846: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/pods/agnhost/proxy/some/path/with/GET
  Jan 31 06:19:43.850: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jan 31 06:19:43.850: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/pods/agnhost/proxy/some/path/with/HEAD
  Jan 31 06:19:43.853: INFO: http.Client request:HEAD | StatusCode:200
  Jan 31 06:19:43.854: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/pods/agnhost/proxy/some/path/with/OPTIONS
  Jan 31 06:19:43.857: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan 31 06:19:43.857: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/pods/agnhost/proxy/some/path/with/PATCH
  Jan 31 06:19:43.861: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan 31 06:19:43.861: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/pods/agnhost/proxy/some/path/with/POST
  Jan 31 06:19:43.865: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan 31 06:19:43.865: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/pods/agnhost/proxy/some/path/with/PUT
  Jan 31 06:19:43.869: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan 31 06:19:43.869: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/services/test-service/proxy/some/path/with/DELETE
  Jan 31 06:19:43.874: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan 31 06:19:43.874: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/services/test-service/proxy/some/path/with/GET
  Jan 31 06:19:43.879: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jan 31 06:19:43.879: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/services/test-service/proxy/some/path/with/HEAD
  Jan 31 06:19:43.884: INFO: http.Client request:HEAD | StatusCode:200
  Jan 31 06:19:43.884: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/services/test-service/proxy/some/path/with/OPTIONS
  Jan 31 06:19:43.889: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan 31 06:19:43.889: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/services/test-service/proxy/some/path/with/PATCH
  Jan 31 06:19:43.894: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan 31 06:19:43.894: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/services/test-service/proxy/some/path/with/POST
  Jan 31 06:19:43.898: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan 31 06:19:43.898: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9969/services/test-service/proxy/some/path/with/PUT
  Jan 31 06:19:43.903: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan 31 06:19:43.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9969" for this suite. @ 01/31/24 06:19:43.909
• [2.125 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 01/31/24 06:19:43.914
  Jan 31 06:19:43.914: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename watch @ 01/31/24 06:19:43.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:19:43.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:19:43.933
  STEP: creating a new configmap @ 01/31/24 06:19:43.938
  STEP: modifying the configmap once @ 01/31/24 06:19:43.943
  STEP: modifying the configmap a second time @ 01/31/24 06:19:43.95
  STEP: deleting the configmap @ 01/31/24 06:19:43.958
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 01/31/24 06:19:43.963
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 01/31/24 06:19:43.966
  Jan 31 06:19:43.966: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9179  d4712446-69d7-4abe-988b-f529f6691d32 149891 0 2024-01-31 06:19:43 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-01-31 06:19:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:19:43.966: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9179  d4712446-69d7-4abe-988b-f529f6691d32 149892 0 2024-01-31 06:19:43 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-01-31 06:19:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 06:19:43.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9179" for this suite. @ 01/31/24 06:19:43.971
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 01/31/24 06:19:43.978
  Jan 31 06:19:43.978: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename var-expansion @ 01/31/24 06:19:43.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:19:43.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:19:43.998
  STEP: Creating a pod to test substitution in container's args @ 01/31/24 06:19:44.003
  STEP: Saw pod success @ 01/31/24 06:19:48.049
  Jan 31 06:19:48.053: INFO: Trying to get logs from node nodea08 pod var-expansion-533386fb-496d-4eea-8b12-85c39a38336e container dapi-container: <nil>
  STEP: delete the pod @ 01/31/24 06:19:48.063
  Jan 31 06:19:48.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2295" for this suite. @ 01/31/24 06:19:48.084
• [4.112 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 01/31/24 06:19:48.09
  Jan 31 06:19:48.090: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:19:48.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:19:48.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:19:48.111
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:19:48.117
  STEP: Saw pod success @ 01/31/24 06:19:52.146
  Jan 31 06:19:52.150: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-087940ff-812e-4f67-b2e5-63067f22ecc1 container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:19:52.159
  Jan 31 06:19:52.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7453" for this suite. @ 01/31/24 06:19:52.179
• [4.095 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 01/31/24 06:19:52.185
  Jan 31 06:19:52.185: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:19:52.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:19:52.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:19:52.211
  STEP: Creating the pod @ 01/31/24 06:19:52.216
  Jan 31 06:19:54.760: INFO: Successfully updated pod "labelsupdate0dad5d54-e3ea-4122-99a0-a66538b14191"
  Jan 31 06:19:56.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-216" for this suite. @ 01/31/24 06:19:56.788
• [4.610 seconds]
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 01/31/24 06:19:56.795
  Jan 31 06:19:56.795: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-probe @ 01/31/24 06:19:56.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:19:56.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:19:56.817
  STEP: Creating pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390 @ 01/31/24 06:19:56.822
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/31/24 06:19:58.842
  Jan 31 06:19:58.847: INFO: Initial restart count of pod liveness-f3224652-468d-4955-af08-850660bbc4e5 is 0
  Jan 31 06:19:58.852: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:00.858: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:02.864: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:04.868: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:06.874: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:08.882: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:10.887: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:12.894: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:14.899: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:16.905: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:18.911: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:18.911: INFO: Restart count of pod container-probe-6390/liveness-f3224652-468d-4955-af08-850660bbc4e5 is now 1 (20.064148449s elapsed)
  Jan 31 06:20:20.917: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:22.925: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:24.931: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:26.937: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:28.945: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:30.950: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:32.958: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:34.965: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:36.970: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:38.978: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:38.978: INFO: Restart count of pod container-probe-6390/liveness-f3224652-468d-4955-af08-850660bbc4e5 is now 2 (40.131170146s elapsed)
  Jan 31 06:20:40.986: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:42.993: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:44.998: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:47.005: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:49.012: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:51.018: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:53.025: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:55.031: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:57.037: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:59.044: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:20:59.044: INFO: Restart count of pod container-probe-6390/liveness-f3224652-468d-4955-af08-850660bbc4e5 is now 3 (1m0.197133771s elapsed)
  Jan 31 06:21:01.052: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:03.059: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:05.065: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:07.072: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:09.078: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:11.083: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:13.090: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:15.096: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:17.102: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:19.109: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:19.109: INFO: Restart count of pod container-probe-6390/liveness-f3224652-468d-4955-af08-850660bbc4e5 is now 4 (1m20.261839017s elapsed)
  Jan 31 06:21:21.115: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:23.123: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:25.129: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:27.136: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:29.143: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:31.149: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:33.156: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:35.162: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:37.168: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:39.175: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:41.181: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:43.189: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:45.195: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:47.201: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:49.206: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:51.213: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:53.220: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:55.225: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:57.232: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:21:59.238: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:22:01.244: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:22:03.252: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:22:05.256: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:22:07.263: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:22:09.270: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:22:11.276: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:22:13.283: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:22:15.288: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:22:17.294: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:22:19.300: INFO: Get pod liveness-f3224652-468d-4955-af08-850660bbc4e5 in namespace container-probe-6390
  Jan 31 06:22:19.300: INFO: Restart count of pod container-probe-6390/liveness-f3224652-468d-4955-af08-850660bbc4e5 is now 5 (2m20.453140713s elapsed)
  STEP: deleting the pod @ 01/31/24 06:22:19.301
  Jan 31 06:22:19.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6390" for this suite. @ 01/31/24 06:22:19.322
• [142.534 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 01/31/24 06:22:19.33
  Jan 31 06:22:19.330: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename dns @ 01/31/24 06:22:19.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:22:19.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:22:19.35
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 01/31/24 06:22:19.355
  Jan 31 06:22:19.365: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-515  e494bf46-ec2b-476f-a475-67ef9e1caf7b 150287 0 2024-01-31 06:22:19 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-01-31 06:22:19 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tdv9j,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tdv9j,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 01/31/24 06:22:21.375
  Jan 31 06:22:21.375: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-515 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:22:21.375: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:22:21.377: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:22:21.377: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-515/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 01/31/24 06:22:21.511
  Jan 31 06:22:21.511: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-515 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:22:21.511: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:22:21.512: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:22:21.512: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-515/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan 31 06:22:21.643: INFO: Deleting pod test-dns-nameservers...
  Jan 31 06:22:21.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-515" for this suite. @ 01/31/24 06:22:21.666
• [2.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 01/31/24 06:22:21.674
  Jan 31 06:22:21.674: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename disruption @ 01/31/24 06:22:21.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:22:21.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:22:21.691
  STEP: Creating a pdb that targets all three pods in a test replica set @ 01/31/24 06:22:21.695
  STEP: Waiting for the pdb to be processed @ 01/31/24 06:22:21.699
  STEP: First trying to evict a pod which shouldn't be evictable @ 01/31/24 06:22:23.713
  STEP: Waiting for all pods to be running @ 01/31/24 06:22:23.713
  Jan 31 06:22:23.717: INFO: pods: 0 < 3
  STEP: locating a running pod @ 01/31/24 06:22:25.719
  STEP: Updating the pdb to allow a pod to be evicted @ 01/31/24 06:22:25.731
  STEP: Waiting for the pdb to be processed @ 01/31/24 06:22:25.742
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/31/24 06:22:27.747
  STEP: Waiting for all pods to be running @ 01/31/24 06:22:27.747
  STEP: Waiting for the pdb to observed all healthy pods @ 01/31/24 06:22:27.751
  STEP: Patching the pdb to disallow a pod to be evicted @ 01/31/24 06:22:27.782
  STEP: Waiting for the pdb to be processed @ 01/31/24 06:22:27.794
  STEP: Waiting for all pods to be running @ 01/31/24 06:22:29.801
  STEP: locating a running pod @ 01/31/24 06:22:29.807
  STEP: Deleting the pdb to allow a pod to be evicted @ 01/31/24 06:22:29.819
  STEP: Waiting for the pdb to be deleted @ 01/31/24 06:22:29.825
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/31/24 06:22:29.828
  STEP: Waiting for all pods to be running @ 01/31/24 06:22:29.828
  Jan 31 06:22:29.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5482" for this suite. @ 01/31/24 06:22:29.854
• [8.186 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 01/31/24 06:22:29.86
  Jan 31 06:22:29.860: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:22:29.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:22:29.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:22:29.881
  STEP: validating cluster-info @ 01/31/24 06:22:29.886
  Jan 31 06:22:29.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-7502 cluster-info'
  Jan 31 06:22:29.986: INFO: stderr: ""
  Jan 31 06:22:29.986: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jan 31 06:22:29.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7502" for this suite. @ 01/31/24 06:22:29.99
• [0.140 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 01/31/24 06:22:30
  Jan 31 06:22:30.001: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:22:30.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:22:30.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:22:30.021
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/31/24 06:22:30.026
  Jan 31 06:22:30.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-2452 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jan 31 06:22:30.146: INFO: stderr: ""
  Jan 31 06:22:30.147: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/31/24 06:22:30.147
  Jan 31 06:22:30.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-2452 delete pods e2e-test-httpd-pod'
  Jan 31 06:22:31.498: INFO: stderr: ""
  Jan 31 06:22:31.498: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jan 31 06:22:31.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2452" for this suite. @ 01/31/24 06:22:31.506
• [1.511 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 01/31/24 06:22:31.513
  Jan 31 06:22:31.513: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sched-preemption @ 01/31/24 06:22:31.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:22:31.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:22:31.535
  Jan 31 06:22:31.554: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan 31 06:23:31.563: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/31/24 06:23:31.567
  Jan 31 06:23:31.594: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jan 31 06:23:31.603: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jan 31 06:23:31.623: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jan 31 06:23:31.630: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/31/24 06:23:31.631
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 01/31/24 06:23:33.656
  Jan 31 06:23:37.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3268" for this suite. @ 01/31/24 06:23:37.773
• [66.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 01/31/24 06:23:37.781
  Jan 31 06:23:37.781: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename var-expansion @ 01/31/24 06:23:37.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:23:37.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:23:37.798
  Jan 31 06:23:39.825: INFO: Deleting pod "var-expansion-642f0b27-9dce-4d3f-bd0d-de2c49dbff27" in namespace "var-expansion-1544"
  Jan 31 06:23:39.835: INFO: Wait up to 5m0s for pod "var-expansion-642f0b27-9dce-4d3f-bd0d-de2c49dbff27" to be fully deleted
  Jan 31 06:23:41.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1544" for this suite. @ 01/31/24 06:23:41.854
• [4.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 01/31/24 06:23:41.862
  Jan 31 06:23:41.862: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename deployment @ 01/31/24 06:23:41.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:23:41.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:23:41.882
  STEP: creating a Deployment @ 01/31/24 06:23:41.891
  Jan 31 06:23:41.891: INFO: Creating simple deployment test-deployment-t6vhl
  Jan 31 06:23:41.905: INFO: deployment "test-deployment-t6vhl" doesn't have the required revision set
  STEP: Getting /status @ 01/31/24 06:23:43.92
  Jan 31 06:23:43.924: INFO: Deployment test-deployment-t6vhl has Conditions: [{Available True 2024-01-31 06:23:42 +0000 UTC 2024-01-31 06:23:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-01-31 06:23:42 +0000 UTC 2024-01-31 06:23:41 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-t6vhl-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 01/31/24 06:23:43.924
  Jan 31 06:23:43.936: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 23, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 23, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 23, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 23, 41, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-t6vhl-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 01/31/24 06:23:43.936
  Jan 31 06:23:43.939: INFO: Observed &Deployment event: ADDED
  Jan 31 06:23:43.939: INFO: Observed Deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-31 06:23:41 +0000 UTC 2024-01-31 06:23:41 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-t6vhl-5d576bd769"}
  Jan 31 06:23:43.939: INFO: Observed &Deployment event: MODIFIED
  Jan 31 06:23:43.939: INFO: Observed Deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-31 06:23:41 +0000 UTC 2024-01-31 06:23:41 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-t6vhl-5d576bd769"}
  Jan 31 06:23:43.939: INFO: Observed Deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-31 06:23:41 +0000 UTC 2024-01-31 06:23:41 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan 31 06:23:43.940: INFO: Observed &Deployment event: MODIFIED
  Jan 31 06:23:43.940: INFO: Observed Deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-31 06:23:41 +0000 UTC 2024-01-31 06:23:41 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan 31 06:23:43.940: INFO: Observed Deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-31 06:23:41 +0000 UTC 2024-01-31 06:23:41 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-t6vhl-5d576bd769" is progressing.}
  Jan 31 06:23:43.940: INFO: Observed &Deployment event: MODIFIED
  Jan 31 06:23:43.940: INFO: Observed Deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-31 06:23:42 +0000 UTC 2024-01-31 06:23:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan 31 06:23:43.940: INFO: Observed Deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-31 06:23:42 +0000 UTC 2024-01-31 06:23:41 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-t6vhl-5d576bd769" has successfully progressed.}
  Jan 31 06:23:43.940: INFO: Observed &Deployment event: MODIFIED
  Jan 31 06:23:43.940: INFO: Observed Deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-31 06:23:42 +0000 UTC 2024-01-31 06:23:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan 31 06:23:43.940: INFO: Observed Deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-31 06:23:42 +0000 UTC 2024-01-31 06:23:41 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-t6vhl-5d576bd769" has successfully progressed.}
  Jan 31 06:23:43.940: INFO: Found Deployment test-deployment-t6vhl in namespace deployment-5037 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 31 06:23:43.940: INFO: Deployment test-deployment-t6vhl has an updated status
  STEP: patching the Statefulset Status @ 01/31/24 06:23:43.94
  Jan 31 06:23:43.940: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jan 31 06:23:43.947: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 01/31/24 06:23:43.947
  Jan 31 06:23:43.950: INFO: Observed &Deployment event: ADDED
  Jan 31 06:23:43.950: INFO: Observed deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-31 06:23:41 +0000 UTC 2024-01-31 06:23:41 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-t6vhl-5d576bd769"}
  Jan 31 06:23:43.950: INFO: Observed &Deployment event: MODIFIED
  Jan 31 06:23:43.950: INFO: Observed deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-31 06:23:41 +0000 UTC 2024-01-31 06:23:41 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-t6vhl-5d576bd769"}
  Jan 31 06:23:43.950: INFO: Observed deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-31 06:23:41 +0000 UTC 2024-01-31 06:23:41 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan 31 06:23:43.950: INFO: Observed &Deployment event: MODIFIED
  Jan 31 06:23:43.950: INFO: Observed deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-31 06:23:41 +0000 UTC 2024-01-31 06:23:41 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan 31 06:23:43.950: INFO: Observed deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-31 06:23:41 +0000 UTC 2024-01-31 06:23:41 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-t6vhl-5d576bd769" is progressing.}
  Jan 31 06:23:43.950: INFO: Observed &Deployment event: MODIFIED
  Jan 31 06:23:43.950: INFO: Observed deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-31 06:23:42 +0000 UTC 2024-01-31 06:23:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan 31 06:23:43.950: INFO: Observed deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-31 06:23:42 +0000 UTC 2024-01-31 06:23:41 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-t6vhl-5d576bd769" has successfully progressed.}
  Jan 31 06:23:43.951: INFO: Observed &Deployment event: MODIFIED
  Jan 31 06:23:43.951: INFO: Observed deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-31 06:23:42 +0000 UTC 2024-01-31 06:23:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan 31 06:23:43.951: INFO: Observed deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-31 06:23:42 +0000 UTC 2024-01-31 06:23:41 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-t6vhl-5d576bd769" has successfully progressed.}
  Jan 31 06:23:43.951: INFO: Observed deployment test-deployment-t6vhl in namespace deployment-5037 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 31 06:23:43.951: INFO: Observed &Deployment event: MODIFIED
  Jan 31 06:23:43.951: INFO: Found deployment test-deployment-t6vhl in namespace deployment-5037 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jan 31 06:23:43.951: INFO: Deployment test-deployment-t6vhl has a patched status
  Jan 31 06:23:43.955: INFO: Deployment "test-deployment-t6vhl":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-t6vhl",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5037",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "238e80f3-8796-40c4-80f3-9401d9b5adbf",
      ResourceVersion: (string) (len=6) "150744",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279021,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-t6vhl-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 31 06:23:43.969: INFO: New ReplicaSet "test-deployment-t6vhl-5d576bd769" of Deployment "test-deployment-t6vhl":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-t6vhl-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5037",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3400b07d-312f-46f8-a1ef-af08fb71a383",
      ResourceVersion: (string) (len=6) "150708",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279021,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-t6vhl",
          UID: (types.UID) (len=36) "238e80f3-8796-40c4-80f3-9401d9b5adbf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 32 33 38  |k:{\"uid\":\"238|
              00000120  65 38 30 66 33 2d 38 37  39 36 2d 34 30 63 34 2d  |e80f3-8796-40c4-|
              00000130  38 30 66 33 2d 39 34 30  31 64 39 62 35 61 64 62  |80f3-9401d9b5adb|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 06:23:43.980: INFO: Pod "test-deployment-t6vhl-5d576bd769-548v6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-t6vhl-5d576bd769-548v6",
      GenerateName: (string) (len=33) "test-deployment-t6vhl-5d576bd769-",
      Namespace: (string) (len=15) "deployment-5037",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93da6580-34dc-427d-a97b-e53cf64550e3",
      ResourceVersion: (string) (len=6) "150707",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279021,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-t6vhl-5d576bd769",
          UID: (types.UID) (len=36) "3400b07d-312f-46f8-a1ef-af08fb71a383",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 33 34 30 30 62 30 37  64 2d 33 31 32 66 2d 34  |"3400b07d-312f-4|
              000000a0  36 66 38 2d 61 31 65 66  2d 61 66 30 38 66 62 37  |6f8-a1ef-af08fb7|
              000000b0  31 61 33 38 33 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |1a383\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  36 35 5c 22 7d 22 3a 7b  |.244.1.165\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jj64z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jj64z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) (len=12) "10.244.1.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279021,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842279022,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cf84cc2f9ecb3ca9b7944b579501096ba241cd0e21138586dec921d32a21b041",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 06:23:43.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5037" for this suite. @ 01/31/24 06:23:43.987
• [2.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 01/31/24 06:23:43.995
  Jan 31 06:23:43.995: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:23:43.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:23:44.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:23:44.012
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/31/24 06:23:44.017
  STEP: Saw pod success @ 01/31/24 06:23:48.043
  Jan 31 06:23:48.048: INFO: Trying to get logs from node nodea08 pod pod-b81f6658-059b-42a7-9f0b-942d02cc80ec container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:23:48.076
  Jan 31 06:23:48.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2883" for this suite. @ 01/31/24 06:23:48.098
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 01/31/24 06:23:48.105
  Jan 31 06:23:48.105: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl-logs @ 01/31/24 06:23:48.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:23:48.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:23:48.137
  STEP: creating an pod @ 01/31/24 06:23:48.142
  Jan 31 06:23:48.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-logs-1606 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jan 31 06:23:48.253: INFO: stderr: ""
  Jan 31 06:23:48.253: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 01/31/24 06:23:48.254
  Jan 31 06:23:48.254: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Jan 31 06:23:50.265: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 01/31/24 06:23:50.265
  Jan 31 06:23:50.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-logs-1606 logs logs-generator logs-generator'
  Jan 31 06:23:50.381: INFO: stderr: ""
  Jan 31 06:23:50.381: INFO: stdout: "I0131 06:23:48.949857       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/ckx 408\nI0131 06:23:49.150259       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/dmlm 421\nI0131 06:23:49.350929       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/wd8w 459\nI0131 06:23:49.550455       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/5ct 488\nI0131 06:23:49.749943       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/bm8 415\nI0131 06:23:49.950546       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/jrd 244\nI0131 06:23:50.150043       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/94c 492\nI0131 06:23:50.350558       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/hsq 326\n"
  STEP: limiting log lines @ 01/31/24 06:23:50.381
  Jan 31 06:23:50.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-logs-1606 logs logs-generator logs-generator --tail=1'
  Jan 31 06:23:50.492: INFO: stderr: ""
  Jan 31 06:23:50.492: INFO: stdout: "I0131 06:23:50.350558       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/hsq 326\n"
  Jan 31 06:23:50.492: INFO: got output "I0131 06:23:50.350558       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/hsq 326\n"
  STEP: limiting log bytes @ 01/31/24 06:23:50.492
  Jan 31 06:23:50.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-logs-1606 logs logs-generator logs-generator --limit-bytes=1'
  Jan 31 06:23:50.595: INFO: stderr: ""
  Jan 31 06:23:50.595: INFO: stdout: "I"
  Jan 31 06:23:50.595: INFO: got output "I"
  STEP: exposing timestamps @ 01/31/24 06:23:50.595
  Jan 31 06:23:50.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-logs-1606 logs logs-generator logs-generator --tail=1 --timestamps'
  Jan 31 06:23:50.700: INFO: stderr: ""
  Jan 31 06:23:50.700: INFO: stdout: "2024-01-31T06:23:50.550346978Z I0131 06:23:50.549973       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/4h8p 374\n"
  Jan 31 06:23:50.700: INFO: got output "2024-01-31T06:23:50.550346978Z I0131 06:23:50.549973       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/4h8p 374\n"
  STEP: restricting to a time range @ 01/31/24 06:23:50.7
  Jan 31 06:23:53.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-logs-1606 logs logs-generator logs-generator --since=1s'
  Jan 31 06:23:53.302: INFO: stderr: ""
  Jan 31 06:23:53.302: INFO: stdout: "I0131 06:23:52.350615       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/lk6 491\nI0131 06:23:52.550130       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/w6pm 334\nI0131 06:23:52.750605       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/5v5 464\nI0131 06:23:52.950174       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/kbpg 243\nI0131 06:23:53.150642       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/q48 402\n"
  Jan 31 06:23:53.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-logs-1606 logs logs-generator logs-generator --since=24h'
  Jan 31 06:23:53.409: INFO: stderr: ""
  Jan 31 06:23:53.409: INFO: stdout: "I0131 06:23:48.949857       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/ckx 408\nI0131 06:23:49.150259       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/dmlm 421\nI0131 06:23:49.350929       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/wd8w 459\nI0131 06:23:49.550455       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/5ct 488\nI0131 06:23:49.749943       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/bm8 415\nI0131 06:23:49.950546       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/jrd 244\nI0131 06:23:50.150043       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/94c 492\nI0131 06:23:50.350558       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/hsq 326\nI0131 06:23:50.549973       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/4h8p 374\nI0131 06:23:50.750555       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/8m7g 322\nI0131 06:23:50.950021       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/v42 480\nI0131 06:23:51.150623       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/cmb 564\nI0131 06:23:51.350170       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/zdb 471\nI0131 06:23:51.550683       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/5vrj 268\nI0131 06:23:51.750249       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/72d 286\nI0131 06:23:51.950668       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/56t 321\nI0131 06:23:52.150150       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/9dww 368\nI0131 06:23:52.350615       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/lk6 491\nI0131 06:23:52.550130       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/w6pm 334\nI0131 06:23:52.750605       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/5v5 464\nI0131 06:23:52.950174       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/kbpg 243\nI0131 06:23:53.150642       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/q48 402\nI0131 06:23:53.349947       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/kcv 373\n"
  Jan 31 06:23:53.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-logs-1606 delete pod logs-generator'
  Jan 31 06:23:54.837: INFO: stderr: ""
  Jan 31 06:23:54.837: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jan 31 06:23:54.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1606" for this suite. @ 01/31/24 06:23:54.843
• [6.744 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 01/31/24 06:23:54.85
  Jan 31 06:23:54.850: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-probe @ 01/31/24 06:23:54.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:23:54.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:23:54.867
  STEP: Creating pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512 @ 01/31/24 06:23:54.872
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/31/24 06:23:56.892
  Jan 31 06:23:56.897: INFO: Initial restart count of pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 is 0
  Jan 31 06:23:56.902: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:23:58.910: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:00.917: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:02.924: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:04.930: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:06.936: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:08.944: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:10.950: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:12.957: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:14.964: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:16.972: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:18.980: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:20.987: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:22.994: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:24.999: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:27.007: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:29.015: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:31.022: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:33.028: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:35.034: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:37.041: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:39.050: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:41.057: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:43.064: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:45.070: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:47.077: INFO: Get pod busybox-f5d00fd3-5e37-4247-8638-766e004f4108 in namespace container-probe-5512
  Jan 31 06:24:47.077: INFO: Restart count of pod container-probe-5512/busybox-f5d00fd3-5e37-4247-8638-766e004f4108 is now 1 (50.179544611s elapsed)
  STEP: deleting the pod @ 01/31/24 06:24:47.077
  Jan 31 06:24:47.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5512" for this suite. @ 01/31/24 06:24:47.099
• [52.257 seconds]
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 01/31/24 06:24:47.107
  Jan 31 06:24:47.107: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename containers @ 01/31/24 06:24:47.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:24:47.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:24:47.128
  Jan 31 06:24:49.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9066" for this suite. @ 01/31/24 06:24:49.17
• [2.071 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 01/31/24 06:24:49.178
  Jan 31 06:24:49.179: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename containers @ 01/31/24 06:24:49.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:24:49.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:24:49.199
  STEP: Creating a pod to test override arguments @ 01/31/24 06:24:49.204
  STEP: Saw pod success @ 01/31/24 06:24:53.228
  Jan 31 06:24:53.233: INFO: Trying to get logs from node nodea08 pod client-containers-c68d94f7-4f76-44be-82d2-6874a2c1d5a5 container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:24:53.241
  Jan 31 06:24:53.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3829" for this suite. @ 01/31/24 06:24:53.262
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 01/31/24 06:24:53.268
  Jan 31 06:24:53.268: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:24:53.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:24:53.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:24:53.292
  STEP: creating a Service @ 01/31/24 06:24:53.3
  STEP: watching for the Service to be added @ 01/31/24 06:24:53.317
  Jan 31 06:24:53.319: INFO: Found Service test-service-4bbqs in namespace services-4526 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30531}]
  Jan 31 06:24:53.319: INFO: Service test-service-4bbqs created
  STEP: Getting /status @ 01/31/24 06:24:53.319
  Jan 31 06:24:53.325: INFO: Service test-service-4bbqs has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 01/31/24 06:24:53.325
  STEP: watching for the Service to be patched @ 01/31/24 06:24:53.332
  Jan 31 06:24:53.335: INFO: observed Service test-service-4bbqs in namespace services-4526 with annotations: map[] & LoadBalancer: {[]}
  Jan 31 06:24:53.335: INFO: Found Service test-service-4bbqs in namespace services-4526 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jan 31 06:24:53.335: INFO: Service test-service-4bbqs has service status patched
  STEP: updating the ServiceStatus @ 01/31/24 06:24:53.335
  Jan 31 06:24:53.344: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 01/31/24 06:24:53.344
  Jan 31 06:24:53.346: INFO: Observed Service test-service-4bbqs in namespace services-4526 with annotations: map[] & Conditions: {[]}
  Jan 31 06:24:53.346: INFO: Observed event: &Service{ObjectMeta:{test-service-4bbqs  services-4526  ac25d272-88c9-4026-b25f-75781075baa9 151001 0 2024-01-31 06:24:53 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-01-31 06:24:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-01-31 06:24:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:30531,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.98.149.132,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.98.149.132],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jan 31 06:24:53.347: INFO: Found Service test-service-4bbqs in namespace services-4526 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan 31 06:24:53.347: INFO: Service test-service-4bbqs has service status updated
  STEP: patching the service @ 01/31/24 06:24:53.347
  STEP: watching for the Service to be patched @ 01/31/24 06:24:53.353
  Jan 31 06:24:53.356: INFO: observed Service test-service-4bbqs in namespace services-4526 with labels: map[test-service-static:true]
  Jan 31 06:24:53.356: INFO: observed Service test-service-4bbqs in namespace services-4526 with labels: map[test-service-static:true]
  Jan 31 06:24:53.356: INFO: observed Service test-service-4bbqs in namespace services-4526 with labels: map[test-service-static:true]
  Jan 31 06:24:53.356: INFO: Found Service test-service-4bbqs in namespace services-4526 with labels: map[test-service:patched test-service-static:true]
  Jan 31 06:24:53.356: INFO: Service test-service-4bbqs patched
  STEP: deleting the service @ 01/31/24 06:24:53.356
  STEP: watching for the Service to be deleted @ 01/31/24 06:24:53.372
  Jan 31 06:24:53.374: INFO: Observed event: ADDED
  Jan 31 06:24:53.374: INFO: Observed event: MODIFIED
  Jan 31 06:24:53.374: INFO: Observed event: MODIFIED
  Jan 31 06:24:53.374: INFO: Observed event: MODIFIED
  Jan 31 06:24:53.374: INFO: Found Service test-service-4bbqs in namespace services-4526 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jan 31 06:24:53.374: INFO: Service test-service-4bbqs deleted
  Jan 31 06:24:53.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4526" for this suite. @ 01/31/24 06:24:53.379
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 01/31/24 06:24:53.385
  Jan 31 06:24:53.385: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 06:24:53.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:24:53.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:24:53.401
  STEP: Setting up server cert @ 01/31/24 06:24:53.421
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 06:24:53.771
  STEP: Deploying the webhook pod @ 01/31/24 06:24:53.78
  STEP: Wait for the deployment to be ready @ 01/31/24 06:24:53.797
  Jan 31 06:24:53.803: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/31/24 06:24:55.817
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 06:24:55.832
  Jan 31 06:24:56.833: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 01/31/24 06:24:56.842
  STEP: create a pod that should be updated by the webhook @ 01/31/24 06:24:56.87
  Jan 31 06:24:56.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6460" for this suite. @ 01/31/24 06:24:56.929
  STEP: Destroying namespace "webhook-markers-8264" for this suite. @ 01/31/24 06:24:56.936
• [3.557 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 01/31/24 06:24:56.943
  Jan 31 06:24:56.943: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:24:56.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:24:56.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:24:56.96
  STEP: Creating a pod to test downward api env vars @ 01/31/24 06:24:56.964
  STEP: Saw pod success @ 01/31/24 06:25:00.985
  Jan 31 06:25:00.990: INFO: Trying to get logs from node nodea08 pod downward-api-a1f76f61-efe0-4bd3-b31a-5c111f97d80b container dapi-container: <nil>
  STEP: delete the pod @ 01/31/24 06:25:01
  Jan 31 06:25:01.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4834" for this suite. @ 01/31/24 06:25:01.022
• [4.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 01/31/24 06:25:01.028
  Jan 31 06:25:01.028: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename statefulset @ 01/31/24 06:25:01.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:25:01.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:25:01.047
  STEP: Creating service test in namespace statefulset-9530 @ 01/31/24 06:25:01.052
  STEP: Looking for a node to schedule stateful set and pod @ 01/31/24 06:25:01.057
  STEP: Creating pod with conflicting port in namespace statefulset-9530 @ 01/31/24 06:25:01.063
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9530 @ 01/31/24 06:25:01.072
  STEP: Creating statefulset with conflicting port in namespace statefulset-9530 @ 01/31/24 06:25:03.08
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9530 @ 01/31/24 06:25:03.089
  Jan 31 06:25:03.101: INFO: Observed stateful pod in namespace: statefulset-9530, name: ss-0, uid: 33f7d57f-8e37-4a48-9979-073d57c0f560, status phase: Pending. Waiting for statefulset controller to delete.
  Jan 31 06:25:03.127: INFO: Observed stateful pod in namespace: statefulset-9530, name: ss-0, uid: 33f7d57f-8e37-4a48-9979-073d57c0f560, status phase: Failed. Waiting for statefulset controller to delete.
  Jan 31 06:25:03.137: INFO: Observed stateful pod in namespace: statefulset-9530, name: ss-0, uid: 33f7d57f-8e37-4a48-9979-073d57c0f560, status phase: Failed. Waiting for statefulset controller to delete.
  Jan 31 06:25:03.141: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9530
  STEP: Removing pod with conflicting port in namespace statefulset-9530 @ 01/31/24 06:25:03.141
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9530 and will be in running state @ 01/31/24 06:25:03.15
  Jan 31 06:25:05.160: INFO: Deleting all statefulset in ns statefulset-9530
  Jan 31 06:25:05.165: INFO: Scaling statefulset ss to 0
  Jan 31 06:25:15.184: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 31 06:25:15.188: INFO: Deleting statefulset ss
  Jan 31 06:25:15.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9530" for this suite. @ 01/31/24 06:25:15.211
• [14.188 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 01/31/24 06:25:15.216
  Jan 31 06:25:15.216: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename events @ 01/31/24 06:25:15.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:25:15.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:25:15.235
  STEP: Create set of events @ 01/31/24 06:25:15.24
  STEP: get a list of Events with a label in the current namespace @ 01/31/24 06:25:15.256
  STEP: delete a list of events @ 01/31/24 06:25:15.26
  Jan 31 06:25:15.260: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/31/24 06:25:15.277
  Jan 31 06:25:15.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9293" for this suite. @ 01/31/24 06:25:15.285
• [0.074 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 01/31/24 06:25:15.291
  Jan 31 06:25:15.291: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sched-preemption @ 01/31/24 06:25:15.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:25:15.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:25:15.313
  Jan 31 06:25:15.332: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan 31 06:26:15.340: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/31/24 06:26:15.345
  Jan 31 06:26:15.374: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jan 31 06:26:15.381: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jan 31 06:26:15.402: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jan 31 06:26:15.407: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/31/24 06:26:15.407
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 01/31/24 06:26:17.438
  Jan 31 06:26:21.524: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-646" for this suite. @ 01/31/24 06:26:21.529
• [66.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 01/31/24 06:26:21.542
  Jan 31 06:26:21.542: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pods @ 01/31/24 06:26:21.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:26:21.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:26:21.562
  STEP: Create a pod @ 01/31/24 06:26:21.567
  STEP: patching /status @ 01/31/24 06:26:23.586
  Jan 31 06:26:23.597: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jan 31 06:26:23.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3553" for this suite. @ 01/31/24 06:26:23.603
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 01/31/24 06:26:23.61
  Jan 31 06:26:23.610: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename var-expansion @ 01/31/24 06:26:23.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:26:23.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:26:23.629
  STEP: creating the pod @ 01/31/24 06:26:23.633
  STEP: waiting for pod running @ 01/31/24 06:26:23.643
  STEP: creating a file in subpath @ 01/31/24 06:26:25.657
  Jan 31 06:26:25.660: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5689 PodName:var-expansion-6206a413-b10a-4f67-b534-8eed7798da4c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:26:25.660: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:26:25.661: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:26:25.661: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-5689/pods/var-expansion-6206a413-b10a-4f67-b534-8eed7798da4c/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 01/31/24 06:26:25.773
  Jan 31 06:26:25.778: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5689 PodName:var-expansion-6206a413-b10a-4f67-b534-8eed7798da4c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:26:25.778: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:26:25.779: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:26:25.779: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-5689/pods/var-expansion-6206a413-b10a-4f67-b534-8eed7798da4c/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 01/31/24 06:26:25.886
  Jan 31 06:26:26.404: INFO: Successfully updated pod "var-expansion-6206a413-b10a-4f67-b534-8eed7798da4c"
  STEP: waiting for annotated pod running @ 01/31/24 06:26:26.404
  STEP: deleting the pod gracefully @ 01/31/24 06:26:26.409
  Jan 31 06:26:26.409: INFO: Deleting pod "var-expansion-6206a413-b10a-4f67-b534-8eed7798da4c" in namespace "var-expansion-5689"
  Jan 31 06:26:26.417: INFO: Wait up to 5m0s for pod "var-expansion-6206a413-b10a-4f67-b534-8eed7798da4c" to be fully deleted
  Jan 31 06:27:00.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5689" for this suite. @ 01/31/24 06:27:00.542
• [36.939 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 01/31/24 06:27:00.552
  Jan 31 06:27:00.552: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename endpointslice @ 01/31/24 06:27:00.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:27:00.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:27:00.576
  Jan 31 06:27:02.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1473" for this suite. @ 01/31/24 06:27:02.642
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 01/31/24 06:27:02.653
  Jan 31 06:27:02.653: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pv @ 01/31/24 06:27:02.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:27:02.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:27:02.673
  STEP: Creating initial PV and PVC @ 01/31/24 06:27:02.677
  Jan 31 06:27:02.677: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5850" @ 01/31/24 06:27:02.693
  STEP: Listing PVCs in namespace "pv-5850" @ 01/31/24 06:27:02.696
  STEP: Reading "pvc-scxjs" Status @ 01/31/24 06:27:02.7
  STEP: Reading "pv-5850-bmb6c" Status @ 01/31/24 06:27:02.705
  STEP: Patching "pvc-scxjs" Status @ 01/31/24 06:27:02.711
  STEP: Patching "pv-5850-bmb6c" Status @ 01/31/24 06:27:02.716
  STEP: Updating "pvc-scxjs" Status @ 01/31/24 06:27:02.727
  STEP: Updating "pv-5850-bmb6c" Status @ 01/31/24 06:27:02.736
  Jan 31 06:27:02.744: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jan 31 06:27:02.744: INFO: Deleting PersistentVolumeClaim "pvc-scxjs"
  Jan 31 06:27:02.753: INFO: Deleting PersistentVolume "pv-5850-bmb6c"
  Jan 31 06:27:02.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5850" for this suite. @ 01/31/24 06:27:02.764
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 01/31/24 06:27:02.771
  Jan 31 06:27:02.771: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename csistoragecapacity @ 01/31/24 06:27:02.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:27:02.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:27:02.792
  STEP: getting /apis @ 01/31/24 06:27:02.796
  STEP: getting /apis/storage.k8s.io @ 01/31/24 06:27:02.803
  STEP: getting /apis/storage.k8s.io/v1 @ 01/31/24 06:27:02.804
  STEP: creating @ 01/31/24 06:27:02.807
  STEP: watching @ 01/31/24 06:27:02.82
  Jan 31 06:27:02.820: INFO: starting watch
  STEP: getting @ 01/31/24 06:27:02.829
  STEP: listing in namespace @ 01/31/24 06:27:02.832
  STEP: listing across namespaces @ 01/31/24 06:27:02.836
  STEP: patching @ 01/31/24 06:27:02.839
  STEP: updating @ 01/31/24 06:27:02.846
  Jan 31 06:27:02.851: INFO: waiting for watch events with expected annotations in namespace
  Jan 31 06:27:02.851: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 01/31/24 06:27:02.851
  STEP: deleting a collection @ 01/31/24 06:27:02.862
  Jan 31 06:27:02.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4805" for this suite. @ 01/31/24 06:27:02.88
• [0.115 seconds]
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 01/31/24 06:27:02.887
  Jan 31 06:27:02.887: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replication-controller @ 01/31/24 06:27:02.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:27:02.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:27:02.912
  STEP: Creating ReplicationController "e2e-rc-d6pxp" @ 01/31/24 06:27:02.916
  Jan 31 06:27:02.922: INFO: Get Replication Controller "e2e-rc-d6pxp" to confirm replicas
  Jan 31 06:27:03.923: INFO: Get Replication Controller "e2e-rc-d6pxp" to confirm replicas
  Jan 31 06:27:03.928: INFO: Found 1 replicas for "e2e-rc-d6pxp" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-d6pxp" @ 01/31/24 06:27:03.928
  STEP: Updating a scale subresource @ 01/31/24 06:27:03.932
  STEP: Verifying replicas where modified for replication controller "e2e-rc-d6pxp" @ 01/31/24 06:27:03.941
  Jan 31 06:27:03.941: INFO: Get Replication Controller "e2e-rc-d6pxp" to confirm replicas
  Jan 31 06:27:04.942: INFO: Get Replication Controller "e2e-rc-d6pxp" to confirm replicas
  Jan 31 06:27:04.946: INFO: Found 2 replicas for "e2e-rc-d6pxp" replication controller
  Jan 31 06:27:04.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1773" for this suite. @ 01/31/24 06:27:04.953
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 01/31/24 06:27:04.96
  Jan 31 06:27:04.960: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename gc @ 01/31/24 06:27:04.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:27:04.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:27:04.979
  Jan 31 06:27:05.011: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"86bfbf78-1a19-49f8-98db-352aa73724a2", Controller:(*bool)(0xc0036bb5ea), BlockOwnerDeletion:(*bool)(0xc0036bb5eb)}}
  Jan 31 06:27:05.021: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"81ddf5d0-230f-4aff-bba7-6bc456efcd60", Controller:(*bool)(0xc0036bb81a), BlockOwnerDeletion:(*bool)(0xc0036bb81b)}}
  Jan 31 06:27:05.028: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"e673a6d4-5e2d-4362-ac6b-fcf9542c8ad4", Controller:(*bool)(0xc0036bbab2), BlockOwnerDeletion:(*bool)(0xc0036bbab3)}}
  Jan 31 06:27:10.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3804" for this suite. @ 01/31/24 06:27:10.046
• [5.094 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 01/31/24 06:27:10.054
  Jan 31 06:27:10.054: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename dns @ 01/31/24 06:27:10.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:27:10.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:27:10.076
  STEP: Creating a test headless service @ 01/31/24 06:27:10.081
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5618.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5618.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 01/31/24 06:27:10.085
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5618.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5618.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 01/31/24 06:27:10.085
  STEP: creating a pod to probe DNS @ 01/31/24 06:27:10.085
  STEP: submitting the pod to kubernetes @ 01/31/24 06:27:10.085
  STEP: retrieving the pod @ 01/31/24 06:27:12.105
  STEP: looking for the results for each expected name from probers @ 01/31/24 06:27:12.109
  Jan 31 06:27:12.133: INFO: DNS probes using dns-5618/dns-test-a01feea0-2e58-45c0-9215-6636ad52a1e3 succeeded

  STEP: deleting the pod @ 01/31/24 06:27:12.133
  STEP: deleting the test headless service @ 01/31/24 06:27:12.151
  Jan 31 06:27:12.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5618" for this suite. @ 01/31/24 06:27:12.166
• [2.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 01/31/24 06:27:12.171
  Jan 31 06:27:12.171: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename svcaccounts @ 01/31/24 06:27:12.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:27:12.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:27:12.191
  Jan 31 06:27:12.209: INFO: created pod
  STEP: Saw pod success @ 01/31/24 06:27:16.229
  Jan 31 06:27:46.229: INFO: polling logs
  Jan 31 06:27:46.254: INFO: Pod logs: 
  I0131 06:27:12.891173       1 log.go:194] OK: Got token
  I0131 06:27:12.891279       1 log.go:194] validating with in-cluster discovery
  I0131 06:27:12.891710       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0131 06:27:12.891753       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5271:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001301d0), NotBefore:(*jwt.NumericDate)(0xc0001302c8), IssuedAt:(*jwt.NumericDate)(0xc0001301e0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5271", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"652af3c4-83ac-47f2-83bd-9b487580d077"}}}
  I0131 06:27:12.911357       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0131 06:27:12.924977       1 log.go:194] OK: Validated signature on JWT
  I0131 06:27:12.925166       1 log.go:194] OK: Got valid claims from token!
  I0131 06:27:12.925211       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5271:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000131728), NotBefore:(*jwt.NumericDate)(0xc000131830), IssuedAt:(*jwt.NumericDate)(0xc0001317a0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5271", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"652af3c4-83ac-47f2-83bd-9b487580d077"}}}

  Jan 31 06:27:46.254: INFO: completed pod
  Jan 31 06:27:46.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5271" for this suite. @ 01/31/24 06:27:46.267
• [34.102 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 01/31/24 06:27:46.273
  Jan 31 06:27:46.274: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename deployment @ 01/31/24 06:27:46.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:27:46.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:27:46.297
  Jan 31 06:27:46.311: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Jan 31 06:27:51.316: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/31/24 06:27:51.317
  Jan 31 06:27:51.317: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Jan 31 06:27:53.323: INFO: Creating deployment "test-rollover-deployment"
  Jan 31 06:27:53.337: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Jan 31 06:27:55.347: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jan 31 06:27:55.355: INFO: Ensure that both replica sets have 1 created replica
  Jan 31 06:27:55.363: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jan 31 06:27:55.376: INFO: Updating deployment test-rollover-deployment
  Jan 31 06:27:55.376: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Jan 31 06:27:57.386: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jan 31 06:27:57.394: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jan 31 06:27:57.402: INFO: all replica sets need to contain the pod-template-hash label
  Jan 31 06:27:57.402: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 27, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 06:27:59.413: INFO: all replica sets need to contain the pod-template-hash label
  Jan 31 06:27:59.413: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 27, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 06:28:01.414: INFO: all replica sets need to contain the pod-template-hash label
  Jan 31 06:28:01.415: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 27, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 06:28:03.414: INFO: all replica sets need to contain the pod-template-hash label
  Jan 31 06:28:03.414: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 27, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 06:28:05.413: INFO: all replica sets need to contain the pod-template-hash label
  Jan 31 06:28:05.414: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 6, 27, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 6, 27, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 06:28:07.413: INFO: 
  Jan 31 06:28:07.413: INFO: Ensure that both old replica sets have no replicas
  Jan 31 06:28:07.423: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5459",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08a49306-37da-46d7-85a0-884d0c96cf3d",
      ResourceVersion: (string) (len=6) "151978",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 31 06:28:07.431: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5459",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "322cdfaa-2705-4258-9a9a-e4a473b4fa65",
      ResourceVersion: (string) (len=6) "151968",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "08a49306-37da-46d7-85a0-884d0c96cf3d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 38 61 34 39 33  30 36 2d 33 37 64 61 2d  |\"08a49306-37da-|
              00000120  34 36 64 37 2d 38 35 61  30 2d 38 38 34 64 30 63  |46d7-85a0-884d0c|
              00000130  39 36 63 66 33 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |96cf3d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 06:28:07.433: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jan 31 06:28:07.434: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5459",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3d14937-1372-43e0-8d91-3f129be165b8",
      ResourceVersion: (string) (len=6) "151977",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279266,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "08a49306-37da-46d7-85a0-884d0c96cf3d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  30 38 61 34 39 33 30 36  2d 33 37 64 61 2d 34 36  |08a49306-37da-46|
              000000c0  64 37 2d 38 35 61 30 2d  38 38 34 64 30 63 39 36  |d7-85a0-884d0c96|
              000000d0  63 66 33 64 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |cf3d\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 06:28:07.436: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5459",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97e547d4-1b6a-4f43-adc9-9e47a7e8aa14",
      ResourceVersion: (string) (len=6) "151942",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "08a49306-37da-46d7-85a0-884d0c96cf3d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 38 61 34 39 33  30 36 2d 33 37 64 61 2d  |\"08a49306-37da-|
              00000120  34 36 64 37 2d 38 35 61  30 2d 38 38 34 64 30 63  |46d7-85a0-884d0c|
              00000130  39 36 63 66 33 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |96cf3d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 06:28:07.443: INFO: Pod "test-rollover-deployment-5d484bf7f9-tc6kp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-tc6kp",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-5459",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a9032a9-5430-4a3a-a648-e1f00028d18f",
      ResourceVersion: (string) (len=6) "151951",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "322cdfaa-2705-4258-9a9a-e4a473b4fa65",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  32 63 64 66 61 61 2d 32  |d\":\"322cdfaa-2|
              00000090  37 30 35 2d 34 32 35 38  2d 39 61 39 61 2d 65 34  |705-4258-9a9a-e4|
              000000a0  61 34 37 33 62 34 66 61  36 35 5c 22 7d 22 3a 7b  |a473b4fa65\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  38 35 5c 22 7d 22 3a 7b  |.244.1.185\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x2p5b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x2p5b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) (len=12) "10.244.1.185",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.185"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842279276,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://2140de0d2b4d62bab90c8bc054b64e7d073725a84a45696cb1a7d9c79ba62407",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 06:28:07.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5459" for this suite. @ 01/31/24 06:28:07.452
• [21.185 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 01/31/24 06:28:07.459
  Jan 31 06:28:07.459: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:28:07.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:28:07.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:28:07.475
  STEP: creating service multiprotocol-test in namespace services-4361 @ 01/31/24 06:28:07.48
  STEP: creating pod pod1 in namespace services-4361 @ 01/31/24 06:28:07.495
  STEP: Creating pod pod1 in namespace services-4361 @ 01/31/24 06:28:07.495
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4361 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 01/31/24 06:28:09.517
  Jan 31 06:28:09.530: INFO: successfully validated that service multiprotocol-test in namespace services-4361 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 01/31/24 06:28:09.53
  Jan 31 06:28:09.530: INFO: Creating new exec pod
  Jan 31 06:28:11.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.72.145 80'
  Jan 31 06:28:11.768: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.72.145 80\nConnection to 10.103.72.145 80 port [tcp/http] succeeded!\n"
  Jan 31 06:28:11.768: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 06:28:11.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.72.145 80'
  Jan 31 06:28:15.968: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.72.145 80\nConnection to 10.103.72.145 80 port [udp/*] succeeded!\n"
  Jan 31 06:28:15.968: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 01/31/24 06:28:15.968
  Jan 31 06:28:15.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.72.145 80'
  Jan 31 06:28:16.181: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.72.145 80\nConnection to 10.103.72.145 80 port [tcp/http] succeeded!\n"
  Jan 31 06:28:16.181: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 06:28:16.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.72.145 80'
  Jan 31 06:28:20.393: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.72.145 80\nConnection to 10.103.72.145 80 port [udp/*] succeeded!\n"
  Jan 31 06:28:20.393: INFO: stdout: ""
  Jan 31 06:28:20.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.72.145 80'
  Jan 31 06:28:24.620: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.72.145 80\nConnection to 10.103.72.145 80 port [udp/*] succeeded!\n"
  Jan 31 06:28:24.620: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 01/31/24 06:28:24.62
  Jan 31 06:28:24.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.72.145 80'
  Jan 31 06:28:28.849: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.72.145 80\nConnection to 10.103.72.145 80 port [udp/*] succeeded!\n"
  Jan 31 06:28:28.849: INFO: stdout: "pod1"
  Jan 31 06:28:28.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.72.145 80'
  Jan 31 06:28:31.060: INFO: rc: 1
  Jan 31 06:28:31.060: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.72.145 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.103.72.145 80
  nc: connect to 10.103.72.145 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jan 31 06:28:31.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.72.145 80'
  Jan 31 06:28:33.277: INFO: rc: 1
  Jan 31 06:28:33.277: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.72.145 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.103.72.145 80
  nc: connect to 10.103.72.145 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jan 31 06:28:33.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.72.145 80'
  Jan 31 06:28:35.481: INFO: rc: 1
  Jan 31 06:28:35.481: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-4361 exec execpod2p822 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.72.145 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.103.72.145 80
  nc: connect to 10.103.72.145 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jan 31 06:28:35.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4361" for this suite. @ 01/31/24 06:28:35.488
• [28.035 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 01/31/24 06:28:35.494
  Jan 31 06:28:35.494: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename certificates @ 01/31/24 06:28:35.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:28:35.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:28:35.515
  STEP: getting /apis @ 01/31/24 06:28:36.253
  STEP: getting /apis/certificates.k8s.io @ 01/31/24 06:28:36.26
  STEP: getting /apis/certificates.k8s.io/v1 @ 01/31/24 06:28:36.262
  STEP: creating @ 01/31/24 06:28:36.265
  STEP: getting @ 01/31/24 06:28:36.285
  STEP: listing @ 01/31/24 06:28:36.288
  STEP: watching @ 01/31/24 06:28:36.293
  Jan 31 06:28:36.293: INFO: starting watch
  STEP: patching @ 01/31/24 06:28:36.295
  STEP: updating @ 01/31/24 06:28:36.302
  Jan 31 06:28:36.308: INFO: waiting for watch events with expected annotations
  Jan 31 06:28:36.308: INFO: saw patched and updated annotations
  STEP: getting /approval @ 01/31/24 06:28:36.308
  STEP: patching /approval @ 01/31/24 06:28:36.312
  STEP: updating /approval @ 01/31/24 06:28:36.319
  STEP: getting /status @ 01/31/24 06:28:36.326
  STEP: patching /status @ 01/31/24 06:28:36.33
  STEP: updating /status @ 01/31/24 06:28:36.339
  STEP: deleting @ 01/31/24 06:28:36.348
  STEP: deleting a collection @ 01/31/24 06:28:36.361
  Jan 31 06:28:36.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7564" for this suite. @ 01/31/24 06:28:36.377
• [0.890 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 01/31/24 06:28:36.385
  Jan 31 06:28:36.385: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replicaset @ 01/31/24 06:28:36.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:28:36.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:28:36.404
  STEP: Create a ReplicaSet @ 01/31/24 06:28:36.408
  STEP: Verify that the required pods have come up @ 01/31/24 06:28:36.415
  Jan 31 06:28:36.418: INFO: Pod name sample-pod: Found 0 pods out of 3
  Jan 31 06:28:41.423: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 01/31/24 06:28:41.423
  Jan 31 06:28:41.427: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 01/31/24 06:28:41.427
  STEP: DeleteCollection of the ReplicaSets @ 01/31/24 06:28:41.431
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 01/31/24 06:28:41.439
  Jan 31 06:28:41.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9900" for this suite. @ 01/31/24 06:28:41.447
• [5.071 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 01/31/24 06:28:41.457
  Jan 31 06:28:41.457: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:28:41.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:28:41.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:28:41.474
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/31/24 06:28:41.479
  STEP: Saw pod success @ 01/31/24 06:28:45.502
  Jan 31 06:28:45.506: INFO: Trying to get logs from node nodea08 pod pod-ea8e013d-9a2f-47fd-9850-8332193497c0 container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:28:45.515
  Jan 31 06:28:45.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8195" for this suite. @ 01/31/24 06:28:45.536
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 01/31/24 06:28:45.543
  Jan 31 06:28:45.543: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename gc @ 01/31/24 06:28:45.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:28:45.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:28:45.563
  STEP: create the rc @ 01/31/24 06:28:45.572
  W0131 06:28:45.579956      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/31/24 06:28:51.585
  STEP: wait for the rc to be deleted @ 01/31/24 06:28:51.593
  Jan 31 06:28:52.614: INFO: 80 pods remaining
  Jan 31 06:28:52.614: INFO: 80 pods has nil DeletionTimestamp
  Jan 31 06:28:52.614: INFO: 
  Jan 31 06:28:53.613: INFO: 71 pods remaining
  Jan 31 06:28:53.613: INFO: 71 pods has nil DeletionTimestamp
  Jan 31 06:28:53.613: INFO: 
  Jan 31 06:28:54.611: INFO: 60 pods remaining
  Jan 31 06:28:54.611: INFO: 60 pods has nil DeletionTimestamp
  Jan 31 06:28:54.611: INFO: 
  Jan 31 06:28:55.606: INFO: 40 pods remaining
  Jan 31 06:28:55.606: INFO: 40 pods has nil DeletionTimestamp
  Jan 31 06:28:55.606: INFO: 
  Jan 31 06:28:56.604: INFO: 31 pods remaining
  Jan 31 06:28:56.604: INFO: 31 pods has nil DeletionTimestamp
  Jan 31 06:28:56.604: INFO: 
  Jan 31 06:28:57.606: INFO: 20 pods remaining
  Jan 31 06:28:57.606: INFO: 20 pods has nil DeletionTimestamp
  Jan 31 06:28:57.606: INFO: 
  STEP: Gathering metrics @ 01/31/24 06:28:58.6
  Jan 31 06:28:58.730: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 31 06:28:58.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1804" for this suite. @ 01/31/24 06:28:58.735
• [13.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 01/31/24 06:28:58.741
  Jan 31 06:28:58.741: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 06:28:58.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:28:58.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:28:58.762
  STEP: Counting existing ResourceQuota @ 01/31/24 06:28:58.766
  STEP: Creating a ResourceQuota @ 01/31/24 06:29:03.772
  STEP: Ensuring resource quota status is calculated @ 01/31/24 06:29:03.777
  Jan 31 06:29:05.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6604" for this suite. @ 01/31/24 06:29:05.789
• [7.054 seconds]
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 01/31/24 06:29:05.795
  Jan 31 06:29:05.795: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename watch @ 01/31/24 06:29:05.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:29:05.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:29:05.814
  STEP: getting a starting resourceVersion @ 01/31/24 06:29:05.819
  STEP: starting a background goroutine to produce watch events @ 01/31/24 06:29:05.823
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 01/31/24 06:29:05.823
  Jan 31 06:29:08.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-823" for this suite. @ 01/31/24 06:29:08.655
• [2.910 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 01/31/24 06:29:08.706
  Jan 31 06:29:08.706: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename field-validation @ 01/31/24 06:29:08.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:29:08.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:29:08.73
  Jan 31 06:29:08.735: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  W0131 06:29:11.304358      23 warnings.go:70] unknown field "alpha"
  W0131 06:29:11.304689      23 warnings.go:70] unknown field "beta"
  W0131 06:29:11.304834      23 warnings.go:70] unknown field "delta"
  W0131 06:29:11.305076      23 warnings.go:70] unknown field "epsilon"
  W0131 06:29:11.305232      23 warnings.go:70] unknown field "gamma"
  Jan 31 06:29:11.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6388" for this suite. @ 01/31/24 06:29:11.867
• [3.169 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 01/31/24 06:29:11.875
  Jan 31 06:29:11.875: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename prestop @ 01/31/24 06:29:11.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:29:11.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:29:11.895
  STEP: Creating server pod server in namespace prestop-65 @ 01/31/24 06:29:11.902
  STEP: Waiting for pods to come up. @ 01/31/24 06:29:11.91
  STEP: Creating tester pod tester in namespace prestop-65 @ 01/31/24 06:29:13.923
  STEP: Deleting pre-stop pod @ 01/31/24 06:29:15.942
  Jan 31 06:29:20.960: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 01/31/24 06:29:20.961
  Jan 31 06:29:20.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-65" for this suite. @ 01/31/24 06:29:20.976
• [9.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 01/31/24 06:29:20.983
  Jan 31 06:29:20.983: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:29:20.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:29:20.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:29:21.001
  STEP: Creating secret with name s-test-opt-del-f937c5f1-8a34-4f1d-add0-755085e16c29 @ 01/31/24 06:29:21.009
  STEP: Creating secret with name s-test-opt-upd-c85a97f6-f922-49f6-aad6-c79685facdad @ 01/31/24 06:29:21.014
  STEP: Creating the pod @ 01/31/24 06:29:21.019
  STEP: Deleting secret s-test-opt-del-f937c5f1-8a34-4f1d-add0-755085e16c29 @ 01/31/24 06:29:23.072
  STEP: Updating secret s-test-opt-upd-c85a97f6-f922-49f6-aad6-c79685facdad @ 01/31/24 06:29:23.077
  STEP: Creating secret with name s-test-opt-create-3d9c1450-7dbb-4e54-a464-5417239f86ee @ 01/31/24 06:29:23.083
  STEP: waiting to observe update in volume @ 01/31/24 06:29:23.088
  Jan 31 06:29:27.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9883" for this suite. @ 01/31/24 06:29:27.142
• [6.167 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 01/31/24 06:29:27.15
  Jan 31 06:29:27.150: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename containers @ 01/31/24 06:29:27.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:29:27.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:29:27.173
  STEP: Creating a pod to test override all @ 01/31/24 06:29:27.178
  STEP: Saw pod success @ 01/31/24 06:29:31.201
  Jan 31 06:29:31.204: INFO: Trying to get logs from node nodea08 pod client-containers-8609250a-08c6-4c3d-bfdd-eba8b13ce5bb container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:29:31.212
  Jan 31 06:29:31.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3795" for this suite. @ 01/31/24 06:29:31.231
• [4.086 seconds]
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 01/31/24 06:29:31.236
  Jan 31 06:29:31.236: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-probe @ 01/31/24 06:29:31.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:29:31.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:29:31.254
  Jan 31 06:29:53.344: INFO: Container started at 2024-01-31 06:29:31 +0000 UTC, pod became ready at 2024-01-31 06:29:51 +0000 UTC
  Jan 31 06:29:53.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8148" for this suite. @ 01/31/24 06:29:53.351
• [22.123 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 01/31/24 06:29:53.359
  Jan 31 06:29:53.359: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename server-version @ 01/31/24 06:29:53.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:29:53.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:29:53.384
  STEP: Request ServerVersion @ 01/31/24 06:29:53.389
  STEP: Confirm major version @ 01/31/24 06:29:53.392
  Jan 31 06:29:53.392: INFO: Major version: 1
  STEP: Confirm minor version @ 01/31/24 06:29:53.392
  Jan 31 06:29:53.392: INFO: cleanMinorVersion: 29
  Jan 31 06:29:53.392: INFO: Minor version: 29+
  Jan 31 06:29:53.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-758" for this suite. @ 01/31/24 06:29:53.397
• [0.044 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 01/31/24 06:29:53.404
  Jan 31 06:29:53.404: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sched-preemption @ 01/31/24 06:29:53.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:29:53.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:29:53.424
  Jan 31 06:29:53.442: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan 31 06:30:53.451: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/31/24 06:30:53.456
  Jan 31 06:30:53.456: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/31/24 06:30:53.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:30:53.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:30:53.478
  Jan 31 06:30:53.499: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jan 31 06:30:53.503: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jan 31 06:30:53.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1462" for this suite. @ 01/31/24 06:30:53.6
  Jan 31 06:30:53.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1030" for this suite. @ 01/31/24 06:30:53.628
• [60.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 01/31/24 06:30:53.633
  Jan 31 06:30:53.634: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:30:53.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:30:53.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:30:53.652
  STEP: Creating a pod to test downward api env vars @ 01/31/24 06:30:53.657
  STEP: Saw pod success @ 01/31/24 06:30:57.682
  Jan 31 06:30:57.687: INFO: Trying to get logs from node nodea08 pod downward-api-b1b40696-6d5b-4b3a-b595-f8a9a415bc5c container dapi-container: <nil>
  STEP: delete the pod @ 01/31/24 06:30:57.696
  Jan 31 06:30:57.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1413" for this suite. @ 01/31/24 06:30:57.72
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 01/31/24 06:30:57.728
  Jan 31 06:30:57.728: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename subpath @ 01/31/24 06:30:57.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:30:57.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:30:57.751
  STEP: Setting up data @ 01/31/24 06:30:57.756
  STEP: Creating pod pod-subpath-test-configmap-2hpq @ 01/31/24 06:30:57.767
  STEP: Creating a pod to test atomic-volume-subpath @ 01/31/24 06:30:57.767
  STEP: Saw pod success @ 01/31/24 06:31:21.865
  Jan 31 06:31:21.870: INFO: Trying to get logs from node nodea08 pod pod-subpath-test-configmap-2hpq container test-container-subpath-configmap-2hpq: <nil>
  STEP: delete the pod @ 01/31/24 06:31:21.881
  STEP: Deleting pod pod-subpath-test-configmap-2hpq @ 01/31/24 06:31:21.9
  Jan 31 06:31:21.901: INFO: Deleting pod "pod-subpath-test-configmap-2hpq" in namespace "subpath-2699"
  Jan 31 06:31:21.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2699" for this suite. @ 01/31/24 06:31:21.91
• [24.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 01/31/24 06:31:21.917
  Jan 31 06:31:21.917: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:31:21.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:31:21.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:31:21.939
  STEP: Creating secret with name projected-secret-test-46562c74-6983-4219-a87d-1dbfe24ad7ec @ 01/31/24 06:31:21.944
  STEP: Creating a pod to test consume secrets @ 01/31/24 06:31:21.949
  STEP: Saw pod success @ 01/31/24 06:31:25.974
  Jan 31 06:31:25.978: INFO: Trying to get logs from node nodea08 pod pod-projected-secrets-bcc6bc11-f93b-4dc3-90e6-e5de50336ae6 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 06:31:25.987
  Jan 31 06:31:26.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7385" for this suite. @ 01/31/24 06:31:26.008
• [4.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 01/31/24 06:31:26.014
  Jan 31 06:31:26.014: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename endpointslicemirroring @ 01/31/24 06:31:26.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:31:26.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:31:26.033
  STEP: mirroring a new custom Endpoint @ 01/31/24 06:31:26.052
  Jan 31 06:31:26.062: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 01/31/24 06:31:28.069
  Jan 31 06:31:28.082: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 01/31/24 06:31:30.088
  Jan 31 06:31:30.099: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Jan 31 06:31:32.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-1410" for this suite. @ 01/31/24 06:31:32.112
• [6.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 01/31/24 06:31:32.121
  Jan 31 06:31:32.121: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:31:32.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:31:32.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:31:32.144
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/31/24 06:31:32.15
  STEP: Saw pod success @ 01/31/24 06:31:36.177
  Jan 31 06:31:36.181: INFO: Trying to get logs from node nodea08 pod pod-8021d573-8903-4b5e-8d0b-5150fb26dacd container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:31:36.19
  Jan 31 06:31:36.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3503" for this suite. @ 01/31/24 06:31:36.215
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 01/31/24 06:31:36.224
  Jan 31 06:31:36.224: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:31:36.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:31:36.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:31:36.244
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-04d05a47-0476-4b9c-a693-1d05b26ba650 @ 01/31/24 06:31:36.255
  STEP: Creating the pod @ 01/31/24 06:31:36.259
  STEP: Updating configmap projected-configmap-test-upd-04d05a47-0476-4b9c-a693-1d05b26ba650 @ 01/31/24 06:31:38.299
  STEP: waiting to observe update in volume @ 01/31/24 06:31:38.304
  Jan 31 06:33:00.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3547" for this suite. @ 01/31/24 06:33:00.822
• [84.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 01/31/24 06:33:00.831
  Jan 31 06:33:00.831: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:33:00.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:00.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:00.857
  STEP: Creating projection with secret that has name projected-secret-test-be936115-412e-4949-9bca-53ae7e2b86ae @ 01/31/24 06:33:00.862
  STEP: Creating a pod to test consume secrets @ 01/31/24 06:33:00.867
  STEP: Saw pod success @ 01/31/24 06:33:04.895
  Jan 31 06:33:04.898: INFO: Trying to get logs from node nodea08 pod pod-projected-secrets-8c02e6f5-5b15-4749-b3ba-d63ab68c64b8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 06:33:04.907
  Jan 31 06:33:04.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8908" for this suite. @ 01/31/24 06:33:04.927
• [4.102 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 01/31/24 06:33:04.933
  Jan 31 06:33:04.933: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename limitrange @ 01/31/24 06:33:04.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:04.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:04.953
  STEP: Creating LimitRange "e2e-limitrange-tmnkf" in namespace "limitrange-4936" @ 01/31/24 06:33:04.958
  STEP: Creating another limitRange in another namespace @ 01/31/24 06:33:04.963
  Jan 31 06:33:04.974: INFO: Namespace "e2e-limitrange-tmnkf-3116" created
  Jan 31 06:33:04.974: INFO: Creating LimitRange "e2e-limitrange-tmnkf" in namespace "e2e-limitrange-tmnkf-3116"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-tmnkf" @ 01/31/24 06:33:04.979
  Jan 31 06:33:04.985: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-tmnkf" in "limitrange-4936" namespace @ 01/31/24 06:33:04.985
  Jan 31 06:33:04.990: INFO: LimitRange "e2e-limitrange-tmnkf" has been patched
  STEP: Delete LimitRange "e2e-limitrange-tmnkf" by Collection with labelSelector: "e2e-limitrange-tmnkf=patched" @ 01/31/24 06:33:04.99
  STEP: Confirm that the limitRange "e2e-limitrange-tmnkf" has been deleted @ 01/31/24 06:33:04.996
  Jan 31 06:33:04.997: INFO: Requesting list of LimitRange to confirm quantity
  Jan 31 06:33:04.999: INFO: Found 0 LimitRange with label "e2e-limitrange-tmnkf=patched"
  Jan 31 06:33:04.999: INFO: LimitRange "e2e-limitrange-tmnkf" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-tmnkf" @ 01/31/24 06:33:04.999
  Jan 31 06:33:05.003: INFO: Found 1 limitRange
  Jan 31 06:33:05.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4936" for this suite. @ 01/31/24 06:33:05.007
  STEP: Destroying namespace "e2e-limitrange-tmnkf-3116" for this suite. @ 01/31/24 06:33:05.013
• [0.085 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 01/31/24 06:33:05.019
  Jan 31 06:33:05.019: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pods @ 01/31/24 06:33:05.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:05.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:05.037
  Jan 31 06:33:05.041: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: creating the pod @ 01/31/24 06:33:05.042
  STEP: submitting the pod to kubernetes @ 01/31/24 06:33:05.043
  Jan 31 06:33:07.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3972" for this suite. @ 01/31/24 06:33:07.086
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 01/31/24 06:33:07.093
  Jan 31 06:33:07.094: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/31/24 06:33:07.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:07.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:07.113
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 01/31/24 06:33:07.117
  Jan 31 06:33:07.118: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 01/31/24 06:33:12.901
  Jan 31 06:33:12.902: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:33:14.303: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:33:20.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2145" for this suite. @ 01/31/24 06:33:20.08
• [12.994 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 01/31/24 06:33:20.087
  Jan 31 06:33:20.087: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename daemonsets @ 01/31/24 06:33:20.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:20.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:20.108
  Jan 31 06:33:20.135: INFO: Create a RollingUpdate DaemonSet
  Jan 31 06:33:20.143: INFO: Check that daemon pods launch on every node of the cluster
  Jan 31 06:33:20.147: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:33:20.151: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:33:20.151: INFO: Node nodea08 is running 0 daemon pod, expected 1
  Jan 31 06:33:21.150: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:33:21.155: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:33:21.155: INFO: Node nodea08 is running 0 daemon pod, expected 1
  Jan 31 06:33:22.150: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:33:22.155: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 31 06:33:22.155: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  Jan 31 06:33:22.155: INFO: Update the DaemonSet to trigger a rollout
  Jan 31 06:33:22.166: INFO: Updating DaemonSet daemon-set
  Jan 31 06:33:23.183: INFO: Roll back the DaemonSet before rollout is complete
  Jan 31 06:33:23.195: INFO: Updating DaemonSet daemon-set
  Jan 31 06:33:23.195: INFO: Make sure DaemonSet rollback is complete
  Jan 31 06:33:23.199: INFO: Wrong image for pod: daemon-set-8v8ss. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jan 31 06:33:23.199: INFO: Pod daemon-set-8v8ss is not available
  Jan 31 06:33:23.203: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:33:24.208: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:33:25.204: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 06:33:26.201: INFO: Pod daemon-set-mfm4j is not available
  Jan 31 06:33:26.205: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 01/31/24 06:33:26.213
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4439, will wait for the garbage collector to delete the pods @ 01/31/24 06:33:26.213
  Jan 31 06:33:26.274: INFO: Deleting DaemonSet.extensions daemon-set took: 6.869648ms
  Jan 31 06:33:26.376: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.117774ms
  Jan 31 06:33:28.380: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 06:33:28.380: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 31 06:33:28.384: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"155067"},"items":null}

  Jan 31 06:33:28.388: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"155067"},"items":null}

  Jan 31 06:33:28.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4439" for this suite. @ 01/31/24 06:33:28.404
• [8.324 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 01/31/24 06:33:28.412
  Jan 31 06:33:28.412: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename svcaccounts @ 01/31/24 06:33:28.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:28.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:28.434
  STEP: reading a file in the container @ 01/31/24 06:33:30.463
  Jan 31 06:33:30.463: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8031 pod-service-account-ba42a961-b7f9-491a-9dbc-32f674a1b7de -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 01/31/24 06:33:30.69
  Jan 31 06:33:30.690: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8031 pod-service-account-ba42a961-b7f9-491a-9dbc-32f674a1b7de -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 01/31/24 06:33:30.897
  Jan 31 06:33:30.897: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8031 pod-service-account-ba42a961-b7f9-491a-9dbc-32f674a1b7de -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jan 31 06:33:31.114: INFO: Got root ca configmap in namespace "svcaccounts-8031"
  Jan 31 06:33:31.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8031" for this suite. @ 01/31/24 06:33:31.125
• [2.720 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 01/31/24 06:33:31.133
  Jan 31 06:33:31.133: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:33:31.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:31.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:31.154
  STEP: Creating a pod to test downward api env vars @ 01/31/24 06:33:31.16
  STEP: Saw pod success @ 01/31/24 06:33:35.184
  Jan 31 06:33:35.188: INFO: Trying to get logs from node nodea08 pod downward-api-f2b92362-5ba5-4619-a584-160a5ca55eae container dapi-container: <nil>
  STEP: delete the pod @ 01/31/24 06:33:35.197
  Jan 31 06:33:35.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9588" for this suite. @ 01/31/24 06:33:35.219
• [4.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 01/31/24 06:33:35.227
  Jan 31 06:33:35.227: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 06:33:35.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:35.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:35.245
  STEP: Setting up server cert @ 01/31/24 06:33:35.268
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 06:33:35.54
  STEP: Deploying the webhook pod @ 01/31/24 06:33:35.554
  STEP: Wait for the deployment to be ready @ 01/31/24 06:33:35.567
  Jan 31 06:33:35.574: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/31/24 06:33:37.588
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 06:33:37.602
  Jan 31 06:33:38.603: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 01/31/24 06:33:38.613
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/31/24 06:33:38.637
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 01/31/24 06:33:38.653
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/31/24 06:33:38.665
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 01/31/24 06:33:38.676
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/31/24 06:33:38.685
  Jan 31 06:33:38.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3930" for this suite. @ 01/31/24 06:33:38.733
  STEP: Destroying namespace "webhook-markers-3641" for this suite. @ 01/31/24 06:33:38.739
• [3.516 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 01/31/24 06:33:38.744
  Jan 31 06:33:38.744: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename csi-storageclass @ 01/31/24 06:33:38.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:38.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:38.763
  STEP: Creating a StorageClass @ 01/31/24 06:33:38.768
  STEP: Get StorageClass "e2e-j86qv" @ 01/31/24 06:33:38.773
  STEP: Patching the StorageClass "e2e-j86qv" @ 01/31/24 06:33:38.78
  STEP: Delete StorageClass "e2e-j86qv" @ 01/31/24 06:33:38.785
  STEP: Confirm deletion of StorageClass "e2e-j86qv" @ 01/31/24 06:33:38.79
  STEP: Create a replacement StorageClass @ 01/31/24 06:33:38.793
  STEP: Updating StorageClass "e2e-v2-ptm2c" @ 01/31/24 06:33:38.797
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-ptm2c=updated" @ 01/31/24 06:33:38.805
  STEP: Deleting StorageClass "e2e-v2-ptm2c" via DeleteCollection @ 01/31/24 06:33:38.808
  STEP: Confirm deletion of StorageClass "e2e-v2-ptm2c" @ 01/31/24 06:33:38.814
  Jan 31 06:33:38.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3472" for this suite. @ 01/31/24 06:33:38.821
• [0.083 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 01/31/24 06:33:38.827
  Jan 31 06:33:38.827: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:33:38.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:38.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:38.846
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:33:38.85
  STEP: Saw pod success @ 01/31/24 06:33:42.876
  Jan 31 06:33:42.881: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-23bb8513-0a06-4da6-a0ee-557fe15e9b93 container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:33:42.889
  Jan 31 06:33:42.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2675" for this suite. @ 01/31/24 06:33:42.912
• [4.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 01/31/24 06:33:42.918
  Jan 31 06:33:42.918: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename events @ 01/31/24 06:33:42.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:42.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:42.942
  STEP: Create set of events @ 01/31/24 06:33:42.946
  Jan 31 06:33:42.951: INFO: created test-event-1
  Jan 31 06:33:42.957: INFO: created test-event-2
  Jan 31 06:33:42.962: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 01/31/24 06:33:42.962
  STEP: delete collection of events @ 01/31/24 06:33:42.965
  Jan 31 06:33:42.966: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/31/24 06:33:42.981
  Jan 31 06:33:42.981: INFO: requesting list of events to confirm quantity
  Jan 31 06:33:42.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4279" for this suite. @ 01/31/24 06:33:42.988
• [0.075 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 01/31/24 06:33:42.994
  Jan 31 06:33:42.994: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:33:42.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:43.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:43.012
  STEP: Creating configMap with name projected-configmap-test-volume-map-116c90c6-8c8a-41e0-b56d-7754bc285ec3 @ 01/31/24 06:33:43.016
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:33:43.02
  STEP: Saw pod success @ 01/31/24 06:33:47.047
  Jan 31 06:33:47.052: INFO: Trying to get logs from node nodea08 pod pod-projected-configmaps-cc7e8433-6011-4d3e-9625-01e1d1a921af container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:33:47.061
  Jan 31 06:33:47.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8789" for this suite. @ 01/31/24 06:33:47.079
• [4.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 01/31/24 06:33:47.087
  Jan 31 06:33:47.087: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 06:33:47.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:47.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:47.107
  STEP: Creating secret with name secret-test-adbdd501-64c5-4bbf-b6ef-b6c87bcd847c @ 01/31/24 06:33:47.112
  STEP: Creating a pod to test consume secrets @ 01/31/24 06:33:47.119
  STEP: Saw pod success @ 01/31/24 06:33:51.143
  Jan 31 06:33:51.147: INFO: Trying to get logs from node nodea08 pod pod-secrets-461b9763-01f7-4b4e-a63d-4b2bda91f22d container secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 06:33:51.157
  Jan 31 06:33:51.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6487" for this suite. @ 01/31/24 06:33:51.178
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 01/31/24 06:33:51.185
  Jan 31 06:33:51.185: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename security-context-test @ 01/31/24 06:33:51.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:51.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:51.207
  Jan 31 06:33:55.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6089" for this suite. @ 01/31/24 06:33:55.253
• [4.075 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 01/31/24 06:33:55.26
  Jan 31 06:33:55.260: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 06:33:55.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:33:55.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:33:55.284
  STEP: Setting up server cert @ 01/31/24 06:33:55.309
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 06:33:55.991
  STEP: Deploying the webhook pod @ 01/31/24 06:33:55.999
  STEP: Wait for the deployment to be ready @ 01/31/24 06:33:56.014
  Jan 31 06:33:56.024: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/31/24 06:33:58.039
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 06:33:58.058
  Jan 31 06:33:59.059: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/31/24 06:33:59.075
  STEP: create a pod that should be denied by the webhook @ 01/31/24 06:33:59.108
  STEP: create a pod that causes the webhook to hang @ 01/31/24 06:33:59.125
  STEP: create a configmap that should be denied by the webhook @ 01/31/24 06:34:09.137
  STEP: create a configmap that should be admitted by the webhook @ 01/31/24 06:34:09.153
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/31/24 06:34:09.166
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/31/24 06:34:09.183
  STEP: create a namespace that bypass the webhook @ 01/31/24 06:34:09.192
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 01/31/24 06:34:09.206
  Jan 31 06:34:09.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1828" for this suite. @ 01/31/24 06:34:09.262
  STEP: Destroying namespace "webhook-markers-1778" for this suite. @ 01/31/24 06:34:09.269
  STEP: Destroying namespace "exempted-namespace-1053" for this suite. @ 01/31/24 06:34:09.274
• [14.019 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 01/31/24 06:34:09.289
  Jan 31 06:34:09.289: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:34:09.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:34:09.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:34:09.305
  STEP: fetching services @ 01/31/24 06:34:09.31
  Jan 31 06:34:09.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2842" for this suite. @ 01/31/24 06:34:09.319
• [0.036 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 01/31/24 06:34:09.325
  Jan 31 06:34:09.325: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:34:09.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:34:09.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:34:09.342
  STEP: Creating projection with secret that has name projected-secret-test-map-a04d2622-d5b8-4e90-a4c3-dbceac62f9fe @ 01/31/24 06:34:09.347
  STEP: Creating a pod to test consume secrets @ 01/31/24 06:34:09.351
  STEP: Saw pod success @ 01/31/24 06:34:13.375
  Jan 31 06:34:13.380: INFO: Trying to get logs from node nodea08 pod pod-projected-secrets-dfd7c192-4ce4-46c0-a61a-a5ea1aeee826 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 06:34:13.388
  Jan 31 06:34:13.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3837" for this suite. @ 01/31/24 06:34:13.406
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 01/31/24 06:34:13.412
  Jan 31 06:34:13.412: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 06:34:13.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:34:13.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:34:13.433
  STEP: Creating configMap with name configmap-test-volume-6f8fd64a-2986-4ab0-a73b-4846418538d7 @ 01/31/24 06:34:13.438
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:34:13.442
  STEP: Saw pod success @ 01/31/24 06:34:17.469
  Jan 31 06:34:17.473: INFO: Trying to get logs from node nodea08 pod pod-configmaps-fa045bea-54d3-426f-a264-c6075f912a94 container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:34:17.482
  Jan 31 06:34:17.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6324" for this suite. @ 01/31/24 06:34:17.506
• [4.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 01/31/24 06:34:17.513
  Jan 31 06:34:17.513: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename endpointslice @ 01/31/24 06:34:17.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:34:17.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:34:17.534
  STEP: getting /apis @ 01/31/24 06:34:17.539
  STEP: getting /apis/discovery.k8s.io @ 01/31/24 06:34:17.547
  STEP: getting /apis/discovery.k8s.iov1 @ 01/31/24 06:34:17.549
  STEP: creating @ 01/31/24 06:34:17.551
  STEP: getting @ 01/31/24 06:34:17.569
  STEP: listing @ 01/31/24 06:34:17.573
  STEP: watching @ 01/31/24 06:34:17.577
  Jan 31 06:34:17.577: INFO: starting watch
  STEP: cluster-wide listing @ 01/31/24 06:34:17.579
  STEP: cluster-wide watching @ 01/31/24 06:34:17.584
  Jan 31 06:34:17.584: INFO: starting watch
  STEP: patching @ 01/31/24 06:34:17.586
  STEP: updating @ 01/31/24 06:34:17.593
  Jan 31 06:34:17.602: INFO: waiting for watch events with expected annotations
  Jan 31 06:34:17.602: INFO: saw patched and updated annotations
  STEP: deleting @ 01/31/24 06:34:17.602
  STEP: deleting a collection @ 01/31/24 06:34:17.616
  Jan 31 06:34:17.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6787" for this suite. @ 01/31/24 06:34:17.637
• [0.132 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 01/31/24 06:34:17.645
  Jan 31 06:34:17.646: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename var-expansion @ 01/31/24 06:34:17.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:34:17.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:34:17.667
  STEP: creating the pod with failed condition @ 01/31/24 06:34:17.672
  STEP: updating the pod @ 01/31/24 06:36:17.683
  Jan 31 06:36:18.200: INFO: Successfully updated pod "var-expansion-c60f55f4-e640-492b-8d2a-fb55c7b1174b"
  STEP: waiting for pod running @ 01/31/24 06:36:18.2
  STEP: deleting the pod gracefully @ 01/31/24 06:36:20.212
  Jan 31 06:36:20.212: INFO: Deleting pod "var-expansion-c60f55f4-e640-492b-8d2a-fb55c7b1174b" in namespace "var-expansion-6111"
  Jan 31 06:36:20.222: INFO: Wait up to 5m0s for pod "var-expansion-c60f55f4-e640-492b-8d2a-fb55c7b1174b" to be fully deleted
  Jan 31 06:36:52.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6111" for this suite. @ 01/31/24 06:36:52.337
• [154.700 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 01/31/24 06:36:52.346
  Jan 31 06:36:52.346: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:36:52.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:36:52.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:36:52.368
  STEP: creating a replication controller @ 01/31/24 06:36:52.373
  Jan 31 06:36:52.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8054 create -f -'
  Jan 31 06:36:52.565: INFO: stderr: ""
  Jan 31 06:36:52.565: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/31/24 06:36:52.565
  Jan 31 06:36:52.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8054 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 31 06:36:52.665: INFO: stderr: ""
  Jan 31 06:36:52.665: INFO: stdout: "update-demo-nautilus-4v2tr update-demo-nautilus-mrrs5 "
  Jan 31 06:36:52.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8054 get pods update-demo-nautilus-4v2tr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 31 06:36:52.759: INFO: stderr: ""
  Jan 31 06:36:52.760: INFO: stdout: ""
  Jan 31 06:36:52.760: INFO: update-demo-nautilus-4v2tr is created but not running
  Jan 31 06:36:57.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8054 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 31 06:36:57.869: INFO: stderr: ""
  Jan 31 06:36:57.869: INFO: stdout: "update-demo-nautilus-4v2tr update-demo-nautilus-mrrs5 "
  Jan 31 06:36:57.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8054 get pods update-demo-nautilus-4v2tr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 31 06:36:57.963: INFO: stderr: ""
  Jan 31 06:36:57.963: INFO: stdout: "true"
  Jan 31 06:36:57.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8054 get pods update-demo-nautilus-4v2tr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 31 06:36:58.055: INFO: stderr: ""
  Jan 31 06:36:58.055: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 31 06:36:58.055: INFO: validating pod update-demo-nautilus-4v2tr
  Jan 31 06:36:58.062: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 31 06:36:58.062: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 31 06:36:58.062: INFO: update-demo-nautilus-4v2tr is verified up and running
  Jan 31 06:36:58.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8054 get pods update-demo-nautilus-mrrs5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 31 06:36:58.154: INFO: stderr: ""
  Jan 31 06:36:58.154: INFO: stdout: "true"
  Jan 31 06:36:58.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8054 get pods update-demo-nautilus-mrrs5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 31 06:36:58.248: INFO: stderr: ""
  Jan 31 06:36:58.248: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 31 06:36:58.248: INFO: validating pod update-demo-nautilus-mrrs5
  Jan 31 06:36:58.255: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 31 06:36:58.255: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 31 06:36:58.255: INFO: update-demo-nautilus-mrrs5 is verified up and running
  STEP: using delete to clean up resources @ 01/31/24 06:36:58.255
  Jan 31 06:36:58.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8054 delete --grace-period=0 --force -f -'
  Jan 31 06:36:58.362: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 31 06:36:58.362: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jan 31 06:36:58.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8054 get rc,svc -l name=update-demo --no-headers'
  Jan 31 06:36:58.475: INFO: stderr: "No resources found in kubectl-8054 namespace.\n"
  Jan 31 06:36:58.475: INFO: stdout: ""
  Jan 31 06:36:58.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-8054 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jan 31 06:36:58.581: INFO: stderr: ""
  Jan 31 06:36:58.581: INFO: stdout: ""
  Jan 31 06:36:58.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8054" for this suite. @ 01/31/24 06:36:58.587
• [6.247 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 01/31/24 06:36:58.593
  Jan 31 06:36:58.593: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename deployment @ 01/31/24 06:36:58.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:36:58.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:36:58.609
  Jan 31 06:36:58.614: INFO: Creating deployment "test-recreate-deployment"
  Jan 31 06:36:58.619: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jan 31 06:36:58.626: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Jan 31 06:37:00.637: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jan 31 06:37:00.641: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jan 31 06:37:00.659: INFO: Updating deployment test-recreate-deployment
  Jan 31 06:37:00.659: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jan 31 06:37:00.727: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3eaf9b2-6c55-4302-b319-50aaa17c0c0f",
      ResourceVersion: (string) (len=6) "155948",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279818,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 31 06:37:00.734: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b845e6b-ad16-43ab-a8f4-91366e0e0a1d",
      ResourceVersion: (string) (len=6) "155945",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279820,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "a3eaf9b2-6c55-4302-b319-50aaa17c0c0f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 33 65 61 66 39  62 32 2d 36 63 35 35 2d  |\"a3eaf9b2-6c55-|
              00000120  34 33 30 32 2d 62 33 31  39 2d 35 30 61 61 61 31  |4302-b319-50aaa1|
              00000130  37 63 30 63 30 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7c0c0f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 06:37:00.735: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jan 31 06:37:00.736: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "53d965a8-af42-44b1-b903-1f20eb43ada8",
      ResourceVersion: (string) (len=6) "155937",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279818,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "a3eaf9b2-6c55-4302-b319-50aaa17c0c0f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 33 65 61 66 39  62 32 2d 36 63 35 35 2d  |\"a3eaf9b2-6c55-|
              00000120  34 33 30 32 2d 62 33 31  39 2d 35 30 61 61 61 31  |4302-b319-50aaa1|
              00000130  37 63 30 63 30 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7c0c0f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 06:37:00.742: INFO: Pod "test-recreate-deployment-76fb77d45-rd8jj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-rd8jj",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-1477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fde30220-8f5b-458a-9f5c-b20a64bc1ab9",
      ResourceVersion: (string) (len=6) "155949",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279820,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "3b845e6b-ad16-43ab-a8f4-91366e0e0a1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  38 34 35 65 36 62 2d 61  |d\":\"3b845e6b-a|
              00000090  64 31 36 2d 34 33 61 62  2d 61 38 66 34 2d 39 31  |d16-43ab-a8f4-91|
              000000a0  33 36 36 65 30 65 30 61  31 64 5c 22 7d 22 3a 7b  |366e0e0a1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q6flc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q6flc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842279820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842279820,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 06:37:00.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1477" for this suite. @ 01/31/24 06:37:00.752
• [2.165 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 01/31/24 06:37:00.758
  Jan 31 06:37:00.758: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/31/24 06:37:00.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:37:00.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:37:00.778
  Jan 31 06:37:00.784: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/31/24 06:37:02.16
  Jan 31 06:37:02.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-442 --namespace=crd-publish-openapi-442 create -f -'
  Jan 31 06:37:02.318: INFO: stderr: ""
  Jan 31 06:37:02.318: INFO: stdout: "e2e-test-crd-publish-openapi-7940-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jan 31 06:37:02.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-442 --namespace=crd-publish-openapi-442 delete e2e-test-crd-publish-openapi-7940-crds test-cr'
  Jan 31 06:37:02.423: INFO: stderr: ""
  Jan 31 06:37:02.423: INFO: stdout: "e2e-test-crd-publish-openapi-7940-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jan 31 06:37:02.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-442 --namespace=crd-publish-openapi-442 apply -f -'
  Jan 31 06:37:02.536: INFO: stderr: ""
  Jan 31 06:37:02.536: INFO: stdout: "e2e-test-crd-publish-openapi-7940-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jan 31 06:37:02.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-442 --namespace=crd-publish-openapi-442 delete e2e-test-crd-publish-openapi-7940-crds test-cr'
  Jan 31 06:37:02.634: INFO: stderr: ""
  Jan 31 06:37:02.634: INFO: stdout: "e2e-test-crd-publish-openapi-7940-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/31/24 06:37:02.634
  Jan 31 06:37:02.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-442 explain e2e-test-crd-publish-openapi-7940-crds'
  Jan 31 06:37:02.727: INFO: stderr: ""
  Jan 31 06:37:02.727: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7940-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jan 31 06:37:04.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-442" for this suite. @ 01/31/24 06:37:04.112
• [3.360 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 01/31/24 06:37:04.122
  Jan 31 06:37:04.122: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:37:04.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:37:04.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:37:04.147
  STEP: creating a replication controller @ 01/31/24 06:37:04.152
  Jan 31 06:37:04.153: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 create -f -'
  Jan 31 06:37:04.350: INFO: stderr: ""
  Jan 31 06:37:04.350: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/31/24 06:37:04.35
  Jan 31 06:37:04.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 31 06:37:04.444: INFO: stderr: ""
  Jan 31 06:37:04.444: INFO: stdout: "update-demo-nautilus-g4bg2 update-demo-nautilus-m25bc "
  Jan 31 06:37:04.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods update-demo-nautilus-g4bg2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 31 06:37:04.538: INFO: stderr: ""
  Jan 31 06:37:04.538: INFO: stdout: ""
  Jan 31 06:37:04.538: INFO: update-demo-nautilus-g4bg2 is created but not running
  Jan 31 06:37:09.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 31 06:37:09.643: INFO: stderr: ""
  Jan 31 06:37:09.643: INFO: stdout: "update-demo-nautilus-g4bg2 update-demo-nautilus-m25bc "
  Jan 31 06:37:09.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods update-demo-nautilus-g4bg2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 31 06:37:09.745: INFO: stderr: ""
  Jan 31 06:37:09.745: INFO: stdout: "true"
  Jan 31 06:37:09.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods update-demo-nautilus-g4bg2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 31 06:37:09.843: INFO: stderr: ""
  Jan 31 06:37:09.844: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 31 06:37:09.844: INFO: validating pod update-demo-nautilus-g4bg2
  Jan 31 06:37:09.851: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 31 06:37:09.851: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 31 06:37:09.851: INFO: update-demo-nautilus-g4bg2 is verified up and running
  Jan 31 06:37:09.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods update-demo-nautilus-m25bc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 31 06:37:09.945: INFO: stderr: ""
  Jan 31 06:37:09.945: INFO: stdout: "true"
  Jan 31 06:37:09.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods update-demo-nautilus-m25bc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 31 06:37:10.055: INFO: stderr: ""
  Jan 31 06:37:10.056: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 31 06:37:10.056: INFO: validating pod update-demo-nautilus-m25bc
  Jan 31 06:37:10.062: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 31 06:37:10.062: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 31 06:37:10.062: INFO: update-demo-nautilus-m25bc is verified up and running
  STEP: scaling down the replication controller @ 01/31/24 06:37:10.062
  Jan 31 06:37:10.065: INFO: scanned /root for discovery docs: <nil>
  Jan 31 06:37:10.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Jan 31 06:37:11.181: INFO: stderr: ""
  Jan 31 06:37:11.181: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/31/24 06:37:11.181
  Jan 31 06:37:11.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 31 06:37:11.278: INFO: stderr: ""
  Jan 31 06:37:11.278: INFO: stdout: "update-demo-nautilus-m25bc "
  Jan 31 06:37:11.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods update-demo-nautilus-m25bc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 31 06:37:11.375: INFO: stderr: ""
  Jan 31 06:37:11.375: INFO: stdout: "true"
  Jan 31 06:37:11.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods update-demo-nautilus-m25bc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 31 06:37:11.467: INFO: stderr: ""
  Jan 31 06:37:11.467: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 31 06:37:11.467: INFO: validating pod update-demo-nautilus-m25bc
  Jan 31 06:37:11.472: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 31 06:37:11.472: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 31 06:37:11.472: INFO: update-demo-nautilus-m25bc is verified up and running
  STEP: scaling up the replication controller @ 01/31/24 06:37:11.472
  Jan 31 06:37:11.475: INFO: scanned /root for discovery docs: <nil>
  Jan 31 06:37:11.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Jan 31 06:37:12.591: INFO: stderr: ""
  Jan 31 06:37:12.591: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/31/24 06:37:12.591
  Jan 31 06:37:12.591: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 31 06:37:12.693: INFO: stderr: ""
  Jan 31 06:37:12.693: INFO: stdout: "update-demo-nautilus-cslpn update-demo-nautilus-m25bc "
  Jan 31 06:37:12.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods update-demo-nautilus-cslpn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 31 06:37:12.785: INFO: stderr: ""
  Jan 31 06:37:12.785: INFO: stdout: "true"
  Jan 31 06:37:12.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods update-demo-nautilus-cslpn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 31 06:37:12.885: INFO: stderr: ""
  Jan 31 06:37:12.885: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 31 06:37:12.885: INFO: validating pod update-demo-nautilus-cslpn
  Jan 31 06:37:12.892: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 31 06:37:12.892: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 31 06:37:12.892: INFO: update-demo-nautilus-cslpn is verified up and running
  Jan 31 06:37:12.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods update-demo-nautilus-m25bc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 31 06:37:12.986: INFO: stderr: ""
  Jan 31 06:37:12.986: INFO: stdout: "true"
  Jan 31 06:37:12.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods update-demo-nautilus-m25bc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 31 06:37:13.079: INFO: stderr: ""
  Jan 31 06:37:13.079: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 31 06:37:13.079: INFO: validating pod update-demo-nautilus-m25bc
  Jan 31 06:37:13.084: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 31 06:37:13.084: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 31 06:37:13.084: INFO: update-demo-nautilus-m25bc is verified up and running
  STEP: using delete to clean up resources @ 01/31/24 06:37:13.084
  Jan 31 06:37:13.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 delete --grace-period=0 --force -f -'
  Jan 31 06:37:13.180: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 31 06:37:13.180: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jan 31 06:37:13.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get rc,svc -l name=update-demo --no-headers'
  Jan 31 06:37:13.280: INFO: stderr: "No resources found in kubectl-1515 namespace.\n"
  Jan 31 06:37:13.280: INFO: stdout: ""
  Jan 31 06:37:13.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1515 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jan 31 06:37:13.379: INFO: stderr: ""
  Jan 31 06:37:13.379: INFO: stdout: ""
  Jan 31 06:37:13.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1515" for this suite. @ 01/31/24 06:37:13.385
• [9.269 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 01/31/24 06:37:13.392
  Jan 31 06:37:13.392: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename statefulset @ 01/31/24 06:37:13.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:37:13.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:37:13.413
  STEP: Creating service test in namespace statefulset-6950 @ 01/31/24 06:37:13.419
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 01/31/24 06:37:13.424
  STEP: Creating stateful set ss in namespace statefulset-6950 @ 01/31/24 06:37:13.427
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6950 @ 01/31/24 06:37:13.433
  Jan 31 06:37:13.436: INFO: Found 0 stateful pods, waiting for 1
  Jan 31 06:37:23.443: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 01/31/24 06:37:23.443
  Jan 31 06:37:23.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-6950 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 31 06:37:23.656: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 31 06:37:23.656: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 31 06:37:23.656: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 31 06:37:23.661: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jan 31 06:37:33.664: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan 31 06:37:33.664: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan 31 06:37:33.683: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999067s
  Jan 31 06:37:34.689: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996252831s
  Jan 31 06:37:35.698: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.989823393s
  Jan 31 06:37:36.703: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.981247147s
  Jan 31 06:37:37.709: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.976008997s
  Jan 31 06:37:38.715: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.970478699s
  Jan 31 06:37:39.721: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.964473147s
  Jan 31 06:37:40.727: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.958334617s
  Jan 31 06:37:41.733: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.952381884s
  Jan 31 06:37:42.739: INFO: Verifying statefulset ss doesn't scale past 1 for another 946.62067ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6950 @ 01/31/24 06:37:43.739
  Jan 31 06:37:43.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-6950 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 31 06:37:43.966: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 31 06:37:43.966: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 31 06:37:43.966: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 31 06:37:43.972: INFO: Found 1 stateful pods, waiting for 3
  Jan 31 06:37:53.976: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 06:37:53.976: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 06:37:53.976: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 01/31/24 06:37:53.976
  STEP: Scale down will halt with unhealthy stateful pod @ 01/31/24 06:37:53.976
  Jan 31 06:37:53.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-6950 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 31 06:37:54.184: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 31 06:37:54.184: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 31 06:37:54.184: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 31 06:37:54.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-6950 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 31 06:37:54.394: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 31 06:37:54.394: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 31 06:37:54.394: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 31 06:37:54.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-6950 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 31 06:37:54.626: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 31 06:37:54.626: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 31 06:37:54.626: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 31 06:37:54.626: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan 31 06:37:54.631: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jan 31 06:38:04.639: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan 31 06:38:04.639: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jan 31 06:38:04.640: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jan 31 06:38:04.657: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999577s
  Jan 31 06:38:05.663: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994152223s
  Jan 31 06:38:06.669: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988395683s
  Jan 31 06:38:07.675: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.982549915s
  Jan 31 06:38:08.681: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.976717842s
  Jan 31 06:38:09.687: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.970693741s
  Jan 31 06:38:10.693: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.964143473s
  Jan 31 06:38:11.698: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.959021838s
  Jan 31 06:38:12.703: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.953766202s
  Jan 31 06:38:13.709: INFO: Verifying statefulset ss doesn't scale past 3 for another 948.016523ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6950 @ 01/31/24 06:38:14.709
  Jan 31 06:38:14.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-6950 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 31 06:38:14.940: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 31 06:38:14.940: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 31 06:38:14.940: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 31 06:38:14.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-6950 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 31 06:38:15.137: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 31 06:38:15.137: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 31 06:38:15.137: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 31 06:38:15.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-6950 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 31 06:38:15.345: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 31 06:38:15.345: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 31 06:38:15.345: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 31 06:38:15.345: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 01/31/24 06:38:25.362
  Jan 31 06:38:25.363: INFO: Deleting all statefulset in ns statefulset-6950
  Jan 31 06:38:25.367: INFO: Scaling statefulset ss to 0
  Jan 31 06:38:25.381: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 31 06:38:25.384: INFO: Deleting statefulset ss
  Jan 31 06:38:25.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6950" for this suite. @ 01/31/24 06:38:25.404
• [72.017 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 01/31/24 06:38:25.41
  Jan 31 06:38:25.410: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:38:25.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:38:25.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:38:25.431
  STEP: Creating projection with secret that has name projected-secret-test-dcbf5c79-588a-4c29-90bd-917d34edd9f5 @ 01/31/24 06:38:25.437
  STEP: Creating a pod to test consume secrets @ 01/31/24 06:38:25.442
  STEP: Saw pod success @ 01/31/24 06:38:29.469
  Jan 31 06:38:29.474: INFO: Trying to get logs from node nodea08 pod pod-projected-secrets-939fbb43-a8ba-40eb-8509-4255016b1a2c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 06:38:29.502
  Jan 31 06:38:29.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1266" for this suite. @ 01/31/24 06:38:29.522
• [4.118 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 01/31/24 06:38:29.528
  Jan 31 06:38:29.528: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename var-expansion @ 01/31/24 06:38:29.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:38:29.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:38:29.549
  STEP: Creating a pod to test env composition @ 01/31/24 06:38:29.555
  STEP: Saw pod success @ 01/31/24 06:38:33.58
  Jan 31 06:38:33.585: INFO: Trying to get logs from node nodea08 pod var-expansion-d9235c8f-3947-4095-891d-2b5396e0c01e container dapi-container: <nil>
  STEP: delete the pod @ 01/31/24 06:38:33.593
  Jan 31 06:38:33.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2783" for this suite. @ 01/31/24 06:38:33.613
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 01/31/24 06:38:33.62
  Jan 31 06:38:33.620: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:38:33.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:38:33.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:38:33.64
  STEP: Creating configMap with name configmap-projected-all-test-volume-d59ff0f1-e22b-4395-9880-5a609ac58038 @ 01/31/24 06:38:33.645
  STEP: Creating secret with name secret-projected-all-test-volume-713550a7-d7b7-4f71-b6c9-619acbc01123 @ 01/31/24 06:38:33.649
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 01/31/24 06:38:33.654
  STEP: Saw pod success @ 01/31/24 06:38:37.68
  Jan 31 06:38:37.684: INFO: Trying to get logs from node nodea08 pod projected-volume-950b0d4b-ee96-40f5-b4ff-a5873ea68df2 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 06:38:37.691
  Jan 31 06:38:37.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8732" for this suite. @ 01/31/24 06:38:37.712
• [4.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 01/31/24 06:38:37.719
  Jan 31 06:38:37.719: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename job @ 01/31/24 06:38:37.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:38:37.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:38:37.737
  STEP: Creating Indexed job @ 01/31/24 06:38:37.741
  STEP: Ensuring job reaches completions @ 01/31/24 06:38:37.747
  STEP: Ensuring pods with index for job exist @ 01/31/24 06:38:45.754
  Jan 31 06:38:45.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7764" for this suite. @ 01/31/24 06:38:45.764
• [8.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 01/31/24 06:38:45.773
  Jan 31 06:38:45.773: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename field-validation @ 01/31/24 06:38:45.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:38:45.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:38:45.792
  Jan 31 06:38:45.797: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  W0131 06:38:48.366791      23 warnings.go:70] unknown field "alpha"
  W0131 06:38:48.366877      23 warnings.go:70] unknown field "beta"
  W0131 06:38:48.366890      23 warnings.go:70] unknown field "delta"
  W0131 06:38:48.366902      23 warnings.go:70] unknown field "epsilon"
  W0131 06:38:48.366913      23 warnings.go:70] unknown field "gamma"
  Jan 31 06:38:48.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7523" for this suite. @ 01/31/24 06:38:48.922
• [3.155 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 01/31/24 06:38:48.928
  Jan 31 06:38:48.928: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:38:48.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:38:48.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:38:48.949
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:38:48.953
  STEP: Saw pod success @ 01/31/24 06:38:52.977
  Jan 31 06:38:52.982: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-6a6cee98-d79a-46e1-8230-9e762c6bec2d container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:38:52.991
  Jan 31 06:38:53.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3828" for this suite. @ 01/31/24 06:38:53.015
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 01/31/24 06:38:53.023
  Jan 31 06:38:53.023: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replicaset @ 01/31/24 06:38:53.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:38:53.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:38:53.042
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 01/31/24 06:38:53.047
  Jan 31 06:38:53.056: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jan 31 06:38:58.063: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/31/24 06:38:58.063
  STEP: getting scale subresource @ 01/31/24 06:38:58.063
  STEP: updating a scale subresource @ 01/31/24 06:38:58.069
  STEP: verifying the replicaset Spec.Replicas was modified @ 01/31/24 06:38:58.074
  STEP: Patch a scale subresource @ 01/31/24 06:38:58.078
  Jan 31 06:38:58.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5589" for this suite. @ 01/31/24 06:38:58.095
• [5.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 01/31/24 06:38:58.105
  Jan 31 06:38:58.105: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:38:58.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:38:58.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:38:58.132
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2364 @ 01/31/24 06:38:58.136
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/31/24 06:38:58.151
  STEP: creating service externalsvc in namespace services-2364 @ 01/31/24 06:38:58.152
  STEP: creating replication controller externalsvc in namespace services-2364 @ 01/31/24 06:38:58.164
  I0131 06:38:58.169582      23 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2364, replica count: 2
  I0131 06:39:01.221814      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 01/31/24 06:39:01.226
  Jan 31 06:39:01.250: INFO: Creating new exec pod
  Jan 31 06:39:03.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-2364 exec execpod5l6lq -- /bin/sh -x -c nslookup nodeport-service.services-2364.svc.cluster.local'
  Jan 31 06:39:03.493: INFO: stderr: "+ nslookup nodeport-service.services-2364.svc.cluster.local\n"
  Jan 31 06:39:03.493: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-2364.svc.cluster.local\tcanonical name = externalsvc.services-2364.svc.cluster.local.\nName:\texternalsvc.services-2364.svc.cluster.local\nAddress: 10.106.153.75\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2364, will wait for the garbage collector to delete the pods @ 01/31/24 06:39:03.494
  Jan 31 06:39:03.557: INFO: Deleting ReplicationController externalsvc took: 8.53044ms
  Jan 31 06:39:03.657: INFO: Terminating ReplicationController externalsvc pods took: 100.170599ms
  Jan 31 06:39:06.376: INFO: Cleaning up the NodePort to ExternalName test service
  Jan 31 06:39:06.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2364" for this suite. @ 01/31/24 06:39:06.394
• [8.294 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 01/31/24 06:39:06.399
  Jan 31 06:39:06.399: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:39:06.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:39:06.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:39:06.419
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1736 @ 01/31/24 06:39:06.425
  STEP: changing the ExternalName service to type=ClusterIP @ 01/31/24 06:39:06.43
  STEP: creating replication controller externalname-service in namespace services-1736 @ 01/31/24 06:39:06.446
  I0131 06:39:06.453996      23 runners.go:197] Created replication controller with name: externalname-service, namespace: services-1736, replica count: 2
  I0131 06:39:09.506352      23 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 31 06:39:09.506: INFO: Creating new exec pod
  Jan 31 06:39:12.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1736 exec execpodcb9rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jan 31 06:39:12.736: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jan 31 06:39:12.736: INFO: stdout: ""
  Jan 31 06:39:13.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1736 exec execpodcb9rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jan 31 06:39:13.738: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jan 31 06:39:13.739: INFO: stdout: "externalname-service-cnwsw"
  Jan 31 06:39:13.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1736 exec execpodcb9rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.62.41 80'
  Jan 31 06:39:13.940: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.62.41 80\nConnection to 10.102.62.41 80 port [tcp/http] succeeded!\n"
  Jan 31 06:39:13.940: INFO: stdout: ""
  Jan 31 06:39:14.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1736 exec execpodcb9rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.62.41 80'
  Jan 31 06:39:14.958: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.62.41 80\nConnection to 10.102.62.41 80 port [tcp/http] succeeded!\n"
  Jan 31 06:39:14.958: INFO: stdout: "externalname-service-cnwsw"
  Jan 31 06:39:14.958: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jan 31 06:39:14.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1736" for this suite. @ 01/31/24 06:39:14.982
• [8.587 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 01/31/24 06:39:14.987
  Jan 31 06:39:14.987: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:39:14.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:39:15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:39:15.004
  STEP: Creating a pod to test emptydir volume type on node default medium @ 01/31/24 06:39:15.009
  STEP: Saw pod success @ 01/31/24 06:39:19.037
  Jan 31 06:39:19.041: INFO: Trying to get logs from node nodea08 pod pod-94acee19-ed0c-4600-be9c-8c3e0767604b container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:39:19.05
  Jan 31 06:39:19.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9280" for this suite. @ 01/31/24 06:39:19.073
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 01/31/24 06:39:19.08
  Jan 31 06:39:19.080: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-runtime @ 01/31/24 06:39:19.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:39:19.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:39:19.101
  STEP: create the container @ 01/31/24 06:39:19.106
  W0131 06:39:19.115833      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/31/24 06:39:19.116
  STEP: get the container status @ 01/31/24 06:39:22.134
  STEP: the container should be terminated @ 01/31/24 06:39:22.139
  STEP: the termination message should be set @ 01/31/24 06:39:22.139
  Jan 31 06:39:22.139: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/31/24 06:39:22.139
  Jan 31 06:39:22.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1718" for this suite. @ 01/31/24 06:39:22.162
• [3.088 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 01/31/24 06:39:22.169
  Jan 31 06:39:22.169: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:39:22.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:39:22.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:39:22.188
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/31/24 06:39:22.193
  STEP: Saw pod success @ 01/31/24 06:39:26.219
  Jan 31 06:39:26.222: INFO: Trying to get logs from node nodea08 pod pod-f938fcc1-b336-46a0-9edb-c001647770d9 container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:39:26.23
  Jan 31 06:39:26.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6544" for this suite. @ 01/31/24 06:39:26.249
• [4.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 01/31/24 06:39:26.256
  Jan 31 06:39:26.256: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename svcaccounts @ 01/31/24 06:39:26.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:39:26.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:39:26.276
  Jan 31 06:39:26.284: INFO: Got root ca configmap in namespace "svcaccounts-9907"
  Jan 31 06:39:26.288: INFO: Deleted root ca configmap in namespace "svcaccounts-9907"
  STEP: waiting for a new root ca configmap created @ 01/31/24 06:39:26.79
  Jan 31 06:39:26.794: INFO: Recreated root ca configmap in namespace "svcaccounts-9907"
  Jan 31 06:39:26.802: INFO: Updated root ca configmap in namespace "svcaccounts-9907"
  STEP: waiting for the root ca configmap reconciled @ 01/31/24 06:39:27.303
  Jan 31 06:39:27.307: INFO: Reconciled root ca configmap in namespace "svcaccounts-9907"
  Jan 31 06:39:27.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9907" for this suite. @ 01/31/24 06:39:27.312
• [1.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 01/31/24 06:39:27.32
  Jan 31 06:39:27.320: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 06:39:27.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:39:27.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:39:27.339
  STEP: creating the pod @ 01/31/24 06:39:27.345
  Jan 31 06:39:27.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-7518 create -f -'
  Jan 31 06:39:27.543: INFO: stderr: ""
  Jan 31 06:39:27.543: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 01/31/24 06:39:29.554
  Jan 31 06:39:29.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-7518 label pods pause testing-label=testing-label-value'
  Jan 31 06:39:29.666: INFO: stderr: ""
  Jan 31 06:39:29.666: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 01/31/24 06:39:29.666
  Jan 31 06:39:29.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-7518 get pod pause -L testing-label'
  Jan 31 06:39:29.772: INFO: stderr: ""
  Jan 31 06:39:29.772: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 01/31/24 06:39:29.772
  Jan 31 06:39:29.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-7518 label pods pause testing-label-'
  Jan 31 06:39:29.880: INFO: stderr: ""
  Jan 31 06:39:29.880: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 01/31/24 06:39:29.88
  Jan 31 06:39:29.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-7518 get pod pause -L testing-label'
  Jan 31 06:39:29.979: INFO: stderr: ""
  Jan 31 06:39:29.979: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 01/31/24 06:39:29.979
  Jan 31 06:39:29.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-7518 delete --grace-period=0 --force -f -'
  Jan 31 06:39:30.081: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 31 06:39:30.081: INFO: stdout: "pod \"pause\" force deleted\n"
  Jan 31 06:39:30.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-7518 get rc,svc -l name=pause --no-headers'
  Jan 31 06:39:30.180: INFO: stderr: "No resources found in kubectl-7518 namespace.\n"
  Jan 31 06:39:30.180: INFO: stdout: ""
  Jan 31 06:39:30.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-7518 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jan 31 06:39:30.274: INFO: stderr: ""
  Jan 31 06:39:30.274: INFO: stdout: ""
  Jan 31 06:39:30.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7518" for this suite. @ 01/31/24 06:39:30.279
• [2.966 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 01/31/24 06:39:30.287
  Jan 31 06:39:30.287: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename security-context-test @ 01/31/24 06:39:30.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:39:30.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:39:30.307
  Jan 31 06:39:34.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9842" for this suite. @ 01/31/24 06:39:34.345
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 01/31/24 06:39:34.355
  Jan 31 06:39:34.356: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pods @ 01/31/24 06:39:34.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:39:34.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:39:34.374
  Jan 31 06:39:34.379: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: creating the pod @ 01/31/24 06:39:34.38
  STEP: submitting the pod to kubernetes @ 01/31/24 06:39:34.38
  Jan 31 06:39:36.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-15" for this suite. @ 01/31/24 06:39:36.55
• [2.202 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 01/31/24 06:39:36.558
  Jan 31 06:39:36.558: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 06:39:36.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:39:36.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:39:36.578
  STEP: Creating secret with name s-test-opt-del-812a10f8-b213-4df0-a41e-7ba3f9e95ca7 @ 01/31/24 06:39:36.588
  STEP: Creating secret with name s-test-opt-upd-1b69f2e7-bcab-4b50-bb47-d02d69d11796 @ 01/31/24 06:39:36.593
  STEP: Creating the pod @ 01/31/24 06:39:36.599
  STEP: Deleting secret s-test-opt-del-812a10f8-b213-4df0-a41e-7ba3f9e95ca7 @ 01/31/24 06:39:38.653
  STEP: Updating secret s-test-opt-upd-1b69f2e7-bcab-4b50-bb47-d02d69d11796 @ 01/31/24 06:39:38.659
  STEP: Creating secret with name s-test-opt-create-bf607383-5d63-4b04-b7a2-500188c59d76 @ 01/31/24 06:39:38.667
  STEP: waiting to observe update in volume @ 01/31/24 06:39:38.672
  Jan 31 06:39:42.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-835" for this suite. @ 01/31/24 06:39:42.73
• [6.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 01/31/24 06:39:42.74
  Jan 31 06:39:42.740: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-probe @ 01/31/24 06:39:42.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:39:42.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:39:42.763
  STEP: Creating pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963 @ 01/31/24 06:39:42.768
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/31/24 06:39:44.786
  Jan 31 06:39:44.791: INFO: Initial restart count of pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 is 0
  Jan 31 06:39:44.795: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:39:46.800: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:39:48.807: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:39:50.814: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:39:52.820: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:39:54.826: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:39:56.833: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:39:58.839: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:00.848: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:02.855: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:04.861: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:06.868: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:08.874: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:10.881: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:12.889: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:14.894: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:16.901: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:18.909: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:20.917: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:22.924: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:24.929: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:26.937: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:28.943: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:30.949: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:32.956: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:34.961: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:36.967: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:38.975: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:40.982: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:42.989: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:44.995: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:47.002: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:49.010: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:51.017: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:53.026: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:55.032: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:57.040: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:40:59.047: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:01.056: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:03.063: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:05.069: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:07.076: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:09.084: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:11.092: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:13.099: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:15.106: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:17.112: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:19.119: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:21.126: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:23.134: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:25.140: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:27.147: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:29.155: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:31.163: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:33.170: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:35.176: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:37.182: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:39.188: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:41.195: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:43.201: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:45.207: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:47.214: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:49.221: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:51.229: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:53.235: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:55.241: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:57.247: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:41:59.253: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:01.260: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:03.267: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:05.273: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:07.280: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:09.287: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:11.295: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:13.301: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:15.307: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:17.314: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:19.320: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:21.327: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:23.334: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:25.341: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:27.347: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:29.355: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:31.362: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:33.369: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:35.374: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:37.380: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:39.386: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:41.393: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:43.401: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:45.406: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:47.414: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:49.421: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:51.428: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:53.436: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:55.442: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:57.450: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:42:59.457: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:01.465: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:03.473: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:05.481: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:07.490: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:09.497: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:11.504: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:13.511: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:15.516: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:17.522: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:19.529: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:21.535: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:23.542: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:25.548: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:27.555: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:29.561: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:31.568: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:33.575: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:35.581: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:37.589: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:39.596: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:41.602: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  Jan 31 06:43:43.608: INFO: Get pod busybox-e355aa4b-5e60-4337-8abd-13d2a5443ad2 in namespace container-probe-3963
  STEP: deleting the pod @ 01/31/24 06:43:45.61
  Jan 31 06:43:45.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3963" for this suite. @ 01/31/24 06:43:45.631
• [242.899 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 01/31/24 06:43:45.641
  Jan 31 06:43:45.641: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename namespaces @ 01/31/24 06:43:45.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:43:45.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:43:45.66
  STEP: Creating a test namespace @ 01/31/24 06:43:45.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:43:45.678
  STEP: Creating a pod in the namespace @ 01/31/24 06:43:45.683
  STEP: Waiting for the pod to have running status @ 01/31/24 06:43:45.69
  STEP: Deleting the namespace @ 01/31/24 06:43:47.699
  STEP: Waiting for the namespace to be removed. @ 01/31/24 06:43:47.71
  STEP: Recreating the namespace @ 01/31/24 06:43:58.716
  STEP: Verifying there are no pods in the namespace @ 01/31/24 06:43:58.734
  Jan 31 06:43:58.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9020" for this suite. @ 01/31/24 06:43:58.742
  STEP: Destroying namespace "nsdeletetest-6222" for this suite. @ 01/31/24 06:43:58.748
  Jan 31 06:43:58.751: INFO: Namespace nsdeletetest-6222 was already deleted
  STEP: Destroying namespace "nsdeletetest-3153" for this suite. @ 01/31/24 06:43:58.751
• [13.117 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 01/31/24 06:43:58.758
  Jan 31 06:43:58.758: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:43:58.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:43:58.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:43:58.777
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:43:58.782
  STEP: Saw pod success @ 01/31/24 06:44:02.81
  Jan 31 06:44:02.815: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-e0cc0995-06d8-4bb4-b3ec-a62820317914 container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:44:02.841
  Jan 31 06:44:02.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9964" for this suite. @ 01/31/24 06:44:02.863
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 01/31/24 06:44:02.87
  Jan 31 06:44:02.870: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:44:02.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:02.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:02.89
  STEP: Creating configMap with name projected-configmap-test-volume-1deadf28-9a91-4125-beec-f1e6e016fddc @ 01/31/24 06:44:02.894
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:44:02.899
  STEP: Saw pod success @ 01/31/24 06:44:06.926
  Jan 31 06:44:06.930: INFO: Trying to get logs from node nodea08 pod pod-projected-configmaps-449532ba-d864-4c41-b681-5f13e6e51907 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 06:44:06.939
  Jan 31 06:44:06.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-867" for this suite. @ 01/31/24 06:44:06.961
• [4.098 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 01/31/24 06:44:06.968
  Jan 31 06:44:06.968: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:44:06.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:06.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:06.987
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/31/24 06:44:06.992
  STEP: Saw pod success @ 01/31/24 06:44:11.016
  Jan 31 06:44:11.021: INFO: Trying to get logs from node nodea08 pod pod-2bd608f5-d2ea-4c4f-a30a-585512f74d8e container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:44:11.03
  Jan 31 06:44:11.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9772" for this suite. @ 01/31/24 06:44:11.054
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 01/31/24 06:44:11.061
  Jan 31 06:44:11.061: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/31/24 06:44:11.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:11.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:11.083
  STEP: set up a multi version CRD @ 01/31/24 06:44:11.089
  Jan 31 06:44:11.089: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: rename a version @ 01/31/24 06:44:14.836
  STEP: check the new version name is served @ 01/31/24 06:44:14.853
  STEP: check the old version name is removed @ 01/31/24 06:44:15.732
  STEP: check the other version is not changed @ 01/31/24 06:44:16.484
  Jan 31 06:44:19.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8696" for this suite. @ 01/31/24 06:44:19.411
• [8.356 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 01/31/24 06:44:19.418
  Jan 31 06:44:19.418: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pod-network-test @ 01/31/24 06:44:19.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:19.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:19.441
  STEP: Performing setup for networking test in namespace pod-network-test-3669 @ 01/31/24 06:44:19.445
  STEP: creating a selector @ 01/31/24 06:44:19.445
  STEP: Creating the service pods in kubernetes @ 01/31/24 06:44:19.445
  Jan 31 06:44:19.445: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/31/24 06:44:41.559
  Jan 31 06:44:43.584: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan 31 06:44:43.584: INFO: Breadth first check of 10.244.1.45 on host 192.168.100.28...
  Jan 31 06:44:43.589: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.46:9080/dial?request=hostname&protocol=udp&host=10.244.1.45&port=8081&tries=1'] Namespace:pod-network-test-3669 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:44:43.589: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:44:43.591: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:44:43.591: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3669/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.46%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.45%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan 31 06:44:43.722: INFO: Waiting for responses: map[]
  Jan 31 06:44:43.722: INFO: reached 10.244.1.45 after 0/1 tries
  Jan 31 06:44:43.722: INFO: Breadth first check of 10.244.2.148 on host 192.168.100.129...
  Jan 31 06:44:43.726: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.46:9080/dial?request=hostname&protocol=udp&host=10.244.2.148&port=8081&tries=1'] Namespace:pod-network-test-3669 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:44:43.726: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:44:43.727: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:44:43.727: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3669/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.46%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.148%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan 31 06:44:43.843: INFO: Waiting for responses: map[]
  Jan 31 06:44:43.843: INFO: reached 10.244.2.148 after 0/1 tries
  Jan 31 06:44:43.843: INFO: Going to retry 0 out of 2 pods....
  Jan 31 06:44:43.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3669" for this suite. @ 01/31/24 06:44:43.85
• [24.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 01/31/24 06:44:43.858
  Jan 31 06:44:43.858: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 06:44:43.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:43.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:43.883
  STEP: Creating configMap with name configmap-test-volume-map-478a3351-c916-415b-9eec-13ca621ea217 @ 01/31/24 06:44:43.888
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:44:43.894
  STEP: Saw pod success @ 01/31/24 06:44:47.921
  Jan 31 06:44:47.926: INFO: Trying to get logs from node nodea08 pod pod-configmaps-a3dd3e39-4037-42ef-80c7-76a37b27227b container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:44:47.937
  Jan 31 06:44:47.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3595" for this suite. @ 01/31/24 06:44:47.959
• [4.107 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 01/31/24 06:44:47.966
  Jan 31 06:44:47.966: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename namespaces @ 01/31/24 06:44:47.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:47.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:47.987
  STEP: Read namespace status @ 01/31/24 06:44:47.991
  Jan 31 06:44:47.996: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 01/31/24 06:44:47.996
  Jan 31 06:44:48.003: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 01/31/24 06:44:48.003
  Jan 31 06:44:48.015: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jan 31 06:44:48.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-533" for this suite. @ 01/31/24 06:44:48.02
• [0.062 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 01/31/24 06:44:48.028
  Jan 31 06:44:48.028: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename events @ 01/31/24 06:44:48.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:48.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:48.048
  STEP: creating a test event @ 01/31/24 06:44:48.052
  STEP: listing events in all namespaces @ 01/31/24 06:44:48.059
  STEP: listing events in test namespace @ 01/31/24 06:44:48.065
  STEP: listing events with field selection filtering on source @ 01/31/24 06:44:48.069
  STEP: listing events with field selection filtering on reportingController @ 01/31/24 06:44:48.073
  STEP: getting the test event @ 01/31/24 06:44:48.076
  STEP: patching the test event @ 01/31/24 06:44:48.079
  STEP: getting the test event @ 01/31/24 06:44:48.087
  STEP: updating the test event @ 01/31/24 06:44:48.09
  STEP: getting the test event @ 01/31/24 06:44:48.099
  STEP: deleting the test event @ 01/31/24 06:44:48.103
  STEP: listing events in all namespaces @ 01/31/24 06:44:48.11
  STEP: listing events in test namespace @ 01/31/24 06:44:48.115
  Jan 31 06:44:48.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5366" for this suite. @ 01/31/24 06:44:48.123
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 01/31/24 06:44:48.13
  Jan 31 06:44:48.130: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 06:44:48.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:48.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:48.15
  STEP: Creating configMap with name configmap-test-upd-b05f0731-b852-49be-b418-4093de265fb2 @ 01/31/24 06:44:48.159
  STEP: Creating the pod @ 01/31/24 06:44:48.164
  STEP: Waiting for pod with text data @ 01/31/24 06:44:50.182
  STEP: Waiting for pod with binary data @ 01/31/24 06:44:50.193
  Jan 31 06:44:50.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8982" for this suite. @ 01/31/24 06:44:50.207
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 01/31/24 06:44:50.217
  Jan 31 06:44:50.217: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:44:50.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:50.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:50.239
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/31/24 06:44:50.244
  STEP: Saw pod success @ 01/31/24 06:44:54.275
  Jan 31 06:44:54.280: INFO: Trying to get logs from node nodeb29 pod pod-71b82080-7cde-4590-825b-5023a522f882 container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:44:54.305
  Jan 31 06:44:54.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2914" for this suite. @ 01/31/24 06:44:54.325
• [4.114 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 01/31/24 06:44:54.331
  Jan 31 06:44:54.331: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:44:54.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:54.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:54.353
  Jan 31 06:44:54.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5943" for this suite. @ 01/31/24 06:44:54.367
• [0.042 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 01/31/24 06:44:54.373
  Jan 31 06:44:54.373: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:44:54.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:54.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:54.393
  STEP: Creating the pod @ 01/31/24 06:44:54.397
  Jan 31 06:44:56.948: INFO: Successfully updated pod "annotationupdatea8363c04-9fb0-467d-9fe2-d08e3a4dcfd4"
  Jan 31 06:44:58.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5444" for this suite. @ 01/31/24 06:44:58.973
• [4.607 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 01/31/24 06:44:58.98
  Jan 31 06:44:58.980: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename subpath @ 01/31/24 06:44:58.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:44:58.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:44:58.999
  STEP: Setting up data @ 01/31/24 06:44:59.004
  STEP: Creating pod pod-subpath-test-downwardapi-4s7h @ 01/31/24 06:44:59.013
  STEP: Creating a pod to test atomic-volume-subpath @ 01/31/24 06:44:59.013
  STEP: Saw pod success @ 01/31/24 06:45:23.101
  Jan 31 06:45:23.105: INFO: Trying to get logs from node nodea08 pod pod-subpath-test-downwardapi-4s7h container test-container-subpath-downwardapi-4s7h: <nil>
  STEP: delete the pod @ 01/31/24 06:45:23.115
  STEP: Deleting pod pod-subpath-test-downwardapi-4s7h @ 01/31/24 06:45:23.129
  Jan 31 06:45:23.129: INFO: Deleting pod "pod-subpath-test-downwardapi-4s7h" in namespace "subpath-7414"
  Jan 31 06:45:23.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7414" for this suite. @ 01/31/24 06:45:23.137
• [24.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 01/31/24 06:45:23.142
  Jan 31 06:45:23.142: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename statefulset @ 01/31/24 06:45:23.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:45:23.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:45:23.16
  STEP: Creating service test in namespace statefulset-764 @ 01/31/24 06:45:23.165
  STEP: Creating a new StatefulSet @ 01/31/24 06:45:23.169
  Jan 31 06:45:23.179: INFO: Found 0 stateful pods, waiting for 3
  Jan 31 06:45:33.183: INFO: Found 1 stateful pods, waiting for 3
  Jan 31 06:45:43.185: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 06:45:43.185: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 06:45:43.185: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/31/24 06:45:43.197
  Jan 31 06:45:43.219: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 01/31/24 06:45:43.219
  STEP: Not applying an update when the partition is greater than the number of replicas @ 01/31/24 06:45:53.232
  STEP: Performing a canary update @ 01/31/24 06:45:53.233
  Jan 31 06:45:53.257: INFO: Updating stateful set ss2
  Jan 31 06:45:53.268: INFO: Waiting for Pod statefulset-764/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 01/31/24 06:46:03.269
  Jan 31 06:46:03.300: INFO: Found 2 stateful pods, waiting for 3
  Jan 31 06:46:13.302: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 06:46:13.303: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 06:46:13.303: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 01/31/24 06:46:13.311
  Jan 31 06:46:13.336: INFO: Updating stateful set ss2
  Jan 31 06:46:13.348: INFO: Waiting for Pod statefulset-764/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jan 31 06:46:23.375: INFO: Updating stateful set ss2
  Jan 31 06:46:23.384: INFO: Waiting for StatefulSet statefulset-764/ss2 to complete update
  Jan 31 06:46:23.384: INFO: Waiting for Pod statefulset-764/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jan 31 06:46:33.388: INFO: Deleting all statefulset in ns statefulset-764
  Jan 31 06:46:33.392: INFO: Scaling statefulset ss2 to 0
  Jan 31 06:46:43.411: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 31 06:46:43.416: INFO: Deleting statefulset ss2
  Jan 31 06:46:43.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-764" for this suite. @ 01/31/24 06:46:43.435
• [80.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 01/31/24 06:46:43.444
  Jan 31 06:46:43.444: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:46:43.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:46:43.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:46:43.462
  STEP: creating service in namespace services-7181 @ 01/31/24 06:46:43.467
  STEP: creating service affinity-clusterip in namespace services-7181 @ 01/31/24 06:46:43.467
  STEP: creating replication controller affinity-clusterip in namespace services-7181 @ 01/31/24 06:46:43.483
  I0131 06:46:43.489882      23 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-7181, replica count: 3
  I0131 06:46:46.541162      23 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 31 06:46:46.550: INFO: Creating new exec pod
  Jan 31 06:46:49.566: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-7181 exec execpod-affinityz4xxn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jan 31 06:46:49.797: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jan 31 06:46:49.797: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 06:46:49.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-7181 exec execpod-affinityz4xxn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.34.127 80'
  Jan 31 06:46:50.005: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.34.127 80\nConnection to 10.110.34.127 80 port [tcp/http] succeeded!\n"
  Jan 31 06:46:50.005: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 06:46:50.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-7181 exec execpod-affinityz4xxn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.110.34.127:80/ ; done'
  Jan 31 06:46:50.336: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.34.127:80/\n"
  Jan 31 06:46:50.336: INFO: stdout: "\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz\naffinity-clusterip-wcdhz"
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.336: INFO: Received response from host: affinity-clusterip-wcdhz
  Jan 31 06:46:50.337: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7181, will wait for the garbage collector to delete the pods @ 01/31/24 06:46:50.35
  Jan 31 06:46:50.411: INFO: Deleting ReplicationController affinity-clusterip took: 6.384614ms
  Jan 31 06:46:50.512: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.130044ms
  Jan 31 06:46:53.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7181" for this suite. @ 01/31/24 06:46:53.84
• [10.402 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 01/31/24 06:46:53.847
  Jan 31 06:46:53.847: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-probe @ 01/31/24 06:46:53.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:46:53.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:46:53.867
  STEP: Creating pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424 @ 01/31/24 06:46:53.872
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/31/24 06:46:55.889
  Jan 31 06:46:55.894: INFO: Initial restart count of pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 is 0
  Jan 31 06:46:55.898: INFO: Get pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424
  Jan 31 06:46:57.905: INFO: Get pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424
  Jan 31 06:46:59.911: INFO: Get pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424
  Jan 31 06:47:01.916: INFO: Get pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424
  Jan 31 06:47:03.923: INFO: Get pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424
  Jan 31 06:47:05.929: INFO: Get pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424
  Jan 31 06:47:07.935: INFO: Get pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424
  Jan 31 06:47:09.941: INFO: Get pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424
  Jan 31 06:47:11.947: INFO: Get pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424
  Jan 31 06:47:13.955: INFO: Get pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424
  Jan 31 06:47:15.961: INFO: Get pod liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 in namespace container-probe-5424
  Jan 31 06:47:15.961: INFO: Restart count of pod container-probe-5424/liveness-d1cddc9b-2450-47e4-a463-cf59cbc6fbd7 is now 1 (20.066662289s elapsed)
  STEP: deleting the pod @ 01/31/24 06:47:15.961
  Jan 31 06:47:15.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5424" for this suite. @ 01/31/24 06:47:15.979
• [22.138 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 01/31/24 06:47:15.986
  Jan 31 06:47:15.986: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:47:15.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:47:16.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:47:16.005
  STEP: Creating the pod @ 01/31/24 06:47:16.011
  Jan 31 06:47:18.571: INFO: Successfully updated pod "labelsupdatebd35b9f5-67e6-4095-a352-f693bf2995f0"
  Jan 31 06:47:20.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4665" for this suite. @ 01/31/24 06:47:20.598
• [4.619 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 01/31/24 06:47:20.606
  Jan 31 06:47:20.606: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename dns @ 01/31/24 06:47:20.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:47:20.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:47:20.627
  STEP: Creating a test externalName service @ 01/31/24 06:47:20.632
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2464.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local; sleep 1; done
   @ 01/31/24 06:47:20.637
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2464.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local; sleep 1; done
   @ 01/31/24 06:47:20.637
  STEP: creating a pod to probe DNS @ 01/31/24 06:47:20.637
  STEP: submitting the pod to kubernetes @ 01/31/24 06:47:20.637
  STEP: retrieving the pod @ 01/31/24 06:47:22.658
  STEP: looking for the results for each expected name from probers @ 01/31/24 06:47:22.662
  Jan 31 06:47:22.673: INFO: DNS probes using dns-test-be3f0d1b-e334-4f15-9281-a05dbe0763ab succeeded

  STEP: changing the externalName to bar.example.com @ 01/31/24 06:47:22.673
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2464.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local; sleep 1; done
   @ 01/31/24 06:47:22.682
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2464.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local; sleep 1; done
   @ 01/31/24 06:47:22.682
  STEP: creating a second pod to probe DNS @ 01/31/24 06:47:22.682
  STEP: submitting the pod to kubernetes @ 01/31/24 06:47:22.682
  STEP: retrieving the pod @ 01/31/24 06:47:24.703
  STEP: looking for the results for each expected name from probers @ 01/31/24 06:47:24.707
  Jan 31 06:47:24.715: INFO: File wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:24.720: INFO: File jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:24.720: INFO: Lookups using dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 failed for: [wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local]

  Jan 31 06:47:24.741: INFO: Pod client logs for webserver: 
  Jan 31 06:47:24.750: INFO: Pod client logs for querier: 
  Jan 31 06:47:24.757: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:47:29.716: INFO: File wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:29.721: INFO: File jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:29.721: INFO: Lookups using dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 failed for: [wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local]

  Jan 31 06:47:29.728: INFO: Pod client logs for webserver: 
  Jan 31 06:47:29.735: INFO: Pod client logs for querier: 
  Jan 31 06:47:29.741: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:47:34.719: INFO: File wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:34.725: INFO: File jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:34.725: INFO: Lookups using dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 failed for: [wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local]

  Jan 31 06:47:34.733: INFO: Pod client logs for webserver: 
  Jan 31 06:47:34.741: INFO: Pod client logs for querier: 
  Jan 31 06:47:34.749: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:47:39.718: INFO: File wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:39.723: INFO: File jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:39.723: INFO: Lookups using dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 failed for: [wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local]

  Jan 31 06:47:39.732: INFO: Pod client logs for webserver: 
  Jan 31 06:47:39.740: INFO: Pod client logs for querier: 
  Jan 31 06:47:39.748: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:47:44.717: INFO: File wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:44.723: INFO: File jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:44.723: INFO: Lookups using dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 failed for: [wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local]

  Jan 31 06:47:44.731: INFO: Pod client logs for webserver: 
  Jan 31 06:47:44.738: INFO: Pod client logs for querier: 
  Jan 31 06:47:44.745: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:47:49.716: INFO: File wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:49.721: INFO: File jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local from pod  dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan 31 06:47:49.721: INFO: Lookups using dns-2464/dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 failed for: [wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local]

  Jan 31 06:47:49.731: INFO: Pod client logs for webserver: 
  Jan 31 06:47:49.738: INFO: Pod client logs for querier: 
  Jan 31 06:47:49.745: INFO: Pod client logs for jessie-querier: 
  Jan 31 06:47:54.719: INFO: DNS probes using dns-test-13158dd2-f45f-48dc-a15a-0d4a41ac7c69 succeeded

  STEP: changing the service to type=ClusterIP @ 01/31/24 06:47:54.719
  W0131 06:47:54.742530      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2464.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-2464.svc.cluster.local; sleep 1; done
   @ 01/31/24 06:47:54.742
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2464.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2464.svc.cluster.local; sleep 1; done
   @ 01/31/24 06:47:54.742
  STEP: creating a third pod to probe DNS @ 01/31/24 06:47:54.742
  STEP: submitting the pod to kubernetes @ 01/31/24 06:47:54.746
  STEP: retrieving the pod @ 01/31/24 06:47:56.764
  STEP: looking for the results for each expected name from probers @ 01/31/24 06:47:56.767
  Jan 31 06:47:56.779: INFO: DNS probes using dns-test-8d033b58-e5ab-47c5-be07-a5de0957fd52 succeeded

  STEP: deleting the pod @ 01/31/24 06:47:56.779
  STEP: deleting the pod @ 01/31/24 06:47:56.791
  STEP: deleting the pod @ 01/31/24 06:47:56.804
  STEP: deleting the test externalName service @ 01/31/24 06:47:56.817
  Jan 31 06:47:56.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2464" for this suite. @ 01/31/24 06:47:56.835
• [36.234 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 01/31/24 06:47:56.84
  Jan 31 06:47:56.840: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:47:56.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:47:56.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:47:56.859
  STEP: creating service multi-endpoint-test in namespace services-3215 @ 01/31/24 06:47:56.864
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3215 to expose endpoints map[] @ 01/31/24 06:47:56.883
  Jan 31 06:47:56.886: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Jan 31 06:47:57.898: INFO: successfully validated that service multi-endpoint-test in namespace services-3215 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3215 @ 01/31/24 06:47:57.898
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3215 to expose endpoints map[pod1:[100]] @ 01/31/24 06:47:59.923
  Jan 31 06:47:59.937: INFO: successfully validated that service multi-endpoint-test in namespace services-3215 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3215 @ 01/31/24 06:47:59.937
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3215 to expose endpoints map[pod1:[100] pod2:[101]] @ 01/31/24 06:48:01.955
  Jan 31 06:48:01.969: INFO: successfully validated that service multi-endpoint-test in namespace services-3215 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 01/31/24 06:48:01.969
  Jan 31 06:48:01.969: INFO: Creating new exec pod
  Jan 31 06:48:04.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-3215 exec execpodcvlrv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jan 31 06:48:05.204: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jan 31 06:48:05.204: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 06:48:05.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-3215 exec execpodcvlrv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.114.239 80'
  Jan 31 06:48:05.403: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.106.114.239 80\nConnection to 10.106.114.239 80 port [tcp/http] succeeded!\n"
  Jan 31 06:48:05.403: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 06:48:05.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-3215 exec execpodcvlrv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jan 31 06:48:05.632: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jan 31 06:48:05.632: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 06:48:05.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-3215 exec execpodcvlrv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.114.239 81'
  Jan 31 06:48:05.837: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.106.114.239 81\nConnection to 10.106.114.239 81 port [tcp/*] succeeded!\n"
  Jan 31 06:48:05.837: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3215 @ 01/31/24 06:48:05.837
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3215 to expose endpoints map[pod2:[101]] @ 01/31/24 06:48:05.85
  Jan 31 06:48:06.880: INFO: successfully validated that service multi-endpoint-test in namespace services-3215 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3215 @ 01/31/24 06:48:06.88
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3215 to expose endpoints map[] @ 01/31/24 06:48:06.891
  Jan 31 06:48:06.899: INFO: successfully validated that service multi-endpoint-test in namespace services-3215 exposes endpoints map[]
  Jan 31 06:48:06.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3215" for this suite. @ 01/31/24 06:48:06.917
• [10.082 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 01/31/24 06:48:06.923
  Jan 31 06:48:06.923: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:48:06.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:48:06.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:48:06.944
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:48:06.948
  STEP: Saw pod success @ 01/31/24 06:48:10.974
  Jan 31 06:48:10.979: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-ca16ab56-3222-49b8-b110-78781737b031 container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:48:10.988
  Jan 31 06:48:11.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5502" for this suite. @ 01/31/24 06:48:11.007
• [4.093 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 01/31/24 06:48:11.017
  Jan 31 06:48:11.017: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename chunking @ 01/31/24 06:48:11.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:48:11.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:48:11.038
  STEP: creating a large number of resources @ 01/31/24 06:48:11.043
  STEP: retrieving those results in paged fashion several times @ 01/31/24 06:48:28.726
  Jan 31 06:48:28.774: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Jan 31 06:48:28.824: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Jan 31 06:48:28.874: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Jan 31 06:48:28.924: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Jan 31 06:48:28.974: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Jan 31 06:48:29.024: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Jan 31 06:48:29.074: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Jan 31 06:48:29.124: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Jan 31 06:48:29.174: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Jan 31 06:48:29.224: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Jan 31 06:48:29.273: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Jan 31 06:48:29.323: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Jan 31 06:48:29.374: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Jan 31 06:48:29.423: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Jan 31 06:48:29.474: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Jan 31 06:48:29.524: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Jan 31 06:48:29.573: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Jan 31 06:48:29.624: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Jan 31 06:48:29.674: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Jan 31 06:48:29.724: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Jan 31 06:48:29.774: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Jan 31 06:48:29.823: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Jan 31 06:48:29.873: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Jan 31 06:48:29.924: INFO: Retrieved 9/17 results with rv 159504 and continue 
  Jan 31 06:48:29.973: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Jan 31 06:48:30.025: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Jan 31 06:48:30.073: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Jan 31 06:48:30.124: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Jan 31 06:48:30.174: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Jan 31 06:48:30.224: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Jan 31 06:48:30.273: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Jan 31 06:48:30.324: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Jan 31 06:48:30.374: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Jan 31 06:48:30.423: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Jan 31 06:48:30.473: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Jan 31 06:48:30.524: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Jan 31 06:48:30.574: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Jan 31 06:48:30.624: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Jan 31 06:48:30.673: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Jan 31 06:48:30.723: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Jan 31 06:48:30.774: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Jan 31 06:48:30.824: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Jan 31 06:48:30.875: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Jan 31 06:48:30.924: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Jan 31 06:48:30.974: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Jan 31 06:48:31.024: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Jan 31 06:48:31.073: INFO: Retrieved 17/17 results with rv 159504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA0LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Jan 31 06:48:31.124: INFO: Retrieved 9/17 results with rv 159504 and continue 
  Jan 31 06:48:31.173: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Jan 31 06:48:31.224: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Jan 31 06:48:31.274: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Jan 31 06:48:31.324: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Jan 31 06:48:31.375: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Jan 31 06:48:31.423: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Jan 31 06:48:31.475: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Jan 31 06:48:31.523: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Jan 31 06:48:31.574: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Jan 31 06:48:31.624: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Jan 31 06:48:31.674: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Jan 31 06:48:31.724: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Jan 31 06:48:31.774: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Jan 31 06:48:31.824: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Jan 31 06:48:31.873: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Jan 31 06:48:31.924: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Jan 31 06:48:31.974: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Jan 31 06:48:32.032: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Jan 31 06:48:32.074: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Jan 31 06:48:32.124: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Jan 31 06:48:32.174: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Jan 31 06:48:32.225: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Jan 31 06:48:32.273: INFO: Retrieved 17/17 results with rv 159507 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU5NTA3LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Jan 31 06:48:32.323: INFO: Retrieved 9/17 results with rv 159507 and continue 
  STEP: retrieving those results all at once @ 01/31/24 06:48:32.324
  Jan 31 06:48:32.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3283" for this suite. @ 01/31/24 06:48:32.425
• [21.461 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 01/31/24 06:48:32.478
  Jan 31 06:48:32.478: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 06:48:32.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:48:32.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:48:32.499
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 06:48:32.505
  STEP: Saw pod success @ 01/31/24 06:48:36.534
  Jan 31 06:48:36.538: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-b092748c-b266-4c87-aba7-edced555f04c container client-container: <nil>
  STEP: delete the pod @ 01/31/24 06:48:36.547
  Jan 31 06:48:36.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1812" for this suite. @ 01/31/24 06:48:36.568
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 01/31/24 06:48:36.575
  Jan 31 06:48:36.575: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-probe @ 01/31/24 06:48:36.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:48:36.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:48:36.598
  STEP: Creating pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367 @ 01/31/24 06:48:36.603
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/31/24 06:48:38.62
  Jan 31 06:48:38.623: INFO: Initial restart count of pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df is 0
  Jan 31 06:48:38.626: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:48:40.632: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:48:42.638: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:48:44.643: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:48:46.655: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:48:48.662: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:48:50.668: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:48:52.674: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:48:54.680: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:48:56.687: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:48:58.694: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:00.700: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:02.706: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:04.713: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:06.720: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:08.725: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:10.731: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:12.738: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:14.743: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:16.751: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:18.757: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:20.761: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:22.768: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:24.774: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:26.781: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:28.788: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:30.793: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:32.800: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:34.806: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:36.813: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:38.819: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:40.824: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:42.830: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:44.836: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:46.843: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:48.848: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:50.853: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:52.859: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:54.862: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:56.869: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:49:58.875: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:00.881: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:02.888: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:04.893: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:06.901: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:08.908: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:10.916: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:12.923: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:14.929: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:16.937: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:18.944: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:20.952: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:22.959: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:24.964: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:26.971: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:28.978: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:30.985: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:32.991: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:34.996: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:37.004: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:39.010: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:41.016: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:43.023: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:45.029: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:47.036: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:49.042: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:51.049: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:53.056: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:55.062: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:57.070: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:50:59.077: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:01.083: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:03.090: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:05.096: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:07.104: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:09.110: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:11.118: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:13.124: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:15.130: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:17.137: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:19.143: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:21.149: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:23.156: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:25.163: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:27.169: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:29.175: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:31.182: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:33.188: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:35.193: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:37.200: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:39.206: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:41.212: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:43.219: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:45.225: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:47.232: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:49.238: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:51.245: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:53.252: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:55.257: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:57.266: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:51:59.273: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:01.281: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:03.287: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:05.293: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:07.300: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:09.308: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:11.314: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:13.321: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:15.327: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:17.334: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:19.341: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:21.346: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:23.354: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:25.360: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:27.368: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:29.375: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:31.382: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:33.389: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:35.395: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  Jan 31 06:52:37.402: INFO: Get pod test-webserver-48b7c786-bde0-4658-87ee-76f1552239df in namespace container-probe-9367
  STEP: deleting the pod @ 01/31/24 06:52:39.404
  Jan 31 06:52:39.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9367" for this suite. @ 01/31/24 06:52:39.425
• [242.856 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 01/31/24 06:52:39.432
  Jan 31 06:52:39.432: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename lease-test @ 01/31/24 06:52:39.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:52:39.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:52:39.462
  Jan 31 06:52:39.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-3735" for this suite. @ 01/31/24 06:52:39.534
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 01/31/24 06:52:39.54
  Jan 31 06:52:39.540: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-runtime @ 01/31/24 06:52:39.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:52:39.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:52:39.559
  STEP: create the container @ 01/31/24 06:52:39.564
  W0131 06:52:39.571471      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/31/24 06:52:39.571
  STEP: get the container status @ 01/31/24 06:52:42.592
  STEP: the container should be terminated @ 01/31/24 06:52:42.596
  STEP: the termination message should be set @ 01/31/24 06:52:42.597
  Jan 31 06:52:42.597: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 01/31/24 06:52:42.597
  Jan 31 06:52:42.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6619" for this suite. @ 01/31/24 06:52:42.62
• [3.086 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 01/31/24 06:52:42.626
  Jan 31 06:52:42.626: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replication-controller @ 01/31/24 06:52:42.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:52:42.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:52:42.652
  STEP: Given a ReplicationController is created @ 01/31/24 06:52:42.657
  STEP: When the matched label of one of its pods change @ 01/31/24 06:52:42.664
  Jan 31 06:52:42.667: INFO: Pod name pod-release: Found 0 pods out of 1
  Jan 31 06:52:47.673: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/31/24 06:52:47.689
  Jan 31 06:52:48.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5904" for this suite. @ 01/31/24 06:52:48.704
• [6.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 01/31/24 06:52:48.713
  Jan 31 06:52:48.713: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 06:52:48.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:52:48.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:52:48.733
  STEP: creating an Endpoint @ 01/31/24 06:52:48.742
  STEP: waiting for available Endpoint @ 01/31/24 06:52:48.749
  STEP: listing all Endpoints @ 01/31/24 06:52:48.751
  STEP: updating the Endpoint @ 01/31/24 06:52:48.755
  STEP: fetching the Endpoint @ 01/31/24 06:52:48.763
  STEP: patching the Endpoint @ 01/31/24 06:52:48.766
  STEP: fetching the Endpoint @ 01/31/24 06:52:48.774
  STEP: deleting the Endpoint by Collection @ 01/31/24 06:52:48.778
  STEP: waiting for Endpoint deletion @ 01/31/24 06:52:48.786
  STEP: fetching the Endpoint @ 01/31/24 06:52:48.789
  Jan 31 06:52:48.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9471" for this suite. @ 01/31/24 06:52:48.796
• [0.089 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 01/31/24 06:52:48.802
  Jan 31 06:52:48.802: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename namespaces @ 01/31/24 06:52:48.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:52:48.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:52:48.823
  STEP: Creating namespace "e2e-ns-wkgsl" @ 01/31/24 06:52:48.828
  Jan 31 06:52:48.842: INFO: Namespace "e2e-ns-wkgsl-6029" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-wkgsl-6029" @ 01/31/24 06:52:48.842
  Jan 31 06:52:48.851: INFO: Namespace "e2e-ns-wkgsl-6029" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-wkgsl-6029" @ 01/31/24 06:52:48.851
  Jan 31 06:52:48.859: INFO: Namespace "e2e-ns-wkgsl-6029" has []v1.FinalizerName{"kubernetes"}
  Jan 31 06:52:48.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5189" for this suite. @ 01/31/24 06:52:48.864
  STEP: Destroying namespace "e2e-ns-wkgsl-6029" for this suite. @ 01/31/24 06:52:48.869
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 01/31/24 06:52:48.877
  Jan 31 06:52:48.877: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:52:48.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:52:48.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:52:48.923
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/31/24 06:52:48.928
  STEP: Saw pod success @ 01/31/24 06:52:52.953
  Jan 31 06:52:52.957: INFO: Trying to get logs from node nodea08 pod pod-c8c90302-2b43-4c5c-89a5-83f3820bfa77 container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:52:52.984
  Jan 31 06:52:52.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8219" for this suite. @ 01/31/24 06:52:53.004
• [4.132 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 01/31/24 06:52:53.02
  Jan 31 06:52:53.020: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 06:52:53.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:52:53.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:52:53.039
  STEP: Creating configMap with name configmap-test-volume-map-4d4230f0-c402-403b-87a3-f0dc719ef6da @ 01/31/24 06:52:53.044
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:52:53.049
  STEP: Saw pod success @ 01/31/24 06:52:57.073
  Jan 31 06:52:57.078: INFO: Trying to get logs from node nodeb29 pod pod-configmaps-542b848c-ac16-4ee4-90ee-d1471fd4c828 container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:52:57.104
  Jan 31 06:52:57.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9596" for this suite. @ 01/31/24 06:52:57.126
• [4.112 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 01/31/24 06:52:57.133
  Jan 31 06:52:57.133: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/31/24 06:52:57.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:52:57.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:52:57.152
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 01/31/24 06:52:57.156
  Jan 31 06:52:57.157: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:52:58.527: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:53:04.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3829" for this suite. @ 01/31/24 06:53:04.251
• [7.124 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 01/31/24 06:53:04.257
  Jan 31 06:53:04.257: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 06:53:04.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:53:04.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:53:04.276
  STEP: Setting up server cert @ 01/31/24 06:53:04.3
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 06:53:04.565
  STEP: Deploying the webhook pod @ 01/31/24 06:53:04.577
  STEP: Wait for the deployment to be ready @ 01/31/24 06:53:04.595
  Jan 31 06:53:04.602: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/31/24 06:53:06.617
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 06:53:06.634
  Jan 31 06:53:07.634: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 01/31/24 06:53:07.645
  STEP: create a namespace for the webhook @ 01/31/24 06:53:07.678
  STEP: create a configmap should be unconditionally rejected by the webhook @ 01/31/24 06:53:07.693
  Jan 31 06:53:07.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7339" for this suite. @ 01/31/24 06:53:07.751
  STEP: Destroying namespace "webhook-markers-1495" for this suite. @ 01/31/24 06:53:07.757
  STEP: Destroying namespace "fail-closed-namespace-7521" for this suite. @ 01/31/24 06:53:07.762
• [3.510 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 01/31/24 06:53:07.768
  Jan 31 06:53:07.768: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 06:53:07.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:53:07.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:53:07.788
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/31/24 06:53:07.793
  STEP: Saw pod success @ 01/31/24 06:53:11.82
  Jan 31 06:53:11.825: INFO: Trying to get logs from node nodea08 pod pod-cd101b31-464c-4d64-b5b0-3e3fa691a3ee container test-container: <nil>
  STEP: delete the pod @ 01/31/24 06:53:11.833
  Jan 31 06:53:11.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9301" for this suite. @ 01/31/24 06:53:11.856
• [4.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 01/31/24 06:53:11.862
  Jan 31 06:53:11.863: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 06:53:11.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:53:11.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:53:11.882
  STEP: Creating configMap with name projected-configmap-test-volume-map-63427cfb-1f16-416b-9b5f-d75d6301c80c @ 01/31/24 06:53:11.887
  STEP: Creating a pod to test consume configMaps @ 01/31/24 06:53:11.891
  STEP: Saw pod success @ 01/31/24 06:53:15.919
  Jan 31 06:53:15.924: INFO: Trying to get logs from node nodea08 pod pod-projected-configmaps-43048559-6773-4e00-b747-9b7a650531df container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:53:15.934
  Jan 31 06:53:15.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-981" for this suite. @ 01/31/24 06:53:15.957
• [4.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 01/31/24 06:53:15.964
  Jan 31 06:53:15.964: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename cronjob @ 01/31/24 06:53:15.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:53:15.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:53:15.985
  STEP: Creating a ForbidConcurrent cronjob @ 01/31/24 06:53:15.991
  STEP: Ensuring a job is scheduled @ 01/31/24 06:53:15.999
  STEP: Ensuring exactly one is scheduled @ 01/31/24 06:54:02.006
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/31/24 06:54:02.011
  STEP: Ensuring no more jobs are scheduled @ 01/31/24 06:54:02.015
  STEP: Removing cronjob @ 01/31/24 06:59:02.024
  Jan 31 06:59:02.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4247" for this suite. @ 01/31/24 06:59:02.037
• [346.079 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 01/31/24 06:59:02.043
  Jan 31 06:59:02.043: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replicaset @ 01/31/24 06:59:02.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:59:02.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:59:02.06
  STEP: Create a Replicaset @ 01/31/24 06:59:02.067
  STEP: Verify that the required pods have come up. @ 01/31/24 06:59:02.072
  Jan 31 06:59:02.074: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jan 31 06:59:07.080: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/31/24 06:59:07.081
  STEP: Getting /status @ 01/31/24 06:59:07.081
  Jan 31 06:59:07.086: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 01/31/24 06:59:07.086
  Jan 31 06:59:07.097: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 01/31/24 06:59:07.098
  Jan 31 06:59:07.100: INFO: Observed &ReplicaSet event: ADDED
  Jan 31 06:59:07.100: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 31 06:59:07.101: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 31 06:59:07.101: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 31 06:59:07.101: INFO: Found replicaset test-rs in namespace replicaset-1035 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan 31 06:59:07.102: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 01/31/24 06:59:07.102
  Jan 31 06:59:07.102: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jan 31 06:59:07.108: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 01/31/24 06:59:07.108
  Jan 31 06:59:07.111: INFO: Observed &ReplicaSet event: ADDED
  Jan 31 06:59:07.111: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 31 06:59:07.111: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 31 06:59:07.112: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 31 06:59:07.112: INFO: Observed replicaset test-rs in namespace replicaset-1035 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 31 06:59:07.112: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 31 06:59:07.112: INFO: Found replicaset test-rs in namespace replicaset-1035 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jan 31 06:59:07.112: INFO: Replicaset test-rs has a patched status
  Jan 31 06:59:07.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1035" for this suite. @ 01/31/24 06:59:07.117
• [5.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 01/31/24 06:59:07.124
  Jan 31 06:59:07.124: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pods @ 01/31/24 06:59:07.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:59:07.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:59:07.142
  STEP: creating pod @ 01/31/24 06:59:07.147
  Jan 31 06:59:09.173: INFO: Pod pod-hostip-9a32099c-3369-476b-a746-daa8ff1feabf has hostIP: 192.168.100.28
  Jan 31 06:59:09.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7783" for this suite. @ 01/31/24 06:59:09.18
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 01/31/24 06:59:09.188
  Jan 31 06:59:09.188: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 06:59:09.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:59:09.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:59:09.211
  STEP: Setting up server cert @ 01/31/24 06:59:09.235
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 06:59:09.492
  STEP: Deploying the webhook pod @ 01/31/24 06:59:09.5
  STEP: Wait for the deployment to be ready @ 01/31/24 06:59:09.514
  Jan 31 06:59:09.522: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/31/24 06:59:11.535
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 06:59:11.555
  Jan 31 06:59:12.556: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan 31 06:59:12.564: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9691-crds.webhook.example.com via the AdmissionRegistration API @ 01/31/24 06:59:13.082
  STEP: Creating a custom resource while v1 is storage version @ 01/31/24 06:59:13.115
  STEP: Patching Custom Resource Definition to set v2 as storage @ 01/31/24 06:59:15.182
  STEP: Patching the custom resource while v2 is storage version @ 01/31/24 06:59:15.193
  Jan 31 06:59:15.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8116" for this suite. @ 01/31/24 06:59:15.811
  STEP: Destroying namespace "webhook-markers-6684" for this suite. @ 01/31/24 06:59:15.817
• [6.636 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 01/31/24 06:59:15.824
  Jan 31 06:59:15.824: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 06:59:15.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:59:15.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:59:15.849
  STEP: Creating configMap that has name configmap-test-emptyKey-a7d889fe-dfcf-40e7-86ec-c57f21e07828 @ 01/31/24 06:59:15.854
  Jan 31 06:59:15.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3481" for this suite. @ 01/31/24 06:59:15.863
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 01/31/24 06:59:15.871
  Jan 31 06:59:15.871: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename init-container @ 01/31/24 06:59:15.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:59:15.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:59:15.891
  STEP: creating the pod @ 01/31/24 06:59:15.897
  Jan 31 06:59:15.897: INFO: PodSpec: initContainers in spec.initContainers
  Jan 31 06:59:19.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6952" for this suite. @ 01/31/24 06:59:19.627
• [3.763 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 01/31/24 06:59:19.634
  Jan 31 06:59:19.634: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/31/24 06:59:19.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:59:19.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:59:19.656
  STEP: create the container to handle the HTTPGet hook request. @ 01/31/24 06:59:19.664
  STEP: create the pod with lifecycle hook @ 01/31/24 06:59:21.693
  STEP: check poststart hook @ 01/31/24 06:59:23.719
  STEP: delete the pod with lifecycle hook @ 01/31/24 06:59:23.748
  Jan 31 06:59:25.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9686" for this suite. @ 01/31/24 06:59:25.773
• [6.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 01/31/24 06:59:25.78
  Jan 31 06:59:25.780: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename svcaccounts @ 01/31/24 06:59:25.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:59:25.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:59:25.803
  STEP: Creating ServiceAccount "e2e-sa-rfwm7"  @ 01/31/24 06:59:25.807
  Jan 31 06:59:25.813: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-rfwm7"  @ 01/31/24 06:59:25.813
  Jan 31 06:59:25.821: INFO: AutomountServiceAccountToken: true
  Jan 31 06:59:25.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1915" for this suite. @ 01/31/24 06:59:25.826
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 01/31/24 06:59:25.832
  Jan 31 06:59:25.832: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename hostport @ 01/31/24 06:59:25.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:59:25.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:59:25.85
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 01/31/24 06:59:25.859
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.100.28 on the node which pod1 resides and expect scheduled @ 01/31/24 06:59:27.875
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.100.28 but use UDP protocol on the node which pod2 resides @ 01/31/24 06:59:39.925
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 01/31/24 06:59:43.97
  Jan 31 06:59:43.970: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.100.28 http://127.0.0.1:54323/hostname] Namespace:hostport-6070 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:59:43.970: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:59:43.971: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:59:43.971: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-6070/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.100.28+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.100.28, port: 54323 @ 01/31/24 06:59:44.088
  Jan 31 06:59:44.088: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.100.28:54323/hostname] Namespace:hostport-6070 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:59:44.088: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:59:44.089: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:59:44.089: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-6070/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.100.28%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.100.28, port: 54323 UDP @ 01/31/24 06:59:44.195
  Jan 31 06:59:44.195: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.100.28 54323] Namespace:hostport-6070 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 06:59:44.195: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:59:44.196: INFO: ExecWithOptions: Clientset creation
  Jan 31 06:59:44.197: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-6070/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.100.28+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Jan 31 06:59:49.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6070" for this suite. @ 01/31/24 06:59:49.315
• [23.493 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 01/31/24 06:59:49.325
  Jan 31 06:59:49.325: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/31/24 06:59:49.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:59:49.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:59:49.346
  Jan 31 06:59:49.352: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 06:59:52.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2454" for this suite. @ 01/31/24 06:59:52.485
• [3.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 01/31/24 06:59:52.493
  Jan 31 06:59:52.493: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename svcaccounts @ 01/31/24 06:59:52.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:59:52.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:59:52.513
  STEP: Creating a pod to test service account token:  @ 01/31/24 06:59:52.518
  STEP: Saw pod success @ 01/31/24 06:59:56.541
  Jan 31 06:59:56.545: INFO: Trying to get logs from node nodea08 pod test-pod-7b7cf52b-37e0-46d5-89a9-bf050f3e13d7 container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 06:59:56.554
  Jan 31 06:59:56.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5589" for this suite. @ 01/31/24 06:59:56.577
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 01/31/24 06:59:56.584
  Jan 31 06:59:56.584: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename disruption @ 01/31/24 06:59:56.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 06:59:56.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 06:59:56.606
  STEP: creating the pdb @ 01/31/24 06:59:56.612
  STEP: Waiting for the pdb to be processed @ 01/31/24 06:59:56.616
  STEP: updating the pdb @ 01/31/24 06:59:58.622
  STEP: Waiting for the pdb to be processed @ 01/31/24 06:59:58.633
  STEP: patching the pdb @ 01/31/24 07:00:00.64
  STEP: Waiting for the pdb to be processed @ 01/31/24 07:00:00.653
  STEP: Waiting for the pdb to be deleted @ 01/31/24 07:00:02.666
  Jan 31 07:00:02.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-222" for this suite. @ 01/31/24 07:00:02.676
• [6.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 01/31/24 07:00:02.683
  Jan 31 07:00:02.683: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 07:00:02.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:00:02.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:00:02.707
  STEP: Counting existing ResourceQuota @ 01/31/24 07:00:02.712
  STEP: Creating a ResourceQuota @ 01/31/24 07:00:07.716
  STEP: Ensuring resource quota status is calculated @ 01/31/24 07:00:07.723
  STEP: Creating a ReplicationController @ 01/31/24 07:00:09.729
  STEP: Ensuring resource quota status captures replication controller creation @ 01/31/24 07:00:09.75
  STEP: Deleting a ReplicationController @ 01/31/24 07:00:11.756
  STEP: Ensuring resource quota status released usage @ 01/31/24 07:00:11.763
  Jan 31 07:00:13.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4234" for this suite. @ 01/31/24 07:00:13.778
• [11.103 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 01/31/24 07:00:13.786
  Jan 31 07:00:13.786: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename dns @ 01/31/24 07:00:13.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:00:13.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:00:13.811
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/31/24 07:00:13.816
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/31/24 07:00:13.816
  STEP: creating a pod to probe DNS @ 01/31/24 07:00:13.816
  STEP: submitting the pod to kubernetes @ 01/31/24 07:00:13.816
  STEP: retrieving the pod @ 01/31/24 07:00:15.836
  STEP: looking for the results for each expected name from probers @ 01/31/24 07:00:15.84
  Jan 31 07:00:15.863: INFO: DNS probes using dns-254/dns-test-280ffbd5-7ef9-4d06-9102-dbaab426bd8e succeeded

  STEP: deleting the pod @ 01/31/24 07:00:15.863
  Jan 31 07:00:15.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-254" for this suite. @ 01/31/24 07:00:15.878
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 01/31/24 07:00:15.886
  Jan 31 07:00:15.886: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename disruption @ 01/31/24 07:00:15.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:00:15.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:00:15.904
  STEP: Waiting for the pdb to be processed @ 01/31/24 07:00:15.913
  STEP: Updating PodDisruptionBudget status @ 01/31/24 07:00:17.919
  STEP: Waiting for all pods to be running @ 01/31/24 07:00:17.929
  Jan 31 07:00:17.935: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 01/31/24 07:00:19.937
  STEP: Waiting for the pdb to be processed @ 01/31/24 07:00:19.954
  STEP: Patching PodDisruptionBudget status @ 01/31/24 07:00:19.962
  STEP: Waiting for the pdb to be processed @ 01/31/24 07:00:19.975
  Jan 31 07:00:19.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3205" for this suite. @ 01/31/24 07:00:19.986
• [4.107 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 01/31/24 07:00:19.995
  Jan 31 07:00:19.996: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 07:00:19.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:00:20.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:00:20.015
  STEP: Counting existing ResourceQuota @ 01/31/24 07:00:20.019
  STEP: Creating a ResourceQuota @ 01/31/24 07:00:25.026
  STEP: Ensuring resource quota status is calculated @ 01/31/24 07:00:25.032
  STEP: Creating a ReplicaSet @ 01/31/24 07:00:27.039
  STEP: Ensuring resource quota status captures replicaset creation @ 01/31/24 07:00:27.055
  STEP: Deleting a ReplicaSet @ 01/31/24 07:00:29.061
  STEP: Ensuring resource quota status released usage @ 01/31/24 07:00:29.069
  Jan 31 07:00:31.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5362" for this suite. @ 01/31/24 07:00:31.083
• [11.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 01/31/24 07:00:31.09
  Jan 31 07:00:31.090: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replicaset @ 01/31/24 07:00:31.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:00:31.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:00:31.116
  Jan 31 07:00:31.135: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jan 31 07:00:36.140: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/31/24 07:00:36.141
  STEP: Scaling up "test-rs" replicaset @ 01/31/24 07:00:36.141
  Jan 31 07:00:36.152: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 01/31/24 07:00:36.152
  Jan 31 07:00:36.162: INFO: observed ReplicaSet test-rs in namespace replicaset-9175 with ReadyReplicas 1, AvailableReplicas 1
  Jan 31 07:00:36.170: INFO: observed ReplicaSet test-rs in namespace replicaset-9175 with ReadyReplicas 1, AvailableReplicas 1
  Jan 31 07:00:36.182: INFO: observed ReplicaSet test-rs in namespace replicaset-9175 with ReadyReplicas 1, AvailableReplicas 1
  Jan 31 07:00:36.187: INFO: observed ReplicaSet test-rs in namespace replicaset-9175 with ReadyReplicas 1, AvailableReplicas 1
  Jan 31 07:00:37.008: INFO: observed ReplicaSet test-rs in namespace replicaset-9175 with ReadyReplicas 2, AvailableReplicas 2
  Jan 31 07:00:37.086: INFO: observed Replicaset test-rs in namespace replicaset-9175 with ReadyReplicas 3 found true
  Jan 31 07:00:37.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9175" for this suite. @ 01/31/24 07:00:37.092
• [6.008 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 01/31/24 07:00:37.099
  Jan 31 07:00:37.099: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 07:00:37.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:00:37.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:00:37.121
  STEP: Creating secret with name secret-test-d037a281-6c17-4d3a-b3d6-2a36914141c9 @ 01/31/24 07:00:37.126
  STEP: Creating a pod to test consume secrets @ 01/31/24 07:00:37.131
  STEP: Saw pod success @ 01/31/24 07:00:41.157
  Jan 31 07:00:41.161: INFO: Trying to get logs from node nodeb29 pod pod-secrets-6f96e1f1-d7d0-48b7-ad67-634476e7f57a container secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 07:00:41.186
  Jan 31 07:00:41.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-261" for this suite. @ 01/31/24 07:00:41.211
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 01/31/24 07:00:41.216
  Jan 31 07:00:41.216: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename svc-latency @ 01/31/24 07:00:41.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:00:41.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:00:41.235
  Jan 31 07:00:41.240: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2067 @ 01/31/24 07:00:41.241
  I0131 07:00:41.248210      23 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2067, replica count: 1
  I0131 07:00:42.299094      23 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 31 07:00:42.412: INFO: Created: latency-svc-dd47z
  Jan 31 07:00:42.417: INFO: Got endpoints: latency-svc-dd47z [17.204772ms]
  Jan 31 07:00:42.429: INFO: Created: latency-svc-qvv55
  Jan 31 07:00:42.434: INFO: Got endpoints: latency-svc-qvv55 [16.819509ms]
  Jan 31 07:00:42.438: INFO: Created: latency-svc-klpst
  Jan 31 07:00:42.443: INFO: Got endpoints: latency-svc-klpst [25.235235ms]
  Jan 31 07:00:42.446: INFO: Created: latency-svc-c6kf5
  Jan 31 07:00:42.455: INFO: Got endpoints: latency-svc-c6kf5 [37.29272ms]
  Jan 31 07:00:42.456: INFO: Created: latency-svc-462ww
  Jan 31 07:00:42.464: INFO: Got endpoints: latency-svc-462ww [46.204119ms]
  Jan 31 07:00:42.467: INFO: Created: latency-svc-wk4zs
  Jan 31 07:00:42.471: INFO: Got endpoints: latency-svc-wk4zs [53.234141ms]
  Jan 31 07:00:42.478: INFO: Created: latency-svc-2t9hb
  Jan 31 07:00:42.486: INFO: Got endpoints: latency-svc-2t9hb [68.613838ms]
  Jan 31 07:00:42.489: INFO: Created: latency-svc-xkvz2
  Jan 31 07:00:42.491: INFO: Got endpoints: latency-svc-xkvz2 [73.926839ms]
  Jan 31 07:00:42.499: INFO: Created: latency-svc-rlb7m
  Jan 31 07:00:42.509: INFO: Got endpoints: latency-svc-rlb7m [90.760127ms]
  Jan 31 07:00:42.514: INFO: Created: latency-svc-kghjc
  Jan 31 07:00:42.521: INFO: Got endpoints: latency-svc-kghjc [103.585737ms]
  Jan 31 07:00:42.522: INFO: Created: latency-svc-bs4z6
  Jan 31 07:00:42.525: INFO: Got endpoints: latency-svc-bs4z6 [106.608199ms]
  Jan 31 07:00:42.536: INFO: Created: latency-svc-lwtfv
  Jan 31 07:00:42.539: INFO: Got endpoints: latency-svc-lwtfv [120.548811ms]
  Jan 31 07:00:42.561: INFO: Created: latency-svc-5pg8z
  Jan 31 07:00:42.566: INFO: Got endpoints: latency-svc-5pg8z [147.748996ms]
  Jan 31 07:00:42.573: INFO: Created: latency-svc-phqv8
  Jan 31 07:00:42.578: INFO: Got endpoints: latency-svc-phqv8 [159.899919ms]
  Jan 31 07:00:42.589: INFO: Created: latency-svc-sxgqm
  Jan 31 07:00:42.598: INFO: Got endpoints: latency-svc-sxgqm [180.810571ms]
  Jan 31 07:00:42.601: INFO: Created: latency-svc-np9wj
  Jan 31 07:00:42.606: INFO: Got endpoints: latency-svc-np9wj [188.324396ms]
  Jan 31 07:00:42.617: INFO: Created: latency-svc-zgbzw
  Jan 31 07:00:42.624: INFO: Got endpoints: latency-svc-zgbzw [190.216309ms]
  Jan 31 07:00:42.629: INFO: Created: latency-svc-5txsj
  Jan 31 07:00:42.637: INFO: Got endpoints: latency-svc-5txsj [194.799773ms]
  Jan 31 07:00:42.638: INFO: Created: latency-svc-866fc
  Jan 31 07:00:42.641: INFO: Got endpoints: latency-svc-866fc [186.493673ms]
  Jan 31 07:00:42.653: INFO: Created: latency-svc-7brn4
  Jan 31 07:00:42.664: INFO: Got endpoints: latency-svc-7brn4 [199.83449ms]
  Jan 31 07:00:42.667: INFO: Created: latency-svc-mkr79
  Jan 31 07:00:42.671: INFO: Got endpoints: latency-svc-mkr79 [199.601964ms]
  Jan 31 07:00:42.680: INFO: Created: latency-svc-mzb9m
  Jan 31 07:00:42.683: INFO: Got endpoints: latency-svc-mzb9m [196.246989ms]
  Jan 31 07:00:42.694: INFO: Created: latency-svc-6kq9r
  Jan 31 07:00:42.697: INFO: Got endpoints: latency-svc-6kq9r [206.210313ms]
  Jan 31 07:00:42.706: INFO: Created: latency-svc-t5n7b
  Jan 31 07:00:42.710: INFO: Got endpoints: latency-svc-t5n7b [200.953326ms]
  Jan 31 07:00:42.722: INFO: Created: latency-svc-n2bmf
  Jan 31 07:00:42.731: INFO: Got endpoints: latency-svc-n2bmf [209.535217ms]
  Jan 31 07:00:42.733: INFO: Created: latency-svc-9lnl9
  Jan 31 07:00:42.738: INFO: Got endpoints: latency-svc-9lnl9 [213.470698ms]
  Jan 31 07:00:42.748: INFO: Created: latency-svc-gktln
  Jan 31 07:00:42.752: INFO: Got endpoints: latency-svc-gktln [212.90262ms]
  Jan 31 07:00:42.761: INFO: Created: latency-svc-khlg5
  Jan 31 07:00:42.775: INFO: Got endpoints: latency-svc-khlg5 [209.437367ms]
  Jan 31 07:00:42.779: INFO: Created: latency-svc-ql6rn
  Jan 31 07:00:42.785: INFO: Got endpoints: latency-svc-ql6rn [206.744552ms]
  Jan 31 07:00:42.793: INFO: Created: latency-svc-s84qx
  Jan 31 07:00:42.797: INFO: Got endpoints: latency-svc-s84qx [198.550061ms]
  Jan 31 07:00:42.807: INFO: Created: latency-svc-tzt4d
  Jan 31 07:00:42.815: INFO: Got endpoints: latency-svc-tzt4d [208.361953ms]
  Jan 31 07:00:42.821: INFO: Created: latency-svc-mzkzx
  Jan 31 07:00:42.827: INFO: Got endpoints: latency-svc-mzkzx [203.097992ms]
  Jan 31 07:00:42.834: INFO: Created: latency-svc-zpb9p
  Jan 31 07:00:42.844: INFO: Got endpoints: latency-svc-zpb9p [206.394361ms]
  Jan 31 07:00:42.846: INFO: Created: latency-svc-xdv8b
  Jan 31 07:00:42.849: INFO: Got endpoints: latency-svc-xdv8b [207.701167ms]
  Jan 31 07:00:42.859: INFO: Created: latency-svc-tc9jc
  Jan 31 07:00:42.862: INFO: Got endpoints: latency-svc-tc9jc [198.705115ms]
  Jan 31 07:00:42.874: INFO: Created: latency-svc-pknnv
  Jan 31 07:00:42.885: INFO: Got endpoints: latency-svc-pknnv [214.152323ms]
  Jan 31 07:00:42.888: INFO: Created: latency-svc-grt7j
  Jan 31 07:00:42.895: INFO: Got endpoints: latency-svc-grt7j [212.558545ms]
  Jan 31 07:00:42.898: INFO: Created: latency-svc-q5ck8
  Jan 31 07:00:42.903: INFO: Got endpoints: latency-svc-q5ck8 [205.126503ms]
  Jan 31 07:00:42.909: INFO: Created: latency-svc-wtvvm
  Jan 31 07:00:42.914: INFO: Got endpoints: latency-svc-wtvvm [203.949059ms]
  Jan 31 07:00:42.920: INFO: Created: latency-svc-plw9q
  Jan 31 07:00:42.924: INFO: Got endpoints: latency-svc-plw9q [192.460706ms]
  Jan 31 07:00:42.932: INFO: Created: latency-svc-qkwgs
  Jan 31 07:00:42.941: INFO: Created: latency-svc-zk5pp
  Jan 31 07:00:42.953: INFO: Created: latency-svc-jdnng
  Jan 31 07:00:42.964: INFO: Created: latency-svc-xxx2j
  Jan 31 07:00:42.965: INFO: Got endpoints: latency-svc-qkwgs [227.136515ms]
  Jan 31 07:00:42.976: INFO: Created: latency-svc-g8kfr
  Jan 31 07:00:42.993: INFO: Created: latency-svc-cg7tj
  Jan 31 07:00:43.007: INFO: Created: latency-svc-n46bf
  Jan 31 07:00:43.018: INFO: Got endpoints: latency-svc-zk5pp [266.616592ms]
  Jan 31 07:00:43.021: INFO: Created: latency-svc-vvgxz
  Jan 31 07:00:43.037: INFO: Created: latency-svc-7l5hl
  Jan 31 07:00:43.051: INFO: Created: latency-svc-bgmfd
  Jan 31 07:00:43.064: INFO: Created: latency-svc-l5q56
  Jan 31 07:00:43.068: INFO: Got endpoints: latency-svc-jdnng [292.673067ms]
  Jan 31 07:00:43.078: INFO: Created: latency-svc-6kdbw
  Jan 31 07:00:43.102: INFO: Created: latency-svc-bpx5l
  Jan 31 07:00:43.115: INFO: Created: latency-svc-4gbw8
  Jan 31 07:00:43.116: INFO: Got endpoints: latency-svc-xxx2j [331.498035ms]
  Jan 31 07:00:43.130: INFO: Created: latency-svc-p2jsn
  Jan 31 07:00:43.136: INFO: Created: latency-svc-gvcm7
  Jan 31 07:00:43.148: INFO: Created: latency-svc-xh5hl
  Jan 31 07:00:43.165: INFO: Created: latency-svc-qc4jr
  Jan 31 07:00:43.167: INFO: Got endpoints: latency-svc-g8kfr [369.857373ms]
  Jan 31 07:00:43.177: INFO: Created: latency-svc-l7kf8
  Jan 31 07:00:43.188: INFO: Created: latency-svc-hg7lf
  Jan 31 07:00:43.218: INFO: Got endpoints: latency-svc-cg7tj [403.070094ms]
  Jan 31 07:00:43.234: INFO: Created: latency-svc-cdpzc
  Jan 31 07:00:43.268: INFO: Got endpoints: latency-svc-n46bf [440.547998ms]
  Jan 31 07:00:43.304: INFO: Created: latency-svc-mp7sh
  Jan 31 07:00:43.324: INFO: Got endpoints: latency-svc-vvgxz [479.541267ms]
  Jan 31 07:00:43.336: INFO: Created: latency-svc-tjwjc
  Jan 31 07:00:43.366: INFO: Got endpoints: latency-svc-7l5hl [516.677383ms]
  Jan 31 07:00:43.384: INFO: Created: latency-svc-vh85b
  Jan 31 07:00:43.417: INFO: Got endpoints: latency-svc-bgmfd [554.735642ms]
  Jan 31 07:00:43.432: INFO: Created: latency-svc-btz4z
  Jan 31 07:00:43.466: INFO: Got endpoints: latency-svc-l5q56 [580.662234ms]
  Jan 31 07:00:43.482: INFO: Created: latency-svc-sv7g8
  Jan 31 07:00:43.518: INFO: Got endpoints: latency-svc-6kdbw [622.505059ms]
  Jan 31 07:00:43.532: INFO: Created: latency-svc-qg74t
  Jan 31 07:00:43.567: INFO: Got endpoints: latency-svc-bpx5l [664.013322ms]
  Jan 31 07:00:43.583: INFO: Created: latency-svc-llllc
  Jan 31 07:00:43.620: INFO: Got endpoints: latency-svc-4gbw8 [706.052401ms]
  Jan 31 07:00:43.634: INFO: Created: latency-svc-2ttvh
  Jan 31 07:00:43.666: INFO: Got endpoints: latency-svc-p2jsn [742.501042ms]
  Jan 31 07:00:43.683: INFO: Created: latency-svc-25nw6
  Jan 31 07:00:43.716: INFO: Got endpoints: latency-svc-gvcm7 [750.992702ms]
  Jan 31 07:00:43.740: INFO: Created: latency-svc-9nck4
  Jan 31 07:00:43.768: INFO: Got endpoints: latency-svc-xh5hl [749.330435ms]
  Jan 31 07:00:43.786: INFO: Created: latency-svc-wcbw5
  Jan 31 07:00:43.815: INFO: Got endpoints: latency-svc-qc4jr [747.438802ms]
  Jan 31 07:00:43.845: INFO: Created: latency-svc-t5dnt
  Jan 31 07:00:43.868: INFO: Got endpoints: latency-svc-l7kf8 [752.197733ms]
  Jan 31 07:00:43.892: INFO: Created: latency-svc-xdjkc
  Jan 31 07:00:43.916: INFO: Got endpoints: latency-svc-hg7lf [748.917447ms]
  Jan 31 07:00:43.931: INFO: Created: latency-svc-jn8zn
  Jan 31 07:00:43.969: INFO: Got endpoints: latency-svc-cdpzc [751.162582ms]
  Jan 31 07:00:43.986: INFO: Created: latency-svc-4swgd
  Jan 31 07:00:44.016: INFO: Got endpoints: latency-svc-mp7sh [748.189951ms]
  Jan 31 07:00:44.031: INFO: Created: latency-svc-ht8ht
  Jan 31 07:00:44.066: INFO: Got endpoints: latency-svc-tjwjc [742.528787ms]
  Jan 31 07:00:44.083: INFO: Created: latency-svc-6klqs
  Jan 31 07:00:44.117: INFO: Got endpoints: latency-svc-vh85b [750.839225ms]
  Jan 31 07:00:44.131: INFO: Created: latency-svc-fkhhg
  Jan 31 07:00:44.166: INFO: Got endpoints: latency-svc-btz4z [748.90713ms]
  Jan 31 07:00:44.180: INFO: Created: latency-svc-f8hhb
  Jan 31 07:00:44.216: INFO: Got endpoints: latency-svc-sv7g8 [750.548513ms]
  Jan 31 07:00:44.234: INFO: Created: latency-svc-zjvvw
  Jan 31 07:00:44.267: INFO: Got endpoints: latency-svc-qg74t [749.254978ms]
  Jan 31 07:00:44.283: INFO: Created: latency-svc-6l4wp
  Jan 31 07:00:44.318: INFO: Got endpoints: latency-svc-llllc [751.052128ms]
  Jan 31 07:00:44.334: INFO: Created: latency-svc-xdwlc
  Jan 31 07:00:44.367: INFO: Got endpoints: latency-svc-2ttvh [747.303079ms]
  Jan 31 07:00:44.383: INFO: Created: latency-svc-sttkm
  Jan 31 07:00:44.416: INFO: Got endpoints: latency-svc-25nw6 [750.215741ms]
  Jan 31 07:00:44.431: INFO: Created: latency-svc-x6k5t
  Jan 31 07:00:44.466: INFO: Got endpoints: latency-svc-9nck4 [749.399411ms]
  Jan 31 07:00:44.482: INFO: Created: latency-svc-b7n72
  Jan 31 07:00:44.517: INFO: Got endpoints: latency-svc-wcbw5 [749.336342ms]
  Jan 31 07:00:44.533: INFO: Created: latency-svc-29vj9
  Jan 31 07:00:44.565: INFO: Got endpoints: latency-svc-t5dnt [749.929741ms]
  Jan 31 07:00:44.581: INFO: Created: latency-svc-6swrk
  Jan 31 07:00:44.617: INFO: Got endpoints: latency-svc-xdjkc [748.927643ms]
  Jan 31 07:00:44.632: INFO: Created: latency-svc-wpkkt
  Jan 31 07:00:44.666: INFO: Got endpoints: latency-svc-jn8zn [750.097811ms]
  Jan 31 07:00:44.685: INFO: Created: latency-svc-xfvlj
  Jan 31 07:00:44.716: INFO: Got endpoints: latency-svc-4swgd [746.641217ms]
  Jan 31 07:00:44.733: INFO: Created: latency-svc-zstdg
  Jan 31 07:00:44.766: INFO: Got endpoints: latency-svc-ht8ht [749.443265ms]
  Jan 31 07:00:44.782: INFO: Created: latency-svc-2c7zx
  Jan 31 07:00:44.818: INFO: Got endpoints: latency-svc-6klqs [751.608217ms]
  Jan 31 07:00:44.835: INFO: Created: latency-svc-85jml
  Jan 31 07:00:44.867: INFO: Got endpoints: latency-svc-fkhhg [749.73266ms]
  Jan 31 07:00:44.886: INFO: Created: latency-svc-zcxw8
  Jan 31 07:00:44.916: INFO: Got endpoints: latency-svc-f8hhb [749.329163ms]
  Jan 31 07:00:44.935: INFO: Created: latency-svc-wz445
  Jan 31 07:00:44.966: INFO: Got endpoints: latency-svc-zjvvw [750.06357ms]
  Jan 31 07:00:44.979: INFO: Created: latency-svc-x7sfm
  Jan 31 07:00:45.016: INFO: Got endpoints: latency-svc-6l4wp [748.809903ms]
  Jan 31 07:00:45.032: INFO: Created: latency-svc-9pqq8
  Jan 31 07:00:45.066: INFO: Got endpoints: latency-svc-xdwlc [747.983528ms]
  Jan 31 07:00:45.081: INFO: Created: latency-svc-kh2kl
  Jan 31 07:00:45.117: INFO: Got endpoints: latency-svc-sttkm [749.232991ms]
  Jan 31 07:00:45.132: INFO: Created: latency-svc-t9k4d
  Jan 31 07:00:45.168: INFO: Got endpoints: latency-svc-x6k5t [751.712654ms]
  Jan 31 07:00:45.182: INFO: Created: latency-svc-78w4s
  Jan 31 07:00:45.215: INFO: Got endpoints: latency-svc-b7n72 [749.610985ms]
  Jan 31 07:00:45.229: INFO: Created: latency-svc-tl9hj
  Jan 31 07:00:45.268: INFO: Got endpoints: latency-svc-29vj9 [751.389595ms]
  Jan 31 07:00:45.284: INFO: Created: latency-svc-smfh2
  Jan 31 07:00:45.316: INFO: Got endpoints: latency-svc-6swrk [750.197265ms]
  Jan 31 07:00:45.331: INFO: Created: latency-svc-nxpxv
  Jan 31 07:00:45.366: INFO: Got endpoints: latency-svc-wpkkt [748.229589ms]
  Jan 31 07:00:45.379: INFO: Created: latency-svc-kl5rv
  Jan 31 07:00:45.418: INFO: Got endpoints: latency-svc-xfvlj [751.571378ms]
  Jan 31 07:00:45.432: INFO: Created: latency-svc-fvzmg
  Jan 31 07:00:45.467: INFO: Got endpoints: latency-svc-zstdg [750.92705ms]
  Jan 31 07:00:45.481: INFO: Created: latency-svc-bgpmq
  Jan 31 07:00:45.516: INFO: Got endpoints: latency-svc-2c7zx [750.091253ms]
  Jan 31 07:00:45.531: INFO: Created: latency-svc-mxqwk
  Jan 31 07:00:45.567: INFO: Got endpoints: latency-svc-85jml [748.683877ms]
  Jan 31 07:00:45.581: INFO: Created: latency-svc-hcwpq
  Jan 31 07:00:45.616: INFO: Got endpoints: latency-svc-zcxw8 [749.218129ms]
  Jan 31 07:00:45.632: INFO: Created: latency-svc-6sdvb
  Jan 31 07:00:45.666: INFO: Got endpoints: latency-svc-wz445 [750.083561ms]
  Jan 31 07:00:45.680: INFO: Created: latency-svc-w4qss
  Jan 31 07:00:45.719: INFO: Got endpoints: latency-svc-x7sfm [752.304859ms]
  Jan 31 07:00:45.733: INFO: Created: latency-svc-xwctb
  Jan 31 07:00:45.767: INFO: Got endpoints: latency-svc-9pqq8 [751.237476ms]
  Jan 31 07:00:45.782: INFO: Created: latency-svc-fv6vt
  Jan 31 07:00:45.817: INFO: Got endpoints: latency-svc-kh2kl [750.928488ms]
  Jan 31 07:00:45.833: INFO: Created: latency-svc-rn2z8
  Jan 31 07:00:45.871: INFO: Got endpoints: latency-svc-t9k4d [754.130517ms]
  Jan 31 07:00:45.887: INFO: Created: latency-svc-djc4h
  Jan 31 07:00:45.917: INFO: Got endpoints: latency-svc-78w4s [748.773916ms]
  Jan 31 07:00:45.932: INFO: Created: latency-svc-p2kk7
  Jan 31 07:00:45.968: INFO: Got endpoints: latency-svc-tl9hj [752.782822ms]
  Jan 31 07:00:45.984: INFO: Created: latency-svc-pvtjw
  Jan 31 07:00:46.018: INFO: Got endpoints: latency-svc-smfh2 [749.807712ms]
  Jan 31 07:00:46.036: INFO: Created: latency-svc-wrs6t
  Jan 31 07:00:46.065: INFO: Got endpoints: latency-svc-nxpxv [749.457091ms]
  Jan 31 07:00:46.082: INFO: Created: latency-svc-mnxjk
  Jan 31 07:00:46.116: INFO: Got endpoints: latency-svc-kl5rv [749.97614ms]
  Jan 31 07:00:46.137: INFO: Created: latency-svc-9v5sq
  Jan 31 07:00:46.167: INFO: Got endpoints: latency-svc-fvzmg [749.039805ms]
  Jan 31 07:00:46.183: INFO: Created: latency-svc-hxn8d
  Jan 31 07:00:46.216: INFO: Got endpoints: latency-svc-bgpmq [749.543623ms]
  Jan 31 07:00:46.234: INFO: Created: latency-svc-r7bmd
  Jan 31 07:00:46.268: INFO: Got endpoints: latency-svc-mxqwk [751.976619ms]
  Jan 31 07:00:46.280: INFO: Created: latency-svc-zplkv
  Jan 31 07:00:46.315: INFO: Got endpoints: latency-svc-hcwpq [747.885993ms]
  Jan 31 07:00:46.327: INFO: Created: latency-svc-hjqrf
  Jan 31 07:00:46.368: INFO: Got endpoints: latency-svc-6sdvb [751.544165ms]
  Jan 31 07:00:46.382: INFO: Created: latency-svc-wvdf2
  Jan 31 07:00:46.415: INFO: Got endpoints: latency-svc-w4qss [748.980477ms]
  Jan 31 07:00:46.430: INFO: Created: latency-svc-sx69b
  Jan 31 07:00:46.466: INFO: Got endpoints: latency-svc-xwctb [747.225098ms]
  Jan 31 07:00:46.481: INFO: Created: latency-svc-89jrx
  Jan 31 07:00:46.524: INFO: Got endpoints: latency-svc-fv6vt [756.844409ms]
  Jan 31 07:00:46.538: INFO: Created: latency-svc-z9j4t
  Jan 31 07:00:46.567: INFO: Got endpoints: latency-svc-rn2z8 [750.53159ms]
  Jan 31 07:00:46.580: INFO: Created: latency-svc-xc5qs
  Jan 31 07:00:46.616: INFO: Got endpoints: latency-svc-djc4h [745.66144ms]
  Jan 31 07:00:46.631: INFO: Created: latency-svc-dc6rt
  Jan 31 07:00:46.669: INFO: Got endpoints: latency-svc-p2kk7 [752.30091ms]
  Jan 31 07:00:46.687: INFO: Created: latency-svc-pqft2
  Jan 31 07:00:46.716: INFO: Got endpoints: latency-svc-pvtjw [747.354928ms]
  Jan 31 07:00:46.731: INFO: Created: latency-svc-t2b2f
  Jan 31 07:00:46.768: INFO: Got endpoints: latency-svc-wrs6t [749.171746ms]
  Jan 31 07:00:46.783: INFO: Created: latency-svc-mtq7s
  Jan 31 07:00:46.815: INFO: Got endpoints: latency-svc-mnxjk [750.070845ms]
  Jan 31 07:00:46.831: INFO: Created: latency-svc-ltp4t
  Jan 31 07:00:46.867: INFO: Got endpoints: latency-svc-9v5sq [750.805187ms]
  Jan 31 07:00:46.882: INFO: Created: latency-svc-5vqw6
  Jan 31 07:00:46.917: INFO: Got endpoints: latency-svc-hxn8d [749.939508ms]
  Jan 31 07:00:46.931: INFO: Created: latency-svc-qtg8p
  Jan 31 07:00:46.965: INFO: Got endpoints: latency-svc-r7bmd [748.965481ms]
  Jan 31 07:00:46.982: INFO: Created: latency-svc-t7mst
  Jan 31 07:00:47.018: INFO: Got endpoints: latency-svc-zplkv [750.378557ms]
  Jan 31 07:00:47.033: INFO: Created: latency-svc-42smb
  Jan 31 07:00:47.066: INFO: Got endpoints: latency-svc-hjqrf [751.687186ms]
  Jan 31 07:00:47.089: INFO: Created: latency-svc-d2546
  Jan 31 07:00:47.116: INFO: Got endpoints: latency-svc-wvdf2 [747.855732ms]
  Jan 31 07:00:47.135: INFO: Created: latency-svc-7c4hj
  Jan 31 07:00:47.166: INFO: Got endpoints: latency-svc-sx69b [750.600384ms]
  Jan 31 07:00:47.188: INFO: Created: latency-svc-mnjdp
  Jan 31 07:00:47.215: INFO: Got endpoints: latency-svc-89jrx [749.409495ms]
  Jan 31 07:00:47.231: INFO: Created: latency-svc-8x4sr
  Jan 31 07:00:47.268: INFO: Got endpoints: latency-svc-z9j4t [743.642062ms]
  Jan 31 07:00:47.283: INFO: Created: latency-svc-g5vmf
  Jan 31 07:00:47.316: INFO: Got endpoints: latency-svc-xc5qs [748.840906ms]
  Jan 31 07:00:47.332: INFO: Created: latency-svc-v7xgn
  Jan 31 07:00:47.369: INFO: Got endpoints: latency-svc-dc6rt [751.955432ms]
  Jan 31 07:00:47.384: INFO: Created: latency-svc-5qsl7
  Jan 31 07:00:47.416: INFO: Got endpoints: latency-svc-pqft2 [747.044823ms]
  Jan 31 07:00:47.431: INFO: Created: latency-svc-gdl7d
  Jan 31 07:00:47.469: INFO: Got endpoints: latency-svc-t2b2f [752.793959ms]
  Jan 31 07:00:47.482: INFO: Created: latency-svc-2vbb6
  Jan 31 07:00:47.517: INFO: Got endpoints: latency-svc-mtq7s [749.874989ms]
  Jan 31 07:00:47.532: INFO: Created: latency-svc-zr5f5
  Jan 31 07:00:47.566: INFO: Got endpoints: latency-svc-ltp4t [750.726874ms]
  Jan 31 07:00:47.581: INFO: Created: latency-svc-d8pmq
  Jan 31 07:00:47.616: INFO: Got endpoints: latency-svc-5vqw6 [749.691578ms]
  Jan 31 07:00:47.632: INFO: Created: latency-svc-vt65d
  Jan 31 07:00:47.666: INFO: Got endpoints: latency-svc-qtg8p [749.006652ms]
  Jan 31 07:00:47.680: INFO: Created: latency-svc-ssf86
  Jan 31 07:00:47.716: INFO: Got endpoints: latency-svc-t7mst [750.807876ms]
  Jan 31 07:00:47.731: INFO: Created: latency-svc-9jf2n
  Jan 31 07:00:47.767: INFO: Got endpoints: latency-svc-42smb [748.758673ms]
  Jan 31 07:00:47.783: INFO: Created: latency-svc-4mbbb
  Jan 31 07:00:47.817: INFO: Got endpoints: latency-svc-d2546 [750.680411ms]
  Jan 31 07:00:47.832: INFO: Created: latency-svc-pq6f6
  Jan 31 07:00:47.870: INFO: Got endpoints: latency-svc-7c4hj [754.77239ms]
  Jan 31 07:00:47.884: INFO: Created: latency-svc-s2rzc
  Jan 31 07:00:47.919: INFO: Got endpoints: latency-svc-mnjdp [753.561555ms]
  Jan 31 07:00:47.934: INFO: Created: latency-svc-zdcwk
  Jan 31 07:00:47.966: INFO: Got endpoints: latency-svc-8x4sr [750.849808ms]
  Jan 31 07:00:47.983: INFO: Created: latency-svc-m89v4
  Jan 31 07:00:48.016: INFO: Got endpoints: latency-svc-g5vmf [747.61409ms]
  Jan 31 07:00:48.032: INFO: Created: latency-svc-ptspr
  Jan 31 07:00:48.066: INFO: Got endpoints: latency-svc-v7xgn [749.918147ms]
  Jan 31 07:00:48.081: INFO: Created: latency-svc-8lh2n
  Jan 31 07:00:48.118: INFO: Got endpoints: latency-svc-5qsl7 [748.962863ms]
  Jan 31 07:00:48.131: INFO: Created: latency-svc-6dwch
  Jan 31 07:00:48.166: INFO: Got endpoints: latency-svc-gdl7d [749.793329ms]
  Jan 31 07:00:48.180: INFO: Created: latency-svc-hngmj
  Jan 31 07:00:48.215: INFO: Got endpoints: latency-svc-2vbb6 [746.795544ms]
  Jan 31 07:00:48.235: INFO: Created: latency-svc-jgxzk
  Jan 31 07:00:48.268: INFO: Got endpoints: latency-svc-zr5f5 [750.128284ms]
  Jan 31 07:00:48.285: INFO: Created: latency-svc-7qjnr
  Jan 31 07:00:48.317: INFO: Got endpoints: latency-svc-d8pmq [750.654327ms]
  Jan 31 07:00:48.336: INFO: Created: latency-svc-n68l8
  Jan 31 07:00:48.367: INFO: Got endpoints: latency-svc-vt65d [750.918332ms]
  Jan 31 07:00:48.385: INFO: Created: latency-svc-rg7kq
  Jan 31 07:00:48.416: INFO: Got endpoints: latency-svc-ssf86 [750.410025ms]
  Jan 31 07:00:48.432: INFO: Created: latency-svc-bjkdf
  Jan 31 07:00:48.467: INFO: Got endpoints: latency-svc-9jf2n [750.256104ms]
  Jan 31 07:00:48.485: INFO: Created: latency-svc-pbb28
  Jan 31 07:00:48.517: INFO: Got endpoints: latency-svc-4mbbb [749.719743ms]
  Jan 31 07:00:48.534: INFO: Created: latency-svc-mkz52
  Jan 31 07:00:48.567: INFO: Got endpoints: latency-svc-pq6f6 [749.826627ms]
  Jan 31 07:00:48.581: INFO: Created: latency-svc-4k7vq
  Jan 31 07:00:48.618: INFO: Got endpoints: latency-svc-s2rzc [747.803175ms]
  Jan 31 07:00:48.634: INFO: Created: latency-svc-cg446
  Jan 31 07:00:48.665: INFO: Got endpoints: latency-svc-zdcwk [746.118001ms]
  Jan 31 07:00:48.679: INFO: Created: latency-svc-sst59
  Jan 31 07:00:48.716: INFO: Got endpoints: latency-svc-m89v4 [749.42184ms]
  Jan 31 07:00:48.731: INFO: Created: latency-svc-zmr8k
  Jan 31 07:00:48.766: INFO: Got endpoints: latency-svc-ptspr [749.540505ms]
  Jan 31 07:00:48.779: INFO: Created: latency-svc-l9lxm
  Jan 31 07:00:48.816: INFO: Got endpoints: latency-svc-8lh2n [749.980743ms]
  Jan 31 07:00:48.831: INFO: Created: latency-svc-vrzwc
  Jan 31 07:00:48.866: INFO: Got endpoints: latency-svc-6dwch [748.294693ms]
  Jan 31 07:00:48.880: INFO: Created: latency-svc-g6sjq
  Jan 31 07:00:48.916: INFO: Got endpoints: latency-svc-hngmj [749.585227ms]
  Jan 31 07:00:48.932: INFO: Created: latency-svc-hl7r9
  Jan 31 07:00:48.967: INFO: Got endpoints: latency-svc-jgxzk [751.197097ms]
  Jan 31 07:00:48.982: INFO: Created: latency-svc-q9x7g
  Jan 31 07:00:49.018: INFO: Got endpoints: latency-svc-7qjnr [750.248108ms]
  Jan 31 07:00:49.033: INFO: Created: latency-svc-fsmlp
  Jan 31 07:00:49.068: INFO: Got endpoints: latency-svc-n68l8 [751.227563ms]
  Jan 31 07:00:49.102: INFO: Created: latency-svc-vgr8t
  Jan 31 07:00:49.115: INFO: Got endpoints: latency-svc-rg7kq [747.656958ms]
  Jan 31 07:00:49.130: INFO: Created: latency-svc-qnkp8
  Jan 31 07:00:49.166: INFO: Got endpoints: latency-svc-bjkdf [749.691404ms]
  Jan 31 07:00:49.186: INFO: Created: latency-svc-lbbfd
  Jan 31 07:00:49.216: INFO: Got endpoints: latency-svc-pbb28 [748.964619ms]
  Jan 31 07:00:49.232: INFO: Created: latency-svc-dcfbw
  Jan 31 07:00:49.268: INFO: Got endpoints: latency-svc-mkz52 [750.585418ms]
  Jan 31 07:00:49.284: INFO: Created: latency-svc-79qmm
  Jan 31 07:00:49.318: INFO: Got endpoints: latency-svc-4k7vq [750.503256ms]
  Jan 31 07:00:49.332: INFO: Created: latency-svc-gz92b
  Jan 31 07:00:49.366: INFO: Got endpoints: latency-svc-cg446 [747.856859ms]
  Jan 31 07:00:49.386: INFO: Created: latency-svc-srtvz
  Jan 31 07:00:49.417: INFO: Got endpoints: latency-svc-sst59 [751.094069ms]
  Jan 31 07:00:49.433: INFO: Created: latency-svc-jgkwv
  Jan 31 07:00:49.467: INFO: Got endpoints: latency-svc-zmr8k [750.859408ms]
  Jan 31 07:00:49.488: INFO: Created: latency-svc-tngrh
  Jan 31 07:00:49.519: INFO: Got endpoints: latency-svc-l9lxm [753.638402ms]
  Jan 31 07:00:49.536: INFO: Created: latency-svc-8nwpw
  Jan 31 07:00:49.568: INFO: Got endpoints: latency-svc-vrzwc [751.617425ms]
  Jan 31 07:00:49.584: INFO: Created: latency-svc-bkn95
  Jan 31 07:00:49.616: INFO: Got endpoints: latency-svc-g6sjq [750.455625ms]
  Jan 31 07:00:49.632: INFO: Created: latency-svc-7fpsh
  Jan 31 07:00:49.666: INFO: Got endpoints: latency-svc-hl7r9 [749.898145ms]
  Jan 31 07:00:49.681: INFO: Created: latency-svc-cdftg
  Jan 31 07:00:49.717: INFO: Got endpoints: latency-svc-q9x7g [750.010189ms]
  Jan 31 07:00:49.731: INFO: Created: latency-svc-tphn2
  Jan 31 07:00:49.766: INFO: Got endpoints: latency-svc-fsmlp [747.775677ms]
  Jan 31 07:00:49.782: INFO: Created: latency-svc-q9kdb
  Jan 31 07:00:49.817: INFO: Got endpoints: latency-svc-vgr8t [748.540312ms]
  Jan 31 07:00:49.833: INFO: Created: latency-svc-mqcgx
  Jan 31 07:00:49.867: INFO: Got endpoints: latency-svc-qnkp8 [751.38708ms]
  Jan 31 07:00:49.886: INFO: Created: latency-svc-wvqfw
  Jan 31 07:00:49.919: INFO: Got endpoints: latency-svc-lbbfd [752.781367ms]
  Jan 31 07:00:49.934: INFO: Created: latency-svc-kjtln
  Jan 31 07:00:49.966: INFO: Got endpoints: latency-svc-dcfbw [750.12936ms]
  Jan 31 07:00:49.981: INFO: Created: latency-svc-4blpt
  Jan 31 07:00:50.017: INFO: Got endpoints: latency-svc-79qmm [749.537229ms]
  Jan 31 07:00:50.033: INFO: Created: latency-svc-9rdk4
  Jan 31 07:00:50.066: INFO: Got endpoints: latency-svc-gz92b [748.478027ms]
  Jan 31 07:00:50.080: INFO: Created: latency-svc-qtctd
  Jan 31 07:00:50.116: INFO: Got endpoints: latency-svc-srtvz [749.897672ms]
  Jan 31 07:00:50.132: INFO: Created: latency-svc-dvg44
  Jan 31 07:00:50.168: INFO: Got endpoints: latency-svc-jgkwv [751.140448ms]
  Jan 31 07:00:50.184: INFO: Created: latency-svc-smw9d
  Jan 31 07:00:50.219: INFO: Got endpoints: latency-svc-tngrh [752.544059ms]
  Jan 31 07:00:50.235: INFO: Created: latency-svc-pzvd5
  Jan 31 07:00:50.268: INFO: Got endpoints: latency-svc-8nwpw [748.701328ms]
  Jan 31 07:00:50.316: INFO: Got endpoints: latency-svc-bkn95 [747.818692ms]
  Jan 31 07:00:50.368: INFO: Got endpoints: latency-svc-7fpsh [751.35592ms]
  Jan 31 07:00:50.417: INFO: Got endpoints: latency-svc-cdftg [750.497235ms]
  Jan 31 07:00:50.467: INFO: Got endpoints: latency-svc-tphn2 [750.277443ms]
  Jan 31 07:00:50.516: INFO: Got endpoints: latency-svc-q9kdb [749.982645ms]
  Jan 31 07:00:50.566: INFO: Got endpoints: latency-svc-mqcgx [748.660275ms]
  Jan 31 07:00:50.616: INFO: Got endpoints: latency-svc-wvqfw [749.468287ms]
  Jan 31 07:00:50.668: INFO: Got endpoints: latency-svc-kjtln [748.667535ms]
  Jan 31 07:00:50.716: INFO: Got endpoints: latency-svc-4blpt [750.334813ms]
  Jan 31 07:00:50.767: INFO: Got endpoints: latency-svc-9rdk4 [749.773788ms]
  Jan 31 07:00:50.818: INFO: Got endpoints: latency-svc-qtctd [751.637755ms]
  Jan 31 07:00:50.867: INFO: Got endpoints: latency-svc-dvg44 [751.026873ms]
  Jan 31 07:00:50.919: INFO: Got endpoints: latency-svc-smw9d [751.108277ms]
  Jan 31 07:00:50.967: INFO: Got endpoints: latency-svc-pzvd5 [747.494422ms]
  Jan 31 07:00:50.967: INFO: Latencies: [16.819509ms 25.235235ms 37.29272ms 46.204119ms 53.234141ms 68.613838ms 73.926839ms 90.760127ms 103.585737ms 106.608199ms 120.548811ms 147.748996ms 159.899919ms 180.810571ms 186.493673ms 188.324396ms 190.216309ms 192.460706ms 194.799773ms 196.246989ms 198.550061ms 198.705115ms 199.601964ms 199.83449ms 200.953326ms 203.097992ms 203.949059ms 205.126503ms 206.210313ms 206.394361ms 206.744552ms 207.701167ms 208.361953ms 209.437367ms 209.535217ms 212.558545ms 212.90262ms 213.470698ms 214.152323ms 227.136515ms 266.616592ms 292.673067ms 331.498035ms 369.857373ms 403.070094ms 440.547998ms 479.541267ms 516.677383ms 554.735642ms 580.662234ms 622.505059ms 664.013322ms 706.052401ms 742.501042ms 742.528787ms 743.642062ms 745.66144ms 746.118001ms 746.641217ms 746.795544ms 747.044823ms 747.225098ms 747.303079ms 747.354928ms 747.438802ms 747.494422ms 747.61409ms 747.656958ms 747.775677ms 747.803175ms 747.818692ms 747.855732ms 747.856859ms 747.885993ms 747.983528ms 748.189951ms 748.229589ms 748.294693ms 748.478027ms 748.540312ms 748.660275ms 748.667535ms 748.683877ms 748.701328ms 748.758673ms 748.773916ms 748.809903ms 748.840906ms 748.90713ms 748.917447ms 748.927643ms 748.962863ms 748.964619ms 748.965481ms 748.980477ms 749.006652ms 749.039805ms 749.171746ms 749.218129ms 749.232991ms 749.254978ms 749.329163ms 749.330435ms 749.336342ms 749.399411ms 749.409495ms 749.42184ms 749.443265ms 749.457091ms 749.468287ms 749.537229ms 749.540505ms 749.543623ms 749.585227ms 749.610985ms 749.691404ms 749.691578ms 749.719743ms 749.73266ms 749.773788ms 749.793329ms 749.807712ms 749.826627ms 749.874989ms 749.897672ms 749.898145ms 749.918147ms 749.929741ms 749.939508ms 749.97614ms 749.980743ms 749.982645ms 750.010189ms 750.06357ms 750.070845ms 750.083561ms 750.091253ms 750.097811ms 750.128284ms 750.12936ms 750.197265ms 750.215741ms 750.248108ms 750.256104ms 750.277443ms 750.334813ms 750.378557ms 750.410025ms 750.455625ms 750.497235ms 750.503256ms 750.53159ms 750.548513ms 750.585418ms 750.600384ms 750.654327ms 750.680411ms 750.726874ms 750.805187ms 750.807876ms 750.839225ms 750.849808ms 750.859408ms 750.918332ms 750.92705ms 750.928488ms 750.992702ms 751.026873ms 751.052128ms 751.094069ms 751.108277ms 751.140448ms 751.162582ms 751.197097ms 751.227563ms 751.237476ms 751.35592ms 751.38708ms 751.389595ms 751.544165ms 751.571378ms 751.608217ms 751.617425ms 751.637755ms 751.687186ms 751.712654ms 751.955432ms 751.976619ms 752.197733ms 752.30091ms 752.304859ms 752.544059ms 752.781367ms 752.782822ms 752.793959ms 753.561555ms 753.638402ms 754.130517ms 754.77239ms 756.844409ms]
  Jan 31 07:00:50.967: INFO: 50 %ile: 749.254978ms
  Jan 31 07:00:50.967: INFO: 90 %ile: 751.571378ms
  Jan 31 07:00:50.967: INFO: 99 %ile: 754.77239ms
  Jan 31 07:00:50.967: INFO: Total sample count: 200
  Jan 31 07:00:50.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2067" for this suite. @ 01/31/24 07:00:50.976
• [9.766 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 01/31/24 07:00:50.983
  Jan 31 07:00:50.983: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 07:00:50.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:00:51.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:00:51.005
  STEP: Creating configMap with name configmap-test-volume-8b055f87-8fc6-43f8-9716-56f2e2606422 @ 01/31/24 07:00:51.01
  STEP: Creating a pod to test consume configMaps @ 01/31/24 07:00:51.016
  STEP: Saw pod success @ 01/31/24 07:00:55.039
  Jan 31 07:00:55.042: INFO: Trying to get logs from node nodea08 pod pod-configmaps-75a35a34-df6a-43a2-a856-6ab79c830968 container configmap-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 07:00:55.051
  Jan 31 07:00:55.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2803" for this suite. @ 01/31/24 07:00:55.073
• [4.095 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 01/31/24 07:00:55.079
  Jan 31 07:00:55.079: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 07:00:55.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:00:55.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:00:55.1
  STEP: Creating configMap with name configmap-test-volume-a78ebf3e-5cff-4bec-8b15-1773286ac2e3 @ 01/31/24 07:00:55.106
  STEP: Creating a pod to test consume configMaps @ 01/31/24 07:00:55.11
  STEP: Saw pod success @ 01/31/24 07:00:59.14
  Jan 31 07:00:59.144: INFO: Trying to get logs from node nodea08 pod pod-configmaps-8aa42f53-dad6-4dcf-9c97-60d6e4d2a930 container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 07:00:59.153
  Jan 31 07:00:59.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1657" for this suite. @ 01/31/24 07:00:59.176
• [4.103 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 01/31/24 07:00:59.182
  Jan 31 07:00:59.182: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename aggregator @ 01/31/24 07:00:59.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:00:59.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:00:59.202
  Jan 31 07:00:59.207: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Registering the sample API server. @ 01/31/24 07:00:59.208
  Jan 31 07:00:59.624: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jan 31 07:00:59.652: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Jan 31 07:01:01.717: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:03.722: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:05.723: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:07.724: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:09.722: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:11.722: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:13.723: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:15.723: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:17.723: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:19.724: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:21.723: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:23.723: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:25.722: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:27.723: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:29.724: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:31.723: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:33.724: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 31, 7, 0, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 31 07:01:35.854: INFO: Waited 120.260002ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 01/31/24 07:01:35.924
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 01/31/24 07:01:35.928
  STEP: List APIServices @ 01/31/24 07:01:35.938
  Jan 31 07:01:35.945: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 01/31/24 07:01:35.945
  Jan 31 07:01:35.957: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 01/31/24 07:01:35.957
  Jan 31 07:01:35.971: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.January, 31, 7, 1, 35, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 01/31/24 07:01:35.971
  Jan 31 07:01:35.975: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-01-31 07:01:35 +0000 UTC Passed all checks passed}
  Jan 31 07:01:35.975: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 31 07:01:35.975: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 01/31/24 07:01:35.975
  Jan 31 07:01:35.988: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1133924532" @ 01/31/24 07:01:35.988
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 01/31/24 07:01:36.006
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 01/31/24 07:01:36.02
  STEP: Patch APIService Status @ 01/31/24 07:01:36.024
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 01/31/24 07:01:36.035
  Jan 31 07:01:36.040: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-01-31 07:01:35 +0000 UTC Passed all checks passed}
  Jan 31 07:01:36.040: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 31 07:01:36.040: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jan 31 07:01:36.040: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 01/31/24 07:01:36.04
  STEP: Confirm that the generated APIService has been deleted @ 01/31/24 07:01:36.049
  Jan 31 07:01:36.049: INFO: Requesting list of APIServices to confirm quantity
  Jan 31 07:01:36.055: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jan 31 07:01:36.055: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jan 31 07:01:36.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1461" for this suite. @ 01/31/24 07:01:36.149
• [36.972 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 01/31/24 07:01:36.155
  Jan 31 07:01:36.155: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 07:01:36.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:01:36.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:01:36.178
  STEP: Counting existing ResourceQuota @ 01/31/24 07:01:36.182
  STEP: Creating a ResourceQuota @ 01/31/24 07:01:41.187
  STEP: Ensuring resource quota status is calculated @ 01/31/24 07:01:41.195
  STEP: Creating a Pod that fits quota @ 01/31/24 07:01:43.202
  STEP: Ensuring ResourceQuota status captures the pod usage @ 01/31/24 07:01:43.219
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 01/31/24 07:01:45.226
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 01/31/24 07:01:45.231
  STEP: Ensuring a pod cannot update its resource requirements @ 01/31/24 07:01:45.235
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 01/31/24 07:01:45.24
  STEP: Deleting the pod @ 01/31/24 07:01:47.247
  STEP: Ensuring resource quota status released the pod usage @ 01/31/24 07:01:47.26
  Jan 31 07:01:49.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9486" for this suite. @ 01/31/24 07:01:49.272
• [13.124 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 01/31/24 07:01:49.28
  Jan 31 07:01:49.280: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 07:01:49.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:01:49.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:01:49.3
  STEP: Creating the pod @ 01/31/24 07:01:49.305
  Jan 31 07:01:51.857: INFO: Successfully updated pod "annotationupdate096658f0-a840-4b9b-b389-1a30efd3c922"
  Jan 31 07:01:53.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-586" for this suite. @ 01/31/24 07:01:53.884
• [4.613 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 01/31/24 07:01:53.893
  Jan 31 07:01:53.894: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/31/24 07:01:53.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:01:53.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:01:53.912
  Jan 31 07:01:53.918: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/31/24 07:01:55.311
  Jan 31 07:01:55.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-4070 --namespace=crd-publish-openapi-4070 create -f -'
  Jan 31 07:01:55.443: INFO: stderr: ""
  Jan 31 07:01:55.443: INFO: stdout: "e2e-test-crd-publish-openapi-5690-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jan 31 07:01:55.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-4070 --namespace=crd-publish-openapi-4070 delete e2e-test-crd-publish-openapi-5690-crds test-cr'
  Jan 31 07:01:55.544: INFO: stderr: ""
  Jan 31 07:01:55.544: INFO: stdout: "e2e-test-crd-publish-openapi-5690-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jan 31 07:01:55.544: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-4070 --namespace=crd-publish-openapi-4070 apply -f -'
  Jan 31 07:01:55.653: INFO: stderr: ""
  Jan 31 07:01:55.653: INFO: stdout: "e2e-test-crd-publish-openapi-5690-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jan 31 07:01:55.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-4070 --namespace=crd-publish-openapi-4070 delete e2e-test-crd-publish-openapi-5690-crds test-cr'
  Jan 31 07:01:55.755: INFO: stderr: ""
  Jan 31 07:01:55.755: INFO: stdout: "e2e-test-crd-publish-openapi-5690-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/31/24 07:01:55.755
  Jan 31 07:01:55.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-4070 explain e2e-test-crd-publish-openapi-5690-crds'
  Jan 31 07:01:55.852: INFO: stderr: ""
  Jan 31 07:01:55.852: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-5690-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jan 31 07:01:57.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4070" for this suite. @ 01/31/24 07:01:57.225
• [3.339 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 01/31/24 07:01:57.233
  Jan 31 07:01:57.233: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 07:01:57.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:01:57.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:01:57.256
  STEP: Creating a ResourceQuota @ 01/31/24 07:01:57.262
  STEP: Getting a ResourceQuota @ 01/31/24 07:01:57.267
  STEP: Updating a ResourceQuota @ 01/31/24 07:01:57.271
  STEP: Verifying a ResourceQuota was modified @ 01/31/24 07:01:57.277
  STEP: Deleting a ResourceQuota @ 01/31/24 07:01:57.28
  STEP: Verifying the deleted ResourceQuota @ 01/31/24 07:01:57.286
  Jan 31 07:01:57.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9729" for this suite. @ 01/31/24 07:01:57.294
• [0.069 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 01/31/24 07:01:57.302
  Jan 31 07:01:57.302: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 07:01:57.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:01:57.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:01:57.32
  STEP: Setting up server cert @ 01/31/24 07:01:57.344
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 07:01:57.865
  STEP: Deploying the webhook pod @ 01/31/24 07:01:57.873
  STEP: Wait for the deployment to be ready @ 01/31/24 07:01:57.887
  Jan 31 07:01:57.897: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/31/24 07:01:59.912
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 07:01:59.926
  Jan 31 07:02:00.927: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 01/31/24 07:02:00.936
  STEP: create a configmap that should be updated by the webhook @ 01/31/24 07:02:00.965
  Jan 31 07:02:01.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6530" for this suite. @ 01/31/24 07:02:01.026
  STEP: Destroying namespace "webhook-markers-8664" for this suite. @ 01/31/24 07:02:01.031
• [3.735 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 01/31/24 07:02:01.037
  Jan 31 07:02:01.037: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replication-controller @ 01/31/24 07:02:01.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:02:01.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:02:01.057
  STEP: creating a ReplicationController @ 01/31/24 07:02:01.066
  STEP: waiting for RC to be added @ 01/31/24 07:02:01.072
  STEP: waiting for available Replicas @ 01/31/24 07:02:01.072
  STEP: patching ReplicationController @ 01/31/24 07:02:02.358
  STEP: waiting for RC to be modified @ 01/31/24 07:02:02.372
  STEP: patching ReplicationController status @ 01/31/24 07:02:02.372
  STEP: waiting for RC to be modified @ 01/31/24 07:02:02.377
  STEP: waiting for available Replicas @ 01/31/24 07:02:02.378
  STEP: fetching ReplicationController status @ 01/31/24 07:02:02.383
  STEP: patching ReplicationController scale @ 01/31/24 07:02:02.386
  STEP: waiting for RC to be modified @ 01/31/24 07:02:02.392
  STEP: waiting for ReplicationController's scale to be the max amount @ 01/31/24 07:02:02.392
  STEP: fetching ReplicationController; ensuring that it's patched @ 01/31/24 07:02:03.347
  STEP: updating ReplicationController status @ 01/31/24 07:02:03.351
  STEP: waiting for RC to be modified @ 01/31/24 07:02:03.359
  STEP: listing all ReplicationControllers @ 01/31/24 07:02:03.359
  STEP: checking that ReplicationController has expected values @ 01/31/24 07:02:03.363
  STEP: deleting ReplicationControllers by collection @ 01/31/24 07:02:03.363
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 01/31/24 07:02:03.37
  Jan 31 07:02:03.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0131 07:02:03.414761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8345" for this suite. @ 01/31/24 07:02:03.419
• [2.388 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 01/31/24 07:02:03.425
  Jan 31 07:02:03.426: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename namespaces @ 01/31/24 07:02:03.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:02:03.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:02:03.443
  STEP: creating a Namespace @ 01/31/24 07:02:03.449
  STEP: patching the Namespace @ 01/31/24 07:02:03.461
  STEP: get the Namespace and ensuring it has the label @ 01/31/24 07:02:03.467
  Jan 31 07:02:03.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6642" for this suite. @ 01/31/24 07:02:03.476
  STEP: Destroying namespace "nspatchtest-c5328804-82c9-43c7-9fd7-48ea9a726daa-1090" for this suite. @ 01/31/24 07:02:03.481
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 01/31/24 07:02:03.491
  Jan 31 07:02:03.491: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sched-pred @ 01/31/24 07:02:03.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:02:03.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:02:03.511
  Jan 31 07:02:03.517: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan 31 07:02:03.526: INFO: Waiting for terminating namespaces to be deleted...
  Jan 31 07:02:03.530: INFO: 
  Logging pods the apiserver thinks is on node nodea08 before test
  Jan 31 07:02:03.539: INFO: kube-flannel-ds-kh6sw from kube-flannel started at 2024-01-30 10:24:14 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:03.539: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 31 07:02:03.539: INFO: kube-proxy-sn68b from kube-system started at 2024-01-30 08:42:19 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:03.539: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 31 07:02:03.539: INFO: rc-test-4qvdw from replication-controller-8345 started at 2024-01-31 07:02:01 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:03.539: INFO: 	Container rc-test ready: true, restart count 0
  Jan 31 07:02:03.539: INFO: sonobuoy from sonobuoy started at 2024-01-31 06:01:13 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:03.539: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan 31 07:02:03.539: INFO: sonobuoy-e2e-job-057bc96fa8de4553 from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 07:02:03.539: INFO: 	Container e2e ready: true, restart count 0
  Jan 31 07:02:03.539: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 07:02:03.539: INFO: sonobuoy-systemd-logs-daemon-set-b358b7ceaa5f4c01-zmssj from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 07:02:03.539: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 07:02:03.539: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan 31 07:02:03.539: INFO: 
  Logging pods the apiserver thinks is on node nodeb29 before test
  Jan 31 07:02:03.546: INFO: kube-flannel-ds-rh7j4 from kube-flannel started at 2024-01-30 08:42:26 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:03.546: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 31 07:02:03.546: INFO: kube-proxy-bd7d8 from kube-system started at 2024-01-30 08:42:26 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:03.546: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 31 07:02:03.546: INFO: rc-test-5vfk8 from replication-controller-8345 started at 2024-01-31 07:02:02 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:03.546: INFO: 	Container rc-test ready: true, restart count 0
  Jan 31 07:02:03.546: INFO: sonobuoy-systemd-logs-daemon-set-b358b7ceaa5f4c01-9bvwd from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 07:02:03.546: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 07:02:03.546: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node nodea08 @ 01/31/24 07:02:03.566
  STEP: verifying the node has the label node nodeb29 @ 01/31/24 07:02:03.581
  Jan 31 07:02:03.594: INFO: Pod kube-flannel-ds-kh6sw requesting resource cpu=100m on Node nodea08
  Jan 31 07:02:03.594: INFO: Pod kube-flannel-ds-rh7j4 requesting resource cpu=100m on Node nodeb29
  Jan 31 07:02:03.594: INFO: Pod kube-proxy-bd7d8 requesting resource cpu=0m on Node nodeb29
  Jan 31 07:02:03.594: INFO: Pod kube-proxy-sn68b requesting resource cpu=0m on Node nodea08
  Jan 31 07:02:03.594: INFO: Pod rc-test-4qvdw requesting resource cpu=0m on Node nodea08
  Jan 31 07:02:03.594: INFO: Pod rc-test-5vfk8 requesting resource cpu=0m on Node nodeb29
  Jan 31 07:02:03.594: INFO: Pod sonobuoy requesting resource cpu=0m on Node nodea08
  Jan 31 07:02:03.594: INFO: Pod sonobuoy-e2e-job-057bc96fa8de4553 requesting resource cpu=0m on Node nodea08
  Jan 31 07:02:03.594: INFO: Pod sonobuoy-systemd-logs-daemon-set-b358b7ceaa5f4c01-9bvwd requesting resource cpu=0m on Node nodeb29
  Jan 31 07:02:03.594: INFO: Pod sonobuoy-systemd-logs-daemon-set-b358b7ceaa5f4c01-zmssj requesting resource cpu=0m on Node nodea08
  STEP: Starting Pods to consume most of the cluster CPU. @ 01/31/24 07:02:03.594
  Jan 31 07:02:03.594: INFO: Creating a pod which consumes cpu=11130m on Node nodea08
  Jan 31 07:02:03.604: INFO: Creating a pod which consumes cpu=5530m on Node nodeb29
  E0131 07:02:04.415037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:05.415274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 01/31/24 07:02:05.625
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-23ef58d5-10c8-4c27-a34c-fb2bd279e3a7.17af5c8825b1d960], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2155/filler-pod-23ef58d5-10c8-4c27-a34c-fb2bd279e3a7 to nodeb29] @ 01/31/24 07:02:05.631
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-23ef58d5-10c8-4c27-a34c-fb2bd279e3a7.17af5c8844d8f8fc], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 01/31/24 07:02:05.631
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-23ef58d5-10c8-4c27-a34c-fb2bd279e3a7.17af5c8845ec5d29], Reason = [Created], Message = [Created container filler-pod-23ef58d5-10c8-4c27-a34c-fb2bd279e3a7] @ 01/31/24 07:02:05.631
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-23ef58d5-10c8-4c27-a34c-fb2bd279e3a7.17af5c884d28f246], Reason = [Started], Message = [Started container filler-pod-23ef58d5-10c8-4c27-a34c-fb2bd279e3a7] @ 01/31/24 07:02:05.631
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bbeab90f-6046-4eef-a33b-ace3829aae2b.17af5c882549c9d3], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2155/filler-pod-bbeab90f-6046-4eef-a33b-ace3829aae2b to nodea08] @ 01/31/24 07:02:05.631
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bbeab90f-6046-4eef-a33b-ace3829aae2b.17af5c88469a43fa], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 01/31/24 07:02:05.631
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bbeab90f-6046-4eef-a33b-ace3829aae2b.17af5c8847cc28b9], Reason = [Created], Message = [Created container filler-pod-bbeab90f-6046-4eef-a33b-ace3829aae2b] @ 01/31/24 07:02:05.631
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bbeab90f-6046-4eef-a33b-ace3829aae2b.17af5c884ed154e8], Reason = [Started], Message = [Started container filler-pod-bbeab90f-6046-4eef-a33b-ace3829aae2b] @ 01/31/24 07:02:05.631
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17af5c889e646fca], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod.] @ 01/31/24 07:02:05.647
  E0131 07:02:06.416500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node nodea08 @ 01/31/24 07:02:06.648
  STEP: verifying the node doesn't have the label node @ 01/31/24 07:02:06.663
  STEP: removing the label node off the node nodeb29 @ 01/31/24 07:02:06.667
  STEP: verifying the node doesn't have the label node @ 01/31/24 07:02:06.681
  Jan 31 07:02:06.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2155" for this suite. @ 01/31/24 07:02:06.689
• [3.205 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 01/31/24 07:02:06.696
  Jan 31 07:02:06.696: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename field-validation @ 01/31/24 07:02:06.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:02:06.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:02:06.714
  Jan 31 07:02:06.719: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  W0131 07:02:06.721002      23 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc003a65a20 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0131 07:02:07.417495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:08.417966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0131 07:02:09.289400      23 warnings.go:70] unknown field "alpha"
  W0131 07:02:09.289460      23 warnings.go:70] unknown field "beta"
  W0131 07:02:09.289473      23 warnings.go:70] unknown field "delta"
  W0131 07:02:09.289485      23 warnings.go:70] unknown field "epsilon"
  W0131 07:02:09.289496      23 warnings.go:70] unknown field "gamma"
  E0131 07:02:09.418214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:02:09.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1118" for this suite. @ 01/31/24 07:02:09.844
• [3.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 01/31/24 07:02:09.852
  Jan 31 07:02:09.852: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-webhook @ 01/31/24 07:02:09.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:02:09.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:02:09.877
  STEP: Setting up server cert @ 01/31/24 07:02:09.882
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/31/24 07:02:10.318
  STEP: Deploying the custom resource conversion webhook pod @ 01/31/24 07:02:10.325
  STEP: Wait for the deployment to be ready @ 01/31/24 07:02:10.339
  Jan 31 07:02:10.347: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0131 07:02:10.419001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:11.419199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/31/24 07:02:12.359
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 07:02:12.372
  E0131 07:02:12.419119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:02:13.373: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jan 31 07:02:13.382: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  E0131 07:02:13.419753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:14.420432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:15.421065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 01/31/24 07:02:15.95
  STEP: Create a v2 custom resource @ 01/31/24 07:02:15.973
  STEP: List CRs in v1 @ 01/31/24 07:02:16.022
  STEP: List CRs in v2 @ 01/31/24 07:02:16.028
  E0131 07:02:16.421361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:02:16.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-537" for this suite. @ 01/31/24 07:02:16.603
• [6.756 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 01/31/24 07:02:16.609
  Jan 31 07:02:16.609: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 07:02:16.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:02:16.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:02:16.629
  E0131 07:02:17.422557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:18.423147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:19.423665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:20.424860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:21.425287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:22.425591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:23.426251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:24.426438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:25.427010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:26.427743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:27.427842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:28.428096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:29.428972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:30.429123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:31.429353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:32.430548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:33.431669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/31/24 07:02:33.641
  E0131 07:02:34.431998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:35.432284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:36.432704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:37.433827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:38.434881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/31/24 07:02:38.652
  STEP: Ensuring resource quota status is calculated @ 01/31/24 07:02:38.659
  E0131 07:02:39.435174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:40.436286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 01/31/24 07:02:40.664
  STEP: Ensuring resource quota status captures configMap creation @ 01/31/24 07:02:40.68
  E0131 07:02:41.436534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:42.437139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 01/31/24 07:02:42.685
  STEP: Ensuring resource quota status released usage @ 01/31/24 07:02:42.691
  E0131 07:02:43.437917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:44.438742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:02:44.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4495" for this suite. @ 01/31/24 07:02:44.704
• [28.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 01/31/24 07:02:44.714
  Jan 31 07:02:44.714: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sched-pred @ 01/31/24 07:02:44.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:02:44.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:02:44.735
  Jan 31 07:02:44.741: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan 31 07:02:44.751: INFO: Waiting for terminating namespaces to be deleted...
  Jan 31 07:02:44.755: INFO: 
  Logging pods the apiserver thinks is on node nodea08 before test
  Jan 31 07:02:44.763: INFO: kube-flannel-ds-kh6sw from kube-flannel started at 2024-01-30 10:24:14 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:44.763: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 31 07:02:44.764: INFO: kube-proxy-sn68b from kube-system started at 2024-01-30 08:42:19 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:44.764: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 31 07:02:44.764: INFO: sonobuoy from sonobuoy started at 2024-01-31 06:01:13 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:44.764: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan 31 07:02:44.764: INFO: sonobuoy-e2e-job-057bc96fa8de4553 from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 07:02:44.764: INFO: 	Container e2e ready: true, restart count 0
  Jan 31 07:02:44.764: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 07:02:44.765: INFO: sonobuoy-systemd-logs-daemon-set-b358b7ceaa5f4c01-zmssj from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 07:02:44.765: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 07:02:44.765: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan 31 07:02:44.765: INFO: 
  Logging pods the apiserver thinks is on node nodeb29 before test
  Jan 31 07:02:44.772: INFO: kube-flannel-ds-rh7j4 from kube-flannel started at 2024-01-30 08:42:26 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:44.772: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 31 07:02:44.772: INFO: kube-proxy-bd7d8 from kube-system started at 2024-01-30 08:42:26 +0000 UTC (1 container statuses recorded)
  Jan 31 07:02:44.772: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 31 07:02:44.772: INFO: sonobuoy-systemd-logs-daemon-set-b358b7ceaa5f4c01-9bvwd from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 07:02:44.772: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 07:02:44.772: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/31/24 07:02:44.772
  E0131 07:02:45.438914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:46.439057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/31/24 07:02:46.795
  STEP: Trying to apply a random label on the found node. @ 01/31/24 07:02:46.814
  STEP: verifying the node has the label kubernetes.io/e2e-dac3a2fe-dcf4-44a4-ad4a-fded50101192 95 @ 01/31/24 07:02:46.828
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 01/31/24 07:02:46.832
  E0131 07:02:47.439593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:48.440575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.100.28 on the node which pod4 resides and expect not scheduled @ 01/31/24 07:02:48.847
  E0131 07:02:49.440820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:50.441112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:51.442346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:52.442981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:53.443378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:54.444006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:55.445037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:56.445858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:57.446240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:58.446765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:02:59.446837      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:00.447379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:01.447852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:02.448404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:03.449086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:04.449676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:05.449851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:06.449994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:07.450826      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:08.451128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:09.451989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:10.452579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:11.452648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:12.452880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:13.453154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:14.453447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:15.454385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:16.454669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:17.454927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:18.455222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:19.455731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:20.456241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:21.456597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:22.457222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:23.457469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:24.458160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:25.458663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:26.458712      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:27.459789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:28.460306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:29.460528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:30.461114      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:31.462033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:32.462711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:33.463608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:34.464162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:35.464287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:36.464455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:37.465292      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:38.465855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:39.466851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:40.467499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:41.467842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:42.468451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:43.468644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:44.469261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:45.469880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:46.470748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:47.471087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:48.471669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:49.472649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:50.473294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:51.473773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:52.474387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:53.474650      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:54.474949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:55.476039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:56.476849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:57.477588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:58.478244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:03:59.478587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:00.479273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:01.479388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:02.479945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:03.480377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:04.480916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:05.481024      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:06.481937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:07.482890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:08.483490      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:09.483831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:10.485036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:11.485085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:12.485628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:13.485835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:14.486191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:15.486430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:16.487397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:17.488431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:18.488997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:19.489250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:20.490161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:21.490468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:22.490695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:23.491588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:24.492113      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:25.493130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:26.493362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:27.494274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:28.494577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:29.494898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:30.495473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:31.496174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:32.496711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:33.497636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:34.497899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:35.498301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:36.499340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:37.499586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:38.500071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:39.500961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:40.501943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:41.502080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:42.503163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:43.503627      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:44.503979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:45.504172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:46.505192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:47.505918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:48.506476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:49.506704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:50.507030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:51.508155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:52.508678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:53.509348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:54.509682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:55.510605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:56.511647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:57.512826      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:58.513333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:04:59.514402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:00.514695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:01.515801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:02.516445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:03.516956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:04.517521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:05.518672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:06.518959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:07.519570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:08.520099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:09.520674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:10.521185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:11.521998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:12.522582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:13.522616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:14.522985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:15.524221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:16.525224      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:17.526160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:18.526764      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:19.527505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:20.527886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:21.528178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:22.528726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:23.529486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:24.530036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:25.530146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:26.530414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:27.530652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:28.531177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:29.531609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:30.532201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:31.532658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:32.533214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:33.533293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:34.533727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:35.534587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:36.535631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:37.535816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:38.536351      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:39.536483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:40.537021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:41.537608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:42.538180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:43.538273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:44.538718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:45.539623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:46.540636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:47.541712      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:48.542205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:49.543042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:50.543542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:51.543608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:52.544143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:53.544669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:54.545198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:55.545824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:56.546870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:57.547773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:58.548330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:05:59.549148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:00.549677      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:01.550268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:02.550814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:03.551318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:04.551903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:05.552567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:06.553624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:07.554261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:08.554842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:09.554883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:10.556410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:11.556449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:12.556991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:13.557377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:14.558287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:15.558793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:16.559768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:17.560271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:18.560889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:19.561360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:20.561927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:21.562852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:22.563415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:23.564330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:24.564897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:25.565009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:26.565875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:27.565972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:28.566479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:29.567225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:30.567758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:31.568253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:32.568748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:33.569856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:34.570393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:35.571502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:36.572526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:37.573188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:38.573687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:39.574279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:40.574815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:41.575634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:42.576161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:43.576800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:44.577336      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:45.577445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:46.577704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:47.578208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:48.579058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:49.579932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:50.581108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:51.582322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:52.582933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:53.583793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:54.584379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:55.584481      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:56.584877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:57.585397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:58.586428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:06:59.587037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:00.587686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:01.588627      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:02.589029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:03.589505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:04.589859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:05.590029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:06.591018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:07.591672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:08.592206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:09.592807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:10.593707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:11.593954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:12.594906      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:13.595455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:14.595657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:15.596679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:16.597199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:17.597797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:18.598948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:19.599524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:20.600571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:21.601555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:22.602507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:23.602994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:24.603521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:25.604516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:26.604615      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:27.605202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:28.606007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:29.606618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:30.607495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:31.608608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:32.608702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:33.609281      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:34.609783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:35.610010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:36.610806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:37.611445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:38.611831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:39.612405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:40.613411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:41.614524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:42.614868      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:43.615389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:44.615601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:45.615877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:46.617013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:47.617846      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:48.618534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-dac3a2fe-dcf4-44a4-ad4a-fded50101192 off the node nodea08 @ 01/31/24 07:07:48.86
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-dac3a2fe-dcf4-44a4-ad4a-fded50101192 @ 01/31/24 07:07:48.881
  Jan 31 07:07:48.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6890" for this suite. @ 01/31/24 07:07:48.891
• [304.182 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 01/31/24 07:07:48.897
  Jan 31 07:07:48.897: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 07:07:48.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:07:48.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:07:48.917
  STEP: Setting up server cert @ 01/31/24 07:07:48.94
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 07:07:49.367
  STEP: Deploying the webhook pod @ 01/31/24 07:07:49.38
  STEP: Wait for the deployment to be ready @ 01/31/24 07:07:49.395
  Jan 31 07:07:49.404: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0131 07:07:49.619279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:50.619600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/31/24 07:07:51.419
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 07:07:51.433
  E0131 07:07:51.620135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:07:52.433: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan 31 07:07:52.444: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  E0131 07:07:52.620647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 01/31/24 07:07:52.959
  STEP: Creating a custom resource that should be denied by the webhook @ 01/31/24 07:07:52.991
  E0131 07:07:53.620761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:54.621359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 01/31/24 07:07:55.033
  STEP: Updating the custom resource with disallowed data should be denied @ 01/31/24 07:07:55.043
  STEP: Deleting the custom resource should be denied @ 01/31/24 07:07:55.055
  STEP: Remove the offending key and value from the custom resource data @ 01/31/24 07:07:55.063
  STEP: Deleting the updated custom resource should be successful @ 01/31/24 07:07:55.075
  E0131 07:07:55.622408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:07:55.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3634" for this suite. @ 01/31/24 07:07:55.642
  STEP: Destroying namespace "webhook-markers-7897" for this suite. @ 01/31/24 07:07:55.656
• [6.765 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 01/31/24 07:07:55.662
  Jan 31 07:07:55.663: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename taint-single-pod @ 01/31/24 07:07:55.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:07:55.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:07:55.683
  Jan 31 07:07:55.687: INFO: Waiting up to 1m0s for all nodes to be ready
  E0131 07:07:56.623158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:57.623772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:58.624129      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:07:59.624729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:00.625338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:01.626320      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:02.626496      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:03.627032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:04.627842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:05.628838      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:06.629728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:07.630364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:08.630845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:09.631413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:10.632686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:11.632260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:12.633352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:13.633928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:14.634402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:15.634553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:16.635660      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:17.636272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:18.636928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:19.637807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:20.638179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:21.639042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:22.639314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:23.640237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:24.641195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:25.641558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:26.642711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:27.643180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:28.643450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:29.644016      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:30.645091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:31.645691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:32.646532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:33.647242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:34.648175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:35.648608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:36.649737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:37.650414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:38.650911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:39.651448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:40.652446      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:41.652985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:42.653403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:43.654047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:44.655212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:45.655974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:46.656199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:47.656733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:48.657592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:49.658193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:50.658335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:51.659003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:52.659210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:53.659810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:54.660094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:55.660226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:08:55.688: INFO: Waiting for terminating namespaces to be deleted...
  Jan 31 07:08:55.693: INFO: Starting informer...
  STEP: Starting pod... @ 01/31/24 07:08:55.693
  Jan 31 07:08:55.913: INFO: Pod is running on nodea08. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/31/24 07:08:55.913
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/31/24 07:08:55.934
  STEP: Waiting short time to make sure Pod is queued for deletion @ 01/31/24 07:08:55.939
  Jan 31 07:08:55.939: INFO: Pod wasn't evicted. Proceeding
  Jan 31 07:08:55.939: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/31/24 07:08:55.96
  STEP: Waiting some time to make sure that toleration time passed. @ 01/31/24 07:08:55.964
  E0131 07:08:56.660348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:57.660823      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:58.661504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:08:59.662055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:00.663387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:01.663985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:02.664623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:03.665273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:04.665920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:05.666276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:06.666897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:07.667424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:08.667893      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:09.668373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:10.669464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:11.669984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:12.670542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:13.671153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:14.671698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:15.671857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:16.672452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:17.673027      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:18.674018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:19.676313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:20.675414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:21.675904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:22.676568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:23.677174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:24.677674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:25.678847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:26.679429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:27.679751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:28.680423      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:29.681006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:30.682143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:31.682833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:32.683387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:33.683963      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:34.684600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:35.684993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:36.685533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:37.686244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:38.686944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:39.687498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:40.688381      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:41.688912      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:42.689449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:43.689953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:44.690587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:45.690700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:46.691165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:47.691727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:48.692305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:49.692905      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:50.692956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:51.693482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:52.694155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:53.694792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:54.695324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:55.696203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:56.696736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:57.697218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:58.697809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:09:59.698445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:00.699459      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:01.699979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:02.700518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:03.700989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:04.701468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:05.701636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:06.701971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:07.702528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:08.702774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:09.703081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:10.703378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:10:10.964: INFO: Pod wasn't evicted. Test successful
  Jan 31 07:10:10.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-472" for this suite. @ 01/31/24 07:10:10.972
• [135.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 01/31/24 07:10:10.98
  Jan 31 07:10:10.980: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 07:10:10.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:10:10.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:10:11
  STEP: Creating configMap with name cm-test-opt-del-d4caed23-9e9b-4287-9e6f-cdda2b8839c4 @ 01/31/24 07:10:11.01
  STEP: Creating configMap with name cm-test-opt-upd-3e4aea5b-d843-4a11-a741-f4743f540748 @ 01/31/24 07:10:11.016
  STEP: Creating the pod @ 01/31/24 07:10:11.021
  E0131 07:10:11.704212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:12.704820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-d4caed23-9e9b-4287-9e6f-cdda2b8839c4 @ 01/31/24 07:10:13.082
  STEP: Updating configmap cm-test-opt-upd-3e4aea5b-d843-4a11-a741-f4743f540748 @ 01/31/24 07:10:13.087
  STEP: Creating configMap with name cm-test-opt-create-5d4b3f6c-2431-4a02-afb8-20550430bc60 @ 01/31/24 07:10:13.092
  STEP: waiting to observe update in volume @ 01/31/24 07:10:13.096
  E0131 07:10:13.705341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:14.705955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:15.706941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:16.707435      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:10:17.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8841" for this suite. @ 01/31/24 07:10:17.146
• [6.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 01/31/24 07:10:17.154
  Jan 31 07:10:17.154: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 01/31/24 07:10:17.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:10:17.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:10:17.176
  STEP: Setting up the test @ 01/31/24 07:10:17.181
  STEP: Creating hostNetwork=false pod @ 01/31/24 07:10:17.181
  E0131 07:10:17.708550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:18.709207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 01/31/24 07:10:19.207
  E0131 07:10:19.709450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:20.710492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 01/31/24 07:10:21.23
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 01/31/24 07:10:21.23
  Jan 31 07:10:21.230: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4459 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:10:21.230: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:10:21.231: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:10:21.231: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4459/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jan 31 07:10:21.333: INFO: Exec stderr: ""
  Jan 31 07:10:21.333: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4459 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:10:21.333: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:10:21.334: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:10:21.334: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4459/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jan 31 07:10:21.438: INFO: Exec stderr: ""
  Jan 31 07:10:21.438: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4459 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:10:21.438: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:10:21.439: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:10:21.439: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4459/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan 31 07:10:21.531: INFO: Exec stderr: ""
  Jan 31 07:10:21.531: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4459 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:10:21.531: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:10:21.532: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:10:21.532: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4459/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan 31 07:10:21.645: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 01/31/24 07:10:21.645
  Jan 31 07:10:21.645: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4459 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:10:21.645: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:10:21.646: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:10:21.646: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4459/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E0131 07:10:21.710527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:10:21.748: INFO: Exec stderr: ""
  Jan 31 07:10:21.748: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4459 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:10:21.748: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:10:21.749: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:10:21.749: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4459/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jan 31 07:10:21.847: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 01/31/24 07:10:21.847
  Jan 31 07:10:21.847: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4459 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:10:21.847: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:10:21.848: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:10:21.848: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4459/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jan 31 07:10:21.983: INFO: Exec stderr: ""
  Jan 31 07:10:21.983: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4459 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:10:21.983: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:10:21.984: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:10:21.984: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4459/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jan 31 07:10:22.115: INFO: Exec stderr: ""
  Jan 31 07:10:22.115: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4459 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:10:22.115: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:10:22.116: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:10:22.116: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4459/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan 31 07:10:22.217: INFO: Exec stderr: ""
  Jan 31 07:10:22.217: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4459 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:10:22.217: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:10:22.218: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:10:22.218: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4459/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan 31 07:10:22.312: INFO: Exec stderr: ""
  Jan 31 07:10:22.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4459" for this suite. @ 01/31/24 07:10:22.317
• [5.170 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 01/31/24 07:10:22.324
  Jan 31 07:10:22.324: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pods @ 01/31/24 07:10:22.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:10:22.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:10:22.341
  E0131 07:10:22.711588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:23.712128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:24.712878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:25.713129      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:26.714015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:27.714634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:10:28.404
  Jan 31 07:10:28.408: INFO: Trying to get logs from node nodea08 pod client-envvars-c0e10216-aa61-4abc-870d-731c958dfeef container env3cont: <nil>
  STEP: delete the pod @ 01/31/24 07:10:28.418
  Jan 31 07:10:28.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4272" for this suite. @ 01/31/24 07:10:28.44
• [6.122 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 01/31/24 07:10:28.446
  Jan 31 07:10:28.446: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-runtime @ 01/31/24 07:10:28.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:10:28.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:10:28.465
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 01/31/24 07:10:28.479
  E0131 07:10:28.714733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:29.714847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:30.715103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:31.715706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:32.716665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:33.717333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:34.717927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:35.718871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:36.718938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:37.719193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:38.719785      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:39.720452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:40.721112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:41.721736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:42.721860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:43.722426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:44.723457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:45.724410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:46.725176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 01/31/24 07:10:47.595
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 01/31/24 07:10:47.599
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 01/31/24 07:10:47.607
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 01/31/24 07:10:47.607
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 01/31/24 07:10:47.636
  E0131 07:10:47.725948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:48.726752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:49.727916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 01/31/24 07:10:50.658
  E0131 07:10:50.728911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 01/31/24 07:10:51.669
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 01/31/24 07:10:51.678
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 01/31/24 07:10:51.678
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 01/31/24 07:10:51.701
  E0131 07:10:51.729133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 01/31/24 07:10:52.711
  E0131 07:10:52.729980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:53.730643      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 01/31/24 07:10:54.726
  E0131 07:10:54.731294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 01/31/24 07:10:54.734
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 01/31/24 07:10:54.734
  Jan 31 07:10:54.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7481" for this suite. @ 01/31/24 07:10:54.763
• [26.324 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 01/31/24 07:10:54.771
  Jan 31 07:10:54.771: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename gc @ 01/31/24 07:10:54.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:10:54.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:10:54.79
  STEP: create the rc @ 01/31/24 07:10:54.799
  W0131 07:10:54.806154      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0131 07:10:55.731871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:56.732399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:57.733341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:58.734332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:10:59.734503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:00.735288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/31/24 07:11:00.812
  STEP: wait for the rc to be deleted @ 01/31/24 07:11:00.823
  E0131 07:11:01.735859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:02.735919      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:03.736199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:04.736675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:05.737258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 01/31/24 07:11:05.829
  E0131 07:11:06.737709      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:07.738586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:08.739310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:09.739847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:10.740858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:11.741322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:12.741802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:13.742316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:14.743440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:15.747440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:16.744155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:17.744799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:18.745546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:19.746247      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:20.747263      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:21.747745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:22.748284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:23.748768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:24.749778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:25.749959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:26.750522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:27.751145      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:28.751698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:29.752452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:30.752660      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:31.753199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:32.753933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:33.754428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:34.755463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:35.756363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/31/24 07:11:35.854
  Jan 31 07:11:35.983: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 31 07:11:35.983: INFO: Deleting pod "simpletest.rc-2xshp" in namespace "gc-9478"
  Jan 31 07:11:35.995: INFO: Deleting pod "simpletest.rc-4br48" in namespace "gc-9478"
  Jan 31 07:11:36.007: INFO: Deleting pod "simpletest.rc-4cg9g" in namespace "gc-9478"
  Jan 31 07:11:36.015: INFO: Deleting pod "simpletest.rc-4gptf" in namespace "gc-9478"
  Jan 31 07:11:36.026: INFO: Deleting pod "simpletest.rc-4stg9" in namespace "gc-9478"
  Jan 31 07:11:36.034: INFO: Deleting pod "simpletest.rc-4xdqm" in namespace "gc-9478"
  Jan 31 07:11:36.042: INFO: Deleting pod "simpletest.rc-5bfdd" in namespace "gc-9478"
  Jan 31 07:11:36.050: INFO: Deleting pod "simpletest.rc-5r9jm" in namespace "gc-9478"
  Jan 31 07:11:36.060: INFO: Deleting pod "simpletest.rc-5th96" in namespace "gc-9478"
  Jan 31 07:11:36.069: INFO: Deleting pod "simpletest.rc-5zp28" in namespace "gc-9478"
  Jan 31 07:11:36.078: INFO: Deleting pod "simpletest.rc-6fnlw" in namespace "gc-9478"
  Jan 31 07:11:36.087: INFO: Deleting pod "simpletest.rc-6t9rv" in namespace "gc-9478"
  Jan 31 07:11:36.097: INFO: Deleting pod "simpletest.rc-7cnrf" in namespace "gc-9478"
  Jan 31 07:11:36.105: INFO: Deleting pod "simpletest.rc-7fxkm" in namespace "gc-9478"
  Jan 31 07:11:36.117: INFO: Deleting pod "simpletest.rc-7l6pr" in namespace "gc-9478"
  Jan 31 07:11:36.128: INFO: Deleting pod "simpletest.rc-7mtmn" in namespace "gc-9478"
  Jan 31 07:11:36.140: INFO: Deleting pod "simpletest.rc-7nrxm" in namespace "gc-9478"
  Jan 31 07:11:36.152: INFO: Deleting pod "simpletest.rc-7pz9z" in namespace "gc-9478"
  Jan 31 07:11:36.162: INFO: Deleting pod "simpletest.rc-7thg7" in namespace "gc-9478"
  Jan 31 07:11:36.171: INFO: Deleting pod "simpletest.rc-7wzc7" in namespace "gc-9478"
  Jan 31 07:11:36.186: INFO: Deleting pod "simpletest.rc-7zwl9" in namespace "gc-9478"
  Jan 31 07:11:36.195: INFO: Deleting pod "simpletest.rc-8b7wh" in namespace "gc-9478"
  Jan 31 07:11:36.234: INFO: Deleting pod "simpletest.rc-8ss7f" in namespace "gc-9478"
  Jan 31 07:11:36.244: INFO: Deleting pod "simpletest.rc-8tpvj" in namespace "gc-9478"
  Jan 31 07:11:36.265: INFO: Deleting pod "simpletest.rc-8z5qs" in namespace "gc-9478"
  Jan 31 07:11:36.277: INFO: Deleting pod "simpletest.rc-98v97" in namespace "gc-9478"
  Jan 31 07:11:36.285: INFO: Deleting pod "simpletest.rc-9dp4z" in namespace "gc-9478"
  Jan 31 07:11:36.298: INFO: Deleting pod "simpletest.rc-9vrgl" in namespace "gc-9478"
  Jan 31 07:11:36.309: INFO: Deleting pod "simpletest.rc-b452k" in namespace "gc-9478"
  Jan 31 07:11:36.322: INFO: Deleting pod "simpletest.rc-bbdkr" in namespace "gc-9478"
  Jan 31 07:11:36.332: INFO: Deleting pod "simpletest.rc-bjczt" in namespace "gc-9478"
  Jan 31 07:11:36.345: INFO: Deleting pod "simpletest.rc-bpr5c" in namespace "gc-9478"
  Jan 31 07:11:36.360: INFO: Deleting pod "simpletest.rc-c68ql" in namespace "gc-9478"
  Jan 31 07:11:36.373: INFO: Deleting pod "simpletest.rc-c9shm" in namespace "gc-9478"
  Jan 31 07:11:36.383: INFO: Deleting pod "simpletest.rc-cc4qp" in namespace "gc-9478"
  Jan 31 07:11:36.392: INFO: Deleting pod "simpletest.rc-chql2" in namespace "gc-9478"
  Jan 31 07:11:36.401: INFO: Deleting pod "simpletest.rc-cqdrc" in namespace "gc-9478"
  Jan 31 07:11:36.412: INFO: Deleting pod "simpletest.rc-crqtd" in namespace "gc-9478"
  Jan 31 07:11:36.420: INFO: Deleting pod "simpletest.rc-cv2b9" in namespace "gc-9478"
  Jan 31 07:11:36.428: INFO: Deleting pod "simpletest.rc-cxtfh" in namespace "gc-9478"
  Jan 31 07:11:36.436: INFO: Deleting pod "simpletest.rc-d6v2s" in namespace "gc-9478"
  Jan 31 07:11:36.444: INFO: Deleting pod "simpletest.rc-f2xtq" in namespace "gc-9478"
  Jan 31 07:11:36.455: INFO: Deleting pod "simpletest.rc-f6vlv" in namespace "gc-9478"
  Jan 31 07:11:36.463: INFO: Deleting pod "simpletest.rc-fbndd" in namespace "gc-9478"
  Jan 31 07:11:36.473: INFO: Deleting pod "simpletest.rc-fhvff" in namespace "gc-9478"
  Jan 31 07:11:36.481: INFO: Deleting pod "simpletest.rc-fnbt2" in namespace "gc-9478"
  Jan 31 07:11:36.492: INFO: Deleting pod "simpletest.rc-fnkfv" in namespace "gc-9478"
  Jan 31 07:11:36.504: INFO: Deleting pod "simpletest.rc-ghwpc" in namespace "gc-9478"
  Jan 31 07:11:36.517: INFO: Deleting pod "simpletest.rc-gl2qc" in namespace "gc-9478"
  Jan 31 07:11:36.528: INFO: Deleting pod "simpletest.rc-glgdl" in namespace "gc-9478"
  Jan 31 07:11:36.537: INFO: Deleting pod "simpletest.rc-gp697" in namespace "gc-9478"
  Jan 31 07:11:36.547: INFO: Deleting pod "simpletest.rc-hbgzd" in namespace "gc-9478"
  Jan 31 07:11:36.557: INFO: Deleting pod "simpletest.rc-hnmlc" in namespace "gc-9478"
  Jan 31 07:11:36.569: INFO: Deleting pod "simpletest.rc-j2zr4" in namespace "gc-9478"
  Jan 31 07:11:36.577: INFO: Deleting pod "simpletest.rc-j96fw" in namespace "gc-9478"
  Jan 31 07:11:36.590: INFO: Deleting pod "simpletest.rc-jjmcs" in namespace "gc-9478"
  Jan 31 07:11:36.598: INFO: Deleting pod "simpletest.rc-kfm2h" in namespace "gc-9478"
  Jan 31 07:11:36.609: INFO: Deleting pod "simpletest.rc-kfpk2" in namespace "gc-9478"
  Jan 31 07:11:36.617: INFO: Deleting pod "simpletest.rc-kftw2" in namespace "gc-9478"
  Jan 31 07:11:36.628: INFO: Deleting pod "simpletest.rc-khq8s" in namespace "gc-9478"
  Jan 31 07:11:36.640: INFO: Deleting pod "simpletest.rc-kn5ml" in namespace "gc-9478"
  Jan 31 07:11:36.650: INFO: Deleting pod "simpletest.rc-knthb" in namespace "gc-9478"
  Jan 31 07:11:36.664: INFO: Deleting pod "simpletest.rc-ldbnv" in namespace "gc-9478"
  Jan 31 07:11:36.692: INFO: Deleting pod "simpletest.rc-lqgkx" in namespace "gc-9478"
  Jan 31 07:11:36.742: INFO: Deleting pod "simpletest.rc-lqjrz" in namespace "gc-9478"
  E0131 07:11:36.757287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:11:36.790: INFO: Deleting pod "simpletest.rc-lqpbt" in namespace "gc-9478"
  Jan 31 07:11:36.842: INFO: Deleting pod "simpletest.rc-lxjpv" in namespace "gc-9478"
  Jan 31 07:11:36.891: INFO: Deleting pod "simpletest.rc-m4fm7" in namespace "gc-9478"
  Jan 31 07:11:36.942: INFO: Deleting pod "simpletest.rc-mg9nm" in namespace "gc-9478"
  Jan 31 07:11:36.992: INFO: Deleting pod "simpletest.rc-mkp4l" in namespace "gc-9478"
  Jan 31 07:11:37.042: INFO: Deleting pod "simpletest.rc-mlkgm" in namespace "gc-9478"
  Jan 31 07:11:37.091: INFO: Deleting pod "simpletest.rc-mrr9s" in namespace "gc-9478"
  Jan 31 07:11:37.144: INFO: Deleting pod "simpletest.rc-ms6xw" in namespace "gc-9478"
  Jan 31 07:11:37.193: INFO: Deleting pod "simpletest.rc-mslns" in namespace "gc-9478"
  Jan 31 07:11:37.241: INFO: Deleting pod "simpletest.rc-nxxfc" in namespace "gc-9478"
  Jan 31 07:11:37.290: INFO: Deleting pod "simpletest.rc-pgd47" in namespace "gc-9478"
  Jan 31 07:11:37.342: INFO: Deleting pod "simpletest.rc-pgxbn" in namespace "gc-9478"
  Jan 31 07:11:37.388: INFO: Deleting pod "simpletest.rc-rkkdk" in namespace "gc-9478"
  Jan 31 07:11:37.441: INFO: Deleting pod "simpletest.rc-rqq5f" in namespace "gc-9478"
  Jan 31 07:11:37.492: INFO: Deleting pod "simpletest.rc-s9jg8" in namespace "gc-9478"
  Jan 31 07:11:37.547: INFO: Deleting pod "simpletest.rc-sjblx" in namespace "gc-9478"
  Jan 31 07:11:37.589: INFO: Deleting pod "simpletest.rc-slsqh" in namespace "gc-9478"
  Jan 31 07:11:37.644: INFO: Deleting pod "simpletest.rc-sx8zm" in namespace "gc-9478"
  Jan 31 07:11:37.691: INFO: Deleting pod "simpletest.rc-t94xq" in namespace "gc-9478"
  Jan 31 07:11:37.740: INFO: Deleting pod "simpletest.rc-tbhrk" in namespace "gc-9478"
  E0131 07:11:37.757324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:11:37.793: INFO: Deleting pod "simpletest.rc-tfx5l" in namespace "gc-9478"
  Jan 31 07:11:37.845: INFO: Deleting pod "simpletest.rc-tlfsq" in namespace "gc-9478"
  Jan 31 07:11:37.894: INFO: Deleting pod "simpletest.rc-v28jc" in namespace "gc-9478"
  Jan 31 07:11:37.941: INFO: Deleting pod "simpletest.rc-vsp2g" in namespace "gc-9478"
  Jan 31 07:11:37.994: INFO: Deleting pod "simpletest.rc-wbcgt" in namespace "gc-9478"
  Jan 31 07:11:38.041: INFO: Deleting pod "simpletest.rc-xfrw5" in namespace "gc-9478"
  Jan 31 07:11:38.088: INFO: Deleting pod "simpletest.rc-xz4wm" in namespace "gc-9478"
  Jan 31 07:11:38.143: INFO: Deleting pod "simpletest.rc-z4wdf" in namespace "gc-9478"
  Jan 31 07:11:38.194: INFO: Deleting pod "simpletest.rc-z85ht" in namespace "gc-9478"
  Jan 31 07:11:38.243: INFO: Deleting pod "simpletest.rc-zcccd" in namespace "gc-9478"
  Jan 31 07:11:38.291: INFO: Deleting pod "simpletest.rc-zj55q" in namespace "gc-9478"
  Jan 31 07:11:38.345: INFO: Deleting pod "simpletest.rc-zl99r" in namespace "gc-9478"
  Jan 31 07:11:38.390: INFO: Deleting pod "simpletest.rc-zrkfs" in namespace "gc-9478"
  Jan 31 07:11:38.440: INFO: Deleting pod "simpletest.rc-zw2rx" in namespace "gc-9478"
  Jan 31 07:11:38.489: INFO: Deleting pod "simpletest.rc-zxd62" in namespace "gc-9478"
  Jan 31 07:11:38.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9478" for this suite. @ 01/31/24 07:11:38.585
• [43.865 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 01/31/24 07:11:38.637
  Jan 31 07:11:38.637: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename statefulset @ 01/31/24 07:11:38.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:11:38.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:11:38.654
  STEP: Creating service test in namespace statefulset-6446 @ 01/31/24 07:11:38.658
  STEP: Creating statefulset ss in namespace statefulset-6446 @ 01/31/24 07:11:38.666
  Jan 31 07:11:38.674: INFO: Found 0 stateful pods, waiting for 1
  E0131 07:11:38.758139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:39.759293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:40.760511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:41.761508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:42.762178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:43.762876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:44.763856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:45.764968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:46.765914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:47.766492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:11:48.679: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 01/31/24 07:11:48.691
  STEP: Getting /status @ 01/31/24 07:11:48.699
  Jan 31 07:11:48.705: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 01/31/24 07:11:48.705
  Jan 31 07:11:48.718: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 01/31/24 07:11:48.718
  Jan 31 07:11:48.721: INFO: Observed &StatefulSet event: ADDED
  Jan 31 07:11:48.721: INFO: Found Statefulset ss in namespace statefulset-6446 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 31 07:11:48.721: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 01/31/24 07:11:48.721
  Jan 31 07:11:48.721: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jan 31 07:11:48.729: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 01/31/24 07:11:48.73
  Jan 31 07:11:48.733: INFO: Observed &StatefulSet event: ADDED
  Jan 31 07:11:48.733: INFO: Deleting all statefulset in ns statefulset-6446
  Jan 31 07:11:48.737: INFO: Scaling statefulset ss to 0
  E0131 07:11:48.766579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:49.767448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:50.768566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:51.768792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:52.769499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:53.770138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:54.770147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:55.771268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:56.771492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:11:57.772067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:11:58.755: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 31 07:11:58.760: INFO: Deleting statefulset ss
  E0131 07:11:58.772669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:11:58.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6446" for this suite. @ 01/31/24 07:11:58.781
• [20.150 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 01/31/24 07:11:58.788
  Jan 31 07:11:58.788: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 07:11:58.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:11:58.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:11:58.811
  STEP: creating a secret @ 01/31/24 07:11:58.817
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 01/31/24 07:11:58.822
  STEP: patching the secret @ 01/31/24 07:11:58.826
  STEP: deleting the secret using a LabelSelector @ 01/31/24 07:11:58.838
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 01/31/24 07:11:58.848
  Jan 31 07:11:58.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6170" for this suite. @ 01/31/24 07:11:58.862
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 01/31/24 07:11:58.869
  Jan 31 07:11:58.869: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/31/24 07:11:58.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:11:58.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:11:58.888
  STEP: fetching the /apis discovery document @ 01/31/24 07:11:58.894
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 01/31/24 07:11:58.896
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 01/31/24 07:11:58.896
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 01/31/24 07:11:58.896
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 01/31/24 07:11:58.899
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 01/31/24 07:11:58.899
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 01/31/24 07:11:58.901
  Jan 31 07:11:58.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4766" for this suite. @ 01/31/24 07:11:58.906
• [0.044 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 01/31/24 07:11:58.913
  Jan 31 07:11:58.913: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename podtemplate @ 01/31/24 07:11:58.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:11:58.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:11:58.931
  STEP: Create a pod template @ 01/31/24 07:11:58.936
  STEP: Replace a pod template @ 01/31/24 07:11:58.942
  Jan 31 07:11:58.952: INFO: Found updated podtemplate annotation: "true"

  Jan 31 07:11:58.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6348" for this suite. @ 01/31/24 07:11:58.957
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 01/31/24 07:11:58.963
  Jan 31 07:11:58.963: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename dns @ 01/31/24 07:11:58.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:11:58.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:11:58.982
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5021.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-5021.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 01/31/24 07:11:58.986
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5021.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5021.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 01/31/24 07:11:58.987
  STEP: creating a pod to probe /etc/hosts @ 01/31/24 07:11:58.987
  STEP: submitting the pod to kubernetes @ 01/31/24 07:11:58.987
  E0131 07:11:59.773801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:00.774484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/31/24 07:12:01.01
  STEP: looking for the results for each expected name from probers @ 01/31/24 07:12:01.014
  Jan 31 07:12:01.038: INFO: DNS probes using dns-5021/dns-test-4a93bf6a-31eb-4fb1-85ba-38f81b8f055c succeeded

  STEP: deleting the pod @ 01/31/24 07:12:01.038
  Jan 31 07:12:01.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5021" for this suite. @ 01/31/24 07:12:01.057
• [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 01/31/24 07:12:01.065
  Jan 31 07:12:01.066: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename field-validation @ 01/31/24 07:12:01.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:01.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:01.088
  Jan 31 07:12:01.092: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  E0131 07:12:01.774498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:02.775771      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0131 07:12:03.660039      23 warnings.go:70] unknown field "alpha"
  W0131 07:12:03.660115      23 warnings.go:70] unknown field "beta"
  W0131 07:12:03.660196      23 warnings.go:70] unknown field "delta"
  W0131 07:12:03.660211      23 warnings.go:70] unknown field "epsilon"
  W0131 07:12:03.660223      23 warnings.go:70] unknown field "gamma"
  E0131 07:12:03.776548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:04.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-91" for this suite. @ 01/31/24 07:12:04.215
• [3.159 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 01/31/24 07:12:04.226
  Jan 31 07:12:04.226: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename var-expansion @ 01/31/24 07:12:04.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:04.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:04.246
  STEP: Creating a pod to test substitution in container's command @ 01/31/24 07:12:04.251
  E0131 07:12:04.777650      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:05.778196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:06.778431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:07.779044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:12:08.276
  Jan 31 07:12:08.280: INFO: Trying to get logs from node nodea08 pod var-expansion-d086007f-4df7-497e-8d55-87e883a17ba5 container dapi-container: <nil>
  STEP: delete the pod @ 01/31/24 07:12:08.302
  Jan 31 07:12:08.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9851" for this suite. @ 01/31/24 07:12:08.325
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 01/31/24 07:12:08.334
  Jan 31 07:12:08.334: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename job @ 01/31/24 07:12:08.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:08.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:08.353
  STEP: Creating a job @ 01/31/24 07:12:08.358
  STEP: Ensure pods equal to parallelism count is attached to the job @ 01/31/24 07:12:08.367
  E0131 07:12:08.779465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:09.779955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 01/31/24 07:12:10.372
  STEP: updating /status @ 01/31/24 07:12:10.383
  STEP: get /status @ 01/31/24 07:12:10.394
  Jan 31 07:12:10.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2521" for this suite. @ 01/31/24 07:12:10.404
• [2.076 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 01/31/24 07:12:10.41
  Jan 31 07:12:10.410: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename var-expansion @ 01/31/24 07:12:10.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:10.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:10.433
  STEP: Creating a pod to test substitution in volume subpath @ 01/31/24 07:12:10.438
  E0131 07:12:10.782437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:11.783073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:12.784038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:13.784589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:12:14.463
  Jan 31 07:12:14.467: INFO: Trying to get logs from node nodea08 pod var-expansion-47a29a9e-0fe3-408f-bb2f-048a469ccc9f container dapi-container: <nil>
  STEP: delete the pod @ 01/31/24 07:12:14.474
  Jan 31 07:12:14.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2836" for this suite. @ 01/31/24 07:12:14.494
• [4.091 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 01/31/24 07:12:14.502
  Jan 31 07:12:14.502: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 07:12:14.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:14.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:14.521
  STEP: validating api versions @ 01/31/24 07:12:14.526
  Jan 31 07:12:14.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-7877 api-versions'
  Jan 31 07:12:14.634: INFO: stderr: ""
  Jan 31 07:12:14.634: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jan 31 07:12:14.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7877" for this suite. @ 01/31/24 07:12:14.639
• [0.144 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 01/31/24 07:12:14.645
  Jan 31 07:12:14.645: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename runtimeclass @ 01/31/24 07:12:14.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:14.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:14.664
  E0131 07:12:14.785608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:15.786689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:16.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2550" for this suite. @ 01/31/24 07:12:16.701
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 01/31/24 07:12:16.712
  Jan 31 07:12:16.712: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename job @ 01/31/24 07:12:16.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:16.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:16.732
  STEP: Creating a job @ 01/31/24 07:12:16.737
  STEP: Ensuring job reaches completions @ 01/31/24 07:12:16.744
  E0131 07:12:16.787109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:17.787644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:18.788579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:19.789194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:20.789844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:21.790362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:22.791363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:23.791992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:24.793010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:25.794038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:26.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-704" for this suite. @ 01/31/24 07:12:26.758
• [10.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 01/31/24 07:12:26.767
  Jan 31 07:12:26.767: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename resourcequota @ 01/31/24 07:12:26.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:26.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:26.793
  E0131 07:12:26.794032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/31/24 07:12:26.798
  E0131 07:12:27.795140      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:28.795638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:29.796004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:30.796069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:31.796623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/31/24 07:12:31.802
  STEP: Ensuring resource quota status is calculated @ 01/31/24 07:12:31.809
  E0131 07:12:32.797494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:33.798146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 01/31/24 07:12:33.815
  STEP: Creating a NodePort Service @ 01/31/24 07:12:33.843
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 01/31/24 07:12:33.873
  STEP: Ensuring resource quota status captures service creation @ 01/31/24 07:12:33.899
  E0131 07:12:34.798254      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:35.798376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 01/31/24 07:12:35.906
  STEP: Ensuring resource quota status released usage @ 01/31/24 07:12:35.944
  E0131 07:12:36.798972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:37.799582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:37.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7540" for this suite. @ 01/31/24 07:12:37.957
• [11.199 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 01/31/24 07:12:37.966
  Jan 31 07:12:37.966: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/31/24 07:12:37.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:37.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:37.986
  STEP: creating a target pod @ 01/31/24 07:12:37.991
  E0131 07:12:38.800373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:39.801124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 01/31/24 07:12:40.014
  E0131 07:12:40.801247      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:41.801329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 01/31/24 07:12:42.036
  Jan 31 07:12:42.036: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5829 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:12:42.036: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:12:42.037: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:12:42.037: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-5829/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jan 31 07:12:42.148: INFO: Exec stderr: ""
  Jan 31 07:12:42.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5829" for this suite. @ 01/31/24 07:12:42.163
• [4.204 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 01/31/24 07:12:42.17
  Jan 31 07:12:42.170: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename svcaccounts @ 01/31/24 07:12:42.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:42.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:42.19
  STEP: creating a ServiceAccount @ 01/31/24 07:12:42.195
  STEP: watching for the ServiceAccount to be added @ 01/31/24 07:12:42.202
  STEP: patching the ServiceAccount @ 01/31/24 07:12:42.205
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 01/31/24 07:12:42.209
  STEP: deleting the ServiceAccount @ 01/31/24 07:12:42.214
  Jan 31 07:12:42.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-271" for this suite. @ 01/31/24 07:12:42.228
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 01/31/24 07:12:42.235
  Jan 31 07:12:42.235: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename watch @ 01/31/24 07:12:42.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:42.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:42.253
  STEP: creating a watch on configmaps @ 01/31/24 07:12:42.257
  STEP: creating a new configmap @ 01/31/24 07:12:42.26
  STEP: modifying the configmap once @ 01/31/24 07:12:42.264
  STEP: closing the watch once it receives two notifications @ 01/31/24 07:12:42.274
  Jan 31 07:12:42.274: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4194  f4aa6efd-fee6-458f-9793-a92bc4db27a2 168079 0 2024-01-31 07:12:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-31 07:12:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 07:12:42.274: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4194  f4aa6efd-fee6-458f-9793-a92bc4db27a2 168080 0 2024-01-31 07:12:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-31 07:12:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 01/31/24 07:12:42.274
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 01/31/24 07:12:42.283
  STEP: deleting the configmap @ 01/31/24 07:12:42.285
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 01/31/24 07:12:42.291
  Jan 31 07:12:42.291: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4194  f4aa6efd-fee6-458f-9793-a92bc4db27a2 168081 0 2024-01-31 07:12:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-31 07:12:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 07:12:42.291: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4194  f4aa6efd-fee6-458f-9793-a92bc4db27a2 168082 0 2024-01-31 07:12:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-31 07:12:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 31 07:12:42.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4194" for this suite. @ 01/31/24 07:12:42.296
• [0.067 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 01/31/24 07:12:42.303
  Jan 31 07:12:42.303: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename daemonsets @ 01/31/24 07:12:42.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:42.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:42.321
  STEP: Creating simple DaemonSet "daemon-set" @ 01/31/24 07:12:42.341
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/31/24 07:12:42.347
  Jan 31 07:12:42.352: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 07:12:42.355: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 07:12:42.355: INFO: Node nodea08 is running 0 daemon pod, expected 1
  E0131 07:12:42.801447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:43.354: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 07:12:43.359: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 31 07:12:43.359: INFO: Node nodeb29 is running 0 daemon pod, expected 1
  E0131 07:12:43.801781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:44.355: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 07:12:44.359: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 31 07:12:44.359: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 01/31/24 07:12:44.363
  Jan 31 07:12:44.379: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 07:12:44.383: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 31 07:12:44.383: INFO: Node nodea08 is running 0 daemon pod, expected 1
  E0131 07:12:44.801857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:45.381: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 07:12:45.385: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 31 07:12:45.385: INFO: Node nodea08 is running 0 daemon pod, expected 1
  E0131 07:12:45.802151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:46.382: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 07:12:46.387: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 31 07:12:46.387: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/31/24 07:12:46.391
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9778, will wait for the garbage collector to delete the pods @ 01/31/24 07:12:46.391
  Jan 31 07:12:46.452: INFO: Deleting DaemonSet.extensions daemon-set took: 7.05775ms
  Jan 31 07:12:46.554: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.271723ms
  E0131 07:12:46.802730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:47.803238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:48.458: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 07:12:48.458: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 31 07:12:48.462: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"168176"},"items":null}

  Jan 31 07:12:48.466: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"168176"},"items":null}

  Jan 31 07:12:48.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9778" for this suite. @ 01/31/24 07:12:48.483
• [6.186 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 01/31/24 07:12:48.489
  Jan 31 07:12:48.489: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubelet-test @ 01/31/24 07:12:48.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:48.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:48.51
  STEP: Waiting for pod completion @ 01/31/24 07:12:48.523
  E0131 07:12:48.803706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:49.804146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:50.804702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:51.805470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:52.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4026" for this suite. @ 01/31/24 07:12:52.556
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 01/31/24 07:12:52.564
  Jan 31 07:12:52.564: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename daemonsets @ 01/31/24 07:12:52.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:52.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:52.584
  STEP: Creating a simple DaemonSet "daemon-set" @ 01/31/24 07:12:52.602
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/31/24 07:12:52.609
  Jan 31 07:12:52.613: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 07:12:52.616: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 07:12:52.616: INFO: Node nodea08 is running 0 daemon pod, expected 1
  E0131 07:12:52.806184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:53.614: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 07:12:53.618: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 31 07:12:53.618: INFO: Node nodeb29 is running 0 daemon pod, expected 1
  E0131 07:12:53.807109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:54.618: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 07:12:54.623: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 31 07:12:54.623: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 01/31/24 07:12:54.626
  Jan 31 07:12:54.649: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 07:12:54.653: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 31 07:12:54.653: INFO: Node nodea08 is running 0 daemon pod, expected 1
  E0131 07:12:54.807204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:55.653: INFO: DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 31 07:12:55.658: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 31 07:12:55.658: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 01/31/24 07:12:55.658
  STEP: Deleting DaemonSet "daemon-set" @ 01/31/24 07:12:55.665
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4543, will wait for the garbage collector to delete the pods @ 01/31/24 07:12:55.665
  Jan 31 07:12:55.725: INFO: Deleting DaemonSet.extensions daemon-set took: 6.324957ms
  E0131 07:12:55.807747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:55.826: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.564025ms
  E0131 07:12:56.808480      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:12:57.530: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 31 07:12:57.530: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 31 07:12:57.534: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"168286"},"items":null}

  Jan 31 07:12:57.538: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"168286"},"items":null}

  Jan 31 07:12:57.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4543" for this suite. @ 01/31/24 07:12:57.556
• [4.998 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 01/31/24 07:12:57.563
  Jan 31 07:12:57.563: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 07:12:57.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:57.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:57.581
  Jan 31 07:12:57.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1474" for this suite. @ 01/31/24 07:12:57.624
• [0.065 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 01/31/24 07:12:57.629
  Jan 31 07:12:57.629: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-probe @ 01/31/24 07:12:57.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:12:57.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:12:57.648
  STEP: Creating pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668 @ 01/31/24 07:12:57.652
  E0131 07:12:57.809253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:12:58.810382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/31/24 07:12:59.669
  Jan 31 07:12:59.674: INFO: Initial restart count of pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 is 0
  Jan 31 07:12:59.677: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:12:59.811451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:00.812539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:01.683: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:01.812942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:02.813484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:03.690: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:03.813540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:04.814592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:05.696: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:05.815696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:06.815930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:07.702: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:07.816318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:08.816869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:09.707: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:09.816983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:10.818150      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:11.713: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:11.818753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:12.819453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:13.720: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:13.820652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:14.821728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:15.726: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:15.822461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:16.823106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:17.730: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:17.824050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:18.824661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:19.737: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:19.825306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:20.826362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:21.742: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:21.827188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:22.827601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:23.750: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:23.828461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:24.829334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:25.756: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:25.830396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:26.830765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:27.761: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:27.830915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:28.831690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:29.766: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:29.832119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:30.833202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:31.772: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:31.833795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:32.834314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:33.779: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:33.835187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:34.836246      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:35.785: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:35.836655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:36.837187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:37.791: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:37.837926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:38.838473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:39.796: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:39.838946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:40.839135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:41.802: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:41.840067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:42.840609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:43.810: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:43.841082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:44.842111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:45.817: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:45.842334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:46.842840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:47.823: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:47.843762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:48.844457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:49.830: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:49.844270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:50.845310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:51.835: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:51.846232      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:52.846786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:53.842: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:53.847779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:54.848904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:55.847: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:55.849925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:56.850507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:57.851532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:57.854: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:13:58.852390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:13:59.853017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:13:59.861: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:00.854133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:01.854869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:01.867: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:02.855738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:03.856335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:03.873: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:04.857392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:05.858362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:05.879: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:06.858773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:07.859405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:07.885: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:08.859908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:09.860543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:09.892: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:10.862176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:11.861913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:11.901: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:12.862402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:13.863334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:13.908: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:14.864165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:15.864314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:15.914: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:16.864872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:17.864886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:17.920: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:18.865165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:19.865747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:19.926: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:20.866816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:21.867357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:21.932: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:22.868240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:23.868774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:23.939: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:24.869798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:25.870891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:25.944: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:26.871870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:27.872505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:27.951: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:28.872753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:29.873269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:29.957: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:30.873910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:31.874475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:31.964: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:32.875500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:33.876022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:33.973: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:34.876615      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:35.877670      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:35.979: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:36.877938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:37.878371      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:37.986: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:38.879427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:39.879889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:39.992: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:40.880711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:41.881220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:41.997: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:42.881843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:43.882368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:44.005: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:44.882536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:45.883621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:46.010: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:46.884661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:47.885326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:48.015: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:48.885617      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:49.886318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:50.020: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:50.886466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:51.886719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:52.025: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:52.887455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:53.888022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:54.032: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:54.889042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:55.890174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:56.038: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:56.890489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:57.890755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:14:58.045: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:14:58.891223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:14:59.891675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:00.051: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:00.892536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:01.892998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:02.057: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:02.893450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:03.893930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:04.063: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:04.894028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:05.894343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:06.068: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:06.895025      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:07.895599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:08.075: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:08.895848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:09.896337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:10.080: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:10.897229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:11.897510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:12.085: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:12.898407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:13.899174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:14.091: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:14.899959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:15.901066      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:16.097: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:16.901713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:17.902009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:18.103: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:18.902214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:19.902876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:20.109: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:20.903289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:21.903774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:22.114: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:22.904849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:23.905151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:24.121: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:24.905715      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:25.906786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:26.127: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:26.907091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:27.907651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:28.133: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:28.907771      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:29.908042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:30.140: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:30.908444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:31.908988      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:32.146: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:32.909333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:33.909575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:34.153: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:34.909725      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:35.910638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:36.159: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:36.911381      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:37.912002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:38.164: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:38.912220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:39.912739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:40.170: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:40.913014      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:41.913277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:42.175: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:42.913863      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:43.914355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:44.182: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:44.914946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:45.915954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:46.188: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:46.916034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:47.917072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:48.193: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:48.918146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:49.918729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:50.198: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:50.919635      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:51.920783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:52.204: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:52.921089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:53.921653      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:54.209: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:54.922498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:55.923719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:56.215: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:56.924203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:57.924464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:15:58.221: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:15:58.924959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:15:59.925550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:00.226: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:00.926574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:01.927054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:02.231: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:02.927432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:03.927919      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:04.236: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:04.928081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:05.929149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:06.242: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:06.929753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:07.930262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:08.247: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:08.930384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:09.930927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:10.253: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:10.931250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:11.932091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:12.258: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:12.932411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:13.932943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:14.267: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:14.933269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:15.934475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:16.273: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:16.934594      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:17.935165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:18.279: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:18.935633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:19.936194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:20.285: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:20.936565      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:21.937148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:22.291: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:22.938341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:23.938880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:24.297: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:24.939077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:25.940097      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:26.304: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:26.940526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:27.940998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:28.312: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:28.941382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:29.941900      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:30.318: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:30.942157      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:31.942626      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:32.325: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:32.943207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:33.943874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:34.331: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:34.944899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:35.945101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:36.337: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:36.945366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:37.945925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:38.343: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:38.947034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:39.947577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:40.348: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:40.948321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:41.948894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:42.353: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:42.949478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:43.950032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:44.359: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:44.951096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:45.952151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:46.366: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:46.953313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:47.953780      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:48.373: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:48.954161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:49.954652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:50.380: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:50.955392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:51.955860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:52.385: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:52.956385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:53.956984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:54.391: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:54.958177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:55.958416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:56.398: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:56.958763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:57.959585      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:16:58.404: INFO: Get pod test-grpc-91afe329-409f-4983-ae7b-bbb96583ac31 in namespace container-probe-2668
  E0131 07:16:58.959616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:16:59.960147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/31/24 07:17:00.405
  Jan 31 07:17:00.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2668" for this suite. @ 01/31/24 07:17:00.428
• [242.805 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 01/31/24 07:17:00.434
  Jan 31 07:17:00.434: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename init-container @ 01/31/24 07:17:00.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:00.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:00.457
  STEP: creating the pod @ 01/31/24 07:17:00.462
  Jan 31 07:17:00.462: INFO: PodSpec: initContainers in spec.initContainers
  E0131 07:17:00.961431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:01.962482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:02.963104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:03.963190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:17:04.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3030" for this suite. @ 01/31/24 07:17:04.57
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 01/31/24 07:17:04.576
  Jan 31 07:17:04.576: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename deployment @ 01/31/24 07:17:04.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:04.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:04.594
  Jan 31 07:17:04.608: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0131 07:17:04.963578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:05.963848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:06.964419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:07.964985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:08.965467      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:17:09.613: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/31/24 07:17:09.613
  Jan 31 07:17:09.613: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 01/31/24 07:17:09.627
  Jan 31 07:17:09.639: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45e50563-6ccf-428d-aca6-5070d5903a87",
      ResourceVersion: (string) (len=6) "168782",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842282229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 31 07:17:09.647: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46751fa5-f6a3-49f4-abde-4fd0f4dfba4f",
      ResourceVersion: (string) (len=6) "168784",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842282229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "45e50563-6ccf-428d-aca6-5070d5903a87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 35 65 35 30 35  36 33 2d 36 63 63 66 2d  |\"45e50563-6ccf-|
              00000120  34 32 38 64 2d 61 63 61  36 2d 35 30 37 30 64 35  |428d-aca6-5070d5|
              00000130  39 30 33 61 38 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |903a87\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 07:17:09.649: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jan 31 07:17:09.650: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c56b4ea2-4181-4298-9003-4fe08e3fc635",
      ResourceVersion: (string) (len=6) "168783",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842282224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "45e50563-6ccf-428d-aca6-5070d5903a87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 34 35 65 35 30 35 36  |"uid\":\"45e5056|
              00000040  33 2d 36 63 63 66 2d 34  32 38 64 2d 61 63 61 36  |3-6ccf-428d-aca6|
              00000050  2d 35 30 37 30 64 35 39  30 33 61 38 37 5c 22 7d  |-5070d5903a87\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 07:17:09.657: INFO: Pod "test-cleanup-controller-spgjc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-spgjc",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=14) "deployment-768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d437d731-5f74-4e0d-9015-1470126d2ad5",
      ResourceVersion: (string) (len=6) "168775",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842282224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "c56b4ea2-4181-4298-9003-4fe08e3fc635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  63 35 36 62 34 65 61 32  |uid\":\"c56b4ea2|
              00000080  2d 34 31 38 31 2d 34 32  39 38 2d 39 30 30 33 2d  |-4181-4298-9003-|
              00000090  34 66 65 30 38 65 33 66  63 36 33 35 5c 22 7d 22  |4fe08e3fc635\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  37 36 5c 22 7d 22 3a 7b  |.244.1.176\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8mp2h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8mp2h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) (len=12) "10.244.1.176",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.176"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842282224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842282225,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b670c88a2808ba4fe1c054a68c4530601c6f3c81fa44b477522cadd159c5e151",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:17:09.661: INFO: Pod "test-cleanup-deployment-58dcc84f74-dh5j8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-58dcc84f74-dh5j8",
      GenerateName: (string) (len=35) "test-cleanup-deployment-58dcc84f74-",
      Namespace: (string) (len=14) "deployment-768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef51f0e7-c1b6-4146-b96f-bb6c91f2c390",
      ResourceVersion: (string) (len=6) "168786",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842282229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
          UID: (types.UID) (len=36) "46751fa5-f6a3-49f4-abde-4fd0f4dfba4f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842282229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  37 35 31 66 61 35 2d 66  |d\":\"46751fa5-f|
              00000090  36 61 33 2d 34 39 66 34  2d 61 62 64 65 2d 34 66  |6a3-49f4-abde-4f|
              000000a0  64 30 66 34 64 66 62 61  34 66 5c 22 7d 22 3a 7b  |d0f4dfba4f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s2xl6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s2xl6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:17:09.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-768" for this suite. @ 01/31/24 07:17:09.668
• [5.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 01/31/24 07:17:09.677
  Jan 31 07:17:09.677: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename discovery @ 01/31/24 07:17:09.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:09.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:09.692
  STEP: Setting up server cert @ 01/31/24 07:17:09.698
  E0131 07:17:09.966590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:17:10.117: INFO: Checking APIGroup: apiregistration.k8s.io
  Jan 31 07:17:10.119: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jan 31 07:17:10.119: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jan 31 07:17:10.119: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jan 31 07:17:10.119: INFO: Checking APIGroup: apps
  Jan 31 07:17:10.120: INFO: PreferredVersion.GroupVersion: apps/v1
  Jan 31 07:17:10.121: INFO: Versions found [{apps/v1 v1}]
  Jan 31 07:17:10.121: INFO: apps/v1 matches apps/v1
  Jan 31 07:17:10.121: INFO: Checking APIGroup: events.k8s.io
  Jan 31 07:17:10.122: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jan 31 07:17:10.122: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jan 31 07:17:10.122: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jan 31 07:17:10.122: INFO: Checking APIGroup: authentication.k8s.io
  Jan 31 07:17:10.124: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jan 31 07:17:10.124: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jan 31 07:17:10.124: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jan 31 07:17:10.124: INFO: Checking APIGroup: authorization.k8s.io
  Jan 31 07:17:10.126: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jan 31 07:17:10.126: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jan 31 07:17:10.126: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jan 31 07:17:10.126: INFO: Checking APIGroup: autoscaling
  Jan 31 07:17:10.128: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jan 31 07:17:10.128: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jan 31 07:17:10.128: INFO: autoscaling/v2 matches autoscaling/v2
  Jan 31 07:17:10.128: INFO: Checking APIGroup: batch
  Jan 31 07:17:10.130: INFO: PreferredVersion.GroupVersion: batch/v1
  Jan 31 07:17:10.130: INFO: Versions found [{batch/v1 v1}]
  Jan 31 07:17:10.130: INFO: batch/v1 matches batch/v1
  Jan 31 07:17:10.130: INFO: Checking APIGroup: certificates.k8s.io
  Jan 31 07:17:10.132: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jan 31 07:17:10.132: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jan 31 07:17:10.132: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jan 31 07:17:10.132: INFO: Checking APIGroup: networking.k8s.io
  Jan 31 07:17:10.134: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jan 31 07:17:10.134: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jan 31 07:17:10.134: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jan 31 07:17:10.134: INFO: Checking APIGroup: policy
  Jan 31 07:17:10.136: INFO: PreferredVersion.GroupVersion: policy/v1
  Jan 31 07:17:10.136: INFO: Versions found [{policy/v1 v1}]
  Jan 31 07:17:10.136: INFO: policy/v1 matches policy/v1
  Jan 31 07:17:10.136: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jan 31 07:17:10.138: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jan 31 07:17:10.138: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jan 31 07:17:10.138: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jan 31 07:17:10.138: INFO: Checking APIGroup: storage.k8s.io
  Jan 31 07:17:10.140: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jan 31 07:17:10.140: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jan 31 07:17:10.140: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jan 31 07:17:10.140: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jan 31 07:17:10.142: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jan 31 07:17:10.142: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jan 31 07:17:10.142: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jan 31 07:17:10.142: INFO: Checking APIGroup: apiextensions.k8s.io
  Jan 31 07:17:10.144: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jan 31 07:17:10.144: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jan 31 07:17:10.144: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jan 31 07:17:10.144: INFO: Checking APIGroup: scheduling.k8s.io
  Jan 31 07:17:10.145: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jan 31 07:17:10.146: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jan 31 07:17:10.146: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jan 31 07:17:10.146: INFO: Checking APIGroup: coordination.k8s.io
  Jan 31 07:17:10.147: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jan 31 07:17:10.148: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jan 31 07:17:10.148: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jan 31 07:17:10.148: INFO: Checking APIGroup: node.k8s.io
  Jan 31 07:17:10.149: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jan 31 07:17:10.149: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jan 31 07:17:10.149: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jan 31 07:17:10.149: INFO: Checking APIGroup: discovery.k8s.io
  Jan 31 07:17:10.151: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jan 31 07:17:10.151: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jan 31 07:17:10.151: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jan 31 07:17:10.151: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jan 31 07:17:10.153: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jan 31 07:17:10.153: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jan 31 07:17:10.153: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jan 31 07:17:10.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5041" for this suite. @ 01/31/24 07:17:10.16
• [0.490 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 01/31/24 07:17:10.167
  Jan 31 07:17:10.167: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replication-controller @ 01/31/24 07:17:10.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:10.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:10.189
  Jan 31 07:17:10.194: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0131 07:17:10.967355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 01/31/24 07:17:11.209
  STEP: Checking rc "condition-test" has the desired failure condition set @ 01/31/24 07:17:11.219
  E0131 07:17:11.967527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 01/31/24 07:17:12.229
  Jan 31 07:17:12.240: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 01/31/24 07:17:12.24
  E0131 07:17:12.968149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:17:13.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4514" for this suite. @ 01/31/24 07:17:13.256
• [3.099 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 01/31/24 07:17:13.266
  Jan 31 07:17:13.266: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 07:17:13.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:13.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:13.287
  STEP: Creating secret with name secret-test-map-73117bee-77c3-4ef6-9cd2-e2145d88457f @ 01/31/24 07:17:13.292
  STEP: Creating a pod to test consume secrets @ 01/31/24 07:17:13.299
  E0131 07:17:13.969242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:14.969897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:15.970522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:16.971124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:17:17.323
  Jan 31 07:17:17.327: INFO: Trying to get logs from node nodea08 pod pod-secrets-208e4597-6b66-4f05-83dd-fb96fa382282 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 07:17:17.354
  Jan 31 07:17:17.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9650" for this suite. @ 01/31/24 07:17:17.375
• [4.115 seconds]
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 01/31/24 07:17:17.381
  Jan 31 07:17:17.381: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pods @ 01/31/24 07:17:17.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:17.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:17.4
  STEP: Create set of pods @ 01/31/24 07:17:17.405
  Jan 31 07:17:17.412: INFO: created test-pod-1
  Jan 31 07:17:17.419: INFO: created test-pod-2
  Jan 31 07:17:17.425: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 01/31/24 07:17:17.425
  E0131 07:17:17.972439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:18.973201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 01/31/24 07:17:19.468
  Jan 31 07:17:19.471: INFO: Pod quantity 3 is different from expected quantity 0
  E0131 07:17:19.973358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:17:20.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6707" for this suite. @ 01/31/24 07:17:20.478
• [3.104 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 01/31/24 07:17:20.485
  Jan 31 07:17:20.485: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pv @ 01/31/24 07:17:20.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:20.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:20.503
  STEP: Creating initial PV and PVC @ 01/31/24 07:17:20.507
  Jan 31 07:17:20.508: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9475" @ 01/31/24 07:17:20.521
  STEP: Listing PVCs in namespace "pv-9475" @ 01/31/24 07:17:20.527
  STEP: Patching the PV "pv-9475-mhb27" @ 01/31/24 07:17:20.53
  STEP: Patching the PVC "pvc-n6547" @ 01/31/24 07:17:20.537
  STEP: Getting PV "pv-9475-mhb27" @ 01/31/24 07:17:20.541
  STEP: Getting PVC "pvc-n6547" @ 01/31/24 07:17:20.544
  STEP: Deleting PVC "pvc-n6547" @ 01/31/24 07:17:20.547
  STEP: Confirm deletion of PVC "pvc-n6547" @ 01/31/24 07:17:20.554
  E0131 07:17:20.974355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:21.975281      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9475-mhb27" @ 01/31/24 07:17:22.561
  STEP: Confirm deletion of PV "pv-9475-mhb27" @ 01/31/24 07:17:22.569
  E0131 07:17:22.975594      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:23.976176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 01/31/24 07:17:24.58
  Jan 31 07:17:24.580: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-9475-k9pbp" @ 01/31/24 07:17:24.592
  STEP: Updating the PVC "pvc-wnj7x" @ 01/31/24 07:17:24.601
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-wnj7x=updated" @ 01/31/24 07:17:24.609
  STEP: Deleting PVC "pvc-wnj7x" via DeleteCollection @ 01/31/24 07:17:24.613
  STEP: Confirm deletion of PVC "pvc-wnj7x" @ 01/31/24 07:17:24.62
  E0131 07:17:24.977191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:25.977425      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9475-k9pbp" via DeleteCollection @ 01/31/24 07:17:26.631
  STEP: Confirm deletion of PV "pv-9475-k9pbp" @ 01/31/24 07:17:26.642
  E0131 07:17:26.977636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:27.978205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:17:28.653: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jan 31 07:17:28.653: INFO: Deleting PersistentVolumeClaim "pvc-wnj7x"
  Jan 31 07:17:28.657: INFO: Deleting PersistentVolume "pv-9475-k9pbp"
  Jan 31 07:17:28.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9475" for this suite. @ 01/31/24 07:17:28.666
• [8.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 01/31/24 07:17:28.688
  Jan 31 07:17:28.688: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pods @ 01/31/24 07:17:28.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:28.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:28.709
  STEP: creating the pod @ 01/31/24 07:17:28.714
  STEP: submitting the pod to kubernetes @ 01/31/24 07:17:28.714
  STEP: verifying QOS class is set on the pod @ 01/31/24 07:17:28.72
  Jan 31 07:17:28.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6562" for this suite. @ 01/31/24 07:17:28.728
• [0.045 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 01/31/24 07:17:28.733
  Jan 31 07:17:28.733: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 07:17:28.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:28.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:28.751
  Jan 31 07:17:28.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-259" for this suite. @ 01/31/24 07:17:28.8
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 01/31/24 07:17:28.815
  Jan 31 07:17:28.815: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/31/24 07:17:28.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:28.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:28.833
  STEP: creating @ 01/31/24 07:17:28.839
  STEP: getting @ 01/31/24 07:17:28.857
  STEP: listing in namespace @ 01/31/24 07:17:28.861
  STEP: patching @ 01/31/24 07:17:28.865
  STEP: deleting @ 01/31/24 07:17:28.873
  Jan 31 07:17:28.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1227" for this suite. @ 01/31/24 07:17:28.886
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 01/31/24 07:17:28.895
  Jan 31 07:17:28.895: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 07:17:28.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:28.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:28.914
  STEP: Setting up server cert @ 01/31/24 07:17:28.938
  E0131 07:17:28.978417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 07:17:29.176
  STEP: Deploying the webhook pod @ 01/31/24 07:17:29.186
  STEP: Wait for the deployment to be ready @ 01/31/24 07:17:29.199
  Jan 31 07:17:29.207: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0131 07:17:29.979515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:30.980913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/31/24 07:17:31.222
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 07:17:31.24
  E0131 07:17:31.981315      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:17:32.240: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan 31 07:17:32.249: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6527-crds.webhook.example.com via the AdmissionRegistration API @ 01/31/24 07:17:32.769
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/31/24 07:17:32.793
  E0131 07:17:32.982036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:33.983286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:34.983999      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:17:35.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4857" for this suite. @ 01/31/24 07:17:35.416
  STEP: Destroying namespace "webhook-markers-2412" for this suite. @ 01/31/24 07:17:35.423
• [6.538 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 01/31/24 07:17:35.434
  Jan 31 07:17:35.434: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename cronjob @ 01/31/24 07:17:35.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:17:35.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:17:35.454
  STEP: Creating a cronjob @ 01/31/24 07:17:35.46
  STEP: Ensuring more than one job is running at a time @ 01/31/24 07:17:35.467
  E0131 07:17:35.984412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:36.985155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:37.985229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:38.986071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:39.986438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:40.987626      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:41.988746      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:42.989498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:43.990670      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:44.990831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:45.991101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:46.991734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:47.992646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:48.993251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:49.994154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:50.994373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:51.994809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:52.995494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:53.996498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:54.996887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:55.997072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:56.997939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:57.998498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:17:58.999730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:00.000665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:01.001795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:02.001881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:03.002458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:04.002923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:05.004141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:06.005268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:07.005756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:08.006946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:09.007180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:10.007344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:11.007648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:12.007742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:13.008004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:14.008461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:15.009239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:16.009385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:17.009931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:18.010135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:19.010606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:20.010893      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:21.011535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:22.011827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:23.012393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:24.012504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:25.013207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:26.014374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:27.014904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:28.016010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:29.016297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:30.016788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:31.017765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:32.018149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:33.018833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:34.019242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:35.020239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:36.021424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:37.021924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:38.022262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:39.022813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:40.023261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:41.023449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:42.023990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:43.024330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:44.024694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:45.024962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:46.025367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:47.026019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:48.026276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:49.026908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:50.026988      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:51.028091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:52.028474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:53.028855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:54.029062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:55.030057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:56.030341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:57.030703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:58.030970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:18:59.031465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:00.031776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:01.032690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 01/31/24 07:19:01.472
  STEP: Removing cronjob @ 01/31/24 07:19:01.476
  Jan 31 07:19:01.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9961" for this suite. @ 01/31/24 07:19:01.49
• [86.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 01/31/24 07:19:01.498
  Jan 31 07:19:01.498: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename job @ 01/31/24 07:19:01.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:01.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:01.518
  STEP: Creating a job @ 01/31/24 07:19:01.523
  STEP: Ensuring active pods == parallelism @ 01/31/24 07:19:01.544
  E0131 07:19:02.033269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:03.033802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 01/31/24 07:19:03.551
  STEP: deleting Job.batch foo in namespace job-5243, will wait for the garbage collector to delete the pods @ 01/31/24 07:19:03.551
  Jan 31 07:19:03.614: INFO: Deleting Job.batch foo took: 7.818443ms
  Jan 31 07:19:03.715: INFO: Terminating Job.batch foo pods took: 101.011833ms
  E0131 07:19:04.034738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 01/31/24 07:19:04.917
  Jan 31 07:19:04.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5243" for this suite. @ 01/31/24 07:19:04.927
• [3.437 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 01/31/24 07:19:04.936
  Jan 31 07:19:04.936: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-webhook @ 01/31/24 07:19:04.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:04.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:04.956
  STEP: Setting up server cert @ 01/31/24 07:19:04.961
  E0131 07:19:05.035320      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/31/24 07:19:05.631
  STEP: Deploying the custom resource conversion webhook pod @ 01/31/24 07:19:05.642
  STEP: Wait for the deployment to be ready @ 01/31/24 07:19:05.658
  Jan 31 07:19:05.667: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0131 07:19:06.036587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:07.037116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/31/24 07:19:07.682
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 07:19:07.7
  E0131 07:19:08.038258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:19:08.700: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jan 31 07:19:08.709: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  E0131 07:19:09.038659      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:10.039340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:11.040343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 01/31/24 07:19:11.316
  STEP: v2 custom resource should be converted @ 01/31/24 07:19:11.321
  Jan 31 07:19:11.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7001" for this suite. @ 01/31/24 07:19:11.877
• [6.946 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 01/31/24 07:19:11.884
  Jan 31 07:19:11.884: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 07:19:11.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:11.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:11.904
  STEP: Creating a pod to test downward api env vars @ 01/31/24 07:19:11.908
  E0131 07:19:12.040617      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:13.041277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:14.041755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:15.042823      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:19:15.931
  Jan 31 07:19:15.935: INFO: Trying to get logs from node nodea08 pod downward-api-b5da3c82-2c03-44ab-bf07-75fe82d36f6e container dapi-container: <nil>
  STEP: delete the pod @ 01/31/24 07:19:15.96
  Jan 31 07:19:15.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4079" for this suite. @ 01/31/24 07:19:15.982
• [4.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 01/31/24 07:19:15.988
  Jan 31 07:19:15.988: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pods @ 01/31/24 07:19:15.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:16.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:16.011
  STEP: creating the pod @ 01/31/24 07:19:16.016
  STEP: setting up watch @ 01/31/24 07:19:16.016
  E0131 07:19:16.043604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 01/31/24 07:19:16.121
  STEP: verifying the pod is in kubernetes @ 01/31/24 07:19:16.131
  STEP: verifying pod creation was observed @ 01/31/24 07:19:16.135
  E0131 07:19:17.044880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:18.045096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 01/31/24 07:19:18.15
  STEP: verifying pod deletion was observed @ 01/31/24 07:19:18.16
  E0131 07:19:19.045951      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:20.046422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:19:20.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-990" for this suite. @ 01/31/24 07:19:20.897
• [4.914 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 01/31/24 07:19:20.903
  Jan 31 07:19:20.903: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 07:19:20.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:20.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:20.923
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 07:19:20.928
  E0131 07:19:21.047074      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:22.048002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:23.048995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:24.049567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:19:24.952
  Jan 31 07:19:24.958: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-a5878f11-f829-468c-ba51-f7cb8d9e65fe container client-container: <nil>
  STEP: delete the pod @ 01/31/24 07:19:24.967
  Jan 31 07:19:24.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6980" for this suite. @ 01/31/24 07:19:24.989
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 01/31/24 07:19:24.996
  Jan 31 07:19:24.996: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 07:19:24.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:25.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:25.017
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3053 @ 01/31/24 07:19:25.022
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/31/24 07:19:25.036
  STEP: creating service externalsvc in namespace services-3053 @ 01/31/24 07:19:25.037
  E0131 07:19:25.050196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller externalsvc in namespace services-3053 @ 01/31/24 07:19:25.051
  I0131 07:19:25.055935      23 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3053, replica count: 2
  E0131 07:19:26.050989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:27.051554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:28.052123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0131 07:19:28.107704      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 01/31/24 07:19:28.112
  Jan 31 07:19:28.136: INFO: Creating new exec pod
  E0131 07:19:29.053168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:30.053784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:19:30.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-3053 exec execpodzsfgv -- /bin/sh -x -c nslookup clusterip-service.services-3053.svc.cluster.local'
  Jan 31 07:19:30.404: INFO: stderr: "+ nslookup clusterip-service.services-3053.svc.cluster.local\n"
  Jan 31 07:19:30.405: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-3053.svc.cluster.local\tcanonical name = externalsvc.services-3053.svc.cluster.local.\nName:\texternalsvc.services-3053.svc.cluster.local\nAddress: 10.103.1.249\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3053, will wait for the garbage collector to delete the pods @ 01/31/24 07:19:30.405
  Jan 31 07:19:30.469: INFO: Deleting ReplicationController externalsvc took: 8.328651ms
  Jan 31 07:19:30.570: INFO: Terminating ReplicationController externalsvc pods took: 100.85786ms
  E0131 07:19:31.054245      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:32.055297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:33.055462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:19:33.290: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jan 31 07:19:33.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3053" for this suite. @ 01/31/24 07:19:33.305
• [8.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 01/31/24 07:19:33.311
  Jan 31 07:19:33.311: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 07:19:33.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:33.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:33.329
  STEP: creating Agnhost RC @ 01/31/24 07:19:33.333
  Jan 31 07:19:33.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1532 create -f -'
  Jan 31 07:19:33.528: INFO: stderr: ""
  Jan 31 07:19:33.528: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/31/24 07:19:33.528
  E0131 07:19:34.056277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:19:34.534: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 31 07:19:34.534: INFO: Found 0 / 1
  E0131 07:19:35.057377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:19:35.533: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 31 07:19:35.534: INFO: Found 1 / 1
  Jan 31 07:19:35.534: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 01/31/24 07:19:35.534
  Jan 31 07:19:35.538: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 31 07:19:35.538: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan 31 07:19:35.538: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1532 patch pod agnhost-primary-s47b9 -p {"metadata":{"annotations":{"x":"y"}}}'
  Jan 31 07:19:35.653: INFO: stderr: ""
  Jan 31 07:19:35.653: INFO: stdout: "pod/agnhost-primary-s47b9 patched\n"
  STEP: checking annotations @ 01/31/24 07:19:35.653
  Jan 31 07:19:35.657: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 31 07:19:35.657: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan 31 07:19:35.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1532" for this suite. @ 01/31/24 07:19:35.661
• [2.355 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 01/31/24 07:19:35.667
  Jan 31 07:19:35.667: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename statefulset @ 01/31/24 07:19:35.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:35.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:35.686
  STEP: Creating service test in namespace statefulset-6575 @ 01/31/24 07:19:35.69
  STEP: Creating statefulset ss in namespace statefulset-6575 @ 01/31/24 07:19:35.695
  Jan 31 07:19:35.705: INFO: Found 0 stateful pods, waiting for 1
  E0131 07:19:36.058196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:37.059375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:38.059933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:39.060197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:40.060804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:41.061205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:42.061700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:43.062256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:44.062437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:45.063408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:19:45.707: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 01/31/24 07:19:45.716
  STEP: updating a scale subresource @ 01/31/24 07:19:45.719
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/31/24 07:19:45.725
  STEP: Patch a scale subresource @ 01/31/24 07:19:45.729
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/31/24 07:19:45.735
  Jan 31 07:19:45.739: INFO: Deleting all statefulset in ns statefulset-6575
  Jan 31 07:19:45.742: INFO: Scaling statefulset ss to 0
  E0131 07:19:46.063660      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:47.064212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:48.064778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:49.065360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:50.065880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:51.066966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:52.067405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:53.067939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:54.068501      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:55.069658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:19:55.758: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 31 07:19:55.762: INFO: Deleting statefulset ss
  Jan 31 07:19:55.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6575" for this suite. @ 01/31/24 07:19:55.78
• [20.119 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 01/31/24 07:19:55.786
  Jan 31 07:19:55.786: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 07:19:55.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:55.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:55.803
  STEP: starting the proxy server @ 01/31/24 07:19:55.808
  Jan 31 07:19:55.808: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-1613 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 01/31/24 07:19:55.883
  Jan 31 07:19:55.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1613" for this suite. @ 01/31/24 07:19:55.904
• [0.124 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 01/31/24 07:19:55.91
  Jan 31 07:19:55.910: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sysctl @ 01/31/24 07:19:55.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:55.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:55.929
  STEP: Creating a pod with one valid and two invalid sysctls @ 01/31/24 07:19:55.934
  Jan 31 07:19:55.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7385" for this suite. @ 01/31/24 07:19:55.943
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 01/31/24 07:19:55.949
  Jan 31 07:19:55.949: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename apf @ 01/31/24 07:19:55.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:55.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:55.967
  STEP: getting /apis @ 01/31/24 07:19:55.972
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/31/24 07:19:55.978
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/31/24 07:19:55.98
  STEP: creating @ 01/31/24 07:19:55.983
  STEP: getting @ 01/31/24 07:19:55.999
  STEP: listing @ 01/31/24 07:19:56.002
  STEP: watching @ 01/31/24 07:19:56.006
  Jan 31 07:19:56.006: INFO: starting watch
  STEP: patching @ 01/31/24 07:19:56.008
  STEP: updating @ 01/31/24 07:19:56.014
  Jan 31 07:19:56.023: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 01/31/24 07:19:56.023
  STEP: patching /status @ 01/31/24 07:19:56.028
  STEP: updating /status @ 01/31/24 07:19:56.033
  STEP: deleting @ 01/31/24 07:19:56.044
  STEP: deleting a collection @ 01/31/24 07:19:56.057
  E0131 07:19:56.069799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:19:56.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9607" for this suite. @ 01/31/24 07:19:56.08
• [0.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 01/31/24 07:19:56.086
  Jan 31 07:19:56.086: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename field-validation @ 01/31/24 07:19:56.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:56.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:56.106
  STEP: apply creating a deployment @ 01/31/24 07:19:56.111
  Jan 31 07:19:56.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4886" for this suite. @ 01/31/24 07:19:56.134
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 01/31/24 07:19:56.144
  Jan 31 07:19:56.144: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 07:19:56.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:19:56.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:19:56.164
  STEP: Creating configMap with name projected-configmap-test-volume-2917bc5b-1412-49d0-b081-f278b131117e @ 01/31/24 07:19:56.169
  STEP: Creating a pod to test consume configMaps @ 01/31/24 07:19:56.173
  E0131 07:19:57.070453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:58.070457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:19:59.070774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:00.071004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:20:00.198
  Jan 31 07:20:00.201: INFO: Trying to get logs from node nodea08 pod pod-projected-configmaps-804e66da-77ab-4b27-9680-657683eb2126 container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 07:20:00.21
  Jan 31 07:20:00.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6921" for this suite. @ 01/31/24 07:20:00.229
• [4.090 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 01/31/24 07:20:00.235
  Jan 31 07:20:00.235: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename security-context-test @ 01/31/24 07:20:00.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:20:00.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:20:00.253
  E0131 07:20:01.071258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:02.072368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:03.073204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:04.073742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:04.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5891" for this suite. @ 01/31/24 07:20:04.287
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 01/31/24 07:20:04.296
  Jan 31 07:20:04.296: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 07:20:04.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:20:04.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:20:04.315
  STEP: creating a ConfigMap @ 01/31/24 07:20:04.319
  STEP: fetching the ConfigMap @ 01/31/24 07:20:04.324
  STEP: patching the ConfigMap @ 01/31/24 07:20:04.327
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 01/31/24 07:20:04.332
  STEP: deleting the ConfigMap by collection with a label selector @ 01/31/24 07:20:04.337
  STEP: listing all ConfigMaps in test namespace @ 01/31/24 07:20:04.343
  Jan 31 07:20:04.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5840" for this suite. @ 01/31/24 07:20:04.352
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 01/31/24 07:20:04.359
  Jan 31 07:20:04.359: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 07:20:04.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:20:04.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:20:04.38
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 07:20:04.385
  E0131 07:20:05.074310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:06.074516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:07.074771      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:08.075495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:20:08.413
  Jan 31 07:20:08.418: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-459beb06-5ead-4599-8941-0b2c11386234 container client-container: <nil>
  STEP: delete the pod @ 01/31/24 07:20:08.427
  Jan 31 07:20:08.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-707" for this suite. @ 01/31/24 07:20:08.448
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 01/31/24 07:20:08.46
  Jan 31 07:20:08.460: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename replication-controller @ 01/31/24 07:20:08.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:20:08.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:20:08.481
  STEP: Creating replication controller my-hostname-basic-8f403492-9407-4a54-905c-47d2190b5d41 @ 01/31/24 07:20:08.487
  Jan 31 07:20:08.496: INFO: Pod name my-hostname-basic-8f403492-9407-4a54-905c-47d2190b5d41: Found 0 pods out of 1
  E0131 07:20:09.075499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:10.075784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:11.077462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:12.076540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:13.077179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:13.501: INFO: Pod name my-hostname-basic-8f403492-9407-4a54-905c-47d2190b5d41: Found 1 pods out of 1
  Jan 31 07:20:13.501: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-8f403492-9407-4a54-905c-47d2190b5d41" are running
  Jan 31 07:20:13.504: INFO: Pod "my-hostname-basic-8f403492-9407-4a54-905c-47d2190b5d41-7bj25" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-31 07:20:10 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-31 07:20:08 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-31 07:20:10 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-31 07:20:10 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-31 07:20:08 +0000 UTC Reason: Message:}])
  Jan 31 07:20:13.504: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/31/24 07:20:13.504
  Jan 31 07:20:13.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9821" for this suite. @ 01/31/24 07:20:13.521
• [5.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 01/31/24 07:20:13.528
  Jan 31 07:20:13.528: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-probe @ 01/31/24 07:20:13.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:20:13.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:20:13.544
  STEP: Creating pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704 @ 01/31/24 07:20:13.548
  E0131 07:20:14.078250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:15.079438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/31/24 07:20:15.563
  Jan 31 07:20:15.567: INFO: Initial restart count of pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a is 0
  Jan 31 07:20:15.571: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:16.080662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:17.081265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:17.579: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:18.082452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:19.083112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:19.585: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:20.083166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:21.083265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:21.591: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:22.084176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:23.084783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:23.597: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:24.084889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:25.085996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:25.603: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:26.086398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:27.087000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:27.609: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:28.087951      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:29.088600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:29.614: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:30.088848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:31.090033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:31.620: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:32.090324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:33.090845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:33.626: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:34.091410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:35.092471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:35.632: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:36.093606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:37.094220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:37.639: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:38.094394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:39.094923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:39.651: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:40.095291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:41.096477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:41.656: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:42.096908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:43.097563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:43.661: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:44.098403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:45.099486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:45.667: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:46.100299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:47.100847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:47.674: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:48.101503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:49.102836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:49.681: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:50.102638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:51.103716      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:51.686: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:52.104612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:53.105232      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:53.692: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:54.106428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:55.107649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:55.698: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:56.107781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:57.108293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:57.705: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:20:58.108725      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:20:59.109305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:20:59.710: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:00.109456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:01.110639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:01.717: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:02.110733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:03.111364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:03.723: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:04.111832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:05.111915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:05.728: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:06.112105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:07.112673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:07.735: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:08.113731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:09.114345      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:09.742: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:10.114883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:11.114933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:11.747: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:12.115491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:13.116253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:13.753: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:14.117233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:15.118358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:15.759: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:16.118398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:17.119012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:17.767: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:18.119924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:19.120628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:19.773: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:20.121816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:21.122970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:21.778: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:22.123814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:23.124409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:23.784: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:24.124497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:25.125647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:25.791: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:26.126369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:27.126894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:27.798: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:28.127890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:29.128471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:29.804: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:30.128720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:31.129862      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:31.810: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:32.130938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:33.131509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:33.815: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:34.132291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:35.133403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:35.821: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:36.133686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:37.134304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:37.827: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:38.135176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:39.135701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:39.831: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:40.135990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:41.137081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:41.837: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:42.137847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:43.138450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:43.842: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:44.138850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:45.140079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:45.847: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:46.140307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:47.140882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:47.855: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:48.141686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:49.142383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:49.860: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:50.142536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:51.143724      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:51.865: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:52.144148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:53.144679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:53.871: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:54.145414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:55.146578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:55.877: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:56.147559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:57.148073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:57.883: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:21:58.148466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:21:59.149015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:21:59.889: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:00.149935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:01.151059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:01.895: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:02.151402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:03.152009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:03.902: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:04.152736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:05.153886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:05.908: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:06.153913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:07.154663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:07.915: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:08.155606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:09.156208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:09.919: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:10.157310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:11.157458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:11.926: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:12.158184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:13.158704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:13.931: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:14.159365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:15.160382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:15.938: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:16.161120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:17.161654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:17.945: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:18.162261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:19.162761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:19.952: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:20.163703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:21.164803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:21.957: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:22.164925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:23.165437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:23.963: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:24.166406      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:25.166638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:25.968: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:26.167266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:27.167867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:27.974: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:28.167997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:29.168519      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:29.981: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:30.168577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:31.169580      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:31.987: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:32.169725      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:33.170309      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:33.994: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:34.170470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:35.171536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:36.000: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:36.172297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:37.172819      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:38.007: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:38.173915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:39.174572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:40.011: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:40.175228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:41.176417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:42.017: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:42.176598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:43.177103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:44.023: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:44.177390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:45.178407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:46.028: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:46.179380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:47.179891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:48.035: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:48.180483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:49.181049      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:50.040: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:50.181337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:51.181490      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:52.046: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:52.182444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:53.182935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:54.052: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:54.183116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:55.184189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:56.058: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:56.184921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:57.185403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:22:58.064: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:22:58.186132      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:22:59.186686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:00.069: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:00.187242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:01.187426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:02.076: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:02.187517      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:03.187981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:04.081: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:04.188646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:05.189686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:06.087: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:06.190723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:07.191286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:08.095: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:08.191937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:09.192669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:10.101: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:10.193398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:11.194560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:12.107: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:12.194574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:13.195151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:14.113: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:14.196138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:15.197332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:16.119: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:16.197870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:17.198356      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:18.126: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:18.198961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:19.199502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:20.133: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:20.200452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:21.201639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:22.139: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:22.202801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:23.203395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:24.144: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:24.204186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:25.205196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:26.151: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:26.205983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:27.206503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:28.159: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:28.207416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:29.207903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:30.165: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:30.208275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:31.208437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:32.171: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:32.209252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:33.209768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:34.179: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:34.210682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:35.211779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:36.184: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:36.212158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:37.212697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:38.192: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:38.213026      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:39.213603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:40.199: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:40.213558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:41.214661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:42.205: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:42.215652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:43.216169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:44.211: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:44.216226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:45.217302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:46.216: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:46.218129      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:47.218703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:48.219474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:48.224: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:49.220226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:50.220775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:50.229: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:51.221734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:52.222269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:52.235: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:53.222789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:54.223361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:54.240: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:55.224416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:56.224658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:56.247: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:57.225204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:23:58.225801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:23:58.253: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:23:59.226329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:00.226967      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:24:00.260: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:24:01.227575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:02.228040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:24:02.265: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:24:03.228900      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:04.229504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:24:04.272: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:24:05.230477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:06.230636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:24:06.279: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:24:07.231123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:08.231668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:24:08.286: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:24:09.232921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:10.233453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:24:10.291: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:24:11.234738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:12.234116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:24:12.297: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:24:13.235155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:14.235983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:24:14.303: INFO: Get pod liveness-3c1f4bc8-37bf-4993-8577-1bf78886348a in namespace container-probe-3704
  E0131 07:24:15.236447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:16.237011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/31/24 07:24:16.303
  Jan 31 07:24:16.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3704" for this suite. @ 01/31/24 07:24:16.324
• [242.804 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 01/31/24 07:24:16.332
  Jan 31 07:24:16.332: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename cronjob @ 01/31/24 07:24:16.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:24:16.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:24:16.353
  STEP: Creating a suspended cronjob @ 01/31/24 07:24:16.358
  STEP: Ensuring no jobs are scheduled @ 01/31/24 07:24:16.366
  E0131 07:24:17.237530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:18.238279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:19.239103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:20.239638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:21.239690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:22.240189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:23.241118      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:24.241829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:25.242074      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:26.242468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:27.242655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:28.243597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:29.243846      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:30.244464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:31.244709      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:32.245399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:33.245537      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:34.245756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:35.246210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:36.246245      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:37.246516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:38.247109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:39.247914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:40.248447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:41.249439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:42.249972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:43.250708      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:44.251325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:45.251449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:46.251572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:47.252402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:48.252994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:49.253401      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:50.254146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:51.254728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:52.255344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:53.256083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:54.256689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:55.257214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:56.257758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:57.258249      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:58.258536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:24:59.259220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:00.259908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:01.259982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:02.260302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:03.260877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:04.261036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:05.261756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:06.262797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:07.263021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:08.263301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:09.263527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:10.263812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:11.264340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:12.264836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:13.265579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:14.266478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:15.266942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:16.267873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:17.268134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:18.268390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:19.269202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:20.269395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:21.270491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:22.271110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:23.271459      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:24.271790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:25.272196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:26.272319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:27.272630      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:28.273229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:29.273417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:30.273958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:31.274621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:32.275132      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:33.275392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:34.275629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:35.275915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:36.277034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:37.277030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:38.277332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:39.277571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:40.278162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:41.278827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:42.279451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:43.280338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:44.281085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:45.281227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:46.281293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:47.282043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:48.282722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:49.283748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:50.284360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:51.285165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:52.285698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:53.286683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:54.287246      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:55.287913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:56.288679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:57.288933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:58.289560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:25:59.290337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:00.290908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:01.291945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:02.292467      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:03.292693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:04.293295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:05.294991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:06.295099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:07.295760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:08.296303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:09.297409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:10.298247      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:11.298403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:12.298652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:13.299756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:14.300507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:15.300918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:16.302188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:17.302472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:18.302985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:19.303405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:20.303978      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:21.304549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:22.305042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:23.305559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:24.306215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:25.306668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:26.306859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:27.307591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:28.308015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:29.308682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:30.309382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:31.310236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:32.310800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:33.311015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:34.311672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:35.312268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:36.312334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:37.312571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:38.312997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:39.313402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:40.313892      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:41.314156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:42.314694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:43.315063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:44.315652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:45.316716      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:46.317812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:47.318080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:48.318758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:49.318942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:50.319470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:51.320281      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:52.320796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:53.321568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:54.322176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:55.322451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:56.322576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:57.323126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:58.323639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:26:59.324347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:00.324941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:01.325433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:02.325954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:03.327072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:04.327621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:05.327931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:06.328938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:07.329544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:08.330179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:09.330399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:10.331099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:11.331704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:12.332250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:13.332839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:14.333321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:15.334386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:16.334541      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:17.334807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:18.335376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:19.335705      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:20.336338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:21.336896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:22.337362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:23.338353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:24.338859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:25.339152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:26.340273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:27.340675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:28.341241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:29.342464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:30.343085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:31.343765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:32.344284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:33.345197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:34.345813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:35.346842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:36.347950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:37.348819      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:38.349458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:39.349768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:40.350306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:41.351478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:42.352141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:43.353309      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:44.353895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:45.355100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:46.356139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:47.357230      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:48.357750      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:49.358791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:50.359278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:51.359358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:52.359982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:53.360825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:54.361384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:55.362520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:56.362592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:57.363057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:58.363940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:27:59.364326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:00.364935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:01.365380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:02.366059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:03.366687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:04.367293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:05.368464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:06.368418      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:07.369502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:08.370412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:09.371291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:10.372191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:11.372352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:12.372826      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:13.373350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:14.374406      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:15.375206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:16.375332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:17.375721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:18.375822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:19.376365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:20.376386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:21.377351      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:22.378442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:23.378875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:24.379953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:25.381148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:26.381958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:27.382538      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:28.382533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:29.383064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:30.384174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:31.385427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:32.386258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:33.386739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:34.386874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:35.387006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:36.388125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:37.388707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:38.389701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:39.390273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:40.390304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:41.391580      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:42.392613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:43.393147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:44.393889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:45.395111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:46.396021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:47.396545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:48.397606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:49.398319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:50.399117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:51.400307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:52.400327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:53.400904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:54.401038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:55.401166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:56.402307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:57.402658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:58.403161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:28:59.403684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:00.403776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:01.404128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:02.404962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:03.405512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:04.406260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:05.407321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:06.407436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:07.407774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:08.408293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:09.408964      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:10.408975      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:11.409276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:12.409652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:13.410205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:14.411015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:15.411086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 01/31/24 07:29:16.375
  STEP: Removing cronjob @ 01/31/24 07:29:16.379
  Jan 31 07:29:16.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1853" for this suite. @ 01/31/24 07:29:16.391
• [300.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 01/31/24 07:29:16.398
  Jan 31 07:29:16.398: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename dns @ 01/31/24 07:29:16.4
  E0131 07:29:16.412117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:29:16.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:29:16.42
  STEP: Creating a test headless service @ 01/31/24 07:29:16.425
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5425.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5425.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local;sleep 1; done
   @ 01/31/24 07:29:16.43
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5425.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5425.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local;sleep 1; done
   @ 01/31/24 07:29:16.43
  STEP: creating a pod to probe DNS @ 01/31/24 07:29:16.43
  STEP: submitting the pod to kubernetes @ 01/31/24 07:29:16.43
  E0131 07:29:17.412789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:18.414176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/31/24 07:29:18.451
  STEP: looking for the results for each expected name from probers @ 01/31/24 07:29:18.456
  Jan 31 07:29:18.474: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:18.479: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:18.484: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:18.489: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:18.494: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:18.498: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:18.498: INFO: Lookups using dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5 failed for: [wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5425.svc.cluster.local jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local]

  Jan 31 07:29:18.526: INFO: Pod client logs for webserver: 
  Jan 31 07:29:18.533: INFO: Pod client logs for querier: 
  Jan 31 07:29:18.541: INFO: Pod client logs for jessie-querier: 
  E0131 07:29:19.414329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:20.414968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:21.415732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:22.416278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:23.416729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:29:23.475: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:23.479: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:23.493: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:23.498: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:23.498: INFO: Lookups using dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5 failed for: [wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local]

  Jan 31 07:29:23.507: INFO: Pod client logs for webserver: 
  Jan 31 07:29:23.514: INFO: Pod client logs for querier: 
  Jan 31 07:29:23.522: INFO: Pod client logs for jessie-querier: 
  E0131 07:29:24.417589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:25.418645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:26.418872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:27.419717      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:28.420377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:29:28.475: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:28.480: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:28.495: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:28.500: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:28.500: INFO: Lookups using dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5 failed for: [wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local]

  Jan 31 07:29:28.509: INFO: Pod client logs for webserver: 
  Jan 31 07:29:28.516: INFO: Pod client logs for querier: 
  Jan 31 07:29:28.525: INFO: Pod client logs for jessie-querier: 
  E0131 07:29:29.421445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:30.422038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:31.422237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:32.422886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:33.423483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:29:33.475: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:33.480: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:33.495: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:33.500: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:33.500: INFO: Lookups using dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5 failed for: [wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local]

  Jan 31 07:29:33.508: INFO: Pod client logs for webserver: 
  Jan 31 07:29:33.516: INFO: Pod client logs for querier: 
  Jan 31 07:29:33.524: INFO: Pod client logs for jessie-querier: 
  E0131 07:29:34.424477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:35.425406      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:36.425645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:37.425829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:38.426260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:29:38.473: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:38.478: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:38.493: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:38.498: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:38.498: INFO: Lookups using dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5 failed for: [wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local]

  Jan 31 07:29:38.506: INFO: Pod client logs for webserver: 
  Jan 31 07:29:38.513: INFO: Pod client logs for querier: 
  Jan 31 07:29:38.520: INFO: Pod client logs for jessie-querier: 
  E0131 07:29:39.426349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:40.427168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:41.427426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:42.428004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:43.428317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:29:43.474: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:43.479: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:43.494: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:43.499: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local from pod dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5: the server could not find the requested resource (get pods dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5)
  Jan 31 07:29:43.499: INFO: Lookups using dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5 failed for: [wheezy_udp@dns-test-service-2.dns-5425.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5425.svc.cluster.local jessie_udp@dns-test-service-2.dns-5425.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5425.svc.cluster.local]

  Jan 31 07:29:43.508: INFO: Pod client logs for webserver: 
  Jan 31 07:29:43.516: INFO: Pod client logs for querier: 
  Jan 31 07:29:43.522: INFO: Pod client logs for jessie-querier: 
  E0131 07:29:44.429155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:45.430316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:46.431349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:47.431852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:48.432408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:29:48.498: INFO: DNS probes using dns-5425/dns-test-f11dfdfd-1bd3-4c6b-8248-e74f70f26df5 succeeded

  STEP: deleting the pod @ 01/31/24 07:29:48.498
  STEP: deleting the test headless service @ 01/31/24 07:29:48.516
  Jan 31 07:29:48.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5425" for this suite. @ 01/31/24 07:29:48.533
• [32.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 01/31/24 07:29:48.54
  Jan 31 07:29:48.541: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename cronjob @ 01/31/24 07:29:48.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:29:48.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:29:48.557
  STEP: Creating a ReplaceConcurrent cronjob @ 01/31/24 07:29:48.563
  STEP: Ensuring a job is scheduled @ 01/31/24 07:29:48.569
  E0131 07:29:49.433473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:50.434317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:51.434959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:52.435547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:53.435823      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:54.436366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:55.437253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:56.437411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:57.438010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:58.438588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:29:59.438836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:00.439410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 01/31/24 07:30:00.574
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/31/24 07:30:00.578
  STEP: Ensuring the job is replaced with a new one @ 01/31/24 07:30:00.582
  E0131 07:30:01.440070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:02.440647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:03.441007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:04.441649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:05.442447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:06.442581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:07.443365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:08.443957      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:09.444120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:10.444631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:11.444747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:12.445156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:13.446028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:14.446571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:15.447677      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:16.448555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:17.449354      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:18.449876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:19.450337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:20.450834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:21.451563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:22.452147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:23.452831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:24.453352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:25.454224      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:26.454379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:27.454816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:28.456042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:29.456241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:30.456752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:31.457375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:32.457922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:33.458358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:34.458938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:35.459415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:36.459508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:37.459992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:38.460559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:39.461623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:40.462155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:41.462786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:42.463343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:43.464268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:44.464840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:45.465532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:46.465569      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:47.466307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:48.466911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:49.467107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:50.467672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:51.468514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:52.469002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:53.469412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:54.470150      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:55.470981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:56.471910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:57.472232      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:58.472814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:30:59.473280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:00.473754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 01/31/24 07:31:00.589
  Jan 31 07:31:00.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1765" for this suite. @ 01/31/24 07:31:00.601
• [72.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 01/31/24 07:31:00.608
  Jan 31 07:31:00.608: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename proxy @ 01/31/24 07:31:00.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:31:00.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:31:00.625
  Jan 31 07:31:00.629: INFO: Creating pod...
  E0131 07:31:01.474753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:02.475547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:31:02.646: INFO: Creating service...
  Jan 31 07:31:02.664: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/pods/agnhost/proxy?method=DELETE
  Jan 31 07:31:02.672: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan 31 07:31:02.672: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/pods/agnhost/proxy?method=OPTIONS
  Jan 31 07:31:02.677: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan 31 07:31:02.677: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/pods/agnhost/proxy?method=PATCH
  Jan 31 07:31:02.681: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan 31 07:31:02.681: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/pods/agnhost/proxy?method=POST
  Jan 31 07:31:02.685: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan 31 07:31:02.685: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/pods/agnhost/proxy?method=PUT
  Jan 31 07:31:02.690: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan 31 07:31:02.690: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/services/e2e-proxy-test-service/proxy?method=DELETE
  Jan 31 07:31:02.697: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan 31 07:31:02.697: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jan 31 07:31:02.703: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan 31 07:31:02.703: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/services/e2e-proxy-test-service/proxy?method=PATCH
  Jan 31 07:31:02.709: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan 31 07:31:02.709: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/services/e2e-proxy-test-service/proxy?method=POST
  Jan 31 07:31:02.715: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan 31 07:31:02.715: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/services/e2e-proxy-test-service/proxy?method=PUT
  Jan 31 07:31:02.721: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan 31 07:31:02.722: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/pods/agnhost/proxy?method=GET
  Jan 31 07:31:02.725: INFO: http.Client request:GET StatusCode:301
  Jan 31 07:31:02.725: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/services/e2e-proxy-test-service/proxy?method=GET
  Jan 31 07:31:02.729: INFO: http.Client request:GET StatusCode:301
  Jan 31 07:31:02.729: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/pods/agnhost/proxy?method=HEAD
  Jan 31 07:31:02.733: INFO: http.Client request:HEAD StatusCode:301
  Jan 31 07:31:02.733: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6409/services/e2e-proxy-test-service/proxy?method=HEAD
  Jan 31 07:31:02.738: INFO: http.Client request:HEAD StatusCode:301
  Jan 31 07:31:02.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6409" for this suite. @ 01/31/24 07:31:02.745
• [2.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 01/31/24 07:31:02.754
  Jan 31 07:31:02.754: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 07:31:02.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:31:02.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:31:02.774
  STEP: Creating secret with name secret-test-7d1cfb0f-46fc-4378-9f99-e739c890ae86 @ 01/31/24 07:31:02.801
  STEP: Creating a pod to test consume secrets @ 01/31/24 07:31:02.806
  E0131 07:31:03.476534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:04.477128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:05.477294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:06.478329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:31:06.832
  Jan 31 07:31:06.837: INFO: Trying to get logs from node nodea08 pod pod-secrets-1fb29644-e164-4833-a79e-1ddf4839120c container secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 07:31:06.847
  Jan 31 07:31:06.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1323" for this suite. @ 01/31/24 07:31:06.865
  STEP: Destroying namespace "secret-namespace-7092" for this suite. @ 01/31/24 07:31:06.871
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 01/31/24 07:31:06.879
  Jan 31 07:31:06.879: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename job @ 01/31/24 07:31:06.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:31:06.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:31:06.899
  STEP: Creating a job @ 01/31/24 07:31:06.904
  STEP: Ensuring active pods == parallelism @ 01/31/24 07:31:06.911
  E0131 07:31:07.479301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:08.479562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 01/31/24 07:31:08.919
  Jan 31 07:31:09.443: INFO: Successfully updated pod "adopt-release-9bp8n"
  STEP: Checking that the Job readopts the Pod @ 01/31/24 07:31:09.443
  E0131 07:31:09.480117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:10.480691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 01/31/24 07:31:11.455
  E0131 07:31:11.481195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:31:11.970: INFO: Successfully updated pod "adopt-release-9bp8n"
  STEP: Checking that the Job releases the Pod @ 01/31/24 07:31:11.97
  E0131 07:31:12.482187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:13.482802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:31:13.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7100" for this suite. @ 01/31/24 07:31:13.985
• [7.113 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 01/31/24 07:31:13.994
  Jan 31 07:31:13.994: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 07:31:13.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:31:14.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:31:14.013
  STEP: Setting up server cert @ 01/31/24 07:31:14.034
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 07:31:14.338
  STEP: Deploying the webhook pod @ 01/31/24 07:31:14.35
  STEP: Wait for the deployment to be ready @ 01/31/24 07:31:14.371
  Jan 31 07:31:14.378: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0131 07:31:14.483782      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:15.484625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/31/24 07:31:16.393
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 07:31:16.409
  E0131 07:31:16.485733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:31:17.409: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 01/31/24 07:31:17.42
  STEP: Creating a custom resource definition that should be denied by the webhook @ 01/31/24 07:31:17.449
  Jan 31 07:31:17.450: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  E0131 07:31:17.486139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:31:17.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9019" for this suite. @ 01/31/24 07:31:17.521
  STEP: Destroying namespace "webhook-markers-4428" for this suite. @ 01/31/24 07:31:17.527
• [3.539 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 01/31/24 07:31:17.534
  Jan 31 07:31:17.534: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 07:31:17.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:31:17.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:31:17.553
  STEP: Setting up server cert @ 01/31/24 07:31:17.576
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 07:31:17.997
  STEP: Deploying the webhook pod @ 01/31/24 07:31:18.004
  STEP: Wait for the deployment to be ready @ 01/31/24 07:31:18.02
  Jan 31 07:31:18.028: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0131 07:31:18.487205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:19.487436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/31/24 07:31:20.044
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 07:31:20.061
  E0131 07:31:20.488021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:31:21.062: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 01/31/24 07:31:21.071
  Jan 31 07:31:21.095: INFO: Waiting for webhook configuration to be ready...
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 01/31/24 07:31:21.217
  STEP: Creating a configMap that should not be mutated @ 01/31/24 07:31:21.226
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 01/31/24 07:31:21.239
  STEP: Creating a configMap that should be mutated @ 01/31/24 07:31:21.248
  Jan 31 07:31:21.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5776" for this suite. @ 01/31/24 07:31:21.317
  STEP: Destroying namespace "webhook-markers-1790" for this suite. @ 01/31/24 07:31:21.323
• [3.794 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 01/31/24 07:31:21.328
  Jan 31 07:31:21.328: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 07:31:21.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:31:21.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:31:21.347
  STEP: creating service in namespace services-1314 @ 01/31/24 07:31:21.352
  STEP: creating service affinity-nodeport in namespace services-1314 @ 01/31/24 07:31:21.352
  STEP: creating replication controller affinity-nodeport in namespace services-1314 @ 01/31/24 07:31:21.369
  I0131 07:31:21.376057      23 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-1314, replica count: 3
  E0131 07:31:21.488715      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:22.489185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:23.489427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0131 07:31:24.427800      23 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 31 07:31:24.449: INFO: Creating new exec pod
  E0131 07:31:24.490533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:25.491454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:26.492204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:31:27.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1314 exec execpod-affinity7vw4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0131 07:31:27.492505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:31:27.698: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jan 31 07:31:27.698: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 07:31:27.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1314 exec execpod-affinity7vw4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.244.30 80'
  Jan 31 07:31:27.909: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.244.30 80\nConnection to 10.101.244.30 80 port [tcp/http] succeeded!\n"
  Jan 31 07:31:27.909: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 07:31:27.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1314 exec execpod-affinity7vw4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.28 31833'
  Jan 31 07:31:28.106: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.28 31833\nConnection to 192.168.100.28 31833 port [tcp/*] succeeded!\n"
  Jan 31 07:31:28.106: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 07:31:28.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1314 exec execpod-affinity7vw4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 31833'
  Jan 31 07:31:28.309: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 31833\nConnection to 192.168.100.129 31833 port [tcp/*] succeeded!\n"
  Jan 31 07:31:28.309: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 07:31:28.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1314 exec execpod-affinity7vw4w -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.28:31833/ ; done'
  E0131 07:31:28.492791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:31:28.651: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31833/\n"
  Jan 31 07:31:28.651: INFO: stdout: "\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66\naffinity-nodeport-k9f66"
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Received response from host: affinity-nodeport-k9f66
  Jan 31 07:31:28.651: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1314, will wait for the garbage collector to delete the pods @ 01/31/24 07:31:28.661
  Jan 31 07:31:28.723: INFO: Deleting ReplicationController affinity-nodeport took: 6.626683ms
  Jan 31 07:31:28.824: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.143505ms
  E0131 07:31:29.492825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:30.493817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:31.494879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:31:32.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1314" for this suite. @ 01/31/24 07:31:32.157
• [10.837 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 01/31/24 07:31:32.166
  Jan 31 07:31:32.166: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sched-pred @ 01/31/24 07:31:32.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:31:32.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:31:32.188
  Jan 31 07:31:32.193: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan 31 07:31:32.202: INFO: Waiting for terminating namespaces to be deleted...
  Jan 31 07:31:32.207: INFO: 
  Logging pods the apiserver thinks is on node nodea08 before test
  Jan 31 07:31:32.215: INFO: replace-28444771-rvxvs from cronjob-1765 started at 2024-01-31 07:31:00 +0000 UTC (1 container statuses recorded)
  Jan 31 07:31:32.216: INFO: 	Container c ready: false, restart count 0
  Jan 31 07:31:32.216: INFO: kube-flannel-ds-qgwxm from kube-flannel started at 2024-01-31 07:08:56 +0000 UTC (1 container statuses recorded)
  Jan 31 07:31:32.216: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 31 07:31:32.216: INFO: kube-proxy-sn68b from kube-system started at 2024-01-30 08:42:19 +0000 UTC (1 container statuses recorded)
  Jan 31 07:31:32.216: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 31 07:31:32.216: INFO: sonobuoy from sonobuoy started at 2024-01-31 06:01:13 +0000 UTC (1 container statuses recorded)
  Jan 31 07:31:32.216: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan 31 07:31:32.216: INFO: sonobuoy-e2e-job-057bc96fa8de4553 from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 07:31:32.216: INFO: 	Container e2e ready: true, restart count 0
  Jan 31 07:31:32.216: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 07:31:32.216: INFO: sonobuoy-systemd-logs-daemon-set-b358b7ceaa5f4c01-zmssj from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 07:31:32.216: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 07:31:32.216: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan 31 07:31:32.216: INFO: 
  Logging pods the apiserver thinks is on node nodeb29 before test
  Jan 31 07:31:32.222: INFO: kube-flannel-ds-rh7j4 from kube-flannel started at 2024-01-30 08:42:26 +0000 UTC (1 container statuses recorded)
  Jan 31 07:31:32.222: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 31 07:31:32.222: INFO: kube-proxy-bd7d8 from kube-system started at 2024-01-30 08:42:26 +0000 UTC (1 container statuses recorded)
  Jan 31 07:31:32.222: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 31 07:31:32.222: INFO: sonobuoy-systemd-logs-daemon-set-b358b7ceaa5f4c01-9bvwd from sonobuoy started at 2024-01-31 06:01:14 +0000 UTC (2 container statuses recorded)
  Jan 31 07:31:32.222: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 31 07:31:32.222: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/31/24 07:31:32.222
  E0131 07:31:32.495052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:33.495640      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/31/24 07:31:34.248
  STEP: Trying to apply a random label on the found node. @ 01/31/24 07:31:34.263
  STEP: verifying the node has the label kubernetes.io/e2e-5aebff0b-d39c-4107-9a70-9b1abfc90c86 42 @ 01/31/24 07:31:34.278
  STEP: Trying to relaunch the pod, now with labels. @ 01/31/24 07:31:34.282
  E0131 07:31:34.496710      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:35.497647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-5aebff0b-d39c-4107-9a70-9b1abfc90c86 off the node nodea08 @ 01/31/24 07:31:36.303
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5aebff0b-d39c-4107-9a70-9b1abfc90c86 @ 01/31/24 07:31:36.322
  Jan 31 07:31:36.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8455" for this suite. @ 01/31/24 07:31:36.331
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 01/31/24 07:31:36.339
  Jan 31 07:31:36.339: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename disruption @ 01/31/24 07:31:36.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:31:36.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:31:36.359
  STEP: Waiting for the pdb to be processed @ 01/31/24 07:31:36.368
  E0131 07:31:36.498214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:37.499138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 01/31/24 07:31:38.399
  Jan 31 07:31:38.403: INFO: running pods: 0 < 3
  E0131 07:31:38.499961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:39.500558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:31:40.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9321" for this suite. @ 01/31/24 07:31:40.415
• [4.088 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 01/31/24 07:31:40.428
  Jan 31 07:31:40.428: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-watch @ 01/31/24 07:31:40.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:31:40.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:31:40.449
  Jan 31 07:31:40.455: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  E0131 07:31:40.500907      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:41.501822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:42.502398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 01/31/24 07:31:43.009
  Jan 31 07:31:43.015: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-31T07:31:43Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-31T07:31:43Z]] name:name1 resourceVersion:171727 uid:5d54df1c-1477-4172-bed4-a2da416025cf] num:map[num1:9223372036854775807 num2:1000000]]}
  E0131 07:31:43.503379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:44.504002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:45.504875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:46.505709      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:47.506398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:48.507330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:49.507772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:50.508077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:51.508395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:52.509023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 01/31/24 07:31:53.017
  Jan 31 07:31:53.027: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-31T07:31:53Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-31T07:31:53Z]] name:name2 resourceVersion:171780 uid:fb2ad921-d8dd-4334-b7f1-d8ece161d3a3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0131 07:31:53.509153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:54.509696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:55.510512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:56.510681      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:57.511321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:58.511903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:31:59.512554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:00.512793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:01.513105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:02.513721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 01/31/24 07:32:03.028
  Jan 31 07:32:03.038: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-31T07:31:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-31T07:32:03Z]] name:name1 resourceVersion:171796 uid:5d54df1c-1477-4172-bed4-a2da416025cf] num:map[num1:9223372036854775807 num2:1000000]]}
  E0131 07:32:03.513969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:04.514489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:05.515489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:06.515637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:07.516139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:08.516760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:09.517199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:10.517720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:11.519208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:12.518525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 01/31/24 07:32:13.038
  Jan 31 07:32:13.049: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-31T07:31:53Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-31T07:32:13Z]] name:name2 resourceVersion:171812 uid:fb2ad921-d8dd-4334-b7f1-d8ece161d3a3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0131 07:32:13.518986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:14.519551      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:15.520566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:16.520598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:17.521165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:18.521701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:19.522357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:20.522948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:21.523894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:22.524479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 01/31/24 07:32:23.05
  Jan 31 07:32:23.061: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-31T07:31:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-31T07:32:03Z]] name:name1 resourceVersion:171828 uid:5d54df1c-1477-4172-bed4-a2da416025cf] num:map[num1:9223372036854775807 num2:1000000]]}
  E0131 07:32:23.524767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:24.525360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:25.526557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:26.527607      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:27.528158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:28.528719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:29.529257      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:30.529747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:31.530788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:32.531318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 01/31/24 07:32:33.061
  Jan 31 07:32:33.070: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-31T07:31:53Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-31T07:32:13Z]] name:name2 resourceVersion:171844 uid:fb2ad921-d8dd-4334-b7f1-d8ece161d3a3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0131 07:32:33.531699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:34.532316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:35.533229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:36.534317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:37.534829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:38.535402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:39.536000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:40.536627      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:41.536765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:42.537291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:43.537914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:32:43.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3815" for this suite. @ 01/31/24 07:32:43.599
• [63.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 01/31/24 07:32:43.607
  Jan 31 07:32:43.607: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename statefulset @ 01/31/24 07:32:43.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:32:43.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:32:43.628
  STEP: Creating service test in namespace statefulset-8135 @ 01/31/24 07:32:43.633
  STEP: Creating stateful set ss in namespace statefulset-8135 @ 01/31/24 07:32:43.639
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8135 @ 01/31/24 07:32:43.647
  Jan 31 07:32:43.651: INFO: Found 0 stateful pods, waiting for 1
  E0131 07:32:44.538525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:45.539388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:46.539521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:47.540119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:48.540801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:49.541321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:50.541896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:51.542894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:52.543352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:53.543841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:32:53.654: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 01/31/24 07:32:53.654
  Jan 31 07:32:53.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-8135 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 31 07:32:53.908: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 31 07:32:53.908: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 31 07:32:53.908: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 31 07:32:53.913: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0131 07:32:54.544959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:55.545090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:56.545895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:57.546428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:58.546984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:32:59.547534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:00.548012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:01.548830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:02.549286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:03.549738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:03.918: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan 31 07:33:03.918: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan 31 07:33:03.939: INFO: POD   NODE     PHASE    GRACE  CONDITIONS
  Jan 31 07:33:03.939: INFO: ss-0  nodea08  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:32:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:32:43 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:32:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:32:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:32:43 +0000 UTC  }]
  Jan 31 07:33:03.939: INFO: 
  Jan 31 07:33:03.939: INFO: StatefulSet ss has not reached scale 3, at 1
  E0131 07:33:04.550478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:04.945: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994878347s
  E0131 07:33:05.551079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:05.953: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.989282698s
  E0131 07:33:06.551500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:06.958: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.982370563s
  E0131 07:33:07.552047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:07.966: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.975727249s
  E0131 07:33:08.553146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:08.973: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.968724745s
  E0131 07:33:09.553688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:09.979: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.962153805s
  E0131 07:33:10.554745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:10.987: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.95545s
  E0131 07:33:11.555817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:11.994: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.948024327s
  E0131 07:33:12.556120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:13.000: INFO: Verifying statefulset ss doesn't scale past 3 for another 940.727088ms
  E0131 07:33:13.557194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8135 @ 01/31/24 07:33:14.002
  Jan 31 07:33:14.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-8135 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 31 07:33:14.203: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 31 07:33:14.203: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 31 07:33:14.203: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 31 07:33:14.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-8135 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 31 07:33:14.408: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jan 31 07:33:14.408: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 31 07:33:14.408: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 31 07:33:14.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-8135 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0131 07:33:14.557654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:14.624: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jan 31 07:33:14.624: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 31 07:33:14.624: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 31 07:33:14.634: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0131 07:33:15.558319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:16.558307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:17.558833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:18.559343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:19.559869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:20.560403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:21.561510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:22.562057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:23.562648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:24.563180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:24.631: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 07:33:24.631: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan 31 07:33:24.631: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 01/31/24 07:33:24.631
  Jan 31 07:33:24.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-8135 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 31 07:33:24.843: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 31 07:33:24.843: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 31 07:33:24.843: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 31 07:33:24.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-8135 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 31 07:33:25.057: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 31 07:33:25.057: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 31 07:33:25.057: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 31 07:33:25.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=statefulset-8135 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 31 07:33:25.276: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 31 07:33:25.277: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 31 07:33:25.277: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 31 07:33:25.277: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan 31 07:33:25.282: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0131 07:33:25.563501      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:26.564575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:27.565149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:28.565767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:29.566384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:30.566938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:31.567816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:32.568675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:33.569260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:34.569882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:35.286: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan 31 07:33:35.286: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jan 31 07:33:35.286: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jan 31 07:33:35.302: INFO: POD   NODE     PHASE    GRACE  CONDITIONS
  Jan 31 07:33:35.302: INFO: ss-0  nodea08  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:32:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:32:43 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:32:43 +0000 UTC  }]
  Jan 31 07:33:35.302: INFO: ss-1  nodeb29  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:03 +0000 UTC  }]
  Jan 31 07:33:35.302: INFO: ss-2  nodea08  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:04 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:03 +0000 UTC  }]
  Jan 31 07:33:35.302: INFO: 
  Jan 31 07:33:35.302: INFO: StatefulSet ss has not reached scale 0, at 3
  E0131 07:33:35.570781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:36.308: INFO: POD   NODE     PHASE      GRACE  CONDITIONS
  Jan 31 07:33:36.308: INFO: ss-1  nodeb29  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:03 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:25 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:25 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-31 07:33:03 +0000 UTC  }]
  Jan 31 07:33:36.308: INFO: 
  Jan 31 07:33:36.308: INFO: StatefulSet ss has not reached scale 0, at 1
  E0131 07:33:36.571833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:37.313: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.988980381s
  E0131 07:33:37.572679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:38.320: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.983140687s
  E0131 07:33:38.572746      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:39.326: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.976995568s
  E0131 07:33:39.573362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:40.332: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.970480367s
  E0131 07:33:40.573497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:41.340: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.963779419s
  E0131 07:33:41.574655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:42.345: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.957126638s
  E0131 07:33:42.575354      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:43.351: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.951467452s
  E0131 07:33:43.575485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:33:44.356: INFO: Verifying statefulset ss doesn't scale past 0 for another 945.288628ms
  E0131 07:33:44.575743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8135 @ 01/31/24 07:33:45.357
  Jan 31 07:33:45.363: INFO: Scaling statefulset ss to 0
  Jan 31 07:33:45.376: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 31 07:33:45.380: INFO: Deleting all statefulset in ns statefulset-8135
  Jan 31 07:33:45.383: INFO: Scaling statefulset ss to 0
  Jan 31 07:33:45.395: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 31 07:33:45.399: INFO: Deleting statefulset ss
  Jan 31 07:33:45.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8135" for this suite. @ 01/31/24 07:33:45.418
• [61.818 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 01/31/24 07:33:45.428
  Jan 31 07:33:45.428: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename taint-multiple-pods @ 01/31/24 07:33:45.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:33:45.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:33:45.445
  Jan 31 07:33:45.450: INFO: Waiting up to 1m0s for all nodes to be ready
  E0131 07:33:45.576533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:46.576947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:47.577355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:48.577944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:49.578323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:50.578834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:51.579527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:52.580195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:53.581041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:54.581614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:55.582553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:56.583625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:57.583807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:58.584377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:33:59.585058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:00.585587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:01.585699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:02.586314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:03.586494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:04.587098      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:05.588064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:06.588941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:07.589376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:08.589960      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:09.590687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:10.591233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:11.592651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:12.592116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:13.592664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:14.593287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:15.594117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:16.594389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:17.595318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:18.595894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:19.596709      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:20.597328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:21.598330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:22.598849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:23.598932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:24.599464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:25.599761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:26.601036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:27.601621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:28.602219      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:29.602316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:30.602901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:31.603490      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:32.604051      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:33.604889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:34.605438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:35.605943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:36.606957      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:37.607076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:38.607610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:39.607942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:40.608485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:41.609186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:42.609694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:43.610022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:44.610332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:34:45.451: INFO: Waiting for terminating namespaces to be deleted...
  Jan 31 07:34:45.456: INFO: Starting informer...
  STEP: Starting pods... @ 01/31/24 07:34:45.456
  E0131 07:34:45.611011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:34:45.680: INFO: Pod1 is running on nodea08. Tainting Node
  E0131 07:34:46.612046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:47.612834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:34:47.909: INFO: Pod2 is running on nodea08. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/31/24 07:34:47.909
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/31/24 07:34:47.929
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 01/31/24 07:34:47.936
  E0131 07:34:48.613023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:49.613633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:50.614167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:51.614453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:52.615064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:53.616020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:34:54.279: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0131 07:34:54.616272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:55.616449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:56.617560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:57.618277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:58.618725      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:34:59.619306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:00.619851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:01.620781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:02.621269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:03.621771      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:04.622421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:05.623491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:06.623688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:07.624271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:08.624900      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:09.625475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:10.626214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:11.627217      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:12.627706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:13.627849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:35:14.347: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/31/24 07:35:14.365
  Jan 31 07:35:14.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2209" for this suite. @ 01/31/24 07:35:14.373
• [88.950 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 01/31/24 07:35:14.379
  Jan 31 07:35:14.379: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename field-validation @ 01/31/24 07:35:14.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:35:14.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:35:14.408
  STEP: apply creating a deployment @ 01/31/24 07:35:14.413
  Jan 31 07:35:14.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6989" for this suite. @ 01/31/24 07:35:14.43
• [0.056 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 01/31/24 07:35:14.436
  Jan 31 07:35:14.436: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename var-expansion @ 01/31/24 07:35:14.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:35:14.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:35:14.455
  E0131 07:35:14.628761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:15.629918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:35:16.479: INFO: Deleting pod "var-expansion-df22f9e3-be48-424f-8523-00cb96262cd2" in namespace "var-expansion-8163"
  Jan 31 07:35:16.489: INFO: Wait up to 5m0s for pod "var-expansion-df22f9e3-be48-424f-8523-00cb96262cd2" to be fully deleted
  E0131 07:35:16.630891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:17.631606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:35:18.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8163" for this suite. @ 01/31/24 07:35:18.506
• [4.080 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 01/31/24 07:35:18.516
  Jan 31 07:35:18.516: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename namespaces @ 01/31/24 07:35:18.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:35:18.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:35:18.537
  STEP: Creating a test namespace @ 01/31/24 07:35:18.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:35:18.558
  STEP: Creating a service in the namespace @ 01/31/24 07:35:18.563
  STEP: Deleting the namespace @ 01/31/24 07:35:18.577
  STEP: Waiting for the namespace to be removed. @ 01/31/24 07:35:18.585
  E0131 07:35:18.632084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:19.632841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:20.632915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:21.633612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:22.634323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:23.634370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 01/31/24 07:35:24.592
  STEP: Verifying there is no service in the namespace @ 01/31/24 07:35:24.61
  Jan 31 07:35:24.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3342" for this suite. @ 01/31/24 07:35:24.62
  STEP: Destroying namespace "nsdeletetest-7089" for this suite. @ 01/31/24 07:35:24.625
  Jan 31 07:35:24.629: INFO: Namespace nsdeletetest-7089 was already deleted
  STEP: Destroying namespace "nsdeletetest-1151" for this suite. @ 01/31/24 07:35:24.629
  E0131 07:35:24.635488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
• [6.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 01/31/24 07:35:24.637
  Jan 31 07:35:24.638: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pods @ 01/31/24 07:35:24.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:35:24.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:35:24.658
  STEP: creating the pod @ 01/31/24 07:35:24.663
  STEP: submitting the pod to kubernetes @ 01/31/24 07:35:24.663
  W0131 07:35:24.673870      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0131 07:35:25.635761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:26.636790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 01/31/24 07:35:26.687
  STEP: updating the pod @ 01/31/24 07:35:26.692
  Jan 31 07:35:27.208: INFO: Successfully updated pod "pod-update-activedeadlineseconds-854612bd-f70f-458c-8bce-0137fb94adba"
  E0131 07:35:27.637996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:28.638761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:29.639102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:30.639243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:35:31.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9122" for this suite. @ 01/31/24 07:35:31.24
• [6.608 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 01/31/24 07:35:31.246
  Jan 31 07:35:31.246: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pods @ 01/31/24 07:35:31.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:35:31.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:35:31.267
  STEP: creating the pod @ 01/31/24 07:35:31.272
  STEP: submitting the pod to kubernetes @ 01/31/24 07:35:31.272
  E0131 07:35:31.639454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:32.640358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 01/31/24 07:35:33.294
  STEP: updating the pod @ 01/31/24 07:35:33.298
  E0131 07:35:33.641302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:35:33.813: INFO: Successfully updated pod "pod-update-54e1a589-eb1e-4a12-bf64-a0b3bfaf740e"
  STEP: verifying the updated pod is in kubernetes @ 01/31/24 07:35:33.817
  Jan 31 07:35:33.822: INFO: Pod update OK
  Jan 31 07:35:33.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3356" for this suite. @ 01/31/24 07:35:33.828
• [2.588 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 01/31/24 07:35:33.835
  Jan 31 07:35:33.835: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 07:35:33.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:35:33.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:35:33.855
  STEP: Creating secret with name secret-test-3f012af3-6064-4068-9858-d81706e37603 @ 01/31/24 07:35:33.86
  STEP: Creating a pod to test consume secrets @ 01/31/24 07:35:33.865
  E0131 07:35:34.642343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:35.642793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:36.643680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:37.644279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:35:37.889
  Jan 31 07:35:37.893: INFO: Trying to get logs from node nodea08 pod pod-secrets-aa15951c-a5ac-4c1b-ab54-7685420e9c46 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 07:35:37.916
  Jan 31 07:35:37.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6618" for this suite. @ 01/31/24 07:35:37.937
• [4.110 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 01/31/24 07:35:37.946
  Jan 31 07:35:37.946: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 07:35:37.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:35:37.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:35:37.966
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 07:35:37.971
  E0131 07:35:38.645454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:39.645678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:40.646038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:41.646587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:35:41.996
  Jan 31 07:35:42.000: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-7944c745-2daf-4e54-b9c2-f74ca60dbbd7 container client-container: <nil>
  STEP: delete the pod @ 01/31/24 07:35:42.009
  Jan 31 07:35:42.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8606" for this suite. @ 01/31/24 07:35:42.034
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 01/31/24 07:35:42.041
  Jan 31 07:35:42.041: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/31/24 07:35:42.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:35:42.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:35:42.062
  Jan 31 07:35:42.067: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:35:42.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4285" for this suite. @ 01/31/24 07:35:42.63
• [0.595 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 01/31/24 07:35:42.637
  Jan 31 07:35:42.637: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 07:35:42.638
  E0131 07:35:42.647211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:35:42.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:35:42.657
  STEP: creating secret secrets-6816/secret-test-61496931-bd44-4ffa-8494-3c7e7ed1a17d @ 01/31/24 07:35:42.662
  STEP: Creating a pod to test consume secrets @ 01/31/24 07:35:42.667
  E0131 07:35:43.647666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:44.648179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:45.648562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:46.649313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:35:46.693
  Jan 31 07:35:46.697: INFO: Trying to get logs from node nodea08 pod pod-configmaps-26955c9f-75a5-41a7-9aca-19aa4fd4fe85 container env-test: <nil>
  STEP: delete the pod @ 01/31/24 07:35:46.708
  Jan 31 07:35:46.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6816" for this suite. @ 01/31/24 07:35:46.732
• [4.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 01/31/24 07:35:46.738
  Jan 31 07:35:46.738: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename subpath @ 01/31/24 07:35:46.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:35:46.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:35:46.76
  STEP: Setting up data @ 01/31/24 07:35:46.765
  STEP: Creating pod pod-subpath-test-configmap-kmzj @ 01/31/24 07:35:46.775
  STEP: Creating a pod to test atomic-volume-subpath @ 01/31/24 07:35:46.775
  E0131 07:35:47.649522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:48.650340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:49.650910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:50.651062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:51.651835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:52.652406      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:53.653297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:54.653859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:55.653937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:56.654520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:57.654669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:58.655225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:35:59.655923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:00.656093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:01.657297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:02.657815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:03.658572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:04.659294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:05.659989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:06.660572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:07.660816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:08.661392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:09.661834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:10.663375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:36:10.862
  Jan 31 07:36:10.867: INFO: Trying to get logs from node nodea08 pod pod-subpath-test-configmap-kmzj container test-container-subpath-configmap-kmzj: <nil>
  STEP: delete the pod @ 01/31/24 07:36:10.877
  STEP: Deleting pod pod-subpath-test-configmap-kmzj @ 01/31/24 07:36:10.895
  Jan 31 07:36:10.895: INFO: Deleting pod "pod-subpath-test-configmap-kmzj" in namespace "subpath-318"
  Jan 31 07:36:10.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-318" for this suite. @ 01/31/24 07:36:10.903
• [24.171 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 01/31/24 07:36:10.909
  Jan 31 07:36:10.909: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 07:36:10.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:36:10.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:36:10.929
  STEP: Creating configMap with name projected-configmap-test-volume-955a77e3-6a04-4f1d-9596-6adcaf522893 @ 01/31/24 07:36:10.934
  STEP: Creating a pod to test consume configMaps @ 01/31/24 07:36:10.938
  E0131 07:36:11.663594      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:12.663939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:13.663962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:14.664229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:36:14.962
  Jan 31 07:36:14.966: INFO: Trying to get logs from node nodea08 pod pod-projected-configmaps-3106b9bd-6d57-4637-8229-4d9c9c5bf4df container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 07:36:14.975
  Jan 31 07:36:14.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2389" for this suite. @ 01/31/24 07:36:14.998
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 01/31/24 07:36:15.004
  Jan 31 07:36:15.005: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/31/24 07:36:15.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:36:15.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:36:15.024
  Jan 31 07:36:15.029: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  E0131 07:36:15.664399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 01/31/24 07:36:16.415
  Jan 31 07:36:16.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 --namespace=crd-publish-openapi-6826 create -f -'
  E0131 07:36:16.665520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:17.666071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:18.559: INFO: stderr: ""
  Jan 31 07:36:18.560: INFO: stdout: "e2e-test-crd-publish-openapi-6862-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jan 31 07:36:18.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 --namespace=crd-publish-openapi-6826 delete e2e-test-crd-publish-openapi-6862-crds test-foo'
  E0131 07:36:18.667248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:18.670: INFO: stderr: ""
  Jan 31 07:36:18.670: INFO: stdout: "e2e-test-crd-publish-openapi-6862-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jan 31 07:36:18.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 --namespace=crd-publish-openapi-6826 apply -f -'
  Jan 31 07:36:18.790: INFO: stderr: ""
  Jan 31 07:36:18.790: INFO: stdout: "e2e-test-crd-publish-openapi-6862-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jan 31 07:36:18.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 --namespace=crd-publish-openapi-6826 delete e2e-test-crd-publish-openapi-6862-crds test-foo'
  Jan 31 07:36:18.899: INFO: stderr: ""
  Jan 31 07:36:18.899: INFO: stdout: "e2e-test-crd-publish-openapi-6862-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 01/31/24 07:36:18.899
  Jan 31 07:36:18.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 --namespace=crd-publish-openapi-6826 create -f -'
  Jan 31 07:36:19.005: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 01/31/24 07:36:19.005
  Jan 31 07:36:19.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 --namespace=crd-publish-openapi-6826 create -f -'
  Jan 31 07:36:19.107: INFO: rc: 1
  Jan 31 07:36:19.107: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 --namespace=crd-publish-openapi-6826 apply -f -'
  Jan 31 07:36:19.211: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 01/31/24 07:36:19.211
  Jan 31 07:36:19.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 --namespace=crd-publish-openapi-6826 create -f -'
  Jan 31 07:36:19.311: INFO: rc: 1
  Jan 31 07:36:19.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 --namespace=crd-publish-openapi-6826 apply -f -'
  Jan 31 07:36:19.422: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 01/31/24 07:36:19.422
  Jan 31 07:36:19.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 explain e2e-test-crd-publish-openapi-6862-crds'
  Jan 31 07:36:19.514: INFO: stderr: ""
  Jan 31 07:36:19.514: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6862-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 01/31/24 07:36:19.515
  Jan 31 07:36:19.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 explain e2e-test-crd-publish-openapi-6862-crds.metadata'
  Jan 31 07:36:19.616: INFO: stderr: ""
  Jan 31 07:36:19.616: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6862-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jan 31 07:36:19.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 explain e2e-test-crd-publish-openapi-6862-crds.spec'
  E0131 07:36:19.667910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:19.712: INFO: stderr: ""
  Jan 31 07:36:19.712: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6862-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jan 31 07:36:19.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 explain e2e-test-crd-publish-openapi-6862-crds.spec.bars'
  Jan 31 07:36:19.810: INFO: stderr: ""
  Jan 31 07:36:19.810: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6862-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 01/31/24 07:36:19.81
  Jan 31 07:36:19.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=crd-publish-openapi-6826 explain e2e-test-crd-publish-openapi-6862-crds.spec.bars2'
  Jan 31 07:36:19.906: INFO: rc: 1
  E0131 07:36:20.669102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:21.317: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6826" for this suite. @ 01/31/24 07:36:21.33
• [6.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 01/31/24 07:36:21.341
  Jan 31 07:36:21.341: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 07:36:21.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:36:21.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:36:21.362
  STEP: creating service in namespace services-7464 @ 01/31/24 07:36:21.367
  STEP: creating service affinity-nodeport-transition in namespace services-7464 @ 01/31/24 07:36:21.367
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7464 @ 01/31/24 07:36:21.384
  I0131 07:36:21.391912      23 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-7464, replica count: 3
  E0131 07:36:21.669848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:22.670233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:23.670946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0131 07:36:24.443313      23 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 31 07:36:24.460: INFO: Creating new exec pod
  E0131 07:36:24.670980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:25.672224      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:26.672868      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:27.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-7464 exec execpod-affinitywnxk2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0131 07:36:27.673147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:27.716: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jan 31 07:36:27.716: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 07:36:27.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-7464 exec execpod-affinitywnxk2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.209.231 80'
  Jan 31 07:36:27.920: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.209.231 80\nConnection to 10.105.209.231 80 port [tcp/http] succeeded!\n"
  Jan 31 07:36:27.920: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 07:36:27.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-7464 exec execpod-affinitywnxk2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.28 31431'
  Jan 31 07:36:28.131: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.28 31431\nConnection to 192.168.100.28 31431 port [tcp/*] succeeded!\n"
  Jan 31 07:36:28.131: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 07:36:28.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-7464 exec execpod-affinitywnxk2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.129 31431'
  Jan 31 07:36:28.319: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.129 31431\nConnection to 192.168.100.129 31431 port [tcp/*] succeeded!\n"
  Jan 31 07:36:28.319: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 07:36:28.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-7464 exec execpod-affinitywnxk2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.28:31431/ ; done'
  Jan 31 07:36:28.665: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n"
  Jan 31 07:36:28.665: INFO: stdout: "\naffinity-nodeport-transition-cf5sc\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-x76nq\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-cf5sc\naffinity-nodeport-transition-cf5sc\naffinity-nodeport-transition-x76nq\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-x76nq\naffinity-nodeport-transition-x76nq\naffinity-nodeport-transition-x76nq\naffinity-nodeport-transition-x76nq\naffinity-nodeport-transition-x76nq"
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-cf5sc
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-x76nq
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-cf5sc
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-cf5sc
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-x76nq
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-x76nq
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-x76nq
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-x76nq
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-x76nq
  Jan 31 07:36:28.665: INFO: Received response from host: affinity-nodeport-transition-x76nq
  E0131 07:36:28.673770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:28.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-7464 exec execpod-affinitywnxk2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.28:31431/ ; done'
  Jan 31 07:36:29.033: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.28:31431/\n"
  Jan 31 07:36:29.033: INFO: stdout: "\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw\naffinity-nodeport-transition-zn2dw"
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Received response from host: affinity-nodeport-transition-zn2dw
  Jan 31 07:36:29.033: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7464, will wait for the garbage collector to delete the pods @ 01/31/24 07:36:29.046
  Jan 31 07:36:29.110: INFO: Deleting ReplicationController affinity-nodeport-transition took: 8.743391ms
  Jan 31 07:36:29.211: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.038736ms
  E0131 07:36:29.673911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:30.673954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:31.674688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:32.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7464" for this suite. @ 01/31/24 07:36:32.042
• [10.711 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 01/31/24 07:36:32.052
  Jan 31 07:36:32.052: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/31/24 07:36:32.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:36:32.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:36:32.072
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 01/31/24 07:36:32.077
  Jan 31 07:36:32.078: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  E0131 07:36:32.675265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:33.440: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  E0131 07:36:33.675612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:34.676646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:35.677859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:36.678041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:37.678539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:38.679409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:39.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9615" for this suite. @ 01/31/24 07:36:39.109
• [7.066 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 01/31/24 07:36:39.118
  Jan 31 07:36:39.118: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename secrets @ 01/31/24 07:36:39.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:36:39.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:36:39.138
  STEP: Creating projection with secret that has name secret-emptykey-test-37cc4630-abfa-4618-820d-3c7e0b4a4230 @ 01/31/24 07:36:39.143
  Jan 31 07:36:39.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9082" for this suite. @ 01/31/24 07:36:39.15
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 01/31/24 07:36:39.159
  Jan 31 07:36:39.159: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-probe @ 01/31/24 07:36:39.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:36:39.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:36:39.179
  STEP: Creating pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060 @ 01/31/24 07:36:39.184
  E0131 07:36:39.679764      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:40.680288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/31/24 07:36:41.202
  Jan 31 07:36:41.206: INFO: Initial restart count of pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb is 0
  Jan 31 07:36:41.209: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:36:41.680663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:42.681259      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:43.215: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:36:43.681652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:44.682231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:45.221: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:36:45.683022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:46.683585      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:47.226: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:36:47.684757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:48.685393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:49.233: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:36:49.686432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:50.687570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:51.240: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:36:51.687711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:52.688309      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:53.245: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:36:53.688808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:54.689273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:55.250: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:36:55.690053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:56.690692      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:57.255: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:36:57.690991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:36:58.691562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:36:59.262: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:36:59.691793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:00.692982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:01.269: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:01.693956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:02.694598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:03.274: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:03.694806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:04.695312      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:05.280: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:05.696492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:06.697116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:07.286: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:07.697620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:08.698260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:09.293: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:09.699045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:10.700131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:11.299: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:11.700482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:12.701045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:13.305: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:13.701203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:14.702171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:15.311: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:15.703006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:16.703595      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:17.318: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:17.704091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:18.704765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:19.325: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:19.705504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:20.706681      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:21.331: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:21.707445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:22.708044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:23.337: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:23.708083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:24.708646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:25.342: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:25.708700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:26.709322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:27.348: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:27.710522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:28.711105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:29.355: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:29.711324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:30.712528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:31.362: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:31.712870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:32.713584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:33.368: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:33.713999      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:34.714583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:35.375: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:35.715098      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:36.715697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:37.380: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:37.716149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:38.716741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:39.387: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:39.717623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:40.718734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:41.393: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:41.719700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:42.720205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:43.398: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  E0131 07:37:43.720291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:44.720898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:45.404: INFO: Get pod test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb in namespace container-probe-6060
  Jan 31 07:37:45.404: INFO: Restart count of pod container-probe-6060/test-grpc-956280da-69c6-420d-b26d-1f05708c2ecb is now 1 (1m4.198529949s elapsed)
  STEP: deleting the pod @ 01/31/24 07:37:45.404
  Jan 31 07:37:45.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6060" for this suite. @ 01/31/24 07:37:45.424
• [66.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 01/31/24 07:37:45.43
  Jan 31 07:37:45.430: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 07:37:45.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:37:45.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:37:45.446
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/31/24 07:37:45.451
  E0131 07:37:45.721814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:46.722807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:47.723123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:48.723700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:37:49.473
  Jan 31 07:37:49.477: INFO: Trying to get logs from node nodea08 pod pod-5eaedf7f-827f-4d3c-a664-0483944f8c0f container test-container: <nil>
  STEP: delete the pod @ 01/31/24 07:37:49.499
  Jan 31 07:37:49.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7643" for this suite. @ 01/31/24 07:37:49.518
• [4.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 01/31/24 07:37:49.523
  Jan 31 07:37:49.523: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/31/24 07:37:49.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:37:49.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:37:49.542
  Jan 31 07:37:49.546: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  E0131 07:37:49.723755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:50.724236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:51.724887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:52.725544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:53.726484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:54.727010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:37:55.727292      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:55.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7136" for this suite. @ 01/31/24 07:37:55.803
• [6.288 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 01/31/24 07:37:55.812
  Jan 31 07:37:55.812: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename deployment @ 01/31/24 07:37:55.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:37:55.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:37:55.832
  STEP: creating a Deployment @ 01/31/24 07:37:55.84
  STEP: waiting for Deployment to be created @ 01/31/24 07:37:55.848
  STEP: waiting for all Replicas to be Ready @ 01/31/24 07:37:55.85
  Jan 31 07:37:55.852: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 31 07:37:55.852: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 31 07:37:55.862: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 31 07:37:55.863: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 31 07:37:55.878: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 31 07:37:55.878: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 31 07:37:55.897: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 31 07:37:55.898: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0131 07:37:56.728239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:57.045: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jan 31 07:37:57.045: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jan 31 07:37:57.159: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 01/31/24 07:37:57.159
  Jan 31 07:37:57.171: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 01/31/24 07:37:57.171
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 0
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:37:57.174: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:37:57.184: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:37:57.184: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:37:57.207: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:37:57.207: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:37:57.215: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  Jan 31 07:37:57.215: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  Jan 31 07:37:57.230: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  Jan 31 07:37:57.230: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  E0131 07:37:57.728605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:58.061: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:37:58.061: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:37:58.075: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  STEP: listing Deployments @ 01/31/24 07:37:58.076
  Jan 31 07:37:58.079: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 01/31/24 07:37:58.08
  Jan 31 07:37:58.100: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 01/31/24 07:37:58.1
  Jan 31 07:37:58.110: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 31 07:37:58.114: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 31 07:37:58.138: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 31 07:37:58.151: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 31 07:37:58.158: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0131 07:37:58.729294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:37:59.082: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 31 07:37:59.097: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 31 07:37:59.104: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 31 07:37:59.115: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0131 07:37:59.730237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:38:00.185: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 01/31/24 07:38:00.206
  STEP: fetching the DeploymentStatus @ 01/31/24 07:38:00.219
  Jan 31 07:38:00.225: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  Jan 31 07:38:00.225: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  Jan 31 07:38:00.225: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  Jan 31 07:38:00.225: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  Jan 31 07:38:00.226: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 1
  Jan 31 07:38:00.226: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:38:00.226: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:38:00.226: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:38:00.226: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 2
  Jan 31 07:38:00.226: INFO: observed Deployment test-deployment in namespace deployment-3856 with ReadyReplicas 3
  STEP: deleting the Deployment @ 01/31/24 07:38:00.226
  Jan 31 07:38:00.237: INFO: observed event type MODIFIED
  Jan 31 07:38:00.237: INFO: observed event type MODIFIED
  Jan 31 07:38:00.237: INFO: observed event type MODIFIED
  Jan 31 07:38:00.237: INFO: observed event type MODIFIED
  Jan 31 07:38:00.237: INFO: observed event type MODIFIED
  Jan 31 07:38:00.237: INFO: observed event type MODIFIED
  Jan 31 07:38:00.237: INFO: observed event type MODIFIED
  Jan 31 07:38:00.237: INFO: observed event type MODIFIED
  Jan 31 07:38:00.238: INFO: observed event type MODIFIED
  Jan 31 07:38:00.238: INFO: observed event type MODIFIED
  Jan 31 07:38:00.238: INFO: observed event type MODIFIED
  Jan 31 07:38:00.238: INFO: observed event type MODIFIED
  Jan 31 07:38:00.238: INFO: observed event type MODIFIED
  Jan 31 07:38:00.241: INFO: Log out all the ReplicaSets if there is no deployment created
  Jan 31 07:38:00.246: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3856",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b950e032-834c-4ad7-b94e-3cd1571af54a",
      ResourceVersion: (string) (len=6) "173320",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d4188703-17eb-4fc2-882f-3379cf25a24f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 34 31 38  38 37 30 33 2d 31 37 65  |":\"d4188703-17e|
              00000130  62 2d 34 66 63 32 2d 38  38 32 66 2d 33 33 37 39  |b-4fc2-882f-3379|
              00000140  63 66 32 35 61 32 34 66  5c 22 7d 22 3a 7b 7d 7d  |cf25a24f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jan 31 07:38:00.252: INFO: pod: "test-deployment-64fd565c98-dfz8t":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-dfz8t",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-3856",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5837333-31c8-44cd-904c-1b60368cbb88",
      ResourceVersion: (string) (len=6) "173314",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283482,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "b950e032-834c-4ad7-b94e-3cd1571af54a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 39 35 30 65 30 33 32  |uid\":\"b950e032|
              000000a0  2d 38 33 34 63 2d 34 61  64 37 2d 62 39 34 65 2d  |-834c-4ad7-b94e-|
              000000b0  33 63 64 31 35 37 31 61  66 35 34 61 5c 22 7d 22  |3cd1571af54a\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  33 30 5c 22 7d 22 3a 7b  |.244.1.230\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zvdj8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zvdj8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) (len=12) "10.244.1.230",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.230"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842283477,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=29) "docker.io/coredgeio/pause:3.9",
          ImageID: (string) (len=97) "docker.io/coredgeio/pause@sha256:0fc1f3b764be56f7c881a69cbd553ae25a2b5523c6901fbacb8270307c29d0c4",
          ContainerID: (string) (len=77) "containerd://fe67a2ecfbbd0a1db0b4010fc67437f948758a5cfbd16b151a1ffcc1ed94c5b3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jan 31 07:38:00.257: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3856",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d5c2ad4-5c9e-40c6-9cc7-410de8a538c3",
      ResourceVersion: (string) (len=6) "173238",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283475,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d4188703-17eb-4fc2-882f-3379cf25a24f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 34 31 38  38 37 30 33 2d 31 37 65  |":\"d4188703-17e|
              00000130  62 2d 34 66 63 32 2d 38  38 32 66 2d 33 33 37 39  |b-4fc2-882f-3379|
              00000140  63 66 32 35 61 32 34 66  5c 22 7d 22 3a 7b 7d 7d  |cf25a24f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jan 31 07:38:00.262: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3856",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "155e51e0-8f01-47a9-87ef-bb93e67aeae7",
      ResourceVersion: (string) (len=6) "173309",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283478,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d4188703-17eb-4fc2-882f-3379cf25a24f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 34 31 38  38 37 30 33 2d 31 37 65  |":\"d4188703-17e|
              00000130  62 2d 34 66 63 32 2d 38  38 32 66 2d 33 33 37 39  |b-4fc2-882f-3379|
              00000140  63 66 32 35 61 32 34 66  5c 22 7d 22 3a 7b 7d 7d  |cf25a24f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jan 31 07:38:00.268: INFO: pod: "test-deployment-79ff746c4-285br":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-285br",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-3856",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0a23ea1-4c32-4c5a-a7c8-bcdf690af66a",
      ResourceVersion: (string) (len=6) "173329",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283481,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "155e51e0-8f01-47a9-87ef-bb93e67aeae7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 35 35 65 35 31 65 30  |uid\":\"155e51e0|
              000000a0  2d 38 66 30 31 2d 34 37  61 39 2d 38 37 65 66 2d  |-8f01-47a9-87ef-|
              000000b0  62 62 39 33 65 36 37 61  65 61 65 37 5c 22 7d 22  |bb93e67aeae7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 32  32 38 5c 22 7d 22 3a 7b  |.244.2.228\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xft8d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xft8d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.129"
        }
      },
      PodIP: (string) (len=12) "10.244.2.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842283479,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6dac14b8647edbfcacee21b242ac949346b06f8675507e638ccf124819f78664",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jan 31 07:38:00.270: INFO: pod: "test-deployment-79ff746c4-8mn2n":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-8mn2n",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-3856",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0512db5e-bb63-4793-8fce-c3f33891b2a5",
      ResourceVersion: (string) (len=6) "173328",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283478,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283481,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "155e51e0-8f01-47a9-87ef-bb93e67aeae7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 35 35 65 35 31 65 30  |uid\":\"155e51e0|
              000000a0  2d 38 66 30 31 2d 34 37  61 39 2d 38 37 65 66 2d  |-8f01-47a9-87ef-|
              000000b0  62 62 39 33 65 36 37 61  65 61 65 37 5c 22 7d 22  |bb93e67aeae7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  33 31 5c 22 7d 22 3a 7b  |.244.1.231\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fv49g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fv49g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) (len=12) "10.244.1.231",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.231"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283478,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842283478,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c6883f29df58bae0eadcefcb0bdb8a08fa926819c7ab9ce478729ff7fcaf0398",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jan 31 07:38:00.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3856" for this suite. @ 01/31/24 07:38:00.277
• [4.470 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 01/31/24 07:38:00.282
  Jan 31 07:38:00.282: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename job @ 01/31/24 07:38:00.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:38:00.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:38:00.302
  STEP: Creating a suspended job @ 01/31/24 07:38:00.31
  STEP: Patching the Job @ 01/31/24 07:38:00.316
  STEP: Watching for Job to be patched @ 01/31/24 07:38:00.324
  Jan 31 07:38:00.326: INFO: Event ADDED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m] and annotations: map[]
  Jan 31 07:38:00.326: INFO: Event MODIFIED found for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[]
  STEP: Updating the job @ 01/31/24 07:38:00.326
  STEP: Watching for Job to be updated @ 01/31/24 07:38:00.338
  Jan 31 07:38:00.340: INFO: Event MODIFIED found for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:00.340: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 01/31/24 07:38:00.34
  Jan 31 07:38:00.343: INFO: Job: e2e-qcx4m as labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched]
  STEP: Waiting for job to complete @ 01/31/24 07:38:00.343
  E0131 07:38:00.730858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:01.731174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:02.731438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:03.732034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:04.732911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:05.733963      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:06.734907      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:07.735474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:08.736084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:09.736772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 01/31/24 07:38:10.355
  STEP: Watching for Job to be deleted @ 01/31/24 07:38:10.363
  Jan 31 07:38:10.366: INFO: Event MODIFIED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:10.366: INFO: Event MODIFIED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:10.366: INFO: Event MODIFIED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:10.367: INFO: Event MODIFIED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:10.367: INFO: Event MODIFIED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:10.367: INFO: Event MODIFIED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:10.367: INFO: Event MODIFIED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:10.367: INFO: Event MODIFIED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:10.367: INFO: Event MODIFIED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:10.367: INFO: Event MODIFIED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:10.367: INFO: Event MODIFIED observed for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  Jan 31 07:38:10.368: INFO: Event DELETED found for Job e2e-qcx4m in namespace job-9000 with labels: map[e2e-job-label:e2e-qcx4m e2e-qcx4m:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 01/31/24 07:38:10.368
  Jan 31 07:38:10.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9000" for this suite. @ 01/31/24 07:38:10.38
• [10.102 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 01/31/24 07:38:10.384
  Jan 31 07:38:10.385: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename containers @ 01/31/24 07:38:10.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:38:10.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:38:10.402
  STEP: Creating a pod to test override command @ 01/31/24 07:38:10.407
  E0131 07:38:10.737358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:11.738296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:12.738478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:13.739134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:38:14.43
  Jan 31 07:38:14.434: INFO: Trying to get logs from node nodea08 pod client-containers-545ec599-44d9-4b3f-b0b4-9097d23bdbdb container agnhost-container: <nil>
  STEP: delete the pod @ 01/31/24 07:38:14.445
  Jan 31 07:38:14.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5286" for this suite. @ 01/31/24 07:38:14.471
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 01/31/24 07:38:14.477
  Jan 31 07:38:14.477: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-probe @ 01/31/24 07:38:14.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:38:14.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:38:14.498
  E0131 07:38:14.739239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:15.740156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:16.741154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:17.741791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:18.742451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:19.742600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:20.742623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:21.742901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:22.743658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:23.744756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:24.745879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:25.746402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:26.746946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:27.747068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:28.747928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:29.748742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:30.749754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:31.750507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:32.750781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:33.751064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:34.752293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:35.752981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:36.753938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:37.754760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:38.755622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:39.756733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:40.756752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:41.757563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:42.758052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:43.758979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:44.759581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:45.760784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:46.761193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:47.762314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:48.762981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:49.763652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:50.764641      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:51.764838      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:52.765948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:53.766434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:54.767007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:55.768060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:56.768751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:57.768874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:58.769242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:38:59.770306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:00.771436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:01.771563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:02.772409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:03.773047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:04.773802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:05.773765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:06.774176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:07.774711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:08.774968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:09.775931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:10.776258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:11.776510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:12.777526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:13.777730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:39:14.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6679" for this suite. @ 01/31/24 07:39:14.525
• [60.055 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 01/31/24 07:39:14.533
  Jan 31 07:39:14.533: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename configmap @ 01/31/24 07:39:14.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:39:14.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:39:14.554
  STEP: Creating configMap with name configmap-test-upd-ff4029d7-3f0a-433c-aa8b-b7254e9e0560 @ 01/31/24 07:39:14.563
  STEP: Creating the pod @ 01/31/24 07:39:14.568
  E0131 07:39:14.778586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:15.779287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-ff4029d7-3f0a-433c-aa8b-b7254e9e0560 @ 01/31/24 07:39:16.6
  STEP: waiting to observe update in volume @ 01/31/24 07:39:16.605
  E0131 07:39:16.779326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:17.779571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:18.780634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:19.781149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:20.782226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:21.782760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:22.783409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:23.784005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:24.784726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:25.786164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:26.786845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:27.787421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:28.787929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:29.788448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:30.789236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:31.789742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:32.790660      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:33.791249      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:34.791664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:35.792770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:36.793114      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:37.793686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:38.794793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:39.795438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:40.796215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:41.796726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:42.797848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:43.798401      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:44.798470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:45.799550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:46.800257      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:47.800926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:48.801195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:49.802212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:50.803347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:51.803848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:52.804486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:53.805007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:54.806170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:55.806273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:56.806840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:57.807938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:58.808382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:39:59.808621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:00.809727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:01.810333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:02.810921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:03.811163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:04.812280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:05.812488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:06.813073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:07.813506      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:08.814269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:09.814577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:10.815678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:11.816607      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:12.817222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:13.817987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:14.818953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:15.819806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:16.820704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:17.821196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:18.821722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:19.821950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:20.822986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:21.823086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:22.824214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:23.824275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:24.824512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:25.825744      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:26.826585      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:27.827016      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:28.827605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:29.827816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:30.828860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:31.829345      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:32.829566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:33.830362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:34.830628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:35.831651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:36.832203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:37.833427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:38.834422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:39.835776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:40.835591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:41.836223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:42.837076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:40:43.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8491" for this suite. @ 01/31/24 07:40:43.164
• [88.637 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 01/31/24 07:40:43.17
  Jan 31 07:40:43.170: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename namespaces @ 01/31/24 07:40:43.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:40:43.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:40:43.199
  STEP: Updating Namespace "namespaces-46" @ 01/31/24 07:40:43.204
  Jan 31 07:40:43.212: INFO: Namespace "namespaces-46" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"01c5356d-ad26-4dcb-82ac-b296ae9572e8", "kubernetes.io/metadata.name":"namespaces-46", "namespaces-46":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jan 31 07:40:43.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-46" for this suite. @ 01/31/24 07:40:43.216
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 01/31/24 07:40:43.223
  Jan 31 07:40:43.223: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename downward-api @ 01/31/24 07:40:43.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:40:43.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:40:43.242
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 07:40:43.246
  E0131 07:40:43.837121      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:44.837994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:45.839064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:46.839947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:40:47.272
  Jan 31 07:40:47.276: INFO: Trying to get logs from node nodea08 pod downwardapi-volume-de7aafcf-9ad4-4415-b762-9ea7811d99f0 container client-container: <nil>
  STEP: delete the pod @ 01/31/24 07:40:47.286
  Jan 31 07:40:47.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1827" for this suite. @ 01/31/24 07:40:47.308
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 01/31/24 07:40:47.315
  Jan 31 07:40:47.315: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 07:40:47.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:40:47.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:40:47.337
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/31/24 07:40:47.343
  E0131 07:40:47.840549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:48.841843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:49.842539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:50.843482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:40:51.371
  Jan 31 07:40:51.376: INFO: Trying to get logs from node nodea08 pod pod-e03d556c-e999-4288-9e3a-255939edda30 container test-container: <nil>
  STEP: delete the pod @ 01/31/24 07:40:51.386
  Jan 31 07:40:51.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4526" for this suite. @ 01/31/24 07:40:51.414
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 01/31/24 07:40:51.422
  Jan 31 07:40:51.422: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/31/24 07:40:51.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:40:51.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:40:51.446
  Jan 31 07:40:51.452: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  E0131 07:40:51.844503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:40:52.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9379" for this suite. @ 01/31/24 07:40:52.487
• [1.073 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 01/31/24 07:40:52.495
  Jan 31 07:40:52.495: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename emptydir @ 01/31/24 07:40:52.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:40:52.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:40:52.512
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 01/31/24 07:40:52.516
  E0131 07:40:52.845304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:53.845918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:54.846341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:55.847076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:40:56.536
  Jan 31 07:40:56.540: INFO: Trying to get logs from node nodea08 pod pod-4e184eb4-0d47-4fd1-86ad-10153a4ddb23 container test-container: <nil>
  STEP: delete the pod @ 01/31/24 07:40:56.547
  Jan 31 07:40:56.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7433" for this suite. @ 01/31/24 07:40:56.565
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 01/31/24 07:40:56.573
  Jan 31 07:40:56.573: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 07:40:56.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:40:56.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:40:56.59
  STEP: Creating projection with secret that has name projected-secret-test-map-5d0fd539-142a-449f-a002-9a8986172e23 @ 01/31/24 07:40:56.594
  STEP: Creating a pod to test consume secrets @ 01/31/24 07:40:56.6
  E0131 07:40:56.848030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:57.849060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:58.849595      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:40:59.850169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:41:00.621
  Jan 31 07:41:00.626: INFO: Trying to get logs from node nodea08 pod pod-projected-secrets-126423c1-20df-46ca-acca-1627a8be5a45 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/31/24 07:41:00.636
  Jan 31 07:41:00.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7649" for this suite. @ 01/31/24 07:41:00.663
• [4.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 01/31/24 07:41:00.669
  Jan 31 07:41:00.669: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename apf @ 01/31/24 07:41:00.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:41:00.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:41:00.691
  STEP: getting /apis @ 01/31/24 07:41:00.696
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/31/24 07:41:00.704
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/31/24 07:41:00.706
  STEP: creating @ 01/31/24 07:41:00.708
  STEP: getting @ 01/31/24 07:41:00.728
  STEP: listing @ 01/31/24 07:41:00.731
  STEP: watching @ 01/31/24 07:41:00.735
  Jan 31 07:41:00.735: INFO: starting watch
  STEP: patching @ 01/31/24 07:41:00.736
  STEP: updating @ 01/31/24 07:41:00.742
  Jan 31 07:41:00.751: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 01/31/24 07:41:00.751
  STEP: patching /status @ 01/31/24 07:41:00.755
  STEP: updating /status @ 01/31/24 07:41:00.762
  STEP: deleting @ 01/31/24 07:41:00.773
  STEP: deleting a collection @ 01/31/24 07:41:00.784
  Jan 31 07:41:00.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4913" for this suite. @ 01/31/24 07:41:00.805
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 01/31/24 07:41:00.811
  Jan 31 07:41:00.811: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename pod-network-test @ 01/31/24 07:41:00.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:41:00.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:41:00.831
  STEP: Performing setup for networking test in namespace pod-network-test-3257 @ 01/31/24 07:41:00.836
  STEP: creating a selector @ 01/31/24 07:41:00.836
  STEP: Creating the service pods in kubernetes @ 01/31/24 07:41:00.836
  Jan 31 07:41:00.836: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0131 07:41:00.850131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:01.850988      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:02.851858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:03.852547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:04.853648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:05.854591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:06.855170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:07.855623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:08.856222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:09.856748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:10.856928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:11.857614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:12.858183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/31/24 07:41:12.911
  E0131 07:41:13.858473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:14.859247      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:14.948: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan 31 07:41:14.948: INFO: Going to poll 10.244.1.243 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Jan 31 07:41:14.952: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.243 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3257 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:41:14.952: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:41:14.953: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:41:14.953: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3257/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.243+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0131 07:41:15.860007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:16.077: INFO: Found all 1 expected endpoints: [netserver-0]
  Jan 31 07:41:16.077: INFO: Going to poll 10.244.2.229 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Jan 31 07:41:16.082: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.229 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3257 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 31 07:41:16.083: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  Jan 31 07:41:16.083: INFO: ExecWithOptions: Clientset creation
  Jan 31 07:41:16.084: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3257/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.229+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0131 07:41:16.860262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:17.177: INFO: Found all 1 expected endpoints: [netserver-1]
  Jan 31 07:41:17.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3257" for this suite. @ 01/31/24 07:41:17.184
• [16.381 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 01/31/24 07:41:17.192
  Jan 31 07:41:17.192: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/31/24 07:41:17.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:41:17.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:41:17.215
  STEP: Creating two CSIDrivers @ 01/31/24 07:41:17.22
  STEP: Getting "inline-driver-50d1ab75-75a3-45be-9d7e-e134545999fd" & "inline-driver-2f13a87d-918c-4e6d-8941-f19814adc798" @ 01/31/24 07:41:17.237
  STEP: Patching the CSIDriver "inline-driver-2f13a87d-918c-4e6d-8941-f19814adc798" @ 01/31/24 07:41:17.244
  STEP: Updating the CSIDriver "inline-driver-2f13a87d-918c-4e6d-8941-f19814adc798" @ 01/31/24 07:41:17.248
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8262" @ 01/31/24 07:41:17.258
  STEP: Deleting CSIDriver "inline-driver-50d1ab75-75a3-45be-9d7e-e134545999fd" @ 01/31/24 07:41:17.261
  STEP: Confirm deletion of CSIDriver "inline-driver-50d1ab75-75a3-45be-9d7e-e134545999fd" @ 01/31/24 07:41:17.266
  STEP: Deleting CSIDriver "inline-driver-2f13a87d-918c-4e6d-8941-f19814adc798" via DeleteCollection @ 01/31/24 07:41:17.271
  STEP: Confirm deletion of CSIDriver "inline-driver-2f13a87d-918c-4e6d-8941-f19814adc798" @ 01/31/24 07:41:17.277
  Jan 31 07:41:17.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8262" for this suite. @ 01/31/24 07:41:17.287
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 01/31/24 07:41:17.31
  Jan 31 07:41:17.310: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename webhook @ 01/31/24 07:41:17.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:41:17.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:41:17.33
  STEP: Setting up server cert @ 01/31/24 07:41:17.351
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/31/24 07:41:17.666
  STEP: Deploying the webhook pod @ 01/31/24 07:41:17.676
  STEP: Wait for the deployment to be ready @ 01/31/24 07:41:17.693
  Jan 31 07:41:17.700: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0131 07:41:17.861439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:18.861503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/31/24 07:41:19.72
  STEP: Verifying the service has paired with the endpoint @ 01/31/24 07:41:19.736
  E0131 07:41:19.862554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:20.738: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/31/24 07:41:20.746
  STEP: create a pod @ 01/31/24 07:41:20.774
  E0131 07:41:20.862975      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:21.863864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 01/31/24 07:41:22.788
  Jan 31 07:41:22.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=webhook-3365 attach --namespace=webhook-3365 to-be-attached-pod -i -c=container1'
  E0131 07:41:22.864820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:22.914: INFO: rc: 1
  Jan 31 07:41:22.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3365" for this suite. @ 01/31/24 07:41:22.97
  STEP: Destroying namespace "webhook-markers-9272" for this suite. @ 01/31/24 07:41:22.979
• [5.675 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 01/31/24 07:41:22.985
  Jan 31 07:41:22.986: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename container-runtime @ 01/31/24 07:41:22.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:41:22.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:41:23.002
  STEP: create the container @ 01/31/24 07:41:23.007
  W0131 07:41:23.016732      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/31/24 07:41:23.016
  E0131 07:41:23.865465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:24.866034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:25.866254      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/31/24 07:41:26.036
  STEP: the container should be terminated @ 01/31/24 07:41:26.04
  STEP: the termination message should be set @ 01/31/24 07:41:26.04
  Jan 31 07:41:26.040: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 01/31/24 07:41:26.04
  Jan 31 07:41:26.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1353" for this suite. @ 01/31/24 07:41:26.058
• [3.078 seconds]
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 01/31/24 07:41:26.064
  Jan 31 07:41:26.064: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename services @ 01/31/24 07:41:26.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:41:26.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:41:26.084
  STEP: creating service endpoint-test2 in namespace services-1219 @ 01/31/24 07:41:26.088
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1219 to expose endpoints map[] @ 01/31/24 07:41:26.102
  Jan 31 07:41:26.105: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0131 07:41:26.867095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:27.118: INFO: successfully validated that service endpoint-test2 in namespace services-1219 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1219 @ 01/31/24 07:41:27.118
  E0131 07:41:27.867577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:28.868215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1219 to expose endpoints map[pod1:[80]] @ 01/31/24 07:41:29.144
  Jan 31 07:41:29.159: INFO: successfully validated that service endpoint-test2 in namespace services-1219 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 01/31/24 07:41:29.159
  Jan 31 07:41:29.159: INFO: Creating new exec pod
  E0131 07:41:29.868844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:30.870035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:31.870416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:32.179: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0131 07:41:32.871448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:33.872043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:34.408: INFO: rc: 1
  Jan 31 07:41:34.408: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jan 31 07:41:34.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0131 07:41:34.872879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:35.873364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:36.629: INFO: rc: 1
  Jan 31 07:41:36.629: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jan 31 07:41:36.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0131 07:41:36.874431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:37.875396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:38.852: INFO: rc: 1
  Jan 31 07:41:38.852: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jan 31 07:41:38.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0131 07:41:38.875829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:39.876324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:40.876665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:41.056: INFO: rc: 1
  Jan 31 07:41:41.056: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jan 31 07:41:41.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jan 31 07:41:41.283: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jan 31 07:41:41.283: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 07:41:41.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.43.170 80'
  Jan 31 07:41:41.497: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.43.170 80\nConnection to 10.96.43.170 80 port [tcp/http] succeeded!\n"
  Jan 31 07:41:41.498: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-1219 @ 01/31/24 07:41:41.498
  E0131 07:41:41.876854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:42.877509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1219 to expose endpoints map[pod1:[80] pod2:[80]] @ 01/31/24 07:41:43.52
  Jan 31 07:41:43.536: INFO: successfully validated that service endpoint-test2 in namespace services-1219 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 01/31/24 07:41:43.536
  E0131 07:41:43.877885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:44.538: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jan 31 07:41:44.750: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jan 31 07:41:44.750: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 07:41:44.750: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.43.170 80'
  E0131 07:41:44.878492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:44.968: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.43.170 80\nConnection to 10.96.43.170 80 port [tcp/http] succeeded!\n"
  Jan 31 07:41:44.968: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1219 @ 01/31/24 07:41:44.968
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1219 to expose endpoints map[pod2:[80]] @ 01/31/24 07:41:44.981
  Jan 31 07:41:44.992: INFO: successfully validated that service endpoint-test2 in namespace services-1219 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 01/31/24 07:41:44.992
  E0131 07:41:45.879085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:45.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jan 31 07:41:46.207: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jan 31 07:41:46.207: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 31 07:41:46.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=services-1219 exec execpod98hgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.43.170 80'
  Jan 31 07:41:46.424: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.43.170 80\nConnection to 10.96.43.170 80 port [tcp/http] succeeded!\n"
  Jan 31 07:41:46.425: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-1219 @ 01/31/24 07:41:46.425
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1219 to expose endpoints map[] @ 01/31/24 07:41:46.443
  Jan 31 07:41:46.451: INFO: successfully validated that service endpoint-test2 in namespace services-1219 exposes endpoints map[]
  Jan 31 07:41:46.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1219" for this suite. @ 01/31/24 07:41:46.472
• [20.416 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 01/31/24 07:41:46.48
  Jan 31 07:41:46.480: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubectl @ 01/31/24 07:41:46.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:41:46.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:41:46.502
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/31/24 07:41:46.508
  Jan 31 07:41:46.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-801 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jan 31 07:41:46.624: INFO: stderr: ""
  Jan 31 07:41:46.624: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 01/31/24 07:41:46.624
  E0131 07:41:46.879731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:47.879845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:48.880706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:49.881209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:50.882380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/31/24 07:41:51.676
  Jan 31 07:41:51.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-801 get pod e2e-test-httpd-pod -o json'
  Jan 31 07:41:51.774: INFO: stderr: ""
  Jan 31 07:41:51.774: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-01-31T07:41:46Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-801\",\n        \"resourceVersion\": \"174336\",\n        \"uid\": \"39091c83-40e8-4fa1-a042-0ecee4688e9c\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-vmwhf\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"nodea08\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-vmwhf\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-31T07:41:48Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-31T07:41:46Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-31T07:41:48Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-31T07:41:48Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-31T07:41:46Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://85bcb4d05aad05030a84bb63d0b5c0a51ea996c0bcf17c98ecfbf8fd90ddad78\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-01-31T07:41:47Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.100.28\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.100.28\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.250\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.250\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-01-31T07:41:46Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 01/31/24 07:41:51.775
  Jan 31 07:41:51.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-801 replace -f -'
  E0131 07:41:51.882915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:51.974: INFO: stderr: ""
  Jan 31 07:41:51.974: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 01/31/24 07:41:51.974
  Jan 31 07:41:51.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-388894307 --namespace=kubectl-801 delete pods e2e-test-httpd-pod'
  E0131 07:41:52.883394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:53.884001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:41:54.095: INFO: stderr: ""
  Jan 31 07:41:54.095: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jan 31 07:41:54.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-801" for this suite. @ 01/31/24 07:41:54.101
• [7.628 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 01/31/24 07:41:54.108
  Jan 31 07:41:54.108: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename gc @ 01/31/24 07:41:54.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:41:54.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:41:54.129
  STEP: create the deployment @ 01/31/24 07:41:54.134
  W0131 07:41:54.142359      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/31/24 07:41:54.142
  STEP: delete the deployment @ 01/31/24 07:41:54.656
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 01/31/24 07:41:54.664
  E0131 07:41:54.884788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/31/24 07:41:55.185
  Jan 31 07:41:55.315: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 31 07:41:55.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5934" for this suite. @ 01/31/24 07:41:55.321
• [1.222 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 01/31/24 07:41:55.33
  Jan 31 07:41:55.330: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename endpointslice @ 01/31/24 07:41:55.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:41:55.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:41:55.351
  E0131 07:41:55.885398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:56.885989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:57.886573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:58.887251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:41:59.887391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 01/31/24 07:42:00.436
  E0131 07:42:00.887795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:01.888369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:02.889132      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:03.889940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:04.889943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 01/31/24 07:42:05.447
  E0131 07:42:05.890321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:06.890982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:07.891660      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:08.892573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:09.893271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 01/31/24 07:42:10.459
  E0131 07:42:10.894291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:11.895020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:12.895622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:13.896269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:14.897355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 01/31/24 07:42:15.468
  Jan 31 07:42:15.487: INFO: EndpointSlice for Service endpointslice-1629/example-named-port not found
  E0131 07:42:15.898369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:16.898949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:17.899555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:18.900220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:19.900813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:20.901001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:21.901296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:22.901511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:23.901799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:24.901916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:42:25.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1629" for this suite. @ 01/31/24 07:42:25.503
• [30.180 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 01/31/24 07:42:25.511
  Jan 31 07:42:25.511: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename deployment @ 01/31/24 07:42:25.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:42:25.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:42:25.534
  Jan 31 07:42:25.539: INFO: Creating deployment "webserver-deployment"
  Jan 31 07:42:25.544: INFO: Waiting for observed generation 1
  E0131 07:42:25.902970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:26.903583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:42:27.555: INFO: Waiting for all required pods to come up
  Jan 31 07:42:27.562: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 01/31/24 07:42:27.562
  Jan 31 07:42:27.562: INFO: Waiting for deployment "webserver-deployment" to complete
  Jan 31 07:42:27.570: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jan 31 07:42:27.583: INFO: Updating deployment webserver-deployment
  Jan 31 07:42:27.583: INFO: Waiting for observed generation 2
  E0131 07:42:27.903793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:28.904358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:42:29.590: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jan 31 07:42:29.595: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jan 31 07:42:29.598: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jan 31 07:42:29.609: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jan 31 07:42:29.610: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jan 31 07:42:29.613: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jan 31 07:42:29.620: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jan 31 07:42:29.620: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jan 31 07:42:29.632: INFO: Updating deployment webserver-deployment
  Jan 31 07:42:29.632: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jan 31 07:42:29.639: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jan 31 07:42:29.644: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jan 31 07:42:29.661: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d85bb7e-c45a-4cc9-b7c5-618c2d315ff3",
      ResourceVersion: (string) (len=6) "174726",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 31 07:42:29.670: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd8831a1-27d3-4a9e-a4f9-706dcc506560",
      ResourceVersion: (string) (len=6) "174729",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "9d85bb7e-c45a-4cc9-b7c5-618c2d315ff3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 64 38 35 62 62  37 65 2d 63 34 35 61 2d  |\"9d85bb7e-c45a-|
              00000120  34 63 63 39 2d 62 37 63  35 2d 36 31 38 63 32 64  |4cc9-b7c5-618c2d|
              00000130  33 31 35 66 66 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |315ff3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 07:42:29.673: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jan 31 07:42:29.674: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
      ResourceVersion: (string) (len=6) "174727",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "9d85bb7e-c45a-4cc9-b7c5-618c2d315ff3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 64 38 35 62 62  37 65 2d 63 34 35 61 2d  |\"9d85bb7e-c45a-|
              00000120  34 63 63 39 2d 62 37 63  35 2d 36 31 38 63 32 64  |4cc9-b7c5-618c2d|
              00000130  33 31 35 66 66 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |315ff3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 31 07:42:29.687: INFO: Pod "webserver-deployment-557759b7c7-2wg2r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2wg2r",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "803e13c0-bde8-4adc-b270-2eb8a65d0aa7",
      ResourceVersion: (string) (len=6) "174629",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 32  33 36 5c 22 7d 22 3a 7b  |.244.2.236\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9v6kh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9v6kh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.129"
        }
      },
      PodIP: (string) (len=12) "10.244.2.236",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.236"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842283746,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://76682f937076d18fe0e0654ba85a1a1c1c759a929316e7e37e957a0dafaab71b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.692: INFO: Pod "webserver-deployment-557759b7c7-2xhmv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2xhmv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c927669c-2712-4224-8bc5-84532ff14e7b",
      ResourceVersion: (string) (len=6) "174754",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xmc6x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xmc6x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.695: INFO: Pod "webserver-deployment-557759b7c7-5zsnp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5zsnp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a909bd6-4768-47b2-9403-25197e51eee1",
      ResourceVersion: (string) (len=6) "174757",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kmk4s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kmk4s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.697: INFO: Pod "webserver-deployment-557759b7c7-6v2zf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6v2zf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f3337e9-e74a-4907-bf79-0229328dc3c7",
      ResourceVersion: (string) (len=6) "174747",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-92sqg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-92sqg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.700: INFO: Pod "webserver-deployment-557759b7c7-6zvbg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6zvbg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15bf8b2b-7cfb-4152-b74f-caf63951176d",
      ResourceVersion: (string) (len=6) "174760",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cd9d5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cd9d5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.701: INFO: Pod "webserver-deployment-557759b7c7-7bd7q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7bd7q",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cdbcd183-454a-40e0-b67c-2c59b0f1bd76",
      ResourceVersion: (string) (len=6) "174634",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 32  33 33 5c 22 7d 22 3a 7b  |.244.2.233\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tpw92",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tpw92",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.129"
        }
      },
      PodIP: (string) (len=12) "10.244.2.233",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.233"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842283746,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8c1704b9f51434f758fd4b4f2817226443fe2325255cc1f98c49a68c49ea9ea8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.704: INFO: Pod "webserver-deployment-557759b7c7-7rzrr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7rzrr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6e93185-4c99-4610-b6ef-8ccc6ba72385",
      ResourceVersion: (string) (len=6) "174743",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cvjlw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cvjlw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.706: INFO: Pod "webserver-deployment-557759b7c7-84j5f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-84j5f",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50e60870-0f64-4187-9a65-719f8505713f",
      ResourceVersion: (string) (len=6) "174637",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 32  33 34 5c 22 7d 22 3a 7b  |.244.2.234\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mj9sd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mj9sd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.129"
        }
      },
      PodIP: (string) (len=12) "10.244.2.234",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.234"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842283746,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://524da0148504ba7dd1be5eae864d6e2f433b152743d4c81b980da5bb7eb53b7e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.708: INFO: Pod "webserver-deployment-557759b7c7-cptv7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cptv7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72a6e7bc-5704-492d-be2f-b2ea51cdfd80",
      ResourceVersion: (string) (len=6) "174655",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  5c 22 7d 22 3a 7b 22 2e  |.244.1.3\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-www9p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-www9p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) (len=10) "10.244.1.3",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.3"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842283746,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bf096325d69b7fb6ebb0fb70f8ed651d259e76717bc6134add66cdcd0c941673",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.711: INFO: Pod "webserver-deployment-557759b7c7-dtfkh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dtfkh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38282401-5c14-40f4-a6bf-de023973fb9e",
      ResourceVersion: (string) (len=6) "174745",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hzm2p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hzm2p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.713: INFO: Pod "webserver-deployment-557759b7c7-g56k7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-g56k7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1584eec8-8a37-4674-9c02-0bec040c0f30",
      ResourceVersion: (string) (len=6) "174640",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 32  33 35 5c 22 7d 22 3a 7b  |.244.2.235\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jcf8d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jcf8d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.129"
        }
      },
      PodIP: (string) (len=12) "10.244.2.235",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.235"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842283746,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6aff74ac3c13056197883d9197069e481c5c85b79b24da3f8862207ddc39743d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.716: INFO: Pod "webserver-deployment-557759b7c7-gjcbx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gjcbx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c9190d0-78cf-4a8e-a0c5-f88e98f7a26b",
      ResourceVersion: (string) (len=6) "174631",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 32  33 37 5c 22 7d 22 3a 7b  |.244.2.237\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5hrqm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5hrqm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.129"
        }
      },
      PodIP: (string) (len=12) "10.244.2.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842283746,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e344b0b37b9726042102a5b47dd718432c074ecb989ace2e84c406bda7e5b275",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.719: INFO: Pod "webserver-deployment-557759b7c7-l2j8d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l2j8d",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6bd506d0-a52a-4386-8d9f-10a885e1afef",
      ResourceVersion: (string) (len=6) "174649",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 36  5c 22 7d 22 3a 7b 22 2e  |.244.1.6\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fb9xq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fb9xq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) (len=10) "10.244.1.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842283746,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6018cd8aa2e9265d85b3ef81d11e83a8e9638a9c1de38b406c4dcca92d6371c4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.721: INFO: Pod "webserver-deployment-557759b7c7-m96kr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-m96kr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a09bc784-7d9a-4dbe-aaea-f80d1450f9c7",
      ResourceVersion: (string) (len=6) "174652",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  35 33 5c 22 7d 22 3a 7b  |.244.1.253\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q7zn9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q7zn9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) (len=12) "10.244.1.253",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.253"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842283746,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://81d7e8d6f58b105833fcc5469b90e3cd8ff3aca501858e9b169fa7f29475e7b0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.724: INFO: Pod "webserver-deployment-557759b7c7-qdcsm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qdcsm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6577d2bd-a703-4082-a60e-c33f1ffdd9f9",
      ResourceVersion: (string) (len=6) "174753",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z255q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z255q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.727: INFO: Pod "webserver-deployment-557759b7c7-qzcqt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qzcqt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ed52d8a-1606-4b8a-8cd2-85457432af58",
      ResourceVersion: (string) (len=6) "174761",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z7fvs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z7fvs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.728: INFO: Pod "webserver-deployment-557759b7c7-wlscm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wlscm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd6fc97e-9a60-4db1-a954-ed2e7ceea90a",
      ResourceVersion: (string) (len=6) "174758",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "10dcddf6-f1ed-4906-8173-2c0dd231271d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  64 63 64 64 66 36 2d 66  |d\":\"10dcddf6-f|
              00000090  31 65 64 2d 34 39 30 36  2d 38 31 37 33 2d 32 63  |1ed-4906-8173-2c|
              000000a0  30 64 64 32 33 31 32 37  31 64 5c 22 7d 22 3a 7b  |0dd231271d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n74sr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n74sr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.730: INFO: Pod "webserver-deployment-9b4f5bf69-55kng" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-55kng",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05a92e44-68c8-4284-968c-541fc6a47c91",
      ResourceVersion: (string) (len=6) "174740",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fd8831a1-27d3-4a9e-a4f9-706dcc506560",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 64  38 38 33 31 61 31 2d 32  |d\":\"fd8831a1-2|
              00000090  37 64 33 2d 34 61 39 65  2d 61 34 66 39 2d 37 30  |7d3-4a9e-a4f9-70|
              000000a0  36 64 63 63 35 30 36 35  36 30 5c 22 7d 22 3a 7b  |6dcc506560\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jtml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jtml",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.732: INFO: Pod "webserver-deployment-9b4f5bf69-8rn6b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8rn6b",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b933eb47-f870-4bef-822b-4306fc91d684",
      ResourceVersion: (string) (len=6) "174755",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fd8831a1-27d3-4a9e-a4f9-706dcc506560",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 64  38 38 33 31 61 31 2d 32  |d\":\"fd8831a1-2|
              00000090  37 64 33 2d 34 61 39 65  2d 61 34 66 39 2d 37 30  |7d3-4a9e-a4f9-70|
              000000a0  36 64 63 63 35 30 36 35  36 30 5c 22 7d 22 3a 7b  |6dcc506560\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rvqls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rvqls",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.733: INFO: Pod "webserver-deployment-9b4f5bf69-bk7rj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bk7rj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db68c576-0cae-4b8e-9ad0-b3d289caa66c",
      ResourceVersion: (string) (len=6) "174723",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fd8831a1-27d3-4a9e-a4f9-706dcc506560",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 64  38 38 33 31 61 31 2d 32  |d\":\"fd8831a1-2|
              00000090  37 64 33 2d 34 61 39 65  2d 61 34 66 39 2d 37 30  |7d3-4a9e-a4f9-70|
              000000a0  36 64 63 63 35 30 36 35  36 30 5c 22 7d 22 3a 7b  |6dcc506560\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 38 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |4.1.8\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7jtb5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7jtb5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) (len=10) "10.244.1.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.736: INFO: Pod "webserver-deployment-9b4f5bf69-kgzpv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kgzpv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7197eecb-c30b-43ce-b091-21e6ad27a014",
      ResourceVersion: (string) (len=6) "174680",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fd8831a1-27d3-4a9e-a4f9-706dcc506560",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 64  38 38 33 31 61 31 2d 32  |d\":\"fd8831a1-2|
              00000090  37 64 33 2d 34 61 39 65  2d 61 34 66 39 2d 37 30  |7d3-4a9e-a4f9-70|
              000000a0  36 64 63 63 35 30 36 35  36 30 5c 22 7d 22 3a 7b  |6dcc506560\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p5q5r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p5q5r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.738: INFO: Pod "webserver-deployment-9b4f5bf69-ktm54" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ktm54",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f83e6f9b-b51e-404f-88e2-5859e9333d46",
      ResourceVersion: (string) (len=6) "174756",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fd8831a1-27d3-4a9e-a4f9-706dcc506560",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 64  38 38 33 31 61 31 2d 32  |d\":\"fd8831a1-2|
              00000090  37 64 33 2d 34 61 39 65  2d 61 34 66 39 2d 37 30  |7d3-4a9e-a4f9-70|
              000000a0  36 64 63 63 35 30 36 35  36 30 5c 22 7d 22 3a 7b  |6dcc506560\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bndm9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bndm9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.746: INFO: Pod "webserver-deployment-9b4f5bf69-lbnw9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lbnw9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7127552d-ab91-4fc4-99f8-fc1e0e0349e0",
      ResourceVersion: (string) (len=6) "174759",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fd8831a1-27d3-4a9e-a4f9-706dcc506560",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 64  38 38 33 31 61 31 2d 32  |d\":\"fd8831a1-2|
              00000090  37 64 33 2d 34 61 39 65  2d 61 34 66 39 2d 37 30  |7d3-4a9e-a4f9-70|
              000000a0  36 64 63 63 35 30 36 35  36 30 5c 22 7d 22 3a 7b  |6dcc506560\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6gp6z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6gp6z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.750: INFO: Pod "webserver-deployment-9b4f5bf69-mcvsb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mcvsb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3456f0c4-40c5-40e9-9e7c-612580f4d93b",
      ResourceVersion: (string) (len=6) "174708",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fd8831a1-27d3-4a9e-a4f9-706dcc506560",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 64  38 38 33 31 61 31 2d 32  |d\":\"fd8831a1-2|
              00000090  37 64 33 2d 34 61 39 65  2d 61 34 66 39 2d 37 30  |7d3-4a9e-a4f9-70|
              000000a0  36 64 63 63 35 30 36 35  36 30 5c 22 7d 22 3a 7b  |6dcc506560\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xtd4b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xtd4b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea08",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.754: INFO: Pod "webserver-deployment-9b4f5bf69-pww4n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pww4n",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75f83328-2c65-462f-b761-6722d8c19780",
      ResourceVersion: (string) (len=6) "174704",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fd8831a1-27d3-4a9e-a4f9-706dcc506560",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 64  38 38 33 31 61 31 2d 32  |d\":\"fd8831a1-2|
              00000090  37 64 33 2d 34 61 39 65  2d 61 34 66 39 2d 37 30  |7d3-4a9e-a4f9-70|
              000000a0  36 64 63 63 35 30 36 35  36 30 5c 22 7d 22 3a 7b  |6dcc506560\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6n9q9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6n9q9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.129"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.758: INFO: Pod "webserver-deployment-9b4f5bf69-vwrdh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vwrdh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97dc8739-8cd2-4a24-931c-f7b44f982eb9",
      ResourceVersion: (string) (len=6) "174685",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fd8831a1-27d3-4a9e-a4f9-706dcc506560",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 64  38 38 33 31 61 31 2d 32  |d\":\"fd8831a1-2|
              00000090  37 64 33 2d 34 61 39 65  2d 61 34 66 39 2d 37 30  |7d3-4a9e-a4f9-70|
              000000a0  36 64 63 63 35 30 36 35  36 30 5c 22 7d 22 3a 7b  |6dcc506560\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jtk48",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jtk48",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842283747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.129"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842283747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 31 07:42:29.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2181" for this suite. @ 01/31/24 07:42:29.765
• [4.262 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 01/31/24 07:42:29.775
  Jan 31 07:42:29.775: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename chunking @ 01/31/24 07:42:29.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:42:29.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:42:29.789
  STEP: creating a large number of resources @ 01/31/24 07:42:29.794
  E0131 07:42:29.904847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:30.904833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:31.905153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:32.905751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:33.906700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:34.907192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:35.907621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:36.908425      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:37.908564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:38.909361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:39.910238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:40.911070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:41.911690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:42.912438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:43.913284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:44.914274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:45.915067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:46.916127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 01/31/24 07:42:47.484
  Jan 31 07:42:47.534: INFO: Retrieved 40/40 results with rv 175483 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 01/31/24 07:42:47.534
  E0131 07:42:47.916465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:48.917026      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:49.917583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:50.917867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:51.918415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:52.918962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:53.919476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:54.920673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:55.921421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:56.921980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:57.922625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:58.923411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:42:59.923926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:00.924575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:01.925161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:02.925736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:03.926065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:04.926284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:05.927266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:06.927841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:43:07.545: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:43:07.928045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:08.928618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:09.928861      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:10.929679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:11.930374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:12.930864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:13.931140      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:14.931996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:15.932399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:16.933504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:17.933801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:18.934062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:19.934798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:20.935357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:21.935986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:22.936560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:23.936968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:24.937033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:25.938077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:26.938698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:43:27.545: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:43:27.938834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:28.939387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:29.939964      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:30.940176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:31.940911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:32.941555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:33.942164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:34.943139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:35.943267      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:36.943831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:37.944322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:38.944776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:39.945239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:40.946422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:41.946940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:42.947420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:43.947952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:44.949112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:45.949274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:46.949945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:43:47.544: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:43:47.950874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:48.951714      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:49.952288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:50.952386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:51.953144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:52.953667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:53.954240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:54.955273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:55.956344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:56.957172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:57.957672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:58.958358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:43:59.958870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:00.959151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:01.959743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:02.960290      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:03.960834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:04.960970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:05.962152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:06.962715      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:44:07.545: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:44:07.963060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:08.963632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:09.964175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:10.964433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:11.964996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:12.965542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:13.966071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:14.966419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:15.967185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:16.968196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:17.968744      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:18.969317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:19.969901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:20.971001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:21.971453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:22.971995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:23.972542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:24.973681      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:25.974836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:26.975370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:44:27.545: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:44:27.976574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:28.977101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:29.978482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:30.978911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:31.979483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:32.980073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:33.980630      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:34.981729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:35.982766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:36.983300      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:37.983765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:38.984295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:39.984890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:40.985989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:41.986551      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:42.987008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:43.987526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:44.988591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:45.989649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:46.990275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:44:47.543: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:44:47.990665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:48.991159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:49.991677      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:50.992755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:51.993284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:52.993923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:53.994442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:54.995598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:55.996708      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:56.997267      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:57.997824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:58.998404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:44:59.998914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:01.000067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:02.000616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:03.001159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:04.001655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:05.002777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:06.003805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:07.004295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:45:07.543: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:45:08.004733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:09.005269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:10.005819      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:11.006964      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:12.007525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:13.008100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:14.008710      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:15.009701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:16.010866      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:17.011471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:18.011977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:19.012489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:20.013013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:21.014250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:22.014688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:23.015257      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:24.015838      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:25.015930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:26.017080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:27.017596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:45:27.544: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:45:28.017980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:29.018513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:30.019005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:31.020045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:32.020557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:33.021085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:34.021655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:35.022770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:36.023794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:37.024324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:38.024802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:39.025422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:40.026180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:41.026377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:42.026886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:43.027415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:44.028323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:45.029195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:46.030305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:47.030845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:45:47.546: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:45:48.031885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:49.032493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:50.033064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:51.033161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:52.033408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:53.034472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:54.035047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:55.036099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:56.036340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:57.037427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:58.038015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:45:59.038936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:00.039497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:01.039657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:02.040210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:03.040781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:04.041325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:05.042382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:06.043546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:07.044101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:46:07.544: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:46:08.044743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:09.045259      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:10.046035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:11.047098      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:12.047911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:13.048830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:14.049342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:15.049800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:16.050891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:17.051184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:18.051452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:19.052003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:20.052543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:21.052693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:22.053124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:23.053892      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:24.054165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:25.055220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:26.056428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:27.056676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:46:27.546: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:46:28.056917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:29.057509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:30.057812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:31.058525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:32.059146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:33.059706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:34.060325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:35.061371      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:36.061472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:37.062167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:38.062673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:39.063161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:40.063757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:41.064972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:42.066055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:43.066582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:44.067120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:45.068304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:46.068500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:47.069106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:46:47.544: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:46:48.069506      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:49.070195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:50.070762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:51.071936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:52.072512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:53.073133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:54.073660      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:55.074678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:56.074895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:57.075458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:58.075950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:46:59.076471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:00.076945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:01.078059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:02.078646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:03.079294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:04.079940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:05.080124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:06.080327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:07.080968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:47:07.545: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:47:08.081461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:09.082144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:10.082413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:11.082562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:12.083096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:13.083640      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:14.084223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:15.085347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:16.085526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:17.086035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:18.086755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:19.087343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:20.087907      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:21.088976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:22.089420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:23.089940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:24.090550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:25.091757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:26.091840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:27.092416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:47:27.542: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:47:28.093030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:29.093608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:30.094188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:31.094302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:32.094811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:33.095429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:34.095915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:35.096082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:36.097161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:37.097684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:38.098267      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:39.098800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:40.099357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:41.099488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:42.100072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:43.100643      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:44.101150      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:45.102332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:46.102499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:47.103041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:47:47.545: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:47:48.103509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:49.104025      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:50.104567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:51.105695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:52.106392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:53.107031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:54.107515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:55.108610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:56.109718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:57.110368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:58.110983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:47:59.111586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:00.112150      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:01.113276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:02.113789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:03.114394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:04.114927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:05.115085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:06.116239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:07.116786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:48:07.544: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:48:08.117483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:09.118002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:10.118463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:11.119518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:12.120036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:13.120675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:14.121247      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:15.122442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:16.122561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:17.123262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:18.123880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:19.124521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:20.125033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:21.126198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:22.126629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:23.127188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:24.127717      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:25.128872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:26.129993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:27.130562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:48:27.545: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:48:28.130659      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:29.131165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:30.132747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:31.132655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:32.133198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:33.133868      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:34.134366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:35.135352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:36.136597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:37.137125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:38.137682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:39.138247      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:40.138749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:41.139802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:42.140398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:43.140942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:44.141481      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:45.142641      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:46.143575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:47.144081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:48:47.544: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:48:48.144853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:49.145373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:50.145894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:51.146905      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:52.147373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:53.147757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:54.148220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:55.149283      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:56.149459      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:57.149916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:58.150435      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:48:59.151083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:00.151760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:01.152826      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:02.153448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:03.153994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:04.154549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:05.155684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:06.156862      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:07.157514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:49:07.545: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NDgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0131 07:49:08.157874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:09.158447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:10.158979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:11.160149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:12.160705      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:13.161373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:14.161931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:15.162169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:16.162258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:17.162832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:18.163373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:19.164052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:20.164611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:21.165695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:22.166274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:23.166837      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:24.167389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:25.168440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:26.169464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:27.169870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:49:27.541: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jan 31 07:49:27.541: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 01/31/24 07:49:27.541
  STEP: retrieving all remaining pages @ 01/31/24 07:49:27.548
  Jan 31 07:49:27.554: INFO: Retrieved 40/40 results with rv 176084 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc2MDg0LCJzdGFydCI6InRlbXBsYXRlLTAxMTlcdTAwMDAifQ
  Jan 31 07:49:27.561: INFO: Retrieved 40/40 results with rv 176084 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc2MDg0LCJzdGFydCI6InRlbXBsYXRlLTAxNTlcdTAwMDAifQ
  Jan 31 07:49:27.566: INFO: Retrieved 40/40 results with rv 176084 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc2MDg0LCJzdGFydCI6InRlbXBsYXRlLTAxOTlcdTAwMDAifQ
  Jan 31 07:49:27.572: INFO: Retrieved 40/40 results with rv 176084 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc2MDg0LCJzdGFydCI6InRlbXBsYXRlLTAyMzlcdTAwMDAifQ
  Jan 31 07:49:27.578: INFO: Retrieved 40/40 results with rv 176084 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc2MDg0LCJzdGFydCI6InRlbXBsYXRlLTAyNzlcdTAwMDAifQ
  Jan 31 07:49:27.585: INFO: Retrieved 40/40 results with rv 176084 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc2MDg0LCJzdGFydCI6InRlbXBsYXRlLTAzMTlcdTAwMDAifQ
  Jan 31 07:49:27.591: INFO: Retrieved 40/40 results with rv 176084 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc2MDg0LCJzdGFydCI6InRlbXBsYXRlLTAzNTlcdTAwMDAifQ
  Jan 31 07:49:27.597: INFO: Retrieved 40/40 results with rv 176084 and continue 
  Jan 31 07:49:27.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2832" for this suite. @ 01/31/24 07:49:27.603
• [417.835 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 01/31/24 07:49:27.611
  Jan 31 07:49:27.611: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sched-preemption @ 01/31/24 07:49:27.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:49:27.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:49:27.635
  Jan 31 07:49:27.657: INFO: Waiting up to 1m0s for all nodes to be ready
  E0131 07:49:28.170349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:29.171121      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:30.172199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:31.172381      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:32.172657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:33.173313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:34.173883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:35.175050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:36.176236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:37.176529      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:38.177157      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:39.177675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:40.177975      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:41.178939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:42.179335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:43.179886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:44.180497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:45.180670      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:46.180693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:47.181343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:48.181874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:49.182572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:50.182795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:51.184011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:52.184707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:53.184946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:54.185023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:55.185568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:56.186144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:57.186386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:58.187077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:49:59.187712      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:00.188482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:01.188642      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:02.188972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:03.189539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:04.190403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:05.191456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:06.191568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:07.192108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:08.192389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:09.193022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:10.193115      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:11.193260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:12.193445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:13.193906      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:14.194392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:15.195534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:16.196202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:17.196778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:18.197148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:19.197768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:20.198397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:21.199596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:22.200143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:23.200736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:24.201864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:25.202971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:26.204002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:27.204568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:50:27.664: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/31/24 07:50:27.668
  Jan 31 07:50:27.668: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/31/24 07:50:27.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:50:27.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:50:27.689
  STEP: Finding an available node @ 01/31/24 07:50:27.693
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/31/24 07:50:27.693
  E0131 07:50:28.204883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:29.205530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/31/24 07:50:29.714
  Jan 31 07:50:29.725: INFO: found a healthy node: nodea08
  E0131 07:50:30.206439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:31.206875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:32.207457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:33.208224      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:34.209158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:35.210134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:50:35.794: INFO: pods created so far: [1 1 1]
  Jan 31 07:50:35.794: INFO: length of pods created so far: 3
  E0131 07:50:36.210488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:37.211593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:50:37.809: INFO: pods created so far: [2 2 1]
  E0131 07:50:38.212749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:39.212938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:40.213207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:41.213309      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:42.213833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:43.214430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:44.214966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 31 07:50:44.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8865" for this suite. @ 01/31/24 07:50:44.883
  Jan 31 07:50:44.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3181" for this suite. @ 01/31/24 07:50:44.894
• [77.289 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 01/31/24 07:50:44.9
  Jan 31 07:50:44.900: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename kubelet-test @ 01/31/24 07:50:44.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:50:44.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:50:44.918
  Jan 31 07:50:44.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9828" for this suite. @ 01/31/24 07:50:44.949
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 01/31/24 07:50:44.956
  Jan 31 07:50:44.956: INFO: >>> kubeConfig: /tmp/kubeconfig-388894307
  STEP: Building a namespace api object, basename projected @ 01/31/24 07:50:44.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/31/24 07:50:44.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/31/24 07:50:44.972
  STEP: Creating a pod to test downward API volume plugin @ 01/31/24 07:50:44.978
  E0131 07:50:45.215215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:46.216477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:47.216959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0131 07:50:48.217526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/31/24 07:50:49.004
  Jan 31 07:50:49.008: INFO: Trying to get logs from node nodeb29 pod downwardapi-volume-c97930ba-37b3-4e1b-ae85-74980b95d6c1 container client-container: <nil>
  STEP: delete the pod @ 01/31/24 07:50:49.034
  Jan 31 07:50:49.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3399" for this suite. @ 01/31/24 07:50:49.056
• [4.107 seconds]
------------------------------
SSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Jan 31 07:50:49.065: INFO: Running AfterSuite actions on node 1
  Jan 31 07:50:49.065: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.081 seconds]
------------------------------

Ran 388 of 7407 Specs in 6573.139 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h49m34.498767198s
Test Suite Passed
