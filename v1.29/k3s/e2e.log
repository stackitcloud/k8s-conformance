  I1222 03:58:03.952312      20 e2e.go:117] Starting e2e run "1c3f25ab-b78f-4716-9d38-999c2e46ee7c" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1703217482 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Dec 22 03:58:04.413: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 03:58:04.414: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Dec 22 03:58:04.473: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Dec 22 03:58:04.478: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'svclb-traefik-080075b9' (0 seconds elapsed)
  Dec 22 03:58:04.478: INFO: e2e test version: v1.29.0
  Dec 22 03:58:04.479: INFO: kube-apiserver version: v1.29.0+k3s1
  Dec 22 03:58:04.480: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 03:58:04.488: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.075 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 12/22/23 03:58:04.827
  Dec 22 03:58:04.827: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 03:58:04.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:58:04.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:58:04.914
  STEP: Creating a ResourceQuota with best effort scope @ 12/22/23 03:58:04.922
  STEP: Ensuring ResourceQuota status is calculated @ 12/22/23 03:58:04.931
  STEP: Creating a ResourceQuota with not best effort scope @ 12/22/23 03:58:06.936
  STEP: Ensuring ResourceQuota status is calculated @ 12/22/23 03:58:06.947
  STEP: Creating a best-effort pod @ 12/22/23 03:58:08.952
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/22/23 03:58:08.975
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/22/23 03:58:10.981
  STEP: Deleting the pod @ 12/22/23 03:58:12.986
  STEP: Ensuring resource quota status released the pod usage @ 12/22/23 03:58:13.004
  STEP: Creating a not best-effort pod @ 12/22/23 03:58:15.009
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/22/23 03:58:15.019
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/22/23 03:58:17.023
  STEP: Deleting the pod @ 12/22/23 03:58:19.132
  STEP: Ensuring resource quota status released the pod usage @ 12/22/23 03:58:19.152
  Dec 22 03:58:21.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3202" for this suite. @ 12/22/23 03:58:21.161
• [16.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/22/23 03:58:21.169
  Dec 22 03:58:21.169: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pods @ 12/22/23 03:58:21.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:58:21.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:58:21.202
  STEP: creating the pod @ 12/22/23 03:58:21.207
  STEP: setting up watch @ 12/22/23 03:58:21.207
  STEP: submitting the pod to kubernetes @ 12/22/23 03:58:21.312
  STEP: verifying the pod is in kubernetes @ 12/22/23 03:58:21.321
  STEP: verifying pod creation was observed @ 12/22/23 03:58:21.324
  STEP: deleting the pod gracefully @ 12/22/23 03:58:23.347
  STEP: verifying pod deletion was observed @ 12/22/23 03:58:23.355
  Dec 22 03:58:26.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6194" for this suite. @ 12/22/23 03:58:26.216
• [5.054 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 12/22/23 03:58:26.223
  Dec 22 03:58:26.223: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 03:58:26.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:58:26.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:58:26.248
  STEP: Creating the pod @ 12/22/23 03:58:26.252
  Dec 22 03:58:30.818: INFO: Successfully updated pod "annotationupdate196e64ee-03b4-4963-9a82-1fbc20e3b36b"
  Dec 22 03:58:34.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6215" for this suite. @ 12/22/23 03:58:34.843
• [8.636 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 12/22/23 03:58:34.859
  Dec 22 03:58:34.859: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename endpointslice @ 12/22/23 03:58:34.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:58:34.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:58:34.936
  Dec 22 03:58:37.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5250" for this suite. @ 12/22/23 03:58:37.028
• [2.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 12/22/23 03:58:37.036
  Dec 22 03:58:37.036: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 03:58:37.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:58:37.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:58:37.059
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/22/23 03:58:37.063
  Dec 22 03:58:37.064: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 03:58:39.885: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 03:58:48.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-888" for this suite. @ 12/22/23 03:58:48.252
• [11.226 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/22/23 03:58:48.263
  Dec 22 03:58:48.263: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pods @ 12/22/23 03:58:48.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:58:48.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:58:48.299
  STEP: creating pod @ 12/22/23 03:58:48.303
  Dec 22 03:58:50.356: INFO: Pod pod-hostip-2433bce5-cc58-4f1d-b4ca-7035f4d11b22 has hostIP: 172.31.14.155
  Dec 22 03:58:50.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5833" for this suite. @ 12/22/23 03:58:50.361
• [2.106 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 12/22/23 03:58:50.37
  Dec 22 03:58:50.370: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 03:58:50.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:58:50.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:58:50.392
  Dec 22 03:58:52.423: INFO: Deleting pod "var-expansion-fffd8efa-7377-41da-9c1a-c73b9bcb2527" in namespace "var-expansion-9150"
  Dec 22 03:58:52.431: INFO: Wait up to 5m0s for pod "var-expansion-fffd8efa-7377-41da-9c1a-c73b9bcb2527" to be fully deleted
  Dec 22 03:58:54.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9150" for this suite. @ 12/22/23 03:58:54.444
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/22/23 03:58:54.453
  Dec 22 03:58:54.453: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pods @ 12/22/23 03:58:54.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:58:54.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:58:54.478
  Dec 22 03:58:54.482: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: creating the pod @ 12/22/23 03:58:54.483
  STEP: submitting the pod to kubernetes @ 12/22/23 03:58:54.483
  Dec 22 03:58:58.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9842" for this suite. @ 12/22/23 03:58:58.615
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 12/22/23 03:58:58.624
  Dec 22 03:58:58.624: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 03:58:58.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:58:58.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:58:58.652
  STEP: Creating secret with name secret-test-0f87eef9-22d1-4875-9a99-411dd96d5ae5 @ 12/22/23 03:58:58.657
  STEP: Creating a pod to test consume secrets @ 12/22/23 03:58:58.664
  STEP: Saw pod success @ 12/22/23 03:59:02.7
  Dec 22 03:59:02.706: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-secrets-12e6f2fd-4ac4-40bf-8c68-56125a4a8160 container secret-env-test: <nil>
  STEP: delete the pod @ 12/22/23 03:59:02.714
  Dec 22 03:59:02.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9168" for this suite. @ 12/22/23 03:59:02.743
• [4.141 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 12/22/23 03:59:02.766
  Dec 22 03:59:02.766: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename security-context-test @ 12/22/23 03:59:02.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:59:02.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:59:02.816
  Dec 22 03:59:06.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9236" for this suite. @ 12/22/23 03:59:06.866
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/22/23 03:59:06.875
  Dec 22 03:59:06.875: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/22/23 03:59:06.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:59:06.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:59:06.903
  STEP: Cleaning up the secret @ 12/22/23 03:59:08.951
  STEP: Cleaning up the configmap @ 12/22/23 03:59:08.956
  STEP: Cleaning up the pod @ 12/22/23 03:59:08.964
  Dec 22 03:59:08.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8913" for this suite. @ 12/22/23 03:59:08.983
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 12/22/23 03:59:08.993
  Dec 22 03:59:08.993: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 03:59:08.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:59:09.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:59:09.021
  Dec 22 03:59:09.044: INFO: created pod pod-service-account-defaultsa
  Dec 22 03:59:09.044: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Dec 22 03:59:09.050: INFO: created pod pod-service-account-mountsa
  Dec 22 03:59:09.050: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Dec 22 03:59:09.065: INFO: created pod pod-service-account-nomountsa
  Dec 22 03:59:09.065: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Dec 22 03:59:09.078: INFO: created pod pod-service-account-defaultsa-mountspec
  Dec 22 03:59:09.078: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Dec 22 03:59:09.100: INFO: created pod pod-service-account-mountsa-mountspec
  Dec 22 03:59:09.101: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Dec 22 03:59:09.112: INFO: created pod pod-service-account-nomountsa-mountspec
  Dec 22 03:59:09.112: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Dec 22 03:59:09.133: INFO: created pod pod-service-account-defaultsa-nomountspec
  Dec 22 03:59:09.134: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Dec 22 03:59:09.163: INFO: created pod pod-service-account-mountsa-nomountspec
  Dec 22 03:59:09.163: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Dec 22 03:59:09.209: INFO: created pod pod-service-account-nomountsa-nomountspec
  Dec 22 03:59:09.209: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Dec 22 03:59:09.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3068" for this suite. @ 12/22/23 03:59:09.229
• [0.263 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/22/23 03:59:09.257
  Dec 22 03:59:09.257: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pods @ 12/22/23 03:59:09.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:59:09.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:59:09.324
  STEP: Create set of pods @ 12/22/23 03:59:09.332
  Dec 22 03:59:09.356: INFO: created test-pod-1
  Dec 22 03:59:09.402: INFO: created test-pod-2
  Dec 22 03:59:09.425: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/22/23 03:59:09.425
  STEP: waiting for all pods to be deleted @ 12/22/23 03:59:17.587
  Dec 22 03:59:17.605: INFO: Pod quantity 3 is different from expected quantity 0
  Dec 22 03:59:18.594: INFO: Pod quantity 2 is different from expected quantity 0
  Dec 22 03:59:19.592: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 22 03:59:20.592: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 22 03:59:21.592: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 22 03:59:22.592: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 22 03:59:23.593: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 22 03:59:24.594: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 22 03:59:25.592: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 22 03:59:26.592: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 22 03:59:27.591: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 22 03:59:28.592: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 22 03:59:29.594: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 22 03:59:30.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-128" for this suite. @ 12/22/23 03:59:30.597
• [21.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 12/22/23 03:59:30.604
  Dec 22 03:59:30.604: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 03:59:30.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:59:30.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:59:30.631
  STEP: Create a Replicaset @ 12/22/23 03:59:30.639
  STEP: Verify that the required pods have come up. @ 12/22/23 03:59:30.647
  Dec 22 03:59:30.655: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 22 03:59:35.659: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 03:59:35.66
  STEP: Getting /status @ 12/22/23 03:59:37.67
  Dec 22 03:59:37.678: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/22/23 03:59:37.678
  Dec 22 03:59:37.690: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/22/23 03:59:37.69
  Dec 22 03:59:37.692: INFO: Observed &ReplicaSet event: ADDED
  Dec 22 03:59:37.693: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 03:59:37.693: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 03:59:37.693: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 03:59:37.693: INFO: Found replicaset test-rs in namespace replicaset-761 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 22 03:59:37.693: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/22/23 03:59:37.693
  Dec 22 03:59:37.693: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 22 03:59:37.701: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/22/23 03:59:37.702
  Dec 22 03:59:37.706: INFO: Observed &ReplicaSet event: ADDED
  Dec 22 03:59:37.706: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 03:59:37.706: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 03:59:37.707: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 03:59:37.707: INFO: Observed replicaset test-rs in namespace replicaset-761 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 03:59:37.707: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 22 03:59:37.707: INFO: Found replicaset test-rs in namespace replicaset-761 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Dec 22 03:59:37.707: INFO: Replicaset test-rs has a patched status
  Dec 22 03:59:37.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-761" for this suite. @ 12/22/23 03:59:37.713
• [7.118 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 12/22/23 03:59:37.723
  Dec 22 03:59:37.723: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename ingress @ 12/22/23 03:59:37.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:59:37.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:59:37.758
  STEP: getting /apis @ 12/22/23 03:59:37.767
  STEP: getting /apis/networking.k8s.io @ 12/22/23 03:59:37.775
  STEP: getting /apis/networking.k8s.iov1 @ 12/22/23 03:59:37.778
  STEP: creating @ 12/22/23 03:59:37.781
  STEP: getting @ 12/22/23 03:59:37.803
  STEP: listing @ 12/22/23 03:59:37.808
  STEP: watching @ 12/22/23 03:59:37.813
  Dec 22 03:59:37.813: INFO: starting watch
  STEP: cluster-wide listing @ 12/22/23 03:59:37.815
  STEP: cluster-wide watching @ 12/22/23 03:59:37.82
  Dec 22 03:59:37.820: INFO: starting watch
  STEP: patching @ 12/22/23 03:59:37.822
  STEP: updating @ 12/22/23 03:59:37.83
  Dec 22 03:59:37.870: INFO: waiting for watch events with expected annotations
  Dec 22 03:59:37.870: INFO: missing expected annotations, waiting: map[string]string(nil)
  Dec 22 03:59:37.870: INFO: saw patched and updated annotations
  STEP: patching /status @ 12/22/23 03:59:37.87
  STEP: updating /status @ 12/22/23 03:59:37.88
  STEP: get /status @ 12/22/23 03:59:37.915
  STEP: deleting @ 12/22/23 03:59:37.923
  STEP: deleting a collection @ 12/22/23 03:59:37.938
  Dec 22 03:59:38.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1087" for this suite. @ 12/22/23 03:59:38.223
• [0.507 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 12/22/23 03:59:38.23
  Dec 22 03:59:38.230: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename security-context-test @ 12/22/23 03:59:38.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:59:38.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:59:38.257
  Dec 22 03:59:48.314: INFO: Got logs for pod "busybox-privileged-false-1febaeab-d5e6-4512-85ab-0c91997af063": "ip: RTNETLINK answers: Operation not permitted\n"
  Dec 22 03:59:48.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2151" for this suite. @ 12/22/23 03:59:48.318
• [10.094 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 12/22/23 03:59:48.325
  Dec 22 03:59:48.325: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename runtimeclass @ 12/22/23 03:59:48.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:59:48.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:59:48.354
  Dec 22 03:59:48.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3206" for this suite. @ 12/22/23 03:59:48.371
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/22/23 03:59:48.38
  Dec 22 03:59:48.380: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename deployment @ 12/22/23 03:59:48.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:59:48.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:59:48.406
  Dec 22 03:59:48.422: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Dec 22 03:59:53.427: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 03:59:53.427
  Dec 22 03:59:53.427: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/22/23 03:59:53.445
  Dec 22 03:59:53.470: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc8793c3-881c-4376-afcb-1f11ca6e7567",
      ResourceVersion: (string) (len=4) "7212",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838814393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 03:59:53.487: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee30a9ff-f9c1-465e-8fb5-94b8a13f92c4",
      ResourceVersion: (string) (len=4) "7215",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838814393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "dc8793c3-881c-4376-afcb-1f11ca6e7567",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 63 38 37 39 33  63 33 2d 38 38 31 63 2d  |\"dc8793c3-881c-|
              00000120  34 33 37 36 2d 61 66 63  62 2d 31 66 31 31 63 61  |4376-afcb-1f11ca|
              00000130  36 65 37 35 36 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6e7567\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 03:59:53.487: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Dec 22 03:59:53.488: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b8c16b9-8fdb-466a-be33-0b02a983899c",
      ResourceVersion: (string) (len=4) "7213",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838814388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "dc8793c3-881c-4376-afcb-1f11ca6e7567",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 64 63 38 37 39 33 63  |"uid\":\"dc8793c|
              00000040  33 2d 38 38 31 63 2d 34  33 37 36 2d 61 66 63 62  |3-881c-4376-afcb|
              00000050  2d 31 66 31 31 63 61 36  65 37 35 36 37 5c 22 7d  |-1f11ca6e7567\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 03:59:53.496: INFO: Pod "test-cleanup-controller-p7bjp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-p7bjp",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-1536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b53df3e7-891e-4cb2-a4f6-84d5cfba60e5",
      ResourceVersion: (string) (len=4) "7199",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838814388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "5b8c16b9-8fdb-466a-be33-0b02a983899c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  35 62 38 63 31 36 62 39  |uid\":\"5b8c16b9|
              00000080  2d 38 66 64 62 2d 34 36  36 61 2d 62 65 33 33 2d  |-8fdb-466a-be33-|
              00000090  30 62 30 32 61 39 38 33  38 39 39 63 5c 22 7d 22  |0b02a983899c\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 32 34  5c 22 7d 22 3a 7b 22 2e  |.42.2.24\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9q66g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9q66g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838814388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) (len=10) "10.42.2.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838814388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838814389,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dfd187baec8813cbcbca9c582ae105b9347e43924ec0f39c08916d304aea0e7e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 03:59:53.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1536" for this suite. @ 12/22/23 03:59:53.528
• [5.179 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 12/22/23 03:59:53.56
  Dec 22 03:59:53.560: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 03:59:53.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:59:53.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:59:53.626
  Dec 22 03:59:53.635: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/22/23 03:59:55.42
  Dec 22 03:59:55.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-9966 --namespace=crd-publish-openapi-9966 create -f -'
  Dec 22 03:59:55.539: INFO: stderr: ""
  Dec 22 03:59:55.539: INFO: stdout: "e2e-test-crd-publish-openapi-6787-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Dec 22 03:59:55.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-9966 --namespace=crd-publish-openapi-9966 delete e2e-test-crd-publish-openapi-6787-crds test-cr'
  Dec 22 03:59:55.659: INFO: stderr: ""
  Dec 22 03:59:55.659: INFO: stdout: "e2e-test-crd-publish-openapi-6787-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Dec 22 03:59:55.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-9966 --namespace=crd-publish-openapi-9966 apply -f -'
  Dec 22 03:59:55.785: INFO: stderr: ""
  Dec 22 03:59:55.785: INFO: stdout: "e2e-test-crd-publish-openapi-6787-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Dec 22 03:59:55.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-9966 --namespace=crd-publish-openapi-9966 delete e2e-test-crd-publish-openapi-6787-crds test-cr'
  Dec 22 03:59:55.875: INFO: stderr: ""
  Dec 22 03:59:55.875: INFO: stdout: "e2e-test-crd-publish-openapi-6787-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/22/23 03:59:55.875
  Dec 22 03:59:55.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-9966 explain e2e-test-crd-publish-openapi-6787-crds'
  Dec 22 03:59:55.955: INFO: stderr: ""
  Dec 22 03:59:55.955: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-6787-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Dec 22 03:59:57.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9966" for this suite. @ 12/22/23 03:59:57.89
• [4.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/22/23 03:59:57.896
  Dec 22 03:59:57.896: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pods @ 12/22/23 03:59:57.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 03:59:57.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 03:59:57.917
  STEP: creating the pod @ 12/22/23 03:59:57.92
  STEP: submitting the pod to kubernetes @ 12/22/23 03:59:57.92
  STEP: verifying the pod is in kubernetes @ 12/22/23 03:59:59.94
  STEP: updating the pod @ 12/22/23 03:59:59.942
  Dec 22 04:00:00.454: INFO: Successfully updated pod "pod-update-4f13eb4b-3dab-4957-91c9-38e5dfdf3626"
  STEP: verifying the updated pod is in kubernetes @ 12/22/23 04:00:00.458
  Dec 22 04:00:00.462: INFO: Pod update OK
  Dec 22 04:00:00.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4032" for this suite. @ 12/22/23 04:00:00.467
• [2.580 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 12/22/23 04:00:00.478
  Dec 22 04:00:00.478: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:00:00.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:00:00.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:00:00.508
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:00:00.512
  STEP: Saw pod success @ 12/22/23 04:00:04.539
  Dec 22 04:00:04.542: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-5c8531c7-d50e-424c-b40f-0ae5d4995ae8 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:00:04.552
  Dec 22 04:00:04.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5681" for this suite. @ 12/22/23 04:00:04.573
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 12/22/23 04:00:04.582
  Dec 22 04:00:04.583: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 04:00:04.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:00:04.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:00:04.62
  Dec 22 04:00:04.626: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  W1222 04:00:07.160135      20 warnings.go:70] unknown field "alpha"
  W1222 04:00:07.160178      20 warnings.go:70] unknown field "beta"
  W1222 04:00:07.160187      20 warnings.go:70] unknown field "delta"
  W1222 04:00:07.160194      20 warnings.go:70] unknown field "epsilon"
  W1222 04:00:07.160201      20 warnings.go:70] unknown field "gamma"
  Dec 22 04:00:07.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7583" for this suite. @ 12/22/23 04:00:07.708
• [3.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 12/22/23 04:00:07.715
  Dec 22 04:00:07.715: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:00:07.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:00:07.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:00:07.74
  STEP: Creating the pod @ 12/22/23 04:00:07.743
  Dec 22 04:00:10.305: INFO: Successfully updated pod "annotationupdate2893d5d4-b812-4183-b9b7-839eb0cbadac"
  Dec 22 04:00:14.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2676" for this suite. @ 12/22/23 04:00:14.333
• [6.624 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/22/23 04:00:14.339
  Dec 22 04:00:14.339: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename tables @ 12/22/23 04:00:14.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:00:14.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:00:14.415
  Dec 22 04:00:14.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2611" for this suite. @ 12/22/23 04:00:14.43
• [0.097 seconds]
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 12/22/23 04:00:14.437
  Dec 22 04:00:14.437: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 04:00:14.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:00:14.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:00:14.498
  STEP: creating service endpoint-test2 in namespace services-8866 @ 12/22/23 04:00:14.501
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8866 to expose endpoints map[] @ 12/22/23 04:00:14.512
  Dec 22 04:00:14.515: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Dec 22 04:00:15.522: INFO: successfully validated that service endpoint-test2 in namespace services-8866 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8866 @ 12/22/23 04:00:15.522
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8866 to expose endpoints map[pod1:[80]] @ 12/22/23 04:00:17.539
  Dec 22 04:00:17.547: INFO: successfully validated that service endpoint-test2 in namespace services-8866 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/22/23 04:00:17.547
  Dec 22 04:00:17.547: INFO: Creating new exec pod
  Dec 22 04:00:20.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-8866 exec execpodcl594 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 22 04:00:20.739: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 22 04:00:20.739: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:00:20.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-8866 exec execpodcl594 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.39.7 80'
  Dec 22 04:00:20.887: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.39.7 80\nConnection to 10.43.39.7 80 port [tcp/http] succeeded!\n"
  Dec 22 04:00:20.887: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-8866 @ 12/22/23 04:00:20.887
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8866 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/22/23 04:00:22.901
  Dec 22 04:00:22.915: INFO: successfully validated that service endpoint-test2 in namespace services-8866 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/22/23 04:00:22.915
  Dec 22 04:00:23.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-8866 exec execpodcl594 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 22 04:00:24.063: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 22 04:00:24.063: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:00:24.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-8866 exec execpodcl594 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.39.7 80'
  Dec 22 04:00:24.227: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.39.7 80\nConnection to 10.43.39.7 80 port [tcp/http] succeeded!\n"
  Dec 22 04:00:24.227: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8866 @ 12/22/23 04:00:24.227
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8866 to expose endpoints map[pod2:[80]] @ 12/22/23 04:00:24.238
  Dec 22 04:00:24.278: INFO: successfully validated that service endpoint-test2 in namespace services-8866 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/22/23 04:00:24.278
  Dec 22 04:00:25.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-8866 exec execpodcl594 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 22 04:00:25.421: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 22 04:00:25.421: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:00:25.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-8866 exec execpodcl594 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.39.7 80'
  Dec 22 04:00:25.558: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.39.7 80\nConnection to 10.43.39.7 80 port [tcp/http] succeeded!\n"
  Dec 22 04:00:25.558: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-8866 @ 12/22/23 04:00:25.558
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8866 to expose endpoints map[] @ 12/22/23 04:00:25.57
  Dec 22 04:00:25.603: INFO: successfully validated that service endpoint-test2 in namespace services-8866 exposes endpoints map[]
  Dec 22 04:00:25.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8866" for this suite. @ 12/22/23 04:00:25.622
• [11.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/22/23 04:00:25.628
  Dec 22 04:00:25.628: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/22/23 04:00:25.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:00:25.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:00:25.654
  STEP: mirroring a new custom Endpoint @ 12/22/23 04:00:25.667
  Dec 22 04:00:25.674: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 12/22/23 04:00:27.677
  Dec 22 04:00:27.689: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 12/22/23 04:00:29.694
  Dec 22 04:00:29.701: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Dec 22 04:00:31.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-659" for this suite. @ 12/22/23 04:00:31.709
• [6.087 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 12/22/23 04:00:31.715
  Dec 22 04:00:31.715: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl-logs @ 12/22/23 04:00:31.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:00:31.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:00:31.74
  STEP: creating an pod @ 12/22/23 04:00:31.744
  Dec 22 04:00:31.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-logs-381 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Dec 22 04:00:31.860: INFO: stderr: ""
  Dec 22 04:00:31.860: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/22/23 04:00:31.86
  Dec 22 04:00:31.860: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Dec 22 04:00:33.869: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/22/23 04:00:33.869
  Dec 22 04:00:33.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-logs-381 logs logs-generator logs-generator'
  Dec 22 04:00:34.030: INFO: stderr: ""
  Dec 22 04:00:34.030: INFO: stdout: "I1222 04:00:33.325025       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/hz5x 553\nI1222 04:00:33.525149       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/r99 356\nI1222 04:00:33.725810       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/6ncf 253\nI1222 04:00:33.925130       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/8xtc 370\n"
  Dec 22 04:00:36.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-logs-381 logs logs-generator logs-generator'
  Dec 22 04:00:36.124: INFO: stderr: ""
  Dec 22 04:00:36.124: INFO: stdout: "I1222 04:00:33.325025       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/hz5x 553\nI1222 04:00:33.525149       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/r99 356\nI1222 04:00:33.725810       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/6ncf 253\nI1222 04:00:33.925130       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/8xtc 370\nI1222 04:00:34.125462       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/ct8f 453\nI1222 04:00:34.325846       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/9wkk 598\nI1222 04:00:34.525117       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/f2ms 308\nI1222 04:00:34.725254       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/hjn 462\nI1222 04:00:34.925590       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/9lq 313\nI1222 04:00:35.125950       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/6frq 538\nI1222 04:00:35.325122       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/5rs 465\nI1222 04:00:35.525467       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/bpgx 377\nI1222 04:00:35.725857       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/lsr 235\nI1222 04:00:35.925159       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/s9k 343\n"
  STEP: limiting log lines @ 12/22/23 04:00:36.124
  Dec 22 04:00:36.124: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-logs-381 logs logs-generator logs-generator --tail=1'
  Dec 22 04:00:36.229: INFO: stderr: ""
  Dec 22 04:00:36.229: INFO: stdout: "I1222 04:00:36.125632       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/wj6 297\n"
  Dec 22 04:00:36.229: INFO: got output "I1222 04:00:36.125632       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/wj6 297\n"
  STEP: limiting log bytes @ 12/22/23 04:00:36.23
  Dec 22 04:00:36.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-logs-381 logs logs-generator logs-generator --limit-bytes=1'
  Dec 22 04:00:36.334: INFO: stderr: ""
  Dec 22 04:00:36.334: INFO: stdout: "I"
  Dec 22 04:00:36.334: INFO: got output "I"
  STEP: exposing timestamps @ 12/22/23 04:00:36.334
  Dec 22 04:00:36.334: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-logs-381 logs logs-generator logs-generator --tail=1 --timestamps'
  Dec 22 04:00:36.431: INFO: stderr: ""
  Dec 22 04:00:36.431: INFO: stdout: "2023-12-22T04:00:36.327503345Z I1222 04:00:36.327356       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/gtn9 577\n"
  Dec 22 04:00:36.431: INFO: got output "2023-12-22T04:00:36.327503345Z I1222 04:00:36.327356       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/gtn9 577\n"
  STEP: restricting to a time range @ 12/22/23 04:00:36.431
  Dec 22 04:00:38.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-logs-381 logs logs-generator logs-generator --since=1s'
  Dec 22 04:00:39.033: INFO: stderr: ""
  Dec 22 04:00:39.033: INFO: stdout: "I1222 04:00:38.125301       1 logs_generator.go:76] 24 GET /api/v1/namespaces/ns/pods/n84 402\nI1222 04:00:38.325628       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/ns/pods/m66j 378\nI1222 04:00:38.526260       1 logs_generator.go:76] 26 GET /api/v1/namespaces/ns/pods/s5c6 427\nI1222 04:00:38.725612       1 logs_generator.go:76] 27 POST /api/v1/namespaces/kube-system/pods/vd2 497\nI1222 04:00:38.926025       1 logs_generator.go:76] 28 GET /api/v1/namespaces/ns/pods/tljx 274\n"
  Dec 22 04:00:39.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-logs-381 logs logs-generator logs-generator --since=24h'
  Dec 22 04:00:39.137: INFO: stderr: ""
  Dec 22 04:00:39.137: INFO: stdout: "I1222 04:00:33.325025       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/hz5x 553\nI1222 04:00:33.525149       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/r99 356\nI1222 04:00:33.725810       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/6ncf 253\nI1222 04:00:33.925130       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/8xtc 370\nI1222 04:00:34.125462       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/ct8f 453\nI1222 04:00:34.325846       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/9wkk 598\nI1222 04:00:34.525117       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/f2ms 308\nI1222 04:00:34.725254       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/hjn 462\nI1222 04:00:34.925590       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/9lq 313\nI1222 04:00:35.125950       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/6frq 538\nI1222 04:00:35.325122       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/5rs 465\nI1222 04:00:35.525467       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/bpgx 377\nI1222 04:00:35.725857       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/lsr 235\nI1222 04:00:35.925159       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/s9k 343\nI1222 04:00:36.125632       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/wj6 297\nI1222 04:00:36.327356       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/gtn9 577\nI1222 04:00:36.525725       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/ptrt 507\nI1222 04:00:36.726074       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/6ct 428\nI1222 04:00:36.925397       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/v6s 541\nI1222 04:00:37.125650       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/njj5 466\nI1222 04:00:37.326117       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/dvjv 241\nI1222 04:00:37.525475       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/nr2 599\nI1222 04:00:37.725877       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/ns/pods/wbjv 226\nI1222 04:00:37.925152       1 logs_generator.go:76] 23 GET /api/v1/namespaces/default/pods/xc4 423\nI1222 04:00:38.125301       1 logs_generator.go:76] 24 GET /api/v1/namespaces/ns/pods/n84 402\nI1222 04:00:38.325628       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/ns/pods/m66j 378\nI1222 04:00:38.526260       1 logs_generator.go:76] 26 GET /api/v1/namespaces/ns/pods/s5c6 427\nI1222 04:00:38.725612       1 logs_generator.go:76] 27 POST /api/v1/namespaces/kube-system/pods/vd2 497\nI1222 04:00:38.926025       1 logs_generator.go:76] 28 GET /api/v1/namespaces/ns/pods/tljx 274\nI1222 04:00:39.125439       1 logs_generator.go:76] 29 GET /api/v1/namespaces/kube-system/pods/5s5 522\n"
  Dec 22 04:00:39.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-logs-381 delete pod logs-generator'
  Dec 22 04:00:39.564: INFO: stderr: ""
  Dec 22 04:00:39.564: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Dec 22 04:00:39.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-381" for this suite. @ 12/22/23 04:00:39.574
• [7.866 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 12/22/23 04:00:39.581
  Dec 22 04:00:39.581: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 04:00:39.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:00:39.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:00:39.61
  Dec 22 04:00:39.620: INFO: Got root ca configmap in namespace "svcaccounts-5922"
  Dec 22 04:00:39.627: INFO: Deleted root ca configmap in namespace "svcaccounts-5922"
  STEP: waiting for a new root ca configmap created @ 12/22/23 04:00:40.127
  Dec 22 04:00:40.130: INFO: Recreated root ca configmap in namespace "svcaccounts-5922"
  Dec 22 04:00:40.135: INFO: Updated root ca configmap in namespace "svcaccounts-5922"
  STEP: waiting for the root ca configmap reconciled @ 12/22/23 04:00:40.636
  Dec 22 04:00:40.639: INFO: Reconciled root ca configmap in namespace "svcaccounts-5922"
  Dec 22 04:00:40.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5922" for this suite. @ 12/22/23 04:00:40.643
• [1.069 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 12/22/23 04:00:40.65
  Dec 22 04:00:40.650: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 04:00:40.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:00:40.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:00:40.68
  STEP: creating the pod with failed condition @ 12/22/23 04:00:40.684
  STEP: updating the pod @ 12/22/23 04:02:40.695
  Dec 22 04:02:41.206: INFO: Successfully updated pod "var-expansion-4de31a89-4e70-46cf-a933-4663be6e1ab3"
  STEP: waiting for pod running @ 12/22/23 04:02:41.206
  STEP: deleting the pod gracefully @ 12/22/23 04:02:43.212
  Dec 22 04:02:43.212: INFO: Deleting pod "var-expansion-4de31a89-4e70-46cf-a933-4663be6e1ab3" in namespace "var-expansion-7879"
  Dec 22 04:02:43.219: INFO: Wait up to 5m0s for pod "var-expansion-4de31a89-4e70-46cf-a933-4663be6e1ab3" to be fully deleted
  Dec 22 04:03:15.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7879" for this suite. @ 12/22/23 04:03:15.31
• [154.666 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 12/22/23 04:03:15.317
  Dec 22 04:03:15.317: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 04:03:15.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:03:15.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:03:15.342
  STEP: Creating service test in namespace statefulset-9583 @ 12/22/23 04:03:15.346
  STEP: Creating statefulset ss in namespace statefulset-9583 @ 12/22/23 04:03:15.351
  Dec 22 04:03:15.370: INFO: Found 0 stateful pods, waiting for 1
  Dec 22 04:03:25.369: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/22/23 04:03:25.378
  STEP: updating a scale subresource @ 12/22/23 04:03:25.384
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/22/23 04:03:25.392
  STEP: Patch a scale subresource @ 12/22/23 04:03:25.395
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/22/23 04:03:25.404
  Dec 22 04:03:25.406: INFO: Deleting all statefulset in ns statefulset-9583
  Dec 22 04:03:25.409: INFO: Scaling statefulset ss to 0
  Dec 22 04:03:35.428: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 04:03:35.433: INFO: Deleting statefulset ss
  Dec 22 04:03:35.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9583" for this suite. @ 12/22/23 04:03:35.46
• [20.155 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 12/22/23 04:03:35.473
  Dec 22 04:03:35.473: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename security-context @ 12/22/23 04:03:35.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:03:35.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:03:35.512
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/22/23 04:03:35.517
  STEP: Saw pod success @ 12/22/23 04:03:39.559
  Dec 22 04:03:39.561: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod security-context-0cd4e430-3d31-4ea6-be07-ec49ac6d3545 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 04:03:39.573
  Dec 22 04:03:39.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7557" for this suite. @ 12/22/23 04:03:39.595
• [4.130 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 12/22/23 04:03:39.604
  Dec 22 04:03:39.604: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 04:03:39.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:03:39.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:03:39.63
  Dec 22 04:03:39.633: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:03:42.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5959" for this suite. @ 12/22/23 04:03:42.72
• [3.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 12/22/23 04:03:42.728
  Dec 22 04:03:42.728: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sched-pred @ 12/22/23 04:03:42.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:03:43.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:03:43.016
  Dec 22 04:03:43.020: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 22 04:03:43.026: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 04:03:43.029: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-160.us-east-2.compute.internal before test
  Dec 22 04:03:43.033: INFO: svclb-traefik-080075b9-7dhph from kube-system started at 2023-12-22 03:39:13 +0000 UTC (2 container statuses recorded)
  Dec 22 04:03:43.033: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:03:43.033: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:03:43.034: INFO: sonobuoy-e2e-job-2ccc42035d274143 from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:03:43.034: INFO: 	Container e2e ready: true, restart count 0
  Dec 22 04:03:43.034: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:03:43.034: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-c4pmm from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:03:43.034: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:03:43.034: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:03:43.034: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-14-155.us-east-2.compute.internal before test
  Dec 22 04:03:43.038: INFO: svclb-traefik-080075b9-fnrx7 from kube-system started at 2023-12-22 03:39:29 +0000 UTC (2 container statuses recorded)
  Dec 22 04:03:43.038: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:03:43.038: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:03:43.038: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-7psl7 from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:03:43.038: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:03:43.038: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:03:43.038: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-2-79.us-east-2.compute.internal before test
  Dec 22 04:03:43.042: INFO: coredns-6799fbcd5-rcvbg from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:03:43.042: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 04:03:43.042: INFO: helm-install-traefik-crd-m5lfj from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:03:43.043: INFO: 	Container helm ready: false, restart count 0
  Dec 22 04:03:43.043: INFO: helm-install-traefik-prpf8 from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:03:43.043: INFO: 	Container helm ready: false, restart count 2
  Dec 22 04:03:43.043: INFO: local-path-provisioner-84db5d44d9-968kz from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:03:43.043: INFO: 	Container local-path-provisioner ready: true, restart count 0
  Dec 22 04:03:43.043: INFO: metrics-server-67c658944b-54sc2 from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:03:43.043: INFO: 	Container metrics-server ready: true, restart count 0
  Dec 22 04:03:43.043: INFO: svclb-traefik-080075b9-mq9px from kube-system started at 2023-12-22 03:37:45 +0000 UTC (2 container statuses recorded)
  Dec 22 04:03:43.044: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:03:43.044: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:03:43.044: INFO: traefik-f4564c4f4-hprzl from kube-system started at 2023-12-22 03:37:45 +0000 UTC (1 container statuses recorded)
  Dec 22 04:03:43.044: INFO: 	Container traefik ready: true, restart count 0
  Dec 22 04:03:43.044: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-gvv9z from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:03:43.044: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:03:43.044: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:03:43.044: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-254.us-east-2.compute.internal before test
  Dec 22 04:03:43.048: INFO: svclb-traefik-080075b9-jqvvw from kube-system started at 2023-12-22 03:40:47 +0000 UTC (2 container statuses recorded)
  Dec 22 04:03:43.049: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:03:43.049: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:03:43.049: INFO: sonobuoy from sonobuoy started at 2023-12-22 03:57:51 +0000 UTC (1 container statuses recorded)
  Dec 22 04:03:43.049: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 22 04:03:43.049: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-wjwxp from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:03:43.049: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:03:43.049: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/22/23 04:03:43.049
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/22/23 04:03:45.066
  STEP: Trying to apply a random label on the found node. @ 12/22/23 04:03:45.085
  STEP: verifying the node has the label kubernetes.io/e2e-9d9dd837-aabb-4e81-b9ed-5363d4c10c0a 95 @ 12/22/23 04:03:45.099
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/22/23 04:03:45.105
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.14.155 on the node which pod4 resides and expect not scheduled @ 12/22/23 04:03:47.122
  STEP: removing the label kubernetes.io/e2e-9d9dd837-aabb-4e81-b9ed-5363d4c10c0a off the node ip-172-31-14-155.us-east-2.compute.internal @ 12/22/23 04:08:47.131
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-9d9dd837-aabb-4e81-b9ed-5363d4c10c0a @ 12/22/23 04:08:47.144
  Dec 22 04:08:47.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-232" for this suite. @ 12/22/23 04:08:47.159
• [304.437 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 12/22/23 04:08:47.165
  Dec 22 04:08:47.165: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:08:47.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:08:47.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:08:47.243
  STEP: Creating the pod @ 12/22/23 04:08:47.246
  Dec 22 04:08:49.784: INFO: Successfully updated pod "labelsupdate4186c9e2-8fcf-42ee-b783-44d235111e4c"
  Dec 22 04:08:51.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2708" for this suite. @ 12/22/23 04:08:51.803
• [4.644 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 12/22/23 04:08:51.811
  Dec 22 04:08:51.811: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pod-network-test @ 12/22/23 04:08:51.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:08:51.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:08:51.836
  STEP: Performing setup for networking test in namespace pod-network-test-4927 @ 12/22/23 04:08:51.842
  STEP: creating a selector @ 12/22/23 04:08:51.842
  STEP: Creating the service pods in kubernetes @ 12/22/23 04:08:51.842
  Dec 22 04:08:51.842: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/22/23 04:09:03.924
  Dec 22 04:09:05.938: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Dec 22 04:09:05.938: INFO: Breadth first check of 10.42.1.13 on host 172.31.11.160...
  Dec 22 04:09:05.941: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.36:9080/dial?request=hostname&protocol=udp&host=10.42.1.13&port=8081&tries=1'] Namespace:pod-network-test-4927 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:09:05.941: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:09:05.942: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:09:05.942: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4927/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.36%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.13%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 04:09:06.005: INFO: Waiting for responses: map[]
  Dec 22 04:09:06.005: INFO: reached 10.42.1.13 after 0/1 tries
  Dec 22 04:09:06.005: INFO: Breadth first check of 10.42.2.35 on host 172.31.14.155...
  Dec 22 04:09:06.008: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.36:9080/dial?request=hostname&protocol=udp&host=10.42.2.35&port=8081&tries=1'] Namespace:pod-network-test-4927 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:09:06.008: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:09:06.009: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:09:06.009: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4927/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.36%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.35%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 04:09:06.072: INFO: Waiting for responses: map[]
  Dec 22 04:09:06.072: INFO: reached 10.42.2.35 after 0/1 tries
  Dec 22 04:09:06.072: INFO: Breadth first check of 10.42.0.12 on host 172.31.2.79...
  Dec 22 04:09:06.075: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.36:9080/dial?request=hostname&protocol=udp&host=10.42.0.12&port=8081&tries=1'] Namespace:pod-network-test-4927 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:09:06.075: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:09:06.076: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:09:06.076: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4927/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.36%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.12%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 04:09:06.158: INFO: Waiting for responses: map[]
  Dec 22 04:09:06.158: INFO: reached 10.42.0.12 after 0/1 tries
  Dec 22 04:09:06.158: INFO: Breadth first check of 10.42.3.16 on host 172.31.8.254...
  Dec 22 04:09:06.160: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.36:9080/dial?request=hostname&protocol=udp&host=10.42.3.16&port=8081&tries=1'] Namespace:pod-network-test-4927 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:09:06.161: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:09:06.161: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:09:06.162: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4927/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.36%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.3.16%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 04:09:06.232: INFO: Waiting for responses: map[]
  Dec 22 04:09:06.232: INFO: reached 10.42.3.16 after 0/1 tries
  Dec 22 04:09:06.232: INFO: Going to retry 0 out of 4 pods....
  Dec 22 04:09:06.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4927" for this suite. @ 12/22/23 04:09:06.237
• [14.433 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 12/22/23 04:09:06.246
  Dec 22 04:09:06.246: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 04:09:06.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:09:06.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:09:06.279
  STEP: Creating a ResourceQuota @ 12/22/23 04:09:06.314
  STEP: Getting a ResourceQuota @ 12/22/23 04:09:06.319
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/22/23 04:09:06.322
  STEP: Patching the ResourceQuota @ 12/22/23 04:09:06.325
  STEP: Deleting a Collection of ResourceQuotas @ 12/22/23 04:09:06.333
  STEP: Verifying the deleted ResourceQuota @ 12/22/23 04:09:06.342
  Dec 22 04:09:06.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6017" for this suite. @ 12/22/23 04:09:06.349
• [0.110 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/22/23 04:09:06.356
  Dec 22 04:09:06.356: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-runtime @ 12/22/23 04:09:06.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:09:06.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:09:06.381
  STEP: create the container @ 12/22/23 04:09:06.385
  W1222 04:09:06.393981      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/22/23 04:09:06.394
  STEP: get the container status @ 12/22/23 04:09:09.407
  STEP: the container should be terminated @ 12/22/23 04:09:09.41
  STEP: the termination message should be set @ 12/22/23 04:09:09.41
  Dec 22 04:09:09.410: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/22/23 04:09:09.41
  Dec 22 04:09:09.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5366" for this suite. @ 12/22/23 04:09:09.431
• [3.080 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/22/23 04:09:09.436
  Dec 22 04:09:09.436: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:09:09.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:09:09.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:09:09.461
  STEP: Creating secret with name projected-secret-test-e51a091c-5391-4f31-965d-6a9b1084827b @ 12/22/23 04:09:09.465
  STEP: Creating a pod to test consume secrets @ 12/22/23 04:09:09.47
  STEP: Saw pod success @ 12/22/23 04:09:13.495
  Dec 22 04:09:13.498: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod pod-projected-secrets-d0283677-0ef9-4ade-9e36-2d1cf0ba10d7 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 04:09:13.51
  Dec 22 04:09:13.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3276" for this suite. @ 12/22/23 04:09:13.529
• [4.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/22/23 04:09:13.537
  Dec 22 04:09:13.537: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename subpath @ 12/22/23 04:09:13.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:09:13.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:09:13.562
  STEP: Setting up data @ 12/22/23 04:09:13.565
  STEP: Creating pod pod-subpath-test-secret-nqrf @ 12/22/23 04:09:13.574
  STEP: Creating a pod to test atomic-volume-subpath @ 12/22/23 04:09:13.574
  STEP: Saw pod success @ 12/22/23 04:09:37.643
  Dec 22 04:09:37.646: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-subpath-test-secret-nqrf container test-container-subpath-secret-nqrf: <nil>
  STEP: delete the pod @ 12/22/23 04:09:37.652
  STEP: Deleting pod pod-subpath-test-secret-nqrf @ 12/22/23 04:09:37.666
  Dec 22 04:09:37.666: INFO: Deleting pod "pod-subpath-test-secret-nqrf" in namespace "subpath-8075"
  Dec 22 04:09:37.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8075" for this suite. @ 12/22/23 04:09:37.673
• [24.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 12/22/23 04:09:37.68
  Dec 22 04:09:37.680: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:09:37.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:09:37.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:09:37.706
  STEP: creating Agnhost RC @ 12/22/23 04:09:37.709
  Dec 22 04:09:37.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-5934 create -f -'
  Dec 22 04:09:38.085: INFO: stderr: ""
  Dec 22 04:09:38.085: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/22/23 04:09:38.085
  Dec 22 04:09:39.089: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:09:39.089: INFO: Found 0 / 1
  Dec 22 04:09:40.089: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:09:40.089: INFO: Found 1 / 1
  Dec 22 04:09:40.089: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/22/23 04:09:40.089
  Dec 22 04:09:40.091: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:09:40.091: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 22 04:09:40.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-5934 patch pod agnhost-primary-xzgmt -p {"metadata":{"annotations":{"x":"y"}}}'
  Dec 22 04:09:40.194: INFO: stderr: ""
  Dec 22 04:09:40.194: INFO: stdout: "pod/agnhost-primary-xzgmt patched\n"
  STEP: checking annotations @ 12/22/23 04:09:40.194
  Dec 22 04:09:40.197: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:09:40.197: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 22 04:09:40.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5934" for this suite. @ 12/22/23 04:09:40.201
• [2.525 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 12/22/23 04:09:40.206
  Dec 22 04:09:40.206: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename dns @ 12/22/23 04:09:40.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:09:40.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:09:40.227
  STEP: Creating a test externalName service @ 12/22/23 04:09:40.231
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4690.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4690.svc.cluster.local; sleep 1; done
   @ 12/22/23 04:09:40.238
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4690.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4690.svc.cluster.local; sleep 1; done
   @ 12/22/23 04:09:40.238
  STEP: creating a pod to probe DNS @ 12/22/23 04:09:40.238
  STEP: submitting the pod to kubernetes @ 12/22/23 04:09:40.238
  STEP: retrieving the pod @ 12/22/23 04:10:06.862
  STEP: looking for the results for each expected name from probers @ 12/22/23 04:10:06.864
  Dec 22 04:10:06.876: INFO: DNS probes using dns-test-aeaac025-a981-4ffa-90f1-5ca6200505cf succeeded

  STEP: changing the externalName to bar.example.com @ 12/22/23 04:10:06.876
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4690.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4690.svc.cluster.local; sleep 1; done
   @ 12/22/23 04:10:06.884
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4690.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4690.svc.cluster.local; sleep 1; done
   @ 12/22/23 04:10:06.884
  STEP: creating a second pod to probe DNS @ 12/22/23 04:10:06.884
  STEP: submitting the pod to kubernetes @ 12/22/23 04:10:06.885
  STEP: retrieving the pod @ 12/22/23 04:10:14.912
  STEP: looking for the results for each expected name from probers @ 12/22/23 04:10:14.916
  Dec 22 04:10:14.952: INFO: Unable to read jessie_udp@dns-test-service-3.dns-4690.svc.cluster.local from pod dns-4690/dns-test-5af1cce0-e732-4a40-afbd-347c30b3bebd: Get "https://10.43.0.1:443/api/v1/namespaces/dns-4690/pods/dns-test-5af1cce0-e732-4a40-afbd-347c30b3bebd/proxy/results/jessie_udp@dns-test-service-3.dns-4690.svc.cluster.local": stream error: stream ID 1445; INTERNAL_ERROR; received from peer
  Dec 22 04:10:14.952: INFO: Lookups using dns-4690/dns-test-5af1cce0-e732-4a40-afbd-347c30b3bebd failed for: [jessie_udp@dns-test-service-3.dns-4690.svc.cluster.local]

  Dec 22 04:10:14.959: INFO: Pod client logs for webserver: 
  Dec 22 04:10:14.970: INFO: Pod client logs for querier: 
  Dec 22 04:10:14.975: INFO: Pod client logs for jessie-querier: 
  Dec 22 04:10:19.928: INFO: DNS probes using dns-test-5af1cce0-e732-4a40-afbd-347c30b3bebd succeeded

  STEP: changing the service to type=ClusterIP @ 12/22/23 04:10:19.928
  W1222 04:10:19.943229      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4690.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-4690.svc.cluster.local; sleep 1; done
   @ 12/22/23 04:10:19.943
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4690.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-4690.svc.cluster.local; sleep 1; done
   @ 12/22/23 04:10:19.943
  STEP: creating a third pod to probe DNS @ 12/22/23 04:10:19.943
  STEP: submitting the pod to kubernetes @ 12/22/23 04:10:19.946
  STEP: retrieving the pod @ 12/22/23 04:10:25.974
  STEP: looking for the results for each expected name from probers @ 12/22/23 04:10:25.977
  Dec 22 04:10:25.989: INFO: DNS probes using dns-test-83c38239-c20d-4bfc-b70f-41bafab47c2b succeeded

  STEP: deleting the pod @ 12/22/23 04:10:25.99
  STEP: deleting the pod @ 12/22/23 04:10:26.005
  STEP: deleting the pod @ 12/22/23 04:10:26.02
  STEP: deleting the test externalName service @ 12/22/23 04:10:26.038
  Dec 22 04:10:26.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4690" for this suite. @ 12/22/23 04:10:26.067
• [45.872 seconds]
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 12/22/23 04:10:26.078
  Dec 22 04:10:26.078: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 04:10:26.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:10:26.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:10:26.102
  Dec 22 04:10:26.116: INFO: created pod
  STEP: Saw pod success @ 12/22/23 04:10:32.13
  Dec 22 04:11:02.133: INFO: polling logs
  Dec 22 04:11:02.140: INFO: Pod logs: 
  I1222 04:10:26.962394       1 log.go:194] OK: Got token
  I1222 04:10:26.962477       1 log.go:194] validating with in-cluster discovery
  I1222 04:10:26.962852       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I1222 04:10:26.962895       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6535:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000213560), NotBefore:(*jwt.NumericDate)(0xc000213648), IssuedAt:(*jwt.NumericDate)(0xc000213570), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6535", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"2706955c-975b-4b5e-92ce-d589f887c5ea"}}}
  I1222 04:10:26.972438       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I1222 04:10:26.976581       1 log.go:194] OK: Validated signature on JWT
  I1222 04:10:26.976732       1 log.go:194] OK: Got valid claims from token!
  I1222 04:10:26.976804       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6535:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000126fc0), NotBefore:(*jwt.NumericDate)(0xc000126fe8), IssuedAt:(*jwt.NumericDate)(0xc000126fc8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6535", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"2706955c-975b-4b5e-92ce-d589f887c5ea"}}}

  Dec 22 04:11:02.140: INFO: completed pod
  Dec 22 04:11:02.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6535" for this suite. @ 12/22/23 04:11:02.15
• [36.078 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 12/22/23 04:11:02.156
  Dec 22 04:11:02.156: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:11:02.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:11:02.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:11:02.189
  STEP: Creating a pod to test downward api env vars @ 12/22/23 04:11:02.193
  STEP: Saw pod success @ 12/22/23 04:11:06.225
  Dec 22 04:11:06.228: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downward-api-38210a58-7b13-4153-8730-883260c7ab5f container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 04:11:06.233
  Dec 22 04:11:06.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9340" for this suite. @ 12/22/23 04:11:06.251
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/22/23 04:11:06.263
  Dec 22 04:11:06.263: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename containers @ 12/22/23 04:11:06.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:11:06.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:11:06.286
  STEP: Creating a pod to test override command @ 12/22/23 04:11:06.289
  STEP: Saw pod success @ 12/22/23 04:11:10.312
  Dec 22 04:11:10.315: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod client-containers-c21d04cb-f285-4db6-bff8-b9fc9bd38bf1 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:11:10.32
  Dec 22 04:11:10.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6494" for this suite. @ 12/22/23 04:11:10.338
• [4.085 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 12/22/23 04:11:10.348
  Dec 22 04:11:10.348: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename gc @ 12/22/23 04:11:10.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:11:10.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:11:10.37
  Dec 22 04:11:10.445: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"26269f62-ca76-4e01-858e-7922caa67c42", Controller:(*bool)(0xc004748286), BlockOwnerDeletion:(*bool)(0xc004748287)}}
  Dec 22 04:11:10.455: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"0c217067-22c2-43ce-83cb-2a95e1d5ab93", Controller:(*bool)(0xc0019fb7ae), BlockOwnerDeletion:(*bool)(0xc0019fb7af)}}
  Dec 22 04:11:10.478: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"5a0a769a-7418-45bd-b728-2bd867cd3fb2", Controller:(*bool)(0xc00474849e), BlockOwnerDeletion:(*bool)(0xc00474849f)}}
  Dec 22 04:11:15.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6921" for this suite. @ 12/22/23 04:11:15.492
• [5.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 12/22/23 04:11:15.5
  Dec 22 04:11:15.500: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 04:11:15.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:11:15.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:11:15.523
  STEP: apply creating a deployment @ 12/22/23 04:11:15.527
  Dec 22 04:11:15.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1638" for this suite. @ 12/22/23 04:11:15.547
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 12/22/23 04:11:15.556
  Dec 22 04:11:15.556: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 04:11:15.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:11:15.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:11:15.584
  STEP: set up a multi version CRD @ 12/22/23 04:11:15.588
  Dec 22 04:11:15.589: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: mark a version not serverd @ 12/22/23 04:11:19.939
  STEP: check the unserved version gets removed @ 12/22/23 04:11:19.959
  STEP: check the other version is not changed @ 12/22/23 04:11:21.476
  Dec 22 04:11:24.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5689" for this suite. @ 12/22/23 04:11:24.796
• [9.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 12/22/23 04:11:24.805
  Dec 22 04:11:24.805: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 04:11:24.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:11:24.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:11:24.827
  STEP: Creating pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630 @ 12/22/23 04:11:24.831
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 04:11:26.848
  Dec 22 04:11:26.850: INFO: Initial restart count of pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd is 0
  Dec 22 04:11:26.853: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:28.856: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:30.861: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:32.865: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:34.869: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:36.873: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:38.876: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:40.881: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:42.885: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:44.888: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:46.893: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:46.893: INFO: Restart count of pod container-probe-7630/liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd is now 1 (20.04301708s elapsed)
  Dec 22 04:11:48.896: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:50.900: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:52.904: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:54.909: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:56.913: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:11:58.917: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:00.921: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:02.924: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:04.928: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:06.932: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:06.932: INFO: Restart count of pod container-probe-7630/liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd is now 2 (40.081189709s elapsed)
  Dec 22 04:12:08.936: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:10.941: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:12.945: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:14.948: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:16.952: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:18.956: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:20.960: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:22.965: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:24.969: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:26.975: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:26.975: INFO: Restart count of pod container-probe-7630/liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd is now 3 (1m0.124577964s elapsed)
  Dec 22 04:12:28.979: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:30.983: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:32.987: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:34.991: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:36.997: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:39.001: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:41.006: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:43.010: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:45.013: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:47.019: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:47.019: INFO: Restart count of pod container-probe-7630/liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd is now 4 (1m20.168251638s elapsed)
  Dec 22 04:12:49.022: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:51.026: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:53.031: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:55.117: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:57.121: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:12:59.125: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:01.129: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:03.133: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:05.137: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:07.141: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:09.146: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:11.150: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:13.155: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:15.158: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:17.163: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:19.166: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:21.171: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:23.176: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:25.180: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:27.184: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:29.190: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:31.195: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:33.199: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:35.203: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:37.207: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:39.212: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:41.216: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:43.219: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:45.224: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:47.228: INFO: Get pod liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd in namespace container-probe-7630
  Dec 22 04:13:47.228: INFO: Restart count of pod container-probe-7630/liveness-04c6aa35-c0f7-4529-90ad-00b6814571dd is now 5 (2m20.37759768s elapsed)
  STEP: deleting the pod @ 12/22/23 04:13:47.228
  Dec 22 04:13:47.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7630" for this suite. @ 12/22/23 04:13:47.246
• [142.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 12/22/23 04:13:47.255
  Dec 22 04:13:47.256: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 04:13:47.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:13:47.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:13:47.285
  STEP: Creating pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934 @ 12/22/23 04:13:47.292
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 04:13:49.305
  Dec 22 04:13:49.308: INFO: Initial restart count of pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 is 0
  Dec 22 04:13:49.310: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:13:51.314: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:13:53.325: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:13:55.328: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:13:57.332: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:13:59.336: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:01.340: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:03.344: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:05.349: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:07.353: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:09.356: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:11.360: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:13.363: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:15.367: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:17.372: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:19.376: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:21.380: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:23.383: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:25.392: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:27.397: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:29.401: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:31.404: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:33.408: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:35.412: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:37.424: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:39.428: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:41.432: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:43.436: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:45.440: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:47.444: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:49.448: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:51.453: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:53.457: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:55.462: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:57.469: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:14:59.473: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:01.476: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:03.480: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:05.484: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:07.488: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:09.492: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:11.495: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:13.499: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:15.503: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:17.580: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:19.584: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:21.587: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:23.593: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:25.598: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:27.602: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:29.606: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:31.611: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:33.624: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:35.627: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:37.632: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:39.670: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:41.679: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:43.682: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:45.686: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:47.690: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:49.694: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:51.697: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:53.702: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:55.707: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:57.711: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:15:59.715: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:01.724: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:03.728: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:05.732: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:07.736: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:09.740: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:11.743: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:13.747: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:15.750: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:17.754: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:19.758: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:21.762: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:23.767: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:25.774: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:27.777: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:29.782: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:31.785: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:33.788: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:35.792: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:37.798: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:39.801: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:41.804: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:43.808: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:45.812: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:47.816: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:49.820: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:51.824: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:53.828: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:55.832: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:57.837: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:16:59.840: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:01.844: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:03.847: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:05.852: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:07.857: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:09.862: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:11.869: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:13.872: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:15.876: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:17.880: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:19.884: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:21.888: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:23.892: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:25.895: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:27.902: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:29.905: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:31.909: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:33.913: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:35.919: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:37.927: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:39.931: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:41.936: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:43.940: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:45.945: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  Dec 22 04:17:47.950: INFO: Get pod busybox-364cbb28-54cc-47f5-b7b4-9a7576498997 in namespace container-probe-934
  STEP: deleting the pod @ 12/22/23 04:17:49.95
  Dec 22 04:17:49.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-934" for this suite. @ 12/22/23 04:17:49.971
• [242.721 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 12/22/23 04:17:49.977
  Dec 22 04:17:49.977: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pv @ 12/22/23 04:17:49.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:17:49.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:17:50.004
  STEP: Creating initial PV and PVC @ 12/22/23 04:17:50.009
  Dec 22 04:17:50.009: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8229" @ 12/22/23 04:17:50.025
  STEP: Listing PVCs in namespace "pv-8229" @ 12/22/23 04:17:50.033
  STEP: Reading "pvc-mvchf" Status @ 12/22/23 04:17:50.036
  STEP: Reading "pv-8229-7hb4q" Status @ 12/22/23 04:17:50.042
  STEP: Patching "pvc-mvchf" Status @ 12/22/23 04:17:50.048
  STEP: Patching "pv-8229-7hb4q" Status @ 12/22/23 04:17:50.059
  STEP: Updating "pvc-mvchf" Status @ 12/22/23 04:17:50.066
  STEP: Updating "pv-8229-7hb4q" Status @ 12/22/23 04:17:50.079
  Dec 22 04:17:50.092: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Dec 22 04:17:50.092: INFO: Deleting PersistentVolumeClaim "pvc-mvchf"
  Dec 22 04:17:50.100: INFO: Deleting PersistentVolume "pv-8229-7hb4q"
  Dec 22 04:17:50.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8229" for this suite. @ 12/22/23 04:17:50.113
• [0.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 12/22/23 04:17:50.122
  Dec 22 04:17:50.122: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 04:17:50.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:17:50.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:17:50.156
  STEP: Creating service test in namespace statefulset-409 @ 12/22/23 04:17:50.161
  STEP: Creating a new StatefulSet @ 12/22/23 04:17:50.167
  Dec 22 04:17:50.179: INFO: Found 0 stateful pods, waiting for 3
  Dec 22 04:18:00.180: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:18:00.181: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:18:00.181: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  Dec 22 04:18:10.180: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:18:10.181: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:18:10.181: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:18:10.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-409 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 04:18:10.351: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 04:18:10.351: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 04:18:10.351: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/22/23 04:18:20.362
  Dec 22 04:18:20.381: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 12/22/23 04:18:20.381
  STEP: Updating Pods in reverse ordinal order @ 12/22/23 04:18:30.391
  Dec 22 04:18:30.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-409 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 04:18:30.539: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 04:18:30.539: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 04:18:30.539: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 12/22/23 04:18:50.557
  Dec 22 04:18:50.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-409 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 04:18:50.717: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 04:18:50.717: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 04:18:50.717: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 04:19:00.749: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 12/22/23 04:19:10.759
  Dec 22 04:19:10.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-409 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 04:19:10.930: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 04:19:10.930: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 04:19:10.930: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 04:19:30.946: INFO: Deleting all statefulset in ns statefulset-409
  Dec 22 04:19:30.949: INFO: Scaling statefulset ss2 to 0
  Dec 22 04:19:40.966: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 04:19:40.968: INFO: Deleting statefulset ss2
  Dec 22 04:19:40.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-409" for this suite. @ 12/22/23 04:19:40.982
• [110.869 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 12/22/23 04:19:40.992
  Dec 22 04:19:40.992: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 04:19:40.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:19:41.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:19:41.019
  STEP: Creating namespace "e2e-ns-f2vcz" @ 12/22/23 04:19:41.062
  Dec 22 04:19:41.080: INFO: Namespace "e2e-ns-f2vcz-6120" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-f2vcz-6120" @ 12/22/23 04:19:41.08
  Dec 22 04:19:41.091: INFO: Namespace "e2e-ns-f2vcz-6120" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-f2vcz-6120" @ 12/22/23 04:19:41.092
  Dec 22 04:19:41.099: INFO: Namespace "e2e-ns-f2vcz-6120" has []v1.FinalizerName{"kubernetes"}
  Dec 22 04:19:41.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3298" for this suite. @ 12/22/23 04:19:41.105
  STEP: Destroying namespace "e2e-ns-f2vcz-6120" for this suite. @ 12/22/23 04:19:41.112
• [0.126 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/22/23 04:19:41.118
  Dec 22 04:19:41.119: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename proxy @ 12/22/23 04:19:41.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:19:41.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:19:41.194
  STEP: starting an echo server on multiple ports @ 12/22/23 04:19:41.21
  STEP: creating replication controller proxy-service-7c7n2 in namespace proxy-9450 @ 12/22/23 04:19:41.21
  I1222 04:19:41.228742      20 runners.go:197] Created replication controller with name: proxy-service-7c7n2, namespace: proxy-9450, replica count: 1
  I1222 04:19:42.280262      20 runners.go:197] proxy-service-7c7n2 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1222 04:19:43.281336      20 runners.go:197] proxy-service-7c7n2 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 04:19:43.540: INFO: setup took 2.34307459s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/22/23 04:19:43.54
  Dec 22 04:19:43.558: INFO: (0) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 16.04624ms)
  Dec 22 04:19:43.563: INFO: (0) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 21.044838ms)
  Dec 22 04:19:43.575: INFO: (0) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 33.336886ms)
  Dec 22 04:19:43.575: INFO: (0) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 34.148391ms)
  Dec 22 04:19:43.575: INFO: (0) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 33.820789ms)
  Dec 22 04:19:43.575: INFO: (0) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 34.04536ms)
  Dec 22 04:19:43.576: INFO: (0) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 35.317517ms)
  Dec 22 04:19:43.576: INFO: (0) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 34.437153ms)
  Dec 22 04:19:43.583: INFO: (0) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 41.528952ms)
  Dec 22 04:19:43.583: INFO: (0) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 41.743563ms)
  Dec 22 04:19:43.583: INFO: (0) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 42.125815ms)
  Dec 22 04:19:43.584: INFO: (0) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 42.619719ms)
  Dec 22 04:19:43.584: INFO: (0) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 42.476838ms)
  Dec 22 04:19:43.585: INFO: (0) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 43.513253ms)
  Dec 22 04:19:43.585: INFO: (0) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 43.225721ms)
  Dec 22 04:19:43.585: INFO: (0) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 43.902415ms)
  Dec 22 04:19:43.592: INFO: (1) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 7.353521ms)
  Dec 22 04:19:43.593: INFO: (1) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 8.737018ms)
  Dec 22 04:19:43.594: INFO: (1) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 7.829154ms)
  Dec 22 04:19:43.594: INFO: (1) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 8.93604ms)
  Dec 22 04:19:43.594: INFO: (1) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 8.97039ms)
  Dec 22 04:19:43.594: INFO: (1) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 9.216061ms)
  Dec 22 04:19:43.594: INFO: (1) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 8.540648ms)
  Dec 22 04:19:43.596: INFO: (1) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 10.575589ms)
  Dec 22 04:19:43.597: INFO: (1) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 10.426839ms)
  Dec 22 04:19:43.598: INFO: (1) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 13.073433ms)
  Dec 22 04:19:43.598: INFO: (1) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 12.302148ms)
  Dec 22 04:19:43.598: INFO: (1) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 11.927157ms)
  Dec 22 04:19:43.598: INFO: (1) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 12.40148ms)
  Dec 22 04:19:43.599: INFO: (1) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 13.534235ms)
  Dec 22 04:19:43.599: INFO: (1) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 13.960207ms)
  Dec 22 04:19:43.601: INFO: (1) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 14.983954ms)
  Dec 22 04:19:43.611: INFO: (2) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 8.833649ms)
  Dec 22 04:19:43.611: INFO: (2) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 8.97894ms)
  Dec 22 04:19:43.612: INFO: (2) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 9.815285ms)
  Dec 22 04:19:43.612: INFO: (2) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 8.8847ms)
  Dec 22 04:19:43.612: INFO: (2) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 10.845461ms)
  Dec 22 04:19:43.613: INFO: (2) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 11.077262ms)
  Dec 22 04:19:43.613: INFO: (2) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 10.804351ms)
  Dec 22 04:19:43.613: INFO: (2) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 11.603645ms)
  Dec 22 04:19:43.613: INFO: (2) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 10.73354ms)
  Dec 22 04:19:43.613: INFO: (2) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 10.237617ms)
  Dec 22 04:19:43.613: INFO: (2) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 11.057192ms)
  Dec 22 04:19:43.615: INFO: (2) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 13.787377ms)
  Dec 22 04:19:43.616: INFO: (2) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 14.26844ms)
  Dec 22 04:19:43.617: INFO: (2) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 13.722037ms)
  Dec 22 04:19:43.617: INFO: (2) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 13.945888ms)
  Dec 22 04:19:43.617: INFO: (2) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 14.28493ms)
  Dec 22 04:19:43.622: INFO: (3) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 5.52668ms)
  Dec 22 04:19:43.628: INFO: (3) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 10.119956ms)
  Dec 22 04:19:43.630: INFO: (3) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 12.52501ms)
  Dec 22 04:19:43.630: INFO: (3) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 12.615121ms)
  Dec 22 04:19:43.630: INFO: (3) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 13.111373ms)
  Dec 22 04:19:43.634: INFO: (3) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 16.858184ms)
  Dec 22 04:19:43.634: INFO: (3) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 15.576827ms)
  Dec 22 04:19:43.635: INFO: (3) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 17.668449ms)
  Dec 22 04:19:43.635: INFO: (3) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 18.484113ms)
  Dec 22 04:19:43.637: INFO: (3) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 18.613113ms)
  Dec 22 04:19:43.637: INFO: (3) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 18.443153ms)
  Dec 22 04:19:43.637: INFO: (3) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 18.569593ms)
  Dec 22 04:19:43.638: INFO: (3) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 19.800931ms)
  Dec 22 04:19:43.639: INFO: (3) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 21.120818ms)
  Dec 22 04:19:43.639: INFO: (3) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 20.824076ms)
  Dec 22 04:19:43.639: INFO: (3) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 20.779376ms)
  Dec 22 04:19:43.648: INFO: (4) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 8.84788ms)
  Dec 22 04:19:43.648: INFO: (4) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 9.166031ms)
  Dec 22 04:19:43.648: INFO: (4) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 8.950141ms)
  Dec 22 04:19:43.649: INFO: (4) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 9.401133ms)
  Dec 22 04:19:43.649: INFO: (4) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 9.504303ms)
  Dec 22 04:19:43.649: INFO: (4) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 10.084906ms)
  Dec 22 04:19:43.650: INFO: (4) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 10.787861ms)
  Dec 22 04:19:43.650: INFO: (4) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 10.69291ms)
  Dec 22 04:19:43.650: INFO: (4) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 11.230733ms)
  Dec 22 04:19:43.650: INFO: (4) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 10.934531ms)
  Dec 22 04:19:43.651: INFO: (4) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 11.850426ms)
  Dec 22 04:19:43.651: INFO: (4) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 12.013607ms)
  Dec 22 04:19:43.652: INFO: (4) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 13.071983ms)
  Dec 22 04:19:43.652: INFO: (4) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 12.844822ms)
  Dec 22 04:19:43.652: INFO: (4) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 13.025743ms)
  Dec 22 04:19:43.652: INFO: (4) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 12.963953ms)
  Dec 22 04:19:43.659: INFO: (5) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 6.243675ms)
  Dec 22 04:19:43.660: INFO: (5) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 7.19761ms)
  Dec 22 04:19:43.660: INFO: (5) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 7.847704ms)
  Dec 22 04:19:43.661: INFO: (5) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 7.508822ms)
  Dec 22 04:19:43.661: INFO: (5) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 8.550618ms)
  Dec 22 04:19:43.661: INFO: (5) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 8.071255ms)
  Dec 22 04:19:43.662: INFO: (5) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 8.203786ms)
  Dec 22 04:19:43.662: INFO: (5) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 10.180886ms)
  Dec 22 04:19:43.662: INFO: (5) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 8.760289ms)
  Dec 22 04:19:43.665: INFO: (5) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 12.879121ms)
  Dec 22 04:19:43.665: INFO: (5) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 12.826842ms)
  Dec 22 04:19:43.665: INFO: (5) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 11.804126ms)
  Dec 22 04:19:43.665: INFO: (5) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 11.993777ms)
  Dec 22 04:19:43.665: INFO: (5) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 12.545759ms)
  Dec 22 04:19:43.665: INFO: (5) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 11.718485ms)
  Dec 22 04:19:43.665: INFO: (5) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 12.760891ms)
  Dec 22 04:19:43.675: INFO: (6) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 8.691609ms)
  Dec 22 04:19:43.675: INFO: (6) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 9.848655ms)
  Dec 22 04:19:43.675: INFO: (6) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 9.471453ms)
  Dec 22 04:19:43.675: INFO: (6) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 8.770969ms)
  Dec 22 04:19:43.676: INFO: (6) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 9.508683ms)
  Dec 22 04:19:43.676: INFO: (6) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 9.646944ms)
  Dec 22 04:19:43.676: INFO: (6) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 9.959256ms)
  Dec 22 04:19:43.676: INFO: (6) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 9.232782ms)
  Dec 22 04:19:43.676: INFO: (6) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 9.553044ms)
  Dec 22 04:19:43.676: INFO: (6) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 9.982086ms)
  Dec 22 04:19:43.678: INFO: (6) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 11.945177ms)
  Dec 22 04:19:43.678: INFO: (6) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 11.182933ms)
  Dec 22 04:19:43.678: INFO: (6) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 12.054917ms)
  Dec 22 04:19:43.679: INFO: (6) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 12.896553ms)
  Dec 22 04:19:43.679: INFO: (6) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 11.948167ms)
  Dec 22 04:19:43.679: INFO: (6) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 11.919207ms)
  Dec 22 04:19:43.686: INFO: (7) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 6.840848ms)
  Dec 22 04:19:43.686: INFO: (7) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 5.808213ms)
  Dec 22 04:19:43.686: INFO: (7) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 5.849233ms)
  Dec 22 04:19:43.686: INFO: (7) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 7.13715ms)
  Dec 22 04:19:43.687: INFO: (7) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 7.498792ms)
  Dec 22 04:19:43.687: INFO: (7) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 7.657413ms)
  Dec 22 04:19:43.687: INFO: (7) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 7.620083ms)
  Dec 22 04:19:43.689: INFO: (7) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 9.487534ms)
  Dec 22 04:19:43.689: INFO: (7) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 9.355503ms)
  Dec 22 04:19:43.690: INFO: (7) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 9.470743ms)
  Dec 22 04:19:43.690: INFO: (7) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 10.73916ms)
  Dec 22 04:19:43.691: INFO: (7) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 11.119652ms)
  Dec 22 04:19:43.691: INFO: (7) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 11.544624ms)
  Dec 22 04:19:43.691: INFO: (7) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 11.489954ms)
  Dec 22 04:19:43.692: INFO: (7) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 12.629571ms)
  Dec 22 04:19:43.692: INFO: (7) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 12.126298ms)
  Dec 22 04:19:43.698: INFO: (8) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 5.936853ms)
  Dec 22 04:19:43.698: INFO: (8) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 6.537146ms)
  Dec 22 04:19:43.699: INFO: (8) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 6.714337ms)
  Dec 22 04:19:43.699: INFO: (8) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 6.971309ms)
  Dec 22 04:19:43.700: INFO: (8) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 8.216456ms)
  Dec 22 04:19:43.702: INFO: (8) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 8.775379ms)
  Dec 22 04:19:43.704: INFO: (8) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 11.026421ms)
  Dec 22 04:19:43.704: INFO: (8) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 11.083372ms)
  Dec 22 04:19:43.704: INFO: (8) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 11.292263ms)
  Dec 22 04:19:43.705: INFO: (8) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 12.692721ms)
  Dec 22 04:19:43.708: INFO: (8) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 15.429156ms)
  Dec 22 04:19:43.708: INFO: (8) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 16.11638ms)
  Dec 22 04:19:43.709: INFO: (8) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 16.991265ms)
  Dec 22 04:19:43.709: INFO: (8) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 15.906779ms)
  Dec 22 04:19:43.710: INFO: (8) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 17.588479ms)
  Dec 22 04:19:43.710: INFO: (8) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 17.022775ms)
  Dec 22 04:19:43.717: INFO: (9) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 7.052919ms)
  Dec 22 04:19:43.719: INFO: (9) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 8.228186ms)
  Dec 22 04:19:43.720: INFO: (9) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 8.684629ms)
  Dec 22 04:19:43.721: INFO: (9) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 8.619318ms)
  Dec 22 04:19:43.721: INFO: (9) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 9.146671ms)
  Dec 22 04:19:43.721: INFO: (9) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 9.397742ms)
  Dec 22 04:19:43.721: INFO: (9) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 9.330293ms)
  Dec 22 04:19:43.721: INFO: (9) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 10.545209ms)
  Dec 22 04:19:43.721: INFO: (9) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 10.235298ms)
  Dec 22 04:19:43.722: INFO: (9) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 11.243373ms)
  Dec 22 04:19:43.722: INFO: (9) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 10.62786ms)
  Dec 22 04:19:43.722: INFO: (9) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 11.339814ms)
  Dec 22 04:19:43.723: INFO: (9) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 11.409303ms)
  Dec 22 04:19:43.723: INFO: (9) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 11.239563ms)
  Dec 22 04:19:43.723: INFO: (9) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 11.870157ms)
  Dec 22 04:19:43.724: INFO: (9) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 12.357879ms)
  Dec 22 04:19:43.733: INFO: (10) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 8.809979ms)
  Dec 22 04:19:43.734: INFO: (10) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 10.019576ms)
  Dec 22 04:19:43.734: INFO: (10) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 9.993046ms)
  Dec 22 04:19:43.734: INFO: (10) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 9.823075ms)
  Dec 22 04:19:43.736: INFO: (10) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 10.883951ms)
  Dec 22 04:19:43.736: INFO: (10) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 11.180742ms)
  Dec 22 04:19:43.736: INFO: (10) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 11.608805ms)
  Dec 22 04:19:43.736: INFO: (10) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 11.920737ms)
  Dec 22 04:19:43.737: INFO: (10) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 12.45621ms)
  Dec 22 04:19:43.737: INFO: (10) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 12.48359ms)
  Dec 22 04:19:43.737: INFO: (10) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 12.380649ms)
  Dec 22 04:19:43.738: INFO: (10) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 12.889782ms)
  Dec 22 04:19:43.738: INFO: (10) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 12.836491ms)
  Dec 22 04:19:43.738: INFO: (10) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 13.632237ms)
  Dec 22 04:19:43.739: INFO: (10) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 14.001248ms)
  Dec 22 04:19:43.739: INFO: (10) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 14.22648ms)
  Dec 22 04:19:43.746: INFO: (11) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 6.927529ms)
  Dec 22 04:19:43.748: INFO: (11) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 7.482211ms)
  Dec 22 04:19:43.749: INFO: (11) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 9.071511ms)
  Dec 22 04:19:43.749: INFO: (11) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 9.776905ms)
  Dec 22 04:19:43.749: INFO: (11) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 9.03815ms)
  Dec 22 04:19:43.749: INFO: (11) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 9.012941ms)
  Dec 22 04:19:43.749: INFO: (11) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 8.94363ms)
  Dec 22 04:19:43.751: INFO: (11) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 10.579429ms)
  Dec 22 04:19:43.752: INFO: (11) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 11.719225ms)
  Dec 22 04:19:43.752: INFO: (11) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 11.393513ms)
  Dec 22 04:19:43.752: INFO: (11) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 12.38944ms)
  Dec 22 04:19:43.752: INFO: (11) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 12.56831ms)
  Dec 22 04:19:43.752: INFO: (11) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 12.786111ms)
  Dec 22 04:19:43.753: INFO: (11) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 13.501236ms)
  Dec 22 04:19:43.753: INFO: (11) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 12.863182ms)
  Dec 22 04:19:43.753: INFO: (11) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 12.55711ms)
  Dec 22 04:19:43.763: INFO: (12) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 8.756238ms)
  Dec 22 04:19:43.764: INFO: (12) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 10.097186ms)
  Dec 22 04:19:43.764: INFO: (12) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 10.370017ms)
  Dec 22 04:19:43.764: INFO: (12) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 10.305857ms)
  Dec 22 04:19:43.764: INFO: (12) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 10.923911ms)
  Dec 22 04:19:43.764: INFO: (12) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 10.339477ms)
  Dec 22 04:19:43.765: INFO: (12) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 11.003521ms)
  Dec 22 04:19:43.765: INFO: (12) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 11.724305ms)
  Dec 22 04:19:43.766: INFO: (12) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 11.653315ms)
  Dec 22 04:19:43.766: INFO: (12) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 11.520904ms)
  Dec 22 04:19:43.766: INFO: (12) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 13.231114ms)
  Dec 22 04:19:43.767: INFO: (12) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 13.604835ms)
  Dec 22 04:19:43.767: INFO: (12) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 12.470329ms)
  Dec 22 04:19:43.767: INFO: (12) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 13.133044ms)
  Dec 22 04:19:43.767: INFO: (12) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 12.63912ms)
  Dec 22 04:19:43.767: INFO: (12) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 12.853072ms)
  Dec 22 04:19:43.775: INFO: (13) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 7.882864ms)
  Dec 22 04:19:43.775: INFO: (13) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 7.651453ms)
  Dec 22 04:19:43.776: INFO: (13) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 8.425877ms)
  Dec 22 04:19:43.776: INFO: (13) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 8.86847ms)
  Dec 22 04:19:43.777: INFO: (13) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 9.204181ms)
  Dec 22 04:19:43.777: INFO: (13) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 9.491424ms)
  Dec 22 04:19:43.777: INFO: (13) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 9.274032ms)
  Dec 22 04:19:43.777: INFO: (13) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 9.406233ms)
  Dec 22 04:19:43.777: INFO: (13) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 9.211391ms)
  Dec 22 04:19:43.777: INFO: (13) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 9.700625ms)
  Dec 22 04:19:43.777: INFO: (13) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 10.058466ms)
  Dec 22 04:19:43.778: INFO: (13) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 10.314988ms)
  Dec 22 04:19:43.778: INFO: (13) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 10.596959ms)
  Dec 22 04:19:43.779: INFO: (13) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 11.020082ms)
  Dec 22 04:19:43.779: INFO: (13) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 11.721636ms)
  Dec 22 04:19:43.779: INFO: (13) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 11.378584ms)
  Dec 22 04:19:43.786: INFO: (14) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 6.742137ms)
  Dec 22 04:19:43.787: INFO: (14) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 6.814348ms)
  Dec 22 04:19:43.787: INFO: (14) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 6.804568ms)
  Dec 22 04:19:43.787: INFO: (14) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 7.14348ms)
  Dec 22 04:19:43.787: INFO: (14) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 7.398991ms)
  Dec 22 04:19:43.788: INFO: (14) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 7.510912ms)
  Dec 22 04:19:43.788: INFO: (14) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 7.928874ms)
  Dec 22 04:19:43.790: INFO: (14) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 9.466892ms)
  Dec 22 04:19:43.791: INFO: (14) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 10.441678ms)
  Dec 22 04:19:43.791: INFO: (14) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 11.290013ms)
  Dec 22 04:19:43.791: INFO: (14) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 10.968941ms)
  Dec 22 04:19:43.791: INFO: (14) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 10.577379ms)
  Dec 22 04:19:43.791: INFO: (14) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 11.139172ms)
  Dec 22 04:19:43.792: INFO: (14) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 11.600415ms)
  Dec 22 04:19:43.792: INFO: (14) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 12.354229ms)
  Dec 22 04:19:43.793: INFO: (14) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 12.390069ms)
  Dec 22 04:19:43.802: INFO: (15) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 8.9926ms)
  Dec 22 04:19:43.802: INFO: (15) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 9.286832ms)
  Dec 22 04:19:43.802: INFO: (15) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 8.97672ms)
  Dec 22 04:19:43.804: INFO: (15) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 10.76022ms)
  Dec 22 04:19:43.804: INFO: (15) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 10.350088ms)
  Dec 22 04:19:43.804: INFO: (15) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 10.236047ms)
  Dec 22 04:19:43.804: INFO: (15) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 11.259084ms)
  Dec 22 04:19:43.804: INFO: (15) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 10.72145ms)
  Dec 22 04:19:43.804: INFO: (15) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 10.586299ms)
  Dec 22 04:19:43.804: INFO: (15) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 11.302223ms)
  Dec 22 04:19:43.805: INFO: (15) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 11.720155ms)
  Dec 22 04:19:43.805: INFO: (15) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 11.216123ms)
  Dec 22 04:19:43.806: INFO: (15) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 12.43524ms)
  Dec 22 04:19:43.806: INFO: (15) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 12.600081ms)
  Dec 22 04:19:43.806: INFO: (15) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 12.162668ms)
  Dec 22 04:19:43.806: INFO: (15) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 12.443449ms)
  Dec 22 04:19:43.816: INFO: (16) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 8.940431ms)
  Dec 22 04:19:43.816: INFO: (16) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 9.362163ms)
  Dec 22 04:19:43.817: INFO: (16) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 9.466173ms)
  Dec 22 04:19:43.817: INFO: (16) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 10.051786ms)
  Dec 22 04:19:43.817: INFO: (16) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 10.576899ms)
  Dec 22 04:19:43.817: INFO: (16) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 10.797351ms)
  Dec 22 04:19:43.818: INFO: (16) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 10.918871ms)
  Dec 22 04:19:43.818: INFO: (16) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 11.381863ms)
  Dec 22 04:19:43.819: INFO: (16) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 12.004097ms)
  Dec 22 04:19:43.820: INFO: (16) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 12.802671ms)
  Dec 22 04:19:43.820: INFO: (16) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 12.920112ms)
  Dec 22 04:19:43.820: INFO: (16) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 12.984133ms)
  Dec 22 04:19:43.820: INFO: (16) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 12.954202ms)
  Dec 22 04:19:43.821: INFO: (16) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 14.083558ms)
  Dec 22 04:19:43.821: INFO: (16) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 13.206804ms)
  Dec 22 04:19:43.821: INFO: (16) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 13.647206ms)
  Dec 22 04:19:43.828: INFO: (17) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 7.18764ms)
  Dec 22 04:19:43.830: INFO: (17) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 9.112211ms)
  Dec 22 04:19:43.830: INFO: (17) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 8.844019ms)
  Dec 22 04:19:43.831: INFO: (17) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 9.140361ms)
  Dec 22 04:19:43.831: INFO: (17) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 10.037576ms)
  Dec 22 04:19:43.832: INFO: (17) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 10.103067ms)
  Dec 22 04:19:43.832: INFO: (17) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 10.485449ms)
  Dec 22 04:19:43.832: INFO: (17) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 11.238023ms)
  Dec 22 04:19:43.832: INFO: (17) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 10.68269ms)
  Dec 22 04:19:43.832: INFO: (17) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 10.479738ms)
  Dec 22 04:19:43.833: INFO: (17) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 11.585525ms)
  Dec 22 04:19:43.833: INFO: (17) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 11.127282ms)
  Dec 22 04:19:43.833: INFO: (17) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 11.784306ms)
  Dec 22 04:19:43.834: INFO: (17) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 12.175218ms)
  Dec 22 04:19:43.835: INFO: (17) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 12.648341ms)
  Dec 22 04:19:43.835: INFO: (17) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 13.070843ms)
  Dec 22 04:19:43.842: INFO: (18) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 7.176761ms)
  Dec 22 04:19:43.842: INFO: (18) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 7.04304ms)
  Dec 22 04:19:43.842: INFO: (18) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 7.09576ms)
  Dec 22 04:19:43.843: INFO: (18) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 7.0294ms)
  Dec 22 04:19:43.843: INFO: (18) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 7.06996ms)
  Dec 22 04:19:43.844: INFO: (18) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 8.90948ms)
  Dec 22 04:19:43.845: INFO: (18) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 9.461753ms)
  Dec 22 04:19:43.845: INFO: (18) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 9.767914ms)
  Dec 22 04:19:43.846: INFO: (18) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 10.373528ms)
  Dec 22 04:19:43.846: INFO: (18) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 10.800971ms)
  Dec 22 04:19:43.846: INFO: (18) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 10.7638ms)
  Dec 22 04:19:43.846: INFO: (18) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 11.182223ms)
  Dec 22 04:19:43.847: INFO: (18) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 11.444054ms)
  Dec 22 04:19:43.847: INFO: (18) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 11.780806ms)
  Dec 22 04:19:43.847: INFO: (18) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 12.223078ms)
  Dec 22 04:19:43.847: INFO: (18) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 12.129457ms)
  Dec 22 04:19:43.855: INFO: (19) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 7.307731ms)
  Dec 22 04:19:43.855: INFO: (19) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 7.705823ms)
  Dec 22 04:19:43.856: INFO: (19) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48/proxy/rewriteme">test</a> (200; 7.859503ms)
  Dec 22 04:19:43.857: INFO: (19) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:162/proxy/: bar (200; 8.615077ms)
  Dec 22 04:19:43.859: INFO: (19) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname2/proxy/: bar (200; 11.062671ms)
  Dec 22 04:19:43.859: INFO: (19) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:462/proxy/: tls qux (200; 10.388518ms)
  Dec 22 04:19:43.859: INFO: (19) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:443/proxy/tlsrewritem... (200; 10.87862ms)
  Dec 22 04:19:43.859: INFO: (19) /api/v1/namespaces/proxy-9450/pods/https:proxy-service-7c7n2-l5g48:460/proxy/: tls baz (200; 10.638939ms)
  Dec 22 04:19:43.859: INFO: (19) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:160/proxy/: foo (200; 11.064121ms)
  Dec 22 04:19:43.859: INFO: (19) /api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/http:proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">... (200; 10.67019ms)
  Dec 22 04:19:43.859: INFO: (19) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname2/proxy/: bar (200; 11.542284ms)
  Dec 22 04:19:43.860: INFO: (19) /api/v1/namespaces/proxy-9450/services/http:proxy-service-7c7n2:portname1/proxy/: foo (200; 11.483244ms)
  Dec 22 04:19:43.860: INFO: (19) /api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/: <a href="/api/v1/namespaces/proxy-9450/pods/proxy-service-7c7n2-l5g48:1080/proxy/rewriteme">test<... (200; 11.265463ms)
  Dec 22 04:19:43.860: INFO: (19) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname2/proxy/: tls qux (200; 12.46564ms)
  Dec 22 04:19:43.860: INFO: (19) /api/v1/namespaces/proxy-9450/services/https:proxy-service-7c7n2:tlsportname1/proxy/: tls baz (200; 11.775945ms)
  Dec 22 04:19:43.862: INFO: (19) /api/v1/namespaces/proxy-9450/services/proxy-service-7c7n2:portname1/proxy/: foo (200; 13.185913ms)
  STEP: deleting ReplicationController proxy-service-7c7n2 in namespace proxy-9450, will wait for the garbage collector to delete the pods @ 12/22/23 04:19:43.862
  Dec 22 04:19:43.922: INFO: Deleting ReplicationController proxy-service-7c7n2 took: 7.277791ms
  Dec 22 04:19:44.023: INFO: Terminating ReplicationController proxy-service-7c7n2 pods took: 100.451851ms
  Dec 22 04:19:47.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9450" for this suite. @ 12/22/23 04:19:47.03
• [5.917 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 12/22/23 04:19:47.037
  Dec 22 04:19:47.037: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 04:19:47.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:19:47.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:19:47.066
  STEP: fetching services @ 12/22/23 04:19:47.07
  Dec 22 04:19:47.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3180" for this suite. @ 12/22/23 04:19:47.077
• [0.045 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 12/22/23 04:19:47.083
  Dec 22 04:19:47.083: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:19:47.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:19:47.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:19:47.102
  STEP: Creating configMap with name configmap-test-volume-43bc38b8-aa08-467c-9ca3-6db6650a8a51 @ 12/22/23 04:19:47.105
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:19:47.11
  STEP: Saw pod success @ 12/22/23 04:19:49.124
  Dec 22 04:19:49.126: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-configmaps-ddb9d545-c84f-48e8-9331-b5f1f45a1293 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:19:49.139
  Dec 22 04:19:49.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7355" for this suite. @ 12/22/23 04:19:49.155
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 12/22/23 04:19:49.164
  Dec 22 04:19:49.164: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:19:49.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:19:49.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:19:49.194
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:19:49.196
  STEP: Saw pod success @ 12/22/23 04:19:51.209
  Dec 22 04:19:51.212: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-c6c8602f-d5bb-45b7-ae31-731684922fa5 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:19:51.217
  Dec 22 04:19:51.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3354" for this suite. @ 12/22/23 04:19:51.232
• [2.074 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 12/22/23 04:19:51.24
  Dec 22 04:19:51.240: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 04:19:51.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:19:51.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:19:51.265
  STEP: Creating simple DaemonSet "daemon-set" @ 12/22/23 04:19:51.292
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 04:19:51.301
  Dec 22 04:19:51.307: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:19:51.307: INFO: Node ip-172-31-11-160.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:19:52.309: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 22 04:19:52.309: INFO: Node ip-172-31-14-155.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:19:53.339: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:19:53.339: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:19:54.313: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:19:54.313: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:19:55.309: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:19:55.309: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:19:56.309: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 04:19:56.309: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 04:19:57.308: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 04:19:57.308: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/22/23 04:19:57.31
  STEP: DeleteCollection of the DaemonSets @ 12/22/23 04:19:57.314
  STEP: Verify that ReplicaSets have been deleted @ 12/22/23 04:19:57.321
  Dec 22 04:19:57.327: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13141"},"items":null}

  Dec 22 04:19:57.330: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13141"},"items":[{"metadata":{"name":"daemon-set-469s7","generateName":"daemon-set-","namespace":"daemonsets-4957","uid":"855ff867-60fa-4ec6-b57a-ba8b067fcf5d","resourceVersion":"13139","creationTimestamp":"2023-12-22T04:19:51Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1862f228-300e-4727-8502-5eaf0feaf81d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-12-22T04:19:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1862f228-300e-4727-8502-5eaf0feaf81d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-12-22T04:19:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.13\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-sq7t7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-sq7t7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-2-79.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-2-79.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:57Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:51Z"}],"hostIP":"172.31.2.79","hostIPs":[{"ip":"172.31.2.79"}],"podIP":"10.42.0.13","podIPs":[{"ip":"10.42.0.13"}],"startTime":"2023-12-22T04:19:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-22T04:19:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://834492e2c6d06353993a771148dba555f965cc362f6533fe309481404d87b845","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-k7lst","generateName":"daemon-set-","namespace":"daemonsets-4957","uid":"2dead97a-02e1-4efe-821a-27f60c454555","resourceVersion":"13104","creationTimestamp":"2023-12-22T04:19:51Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1862f228-300e-4727-8502-5eaf0feaf81d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-12-22T04:19:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1862f228-300e-4727-8502-5eaf0feaf81d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-12-22T04:19:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.52\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-g228f","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-g228f","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-14-155.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-14-155.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:52Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:51Z"}],"hostIP":"172.31.14.155","hostIPs":[{"ip":"172.31.14.155"}],"podIP":"10.42.2.52","podIPs":[{"ip":"10.42.2.52"}],"startTime":"2023-12-22T04:19:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-22T04:19:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3cfa92481e8241f5df74f605480b87e9aac3b9d5e595125389f4acb962379348","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-l7ggc","generateName":"daemon-set-","namespace":"daemonsets-4957","uid":"1075afff-933f-45ac-8cf1-11b51b274c5e","resourceVersion":"13078","creationTimestamp":"2023-12-22T04:19:51Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1862f228-300e-4727-8502-5eaf0feaf81d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-12-22T04:19:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1862f228-300e-4727-8502-5eaf0feaf81d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-12-22T04:19:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.3.22\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9sgxg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9sgxg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-8-254.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-8-254.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:52Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:51Z"}],"hostIP":"172.31.8.254","hostIPs":[{"ip":"172.31.8.254"}],"podIP":"10.42.3.22","podIPs":[{"ip":"10.42.3.22"}],"startTime":"2023-12-22T04:19:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-22T04:19:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://07181c3c61e236272e15fa0f34927d48d39e12790bc6c324171ae64dcdec9b3e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-n6hgj","generateName":"daemon-set-","namespace":"daemonsets-4957","uid":"da67897f-6917-49e7-b46b-a37b11775937","resourceVersion":"13086","creationTimestamp":"2023-12-22T04:19:51Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1862f228-300e-4727-8502-5eaf0feaf81d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-12-22T04:19:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1862f228-300e-4727-8502-5eaf0feaf81d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-12-22T04:19:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.18\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wgf2v","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wgf2v","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-11-160.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-11-160.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:52Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-22T04:19:51Z"}],"hostIP":"172.31.11.160","hostIPs":[{"ip":"172.31.11.160"}],"podIP":"10.42.1.18","podIPs":[{"ip":"10.42.1.18"}],"startTime":"2023-12-22T04:19:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-22T04:19:51Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4086b5c753efb3d26fc2b882c0fd0789ea46b787b72baafbb4cd53a82e02cbe8","started":true}],"qosClass":"BestEffort"}}]}

  Dec 22 04:19:57.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4957" for this suite. @ 12/22/23 04:19:57.364
• [6.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 12/22/23 04:19:57.374
  Dec 22 04:19:57.374: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/22/23 04:19:57.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:19:57.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:19:57.397
  STEP: create the container to handle the HTTPGet hook request. @ 12/22/23 04:19:57.409
  STEP: create the pod with lifecycle hook @ 12/22/23 04:19:59.427
  STEP: delete the pod with lifecycle hook @ 12/22/23 04:20:01.522
  STEP: check prestop hook @ 12/22/23 04:20:03.537
  Dec 22 04:20:03.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2604" for this suite. @ 12/22/23 04:20:03.559
• [6.191 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 12/22/23 04:20:03.565
  Dec 22 04:20:03.565: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename chunking @ 12/22/23 04:20:03.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:20:03.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:20:03.595
  STEP: creating a large number of resources @ 12/22/23 04:20:03.599
  STEP: retrieving the first page @ 12/22/23 04:20:21.272
  Dec 22 04:20:21.321: INFO: Retrieved 40/40 results with rv 13730 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 12/22/23 04:20:21.321
  Dec 22 04:20:41.328: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:21:01.328: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:21:21.328: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:21:41.331: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:22:01.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:22:21.326: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:22:41.328: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:23:01.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:23:21.329: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:23:41.330: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:24:01.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:24:21.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:24:41.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:25:01.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:25:21.331: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:25:41.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:26:01.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:26:21.328: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:26:41.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:27:01.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:27:21.330: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:27:41.328: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:28:01.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:28:21.326: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:28:41.328: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:29:01.330: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:29:21.327: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:29:41.326: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM3MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 22 04:30:01.327: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Dec 22 04:30:01.327: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 12/22/23 04:30:01.327
  STEP: retrieving all remaining pages @ 12/22/23 04:30:01.331
  Dec 22 04:30:01.336: INFO: Retrieved 40/40 results with rv 15744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Dec 22 04:30:01.339: INFO: Retrieved 40/40 results with rv 15744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Dec 22 04:30:01.343: INFO: Retrieved 40/40 results with rv 15744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Dec 22 04:30:01.347: INFO: Retrieved 40/40 results with rv 15744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Dec 22 04:30:01.351: INFO: Retrieved 40/40 results with rv 15744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Dec 22 04:30:01.355: INFO: Retrieved 40/40 results with rv 15744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Dec 22 04:30:01.359: INFO: Retrieved 40/40 results with rv 15744 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU3NDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Dec 22 04:30:01.365: INFO: Retrieved 40/40 results with rv 15744 and continue 
  Dec 22 04:30:01.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2265" for this suite. @ 12/22/23 04:30:01.371
• [597.811 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 12/22/23 04:30:01.377
  Dec 22 04:30:01.377: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename aggregator @ 12/22/23 04:30:01.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:30:01.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:30:01.401
  Dec 22 04:30:01.404: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Registering the sample API server. @ 12/22/23 04:30:01.406
  Dec 22 04:30:02.658: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Dec 22 04:30:02.698: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Dec 22 04:30:04.760: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 04:30:06.764: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 04:30:08.763: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 04:30:10.764: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 04:30:12.764: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 04:30:15.105: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 04:30:16.764: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 04:30:18.765: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 04:30:20.764: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 04:30:22.764: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 04:30:24.764: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 22 04:30:26.898: INFO: Waited 127.376201ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/22/23 04:30:26.958
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/22/23 04:30:26.963
  STEP: List APIServices @ 12/22/23 04:30:26.979
  Dec 22 04:30:26.989: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/22/23 04:30:26.989
  Dec 22 04:30:27.006: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/22/23 04:30:27.006
  Dec 22 04:30:27.022: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.December, 22, 4, 30, 26, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/22/23 04:30:27.022
  Dec 22 04:30:27.029: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-12-22 04:30:26 +0000 UTC Passed all checks passed}
  Dec 22 04:30:27.029: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 04:30:27.029: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/22/23 04:30:27.029
  Dec 22 04:30:27.046: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-977767616" @ 12/22/23 04:30:27.046
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/22/23 04:30:27.071
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/22/23 04:30:27.088
  STEP: Patch APIService Status @ 12/22/23 04:30:27.091
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/22/23 04:30:27.099
  Dec 22 04:30:27.102: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-12-22 04:30:26 +0000 UTC Passed all checks passed}
  Dec 22 04:30:27.102: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 04:30:27.102: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Dec 22 04:30:27.103: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 12/22/23 04:30:27.103
  STEP: Confirm that the generated APIService has been deleted @ 12/22/23 04:30:27.112
  Dec 22 04:30:27.112: INFO: Requesting list of APIServices to confirm quantity
  Dec 22 04:30:27.117: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Dec 22 04:30:27.117: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Dec 22 04:30:27.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-3400" for this suite. @ 12/22/23 04:30:27.222
• [25.853 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 12/22/23 04:30:27.23
  Dec 22 04:30:27.231: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:30:27.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:30:27.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:30:27.257
  STEP: Creating configMap with name projected-configmap-test-volume-map-23ad6d01-1ee2-4606-8fb6-3a94e9c3336a @ 12/22/23 04:30:27.26
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:30:27.265
  STEP: Saw pod success @ 12/22/23 04:30:43.321
  Dec 22 04:30:43.326: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-projected-configmaps-bb8a30ee-64ab-4593-8480-ab2d4fe53107 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:30:43.344
  Dec 22 04:30:43.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-588" for this suite. @ 12/22/23 04:30:43.365
• [16.142 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 12/22/23 04:30:43.374
  Dec 22 04:30:43.374: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 04:30:43.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:30:43.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:30:43.398
  STEP: creating service multi-endpoint-test in namespace services-4392 @ 12/22/23 04:30:43.403
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4392 to expose endpoints map[] @ 12/22/23 04:30:43.414
  Dec 22 04:30:43.417: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Dec 22 04:30:44.425: INFO: successfully validated that service multi-endpoint-test in namespace services-4392 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4392 @ 12/22/23 04:30:44.425
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4392 to expose endpoints map[pod1:[100]] @ 12/22/23 04:30:46.444
  Dec 22 04:30:46.457: INFO: successfully validated that service multi-endpoint-test in namespace services-4392 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4392 @ 12/22/23 04:30:46.457
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4392 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/22/23 04:30:48.472
  Dec 22 04:30:48.484: INFO: successfully validated that service multi-endpoint-test in namespace services-4392 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/22/23 04:30:48.484
  Dec 22 04:30:48.484: INFO: Creating new exec pod
  Dec 22 04:30:51.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-4392 exec execpodvnprt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Dec 22 04:30:51.678: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Dec 22 04:30:51.678: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:30:51.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-4392 exec execpodvnprt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.21.49 80'
  Dec 22 04:30:51.818: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.21.49 80\nConnection to 10.43.21.49 80 port [tcp/http] succeeded!\n"
  Dec 22 04:30:51.818: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:30:51.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-4392 exec execpodvnprt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Dec 22 04:30:51.956: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Dec 22 04:30:51.956: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:30:51.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-4392 exec execpodvnprt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.21.49 81'
  Dec 22 04:30:52.092: INFO: stderr: "+ nc -v -t -w 2 10.43.21.49 81\n+ echo hostName\nConnection to 10.43.21.49 81 port [tcp/*] succeeded!\n"
  Dec 22 04:30:52.092: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4392 @ 12/22/23 04:30:52.092
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4392 to expose endpoints map[pod2:[101]] @ 12/22/23 04:30:52.102
  Dec 22 04:30:54.117: INFO: successfully validated that service multi-endpoint-test in namespace services-4392 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4392 @ 12/22/23 04:30:54.117
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4392 to expose endpoints map[] @ 12/22/23 04:30:54.129
  Dec 22 04:30:55.155: INFO: successfully validated that service multi-endpoint-test in namespace services-4392 exposes endpoints map[]
  Dec 22 04:30:55.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4392" for this suite. @ 12/22/23 04:30:55.175
• [11.808 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 12/22/23 04:30:55.182
  Dec 22 04:30:55.182: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:30:55.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:30:55.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:30:55.209
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:30:55.212
  STEP: Saw pod success @ 12/22/23 04:30:59.234
  Dec 22 04:30:59.238: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod downwardapi-volume-2141f868-2142-487c-b9fb-97643045cb72 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:30:59.252
  Dec 22 04:30:59.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9059" for this suite. @ 12/22/23 04:30:59.274
• [4.099 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 12/22/23 04:30:59.282
  Dec 22 04:30:59.282: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:30:59.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:30:59.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:30:59.308
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:30:59.313
  STEP: Saw pod success @ 12/22/23 04:31:01.332
  Dec 22 04:31:01.334: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-5fb2e4b9-0a50-4c90-8358-0862c49dd104 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:31:01.34
  Dec 22 04:31:01.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3967" for this suite. @ 12/22/23 04:31:01.358
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 12/22/23 04:31:01.37
  Dec 22 04:31:01.370: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/22/23 04:31:01.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:31:01.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:31:01.398
  Dec 22 04:31:01.401: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 22 04:32:01.402: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 04:32:01.405: INFO: Starting informer...
  STEP: Starting pods... @ 12/22/23 04:32:01.405
  Dec 22 04:32:01.627: INFO: Pod1 is running on ip-172-31-14-155.us-east-2.compute.internal. Tainting Node
  Dec 22 04:32:03.862: INFO: Pod2 is running on ip-172-31-14-155.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/22/23 04:32:03.862
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/22/23 04:32:03.875
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/22/23 04:32:03.88
  Dec 22 04:32:09.284: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Dec 22 04:32:29.337: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/22/23 04:32:29.358
  Dec 22 04:32:29.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6975" for this suite. @ 12/22/23 04:32:29.37
• [88.006 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 12/22/23 04:32:29.376
  Dec 22 04:32:29.376: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 04:32:29.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:29.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:29.42
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/22/23 04:32:29.424
  Dec 22 04:32:29.425: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/22/23 04:32:36.635
  Dec 22 04:32:36.635: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:32:38.507: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:32:45.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7497" for this suite. @ 12/22/23 04:32:46.007
• [16.638 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/22/23 04:32:46.014
  Dec 22 04:32:46.014: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename deployment @ 12/22/23 04:32:46.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:46.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:46.05
  Dec 22 04:32:46.054: INFO: Creating deployment "webserver-deployment"
  Dec 22 04:32:46.066: INFO: Waiting for observed generation 1
  Dec 22 04:32:48.084: INFO: Waiting for all required pods to come up
  Dec 22 04:32:48.090: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/22/23 04:32:48.09
  Dec 22 04:32:48.090: INFO: Waiting for deployment "webserver-deployment" to complete
  Dec 22 04:32:48.099: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Dec 22 04:32:48.109: INFO: Updating deployment webserver-deployment
  Dec 22 04:32:48.109: INFO: Waiting for observed generation 2
  Dec 22 04:32:50.198: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Dec 22 04:32:50.205: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Dec 22 04:32:50.210: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Dec 22 04:32:50.224: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Dec 22 04:32:50.224: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Dec 22 04:32:50.227: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Dec 22 04:32:50.233: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Dec 22 04:32:50.233: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Dec 22 04:32:50.254: INFO: Updating deployment webserver-deployment
  Dec 22 04:32:50.254: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Dec 22 04:32:50.265: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Dec 22 04:32:50.278: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Dec 22 04:32:50.355: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a46873b-2d32-4ae0-808f-9c2b1d337a15",
      ResourceVersion: (string) (len=5) "17303",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 04:32:50.418: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
      ResourceVersion: (string) (len=5) "17294",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5a46873b-2d32-4ae0-808f-9c2b1d337a15",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 61 34 36 38 37  33 62 2d 32 64 33 32 2d  |\"5a46873b-2d32-|
              00000120  34 61 65 30 2d 38 30 38  66 2d 39 63 32 62 31 64  |4ae0-808f-9c2b1d|
              00000130  33 33 37 61 31 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |337a15\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 04:32:50.419: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Dec 22 04:32:50.419: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
      ResourceVersion: (string) (len=5) "17293",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5a46873b-2d32-4ae0-808f-9c2b1d337a15",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 61 34 36 38 37  33 62 2d 32 64 33 32 2d  |\"5a46873b-2d32-|
              00000120  34 61 65 30 2d 38 30 38  66 2d 39 63 32 62 31 64  |4ae0-808f-9c2b1d|
              00000130  33 33 37 61 31 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |337a15\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 04:32:50.510: INFO: Pod "webserver-deployment-557759b7c7-24gv9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-24gv9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4dad0a44-4fde-402e-9686-ae1144629d60",
      ResourceVersion: (string) (len=5) "17325",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wj4vv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wj4vv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.511: INFO: Pod "webserver-deployment-557759b7c7-4drgk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4drgk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "272f434e-2aab-4a49-9de4-00b7f3bd3281",
      ResourceVersion: (string) (len=5) "17338",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-phvkf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-phvkf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-2-79.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.512: INFO: Pod "webserver-deployment-557759b7c7-4k5p8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4k5p8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3dc1eb0e-a677-49ec-88e5-0a21324c5e80",
      ResourceVersion: (string) (len=5) "17332",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4b4bg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4b4bg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-2-79.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.520: INFO: Pod "webserver-deployment-557759b7c7-6vsrb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6vsrb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98e7e6de-e2d7-44d1-8d77-5eb4c9917941",
      ResourceVersion: (string) (len=5) "17193",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 32 36  5c 22 7d 22 3a 7b 22 2e  |.42.3.26\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hmr9r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hmr9r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-8-254.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.254"
        }
      },
      PodIP: (string) (len=10) "10.42.3.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838816366,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c07d588cbac7449fc84cc1c590d6d6bd4f0a086128017547d4783ce09ef2aad6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.526: INFO: Pod "webserver-deployment-557759b7c7-76rlb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-76rlb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2043de09-1ad8-4333-8a91-558190d65961",
      ResourceVersion: (string) (len=5) "17304",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gfzxt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gfzxt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.529: INFO: Pod "webserver-deployment-557759b7c7-7m498" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7m498",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dba4b959-97f4-4926-909c-b565d996519e",
      ResourceVersion: (string) (len=5) "17314",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dwm5l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dwm5l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-160.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.531: INFO: Pod "webserver-deployment-557759b7c7-8jkpn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8jkpn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0dc29505-6889-42c1-8652-65c2c5d453e6",
      ResourceVersion: (string) (len=5) "17321",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9kffd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9kffd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-160.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.532: INFO: Pod "webserver-deployment-557759b7c7-9bfmx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9bfmx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8bfc5731-a721-4602-99b5-b6b2e6421be7",
      ResourceVersion: (string) (len=5) "17319",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xxwp5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xxwp5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.535: INFO: Pod "webserver-deployment-557759b7c7-9xtch" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9xtch",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa3b6535-ce3e-46f7-8265-4da64a8cc929",
      ResourceVersion: (string) (len=5) "17188",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 32 37  5c 22 7d 22 3a 7b 22 2e  |.42.3.27\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fbkbj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fbkbj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-8-254.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.254"
        }
      },
      PodIP: (string) (len=10) "10.42.3.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838816366,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://00b6dff0c5ff7c26afe0433b895be0b9f8e46ef8aeab2629570c28235429f2f1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.537: INFO: Pod "webserver-deployment-557759b7c7-d2rv8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-d2rv8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3466daec-f4dc-41fc-981e-9ace6ae2a9be",
      ResourceVersion: (string) (len=5) "17190",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 32 35  5c 22 7d 22 3a 7b 22 2e  |.42.3.25\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vq62m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vq62m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-8-254.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.254"
        }
      },
      PodIP: (string) (len=10) "10.42.3.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838816366,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dc320c0b2c54d168eb2e54877e863fb5f7bd5e55eb077f2049a0e88cedb7a2b9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.540: INFO: Pod "webserver-deployment-557759b7c7-d8k4p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-d8k4p",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba934346-dc6d-4283-92a2-cf7236bdc641",
      ResourceVersion: (string) (len=5) "17186",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 36  5c 22 7d 22 3a 7b 22 2e  |.42.0.16\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6xrmm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6xrmm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-2-79.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.79"
        }
      },
      PodIP: (string) (len=10) "10.42.0.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838816366,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f12dd278f43b515738c9c68c94d377a7d4e5d79840dbd4493d92020781f7c8e4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.554: INFO: Pod "webserver-deployment-557759b7c7-ggjtr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ggjtr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7137b8b8-103f-4f17-a699-7e8d0c7635d9",
      ResourceVersion: (string) (len=5) "17339",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tx58j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tx58j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.563: INFO: Pod "webserver-deployment-557759b7c7-kqw7q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kqw7q",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14791223-343f-46a5-8b20-55fa3b88c8b9",
      ResourceVersion: (string) (len=5) "17189",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 35  5c 22 7d 22 3a 7b 22 2e  |.42.0.15\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pvglf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pvglf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-2-79.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.79"
        }
      },
      PodIP: (string) (len=10) "10.42.0.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838816366,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fb126baa5ba3675a1db3ca67dda384e8d69bc8541a23a37482ddd3d57d7357e5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.571: INFO: Pod "webserver-deployment-557759b7c7-nbxkm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nbxkm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf9c0683-eb5e-46fb-81c5-df91ba54d3fe",
      ResourceVersion: (string) (len=5) "17327",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dxtcs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dxtcs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.573: INFO: Pod "webserver-deployment-557759b7c7-qclkm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qclkm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "697b6bb5-34d2-49c3-a895-a9e0fa192718",
      ResourceVersion: (string) (len=5) "17165",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 39  5c 22 7d 22 3a 7b 22 2e  |.42.1.19\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s2mmr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s2mmr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-160.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.160",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.160"
        }
      },
      PodIP: (string) (len=10) "10.42.1.19",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.19"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838816366,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a0c5cbe942f8c9dd5f4ecf57262fabb38a7e673356ce193cd130429aad73a964",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.579: INFO: Pod "webserver-deployment-557759b7c7-tgp68" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tgp68",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bded6e76-b7ea-45a7-8bf6-b72a621142ff",
      ResourceVersion: (string) (len=5) "17177",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 36 32  5c 22 7d 22 3a 7b 22 2e  |.42.2.62\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r9jbp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r9jbp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) (len=10) "10.42.2.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838816366,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4c16dbf09f0f0ad4dbbe31cce8a68fe08b9155e5877e1a14b647fb3b4a8fa207",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.602: INFO: Pod "webserver-deployment-557759b7c7-tsdcf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tsdcf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9785babe-8812-4dc0-8f79-7fb83efdbdd0",
      ResourceVersion: (string) (len=5) "17340",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-szqhf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-szqhf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-8-254.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.254"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.611: INFO: Pod "webserver-deployment-557759b7c7-vdtdn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vdtdn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f643b927-f3dd-4e99-9a68-d2d4b8308a07",
      ResourceVersion: (string) (len=5) "17199",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 30  5c 22 7d 22 3a 7b 22 2e  |.42.1.20\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8hqdr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8hqdr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-160.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.160",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.160"
        }
      },
      PodIP: (string) (len=10) "10.42.1.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838816366,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://360b5f712cd245871f099b075f5e1f0569df157abe8486e74bf9ae37f7d9d383",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.618: INFO: Pod "webserver-deployment-557759b7c7-vdv2v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vdv2v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "677a4729-7bcc-41cf-87ae-c84f84dfe82d",
      ResourceVersion: (string) (len=5) "17328",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4lcx9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4lcx9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.628: INFO: Pod "webserver-deployment-557759b7c7-z4lkw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z4lkw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "506e5201-d11e-43e1-9f43-dbe3c47a55c5",
      ResourceVersion: (string) (len=5) "17326",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "92ffe2f9-5b18-4580-b1b7-37f2626e8d7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  66 66 65 32 66 39 2d 35  |d\":\"92ffe2f9-5|
              00000090  62 31 38 2d 34 35 38 30  2d 62 31 62 37 2d 33 37  |b18-4580-b1b7-37|
              000000a0  66 32 36 32 36 65 38 64  37 66 5c 22 7d 22 3a 7b  |f2626e8d7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hq488",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hq488",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.630: INFO: Pod "webserver-deployment-9b4f5bf69-2jb6h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2jb6h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2629483-f36c-4a75-aee8-1ba2f6a6ec25",
      ResourceVersion: (string) (len=5) "17290",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 32 31 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.21\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v4cmr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v4cmr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-160.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.160",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.160"
        }
      },
      PodIP: (string) (len=10) "10.42.1.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.637: INFO: Pod "webserver-deployment-9b4f5bf69-5whw6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5whw6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fa88a31-6422-4680-ae2b-b82beff48124",
      ResourceVersion: (string) (len=5) "17337",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-htj6w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-htj6w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-2-79.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.79"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.640: INFO: Pod "webserver-deployment-9b4f5bf69-665ks" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-665ks",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac2433be-06a0-4a18-b3ea-f4640136577b",
      ResourceVersion: (string) (len=5) "17323",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cvdvp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cvdvp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.641: INFO: Pod "webserver-deployment-9b4f5bf69-9nrbh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9nrbh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84adba57-dffb-489e-a548-46660c6055d6",
      ResourceVersion: (string) (len=5) "17335",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hnwcs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hnwcs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-160.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.643: INFO: Pod "webserver-deployment-9b4f5bf69-bmd78" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bmd78",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af523aff-bc2c-46ef-836b-622427584be4",
      ResourceVersion: (string) (len=5) "17279",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 31 37 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.17\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mkpf4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mkpf4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-2-79.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.79"
        }
      },
      PodIP: (string) (len=10) "10.42.0.17",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.17"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.649: INFO: Pod "webserver-deployment-9b4f5bf69-dbs8c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dbs8c",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02f14957-55b9-45fa-8029-398003367ccd",
      ResourceVersion: (string) (len=5) "17283",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 33 2e 32 38 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.3.28\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z5q65",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z5q65",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-8-254.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.254"
        }
      },
      PodIP: (string) (len=10) "10.42.3.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.651: INFO: Pod "webserver-deployment-9b4f5bf69-gd9gd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gd9gd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95edbabe-fc32-4947-9162-6acb4e5b79d9",
      ResourceVersion: (string) (len=5) "17330",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fmrmf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fmrmf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.652: INFO: Pod "webserver-deployment-9b4f5bf69-kblvm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kblvm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c3c8d50-28f2-459b-9279-dffedb96576a",
      ResourceVersion: (string) (len=5) "17324",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cs2h7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cs2h7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.654: INFO: Pod "webserver-deployment-9b4f5bf69-rq4rz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-rq4rz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95332962-d2b3-4bbc-9c80-d8d319d18380",
      ResourceVersion: (string) (len=5) "17329",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kh5kb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kh5kb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.655: INFO: Pod "webserver-deployment-9b4f5bf69-vpf68" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vpf68",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fd7ca18-37ef-41c0-af2c-1f9838e3b00e",
      ResourceVersion: (string) (len=5) "17289",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 36 35 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.2.65\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kcckb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kcckb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) (len=10) "10.42.2.65",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.65"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.659: INFO: Pod "webserver-deployment-9b4f5bf69-xnjkc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xnjkc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "afc01031-ca4a-4b53-8d81-1a59941802f9",
      ResourceVersion: (string) (len=5) "17286",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 36 36 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.2.66\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k4nsm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k4nsm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) (len=10) "10.42.2.66",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.66"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.661: INFO: Pod "webserver-deployment-9b4f5bf69-ztkrb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ztkrb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5004d4ac-81fc-437a-957a-f35a14c4d817",
      ResourceVersion: (string) (len=5) "17307",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b35d452c-c988-4ca5-b30a-e260b97cf8b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  35 64 34 35 32 63 2d 63  |d\":\"b35d452c-c|
              00000090  39 38 38 2d 34 63 61 35  2d 62 33 30 61 2d 65 32  |988-4ca5-b30a-e2|
              000000a0  36 30 62 39 37 63 66 38  62 35 5c 22 7d 22 3a 7b  |60b97cf8b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h4kr9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h4kr9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-8-254.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838816370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.254"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838816370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 04:32:50.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1059" for this suite. @ 12/22/23 04:32:50.758
• [4.780 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 12/22/23 04:32:50.796
  Dec 22 04:32:50.796: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 04:32:50.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:51.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:32:51.113
  STEP: Creating a test namespace @ 12/22/23 04:32:51.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:32:51.28
  STEP: Creating a pod in the namespace @ 12/22/23 04:32:51.29
  STEP: Waiting for the pod to have running status @ 12/22/23 04:32:51.324
  STEP: Deleting the namespace @ 12/22/23 04:32:53.344
  STEP: Waiting for the namespace to be removed. @ 12/22/23 04:32:53.35
  STEP: Recreating the namespace @ 12/22/23 04:33:04.354
  STEP: Verifying there are no pods in the namespace @ 12/22/23 04:33:04.374
  Dec 22 04:33:04.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8254" for this suite. @ 12/22/23 04:33:04.383
  STEP: Destroying namespace "nsdeletetest-8218" for this suite. @ 12/22/23 04:33:04.394
  Dec 22 04:33:04.399: INFO: Namespace nsdeletetest-8218 was already deleted
  STEP: Destroying namespace "nsdeletetest-8586" for this suite. @ 12/22/23 04:33:04.399
• [13.611 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 12/22/23 04:33:04.409
  Dec 22 04:33:04.409: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 04:33:04.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:33:04.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:33:04.434
  STEP: Given a ReplicationController is created @ 12/22/23 04:33:04.439
  STEP: When the matched label of one of its pods change @ 12/22/23 04:33:04.448
  Dec 22 04:33:04.453: INFO: Pod name pod-release: Found 0 pods out of 1
  Dec 22 04:33:09.457: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/22/23 04:33:09.477
  Dec 22 04:33:09.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2431" for this suite. @ 12/22/23 04:33:09.534
• [5.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 12/22/23 04:33:09.557
  Dec 22 04:33:09.557: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/22/23 04:33:09.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:33:09.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:33:09.589
  Dec 22 04:33:09.595: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:33:10.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9111" for this suite. @ 12/22/23 04:33:10.647
• [1.096 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 12/22/23 04:33:10.654
  Dec 22 04:33:10.655: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename runtimeclass @ 12/22/23 04:33:10.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:33:10.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:33:10.68
  STEP: getting /apis @ 12/22/23 04:33:10.684
  STEP: getting /apis/node.k8s.io @ 12/22/23 04:33:10.693
  STEP: getting /apis/node.k8s.io/v1 @ 12/22/23 04:33:10.695
  STEP: creating @ 12/22/23 04:33:10.697
  STEP: watching @ 12/22/23 04:33:10.719
  Dec 22 04:33:10.719: INFO: starting watch
  STEP: getting @ 12/22/23 04:33:10.728
  STEP: listing @ 12/22/23 04:33:10.732
  STEP: patching @ 12/22/23 04:33:10.737
  STEP: updating @ 12/22/23 04:33:10.743
  Dec 22 04:33:10.749: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 12/22/23 04:33:10.749
  STEP: deleting a collection @ 12/22/23 04:33:10.764
  Dec 22 04:33:10.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-967" for this suite. @ 12/22/23 04:33:10.787
• [0.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 12/22/23 04:33:10.795
  Dec 22 04:33:10.795: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:33:10.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:33:10.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:33:10.819
  STEP: Creating configMap with name configmap-test-volume-map-4fc30261-e3db-46f7-8f39-1a4bd2f1b521 @ 12/22/23 04:33:10.823
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:33:10.831
  STEP: Saw pod success @ 12/22/23 04:33:12.857
  Dec 22 04:33:12.861: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod pod-configmaps-56e5c37d-aa64-4348-a854-3894f9989d9e container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:33:12.88
  Dec 22 04:33:12.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9351" for this suite. @ 12/22/23 04:33:12.926
• [2.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/22/23 04:33:12.944
  Dec 22 04:33:12.944: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename init-container @ 12/22/23 04:33:12.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:33:12.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:33:12.976
  STEP: creating the pod @ 12/22/23 04:33:12.98
  Dec 22 04:33:12.980: INFO: PodSpec: initContainers in spec.initContainers
  Dec 22 04:33:54.848: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-03225e42-ae79-489d-a3fc-78b666869394", GenerateName:"", Namespace:"init-container-3389", SelfLink:"", UID:"33a58ae5-3323-4fc8-9758-5199838eac16", ResourceVersion:"18086", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 4, 33, 12, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"980811600"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 4, 33, 12, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f257b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 4, 33, 54, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f25818), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-d2x9z", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000d694e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-d2x9z", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-d2x9z", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-d2x9z", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00139f928), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-8-254.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0006c76c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00139f9a0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00139f9c0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00139f9c8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00139f9cc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000bfcb90), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 22, 4, 33, 13, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 22, 4, 33, 13, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 22, 4, 33, 13, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 22, 4, 33, 13, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 22, 4, 33, 13, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.8.254", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.8.254"}}, PodIP:"10.42.3.35", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.3.35"}}, StartTime:time.Date(2023, time.December, 22, 4, 33, 13, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0005fc000)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0005fc070)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://d89bcf6d01feefb3c2c065cb285a5fa5ce185f1022d82f3e729bfd7065b0c703", Started:(*bool)(0xc00139fa6a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000d69540), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00139fa7f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000d69520), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00139fa4f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Dec 22 04:33:54.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3389" for this suite. @ 12/22/23 04:33:54.855
• [41.917 seconds]
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 12/22/23 04:33:54.861
  Dec 22 04:33:54.861: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename cronjob @ 12/22/23 04:33:54.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:33:54.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:33:54.888
  STEP: Creating a ReplaceConcurrent cronjob @ 12/22/23 04:33:54.892
  STEP: Ensuring a job is scheduled @ 12/22/23 04:33:54.902
  STEP: Ensuring exactly one is scheduled @ 12/22/23 04:34:00.91
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/22/23 04:34:00.913
  STEP: Ensuring the job is replaced with a new one @ 12/22/23 04:34:00.918
  STEP: Removing cronjob @ 12/22/23 04:35:00.923
  Dec 22 04:35:00.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-129" for this suite. @ 12/22/23 04:35:00.939
• [66.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/22/23 04:35:00.952
  Dec 22 04:35:00.952: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:35:00.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:35:01.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:35:01.022
  STEP: Creating projection with secret that has name projected-secret-test-70d35dde-7243-4989-817a-c3ceeef6500b @ 12/22/23 04:35:01.026
  STEP: Creating a pod to test consume secrets @ 12/22/23 04:35:01.032
  STEP: Saw pod success @ 12/22/23 04:35:05.061
  Dec 22 04:35:05.065: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod pod-projected-secrets-04d2a2db-8e19-4924-a67b-a96b697a4e2b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 04:35:05.079
  Dec 22 04:35:05.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1711" for this suite. @ 12/22/23 04:35:05.107
• [4.162 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 12/22/23 04:35:05.116
  Dec 22 04:35:05.116: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename security-context-test @ 12/22/23 04:35:05.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:35:05.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:35:05.145
  Dec 22 04:35:07.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9300" for this suite. @ 12/22/23 04:35:07.173
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 12/22/23 04:35:07.183
  Dec 22 04:35:07.183: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 04:35:07.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:35:07.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:35:07.212
  Dec 22 04:35:07.217: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  W1222 04:35:09.757645      20 warnings.go:70] unknown field "alpha"
  W1222 04:35:09.757687      20 warnings.go:70] unknown field "beta"
  W1222 04:35:09.757696      20 warnings.go:70] unknown field "delta"
  W1222 04:35:09.757703      20 warnings.go:70] unknown field "epsilon"
  W1222 04:35:09.757709      20 warnings.go:70] unknown field "gamma"
  Dec 22 04:35:10.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1171" for this suite. @ 12/22/23 04:35:10.314
• [3.138 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 12/22/23 04:35:10.321
  Dec 22 04:35:10.321: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubelet-test @ 12/22/23 04:35:10.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:35:10.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:35:10.358
  Dec 22 04:35:14.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7647" for this suite. @ 12/22/23 04:35:14.403
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 12/22/23 04:35:14.411
  Dec 22 04:35:14.411: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:35:14.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:35:14.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:35:14.434
  STEP: starting the proxy server @ 12/22/23 04:35:14.438
  Dec 22 04:35:14.438: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6720 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/22/23 04:35:14.525
  Dec 22 04:35:14.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6720" for this suite. @ 12/22/23 04:35:14.538
• [0.134 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 12/22/23 04:35:14.545
  Dec 22 04:35:14.545: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 04:35:14.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:35:14.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:35:14.589
  STEP: Creating pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310 @ 12/22/23 04:35:14.593
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 04:35:16.615
  Dec 22 04:35:16.619: INFO: Initial restart count of pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c is 0
  Dec 22 04:35:16.622: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:18.626: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:20.631: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:22.636: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:24.641: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:26.646: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:28.650: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:30.655: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:32.661: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:34.666: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:36.670: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:38.675: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:40.680: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:42.684: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:44.690: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:46.695: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:48.701: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:50.706: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:52.709: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:54.716: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:56.720: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:35:58.734: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:00.740: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:02.746: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:04.760: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:06.765: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:08.769: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:10.775: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:12.779: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:14.784: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:16.788: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:18.792: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:20.796: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:22.801: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:24.806: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:26.811: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:28.816: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:30.820: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:32.825: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:34.830: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:36.833: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:38.838: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:40.842: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:42.847: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:44.853: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:46.857: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:48.860: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:50.868: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:52.873: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:54.880: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:56.884: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:36:58.889: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:00.892: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:02.899: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:04.906: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:06.910: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:09.400: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:11.406: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:13.410: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:15.416: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:17.422: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:19.426: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:21.431: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:23.436: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:25.442: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:27.446: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:29.451: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:31.455: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:33.461: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:35.466: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:37.472: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:39.477: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:41.484: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:43.488: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:45.495: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:47.500: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:49.504: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:51.507: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:53.512: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:55.517: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:57.523: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:37:59.528: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:01.533: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:03.541: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:05.550: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:07.557: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:09.563: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:11.566: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:13.571: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:15.576: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:17.580: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:19.891: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:21.904: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:23.909: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:25.913: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:27.917: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:29.922: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:31.930: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:33.937: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:35.948: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:37.962: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:39.967: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:41.972: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:43.976: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:45.982: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:47.988: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:49.993: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:51.998: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:54.004: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:56.009: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:38:58.016: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:39:00.026: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:39:02.031: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:39:04.036: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:39:06.041: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:39:08.046: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:39:10.050: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:39:12.055: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:39:14.060: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  Dec 22 04:39:16.066: INFO: Get pod liveness-f8b86588-eeb2-447d-aec4-c8779154975c in namespace container-probe-7310
  STEP: deleting the pod @ 12/22/23 04:39:18.067
  Dec 22 04:39:18.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7310" for this suite. @ 12/22/23 04:39:18.094
• [243.558 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 12/22/23 04:39:18.104
  Dec 22 04:39:18.104: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename dns @ 12/22/23 04:39:18.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:39:18.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:39:18.131
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6343.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-6343.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/22/23 04:39:18.136
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6343.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6343.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/22/23 04:39:18.136
  STEP: creating a pod to probe /etc/hosts @ 12/22/23 04:39:18.136
  STEP: submitting the pod to kubernetes @ 12/22/23 04:39:18.137
  STEP: retrieving the pod @ 12/22/23 04:39:20.159
  STEP: looking for the results for each expected name from probers @ 12/22/23 04:39:20.165
  Dec 22 04:39:20.184: INFO: DNS probes using dns-6343/dns-test-eb303090-2835-47e6-bbb0-bf35710d126c succeeded

  STEP: deleting the pod @ 12/22/23 04:39:20.184
  Dec 22 04:39:20.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6343" for this suite. @ 12/22/23 04:39:20.205
• [2.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 12/22/23 04:39:20.214
  Dec 22 04:39:20.214: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 04:39:20.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:39:20.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:39:20.24
  STEP: creating a ReplicationController @ 12/22/23 04:39:20.249
  STEP: waiting for RC to be added @ 12/22/23 04:39:20.259
  STEP: waiting for available Replicas @ 12/22/23 04:39:20.259
  STEP: patching ReplicationController @ 12/22/23 04:39:22.363
  STEP: waiting for RC to be modified @ 12/22/23 04:39:22.378
  STEP: patching ReplicationController status @ 12/22/23 04:39:22.379
  STEP: waiting for RC to be modified @ 12/22/23 04:39:22.391
  STEP: waiting for available Replicas @ 12/22/23 04:39:22.392
  STEP: fetching ReplicationController status @ 12/22/23 04:39:22.4
  STEP: patching ReplicationController scale @ 12/22/23 04:39:22.404
  STEP: waiting for RC to be modified @ 12/22/23 04:39:22.416
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/22/23 04:39:22.416
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/22/23 04:39:24.505
  STEP: updating ReplicationController status @ 12/22/23 04:39:24.51
  STEP: waiting for RC to be modified @ 12/22/23 04:39:24.523
  STEP: listing all ReplicationControllers @ 12/22/23 04:39:24.523
  STEP: checking that ReplicationController has expected values @ 12/22/23 04:39:24.537
  STEP: deleting ReplicationControllers by collection @ 12/22/23 04:39:24.537
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/22/23 04:39:24.548
  Dec 22 04:39:24.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1222 04:39:24.621868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-4897" for this suite. @ 12/22/23 04:39:24.627
• [4.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 12/22/23 04:39:24.635
  Dec 22 04:39:24.635: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 04:39:24.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:39:24.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:39:24.675
  STEP: apply creating a deployment @ 12/22/23 04:39:24.681
  Dec 22 04:39:24.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3307" for this suite. @ 12/22/23 04:39:24.706
• [0.111 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 12/22/23 04:39:24.747
  Dec 22 04:39:24.747: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 04:39:24.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:39:24.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:39:24.776
  STEP: Creating a pod to test substitution in volume subpath @ 12/22/23 04:39:24.781
  E1222 04:39:25.622010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:26.622159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:27.622894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:28.623143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:39:28.813
  Dec 22 04:39:28.816: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod var-expansion-7afc8ed2-2b8a-43b9-9e17-7cf3a7e57883 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 04:39:28.831
  Dec 22 04:39:29.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5360" for this suite. @ 12/22/23 04:39:29.189
• [4.451 seconds]
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 12/22/23 04:39:29.199
  Dec 22 04:39:29.199: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 04:39:29.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:39:29.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:39:29.231
  STEP: creating service nodeport-test with type=NodePort in namespace services-7317 @ 12/22/23 04:39:29.235
  STEP: creating replication controller nodeport-test in namespace services-7317 @ 12/22/23 04:39:29.25
  I1222 04:39:29.266841      20 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-7317, replica count: 2
  E1222 04:39:29.623490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:30.624818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:31.624899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1222 04:39:32.318459      20 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 04:39:32.318: INFO: Creating new exec pod
  E1222 04:39:32.625527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:33.625622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:34.625799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:39:35.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-7317 exec execpodfthgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Dec 22 04:39:35.535: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Dec 22 04:39:35.535: INFO: stdout: "nodeport-test-slwvd"
  Dec 22 04:39:35.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-7317 exec execpodfthgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.47.162 80'
  E1222 04:39:35.626518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:39:35.692: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.47.162 80\nConnection to 10.43.47.162 80 port [tcp/http] succeeded!\n"
  Dec 22 04:39:35.692: INFO: stdout: ""
  Dec 22 04:39:36.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-7317 exec execpodfthgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.47.162 80'
  E1222 04:39:36.626613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:39:36.666: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.47.162 80\nConnection to 10.43.47.162 80 port [tcp/http] succeeded!\n"
  Dec 22 04:39:36.666: INFO: stdout: "nodeport-test-slwvd"
  Dec 22 04:39:36.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-7317 exec execpodfthgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.254 31481'
  Dec 22 04:39:36.832: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.254 31481\nConnection to 172.31.8.254 31481 port [tcp/*] succeeded!\n"
  Dec 22 04:39:36.832: INFO: stdout: "nodeport-test-slwvd"
  Dec 22 04:39:36.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-7317 exec execpodfthgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.79 31481'
  Dec 22 04:39:36.992: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.79 31481\nConnection to 172.31.2.79 31481 port [tcp/*] succeeded!\n"
  Dec 22 04:39:36.992: INFO: stdout: "nodeport-test-lf6ch"
  Dec 22 04:39:36.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7317" for this suite. @ 12/22/23 04:39:36.997
• [7.805 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 12/22/23 04:39:37.004
  Dec 22 04:39:37.004: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename job @ 12/22/23 04:39:37.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:39:37.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:39:37.035
  STEP: Creating a job @ 12/22/23 04:39:37.043
  STEP: Ensuring job reaches completions @ 12/22/23 04:39:37.051
  E1222 04:39:37.626644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:38.627215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:39.627801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:40.628051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:41.628589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:42.629355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:43.630369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:44.630820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:45.630835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:46.631103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:47.631260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:48.632392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:39:49.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9076" for this suite. @ 12/22/23 04:39:49.061
• [12.062 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 12/22/23 04:39:49.068
  Dec 22 04:39:49.068: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename disruption @ 12/22/23 04:39:49.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:39:49.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:39:49.094
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/22/23 04:39:49.099
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:39:49.106
  E1222 04:39:49.632815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:50.633181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/22/23 04:39:51.117
  STEP: Waiting for all pods to be running @ 12/22/23 04:39:51.117
  Dec 22 04:39:51.122: INFO: pods: 0 < 3
  E1222 04:39:51.633667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:52.633809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 12/22/23 04:39:53.122
  STEP: Updating the pdb to allow a pod to be evicted @ 12/22/23 04:39:53.133
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:39:53.143
  E1222 04:39:53.634367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:54.634494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/22/23 04:39:55.151
  STEP: Waiting for all pods to be running @ 12/22/23 04:39:55.151
  STEP: Waiting for the pdb to observed all healthy pods @ 12/22/23 04:39:55.156
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/22/23 04:39:55.189
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:39:55.215
  E1222 04:39:55.635575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:56.636612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 12/22/23 04:39:57.22
  STEP: locating a running pod @ 12/22/23 04:39:57.224
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/22/23 04:39:57.237
  STEP: Waiting for the pdb to be deleted @ 12/22/23 04:39:57.245
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/22/23 04:39:57.248
  STEP: Waiting for all pods to be running @ 12/22/23 04:39:57.248
  Dec 22 04:39:57.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3687" for this suite. @ 12/22/23 04:39:57.283
• [8.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/22/23 04:39:57.313
  Dec 22 04:39:57.313: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-runtime @ 12/22/23 04:39:57.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:39:57.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:39:57.364
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/22/23 04:39:57.397
  E1222 04:39:57.637098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:58.637948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:39:59.638855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:00.639935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:01.640949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:02.641564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:03.642361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:04.643359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:05.644308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:06.645135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:07.645934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:08.646470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:09.646764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:10.647210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:11.647353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:12.647462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/22/23 04:40:12.862
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/22/23 04:40:12.866
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/22/23 04:40:12.874
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 12/22/23 04:40:12.874
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/22/23 04:40:12.907
  E1222 04:40:13.647510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:14.647602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:15.648399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/22/23 04:40:15.944
  E1222 04:40:16.649314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/22/23 04:40:16.952
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/22/23 04:40:16.959
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 12/22/23 04:40:16.959
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/22/23 04:40:16.982
  E1222 04:40:17.650815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/22/23 04:40:17.999
  E1222 04:40:18.651741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:19.652032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/22/23 04:40:20.427
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/22/23 04:40:20.436
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 12/22/23 04:40:20.436
  Dec 22 04:40:20.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1" for this suite. @ 12/22/23 04:40:20.476
• [23.175 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 12/22/23 04:40:20.488
  Dec 22 04:40:20.488: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 04:40:20.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:20.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:20.516
  STEP: creating service in namespace services-6862 @ 12/22/23 04:40:20.522
  STEP: creating service affinity-nodeport-transition in namespace services-6862 @ 12/22/23 04:40:20.522
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6862 @ 12/22/23 04:40:20.576
  I1222 04:40:20.600330      20 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-6862, replica count: 3
  E1222 04:40:20.652775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:21.658493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:22.659118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1222 04:40:23.651802      20 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1222 04:40:23.659064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:40:23.663: INFO: Creating new exec pod
  E1222 04:40:24.659276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:25.659549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:26.659508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:40:26.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-6862 exec execpod-affinitydlz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Dec 22 04:40:26.829: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Dec 22 04:40:26.829: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:40:26.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-6862 exec execpod-affinitydlz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.112.22 80'
  Dec 22 04:40:26.964: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.112.22 80\nConnection to 10.43.112.22 80 port [tcp/http] succeeded!\n"
  Dec 22 04:40:26.964: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:40:26.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-6862 exec execpod-affinitydlz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.160 31702'
  Dec 22 04:40:27.119: INFO: stderr: "+ nc -v -t -w 2 172.31.11.160 31702\n+ echo hostName\nConnection to 172.31.11.160 31702 port [tcp/*] succeeded!\n"
  Dec 22 04:40:27.119: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:40:27.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-6862 exec execpod-affinitydlz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.14.155 31702'
  Dec 22 04:40:27.274: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.14.155 31702\nConnection to 172.31.14.155 31702 port [tcp/*] succeeded!\n"
  Dec 22 04:40:27.274: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 04:40:27.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-6862 exec execpod-affinitydlz5l -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.160:31702/ ; done'
  Dec 22 04:40:27.506: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n"
  Dec 22 04:40:27.506: INFO: stdout: "\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-xb7kd\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-xb7kd\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-xb7kd\naffinity-nodeport-transition-xb7kd\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-brfql\naffinity-nodeport-transition-xb7kd\naffinity-nodeport-transition-brfql\naffinity-nodeport-transition-xb7kd\naffinity-nodeport-transition-xb7kd"
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-xb7kd
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-xb7kd
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-xb7kd
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-xb7kd
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-brfql
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-xb7kd
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-brfql
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-xb7kd
  Dec 22 04:40:27.506: INFO: Received response from host: affinity-nodeport-transition-xb7kd
  Dec 22 04:40:27.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-6862 exec execpod-affinitydlz5l -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.160:31702/ ; done'
  E1222 04:40:27.659995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:40:27.745: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:31702/\n"
  Dec 22 04:40:27.745: INFO: stdout: "\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td\naffinity-nodeport-transition-448td"
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Received response from host: affinity-nodeport-transition-448td
  Dec 22 04:40:27.745: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6862, will wait for the garbage collector to delete the pods @ 12/22/23 04:40:27.759
  Dec 22 04:40:27.819: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.480044ms
  Dec 22 04:40:27.920: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.893605ms
  E1222 04:40:28.660956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:29.661683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:30.662047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:40:30.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6862" for this suite. @ 12/22/23 04:40:30.974
• [10.492 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 12/22/23 04:40:30.981
  Dec 22 04:40:30.981: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:40:30.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:31.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:31.007
  STEP: Creating configMap with name configmap-test-volume-7f1f55ce-32e6-4a3d-be2c-1f9f1d775902 @ 12/22/23 04:40:31.052
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:40:31.058
  E1222 04:40:31.662365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:32.663372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:33.664370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:34.664647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:40:35.224
  Dec 22 04:40:35.228: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-configmaps-130dd723-6c89-4c5b-8731-c52530256c94 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:40:35.235
  Dec 22 04:40:35.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6672" for this suite. @ 12/22/23 04:40:35.258
• [4.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 12/22/23 04:40:35.268
  Dec 22 04:40:35.268: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 04:40:35.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:35.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:35.297
  STEP: Creating a pod to test substitution in container's command @ 12/22/23 04:40:35.301
  E1222 04:40:35.665742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:36.665871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:37.666413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:38.666623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:40:39.33
  Dec 22 04:40:39.334: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod var-expansion-3c5ac8c1-9c3f-46bc-b907-2a39558b0959 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 04:40:39.34
  Dec 22 04:40:39.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7762" for this suite. @ 12/22/23 04:40:39.366
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/22/23 04:40:39.38
  Dec 22 04:40:39.380: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename watch @ 12/22/23 04:40:39.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:39.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:39.404
  STEP: creating a watch on configmaps with label A @ 12/22/23 04:40:39.41
  STEP: creating a watch on configmaps with label B @ 12/22/23 04:40:39.412
  STEP: creating a watch on configmaps with label A or B @ 12/22/23 04:40:39.415
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/22/23 04:40:39.419
  Dec 22 04:40:39.427: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6507  26159c65-d8a0-44b4-a729-a3c1e599a6e1 20411 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:40:39.427: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6507  26159c65-d8a0-44b4-a729-a3c1e599a6e1 20411 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/22/23 04:40:39.427
  Dec 22 04:40:39.440: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6507  26159c65-d8a0-44b4-a729-a3c1e599a6e1 20412 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:40:39.440: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6507  26159c65-d8a0-44b4-a729-a3c1e599a6e1 20412 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/22/23 04:40:39.44
  Dec 22 04:40:39.454: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6507  26159c65-d8a0-44b4-a729-a3c1e599a6e1 20413 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:40:39.454: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6507  26159c65-d8a0-44b4-a729-a3c1e599a6e1 20413 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/22/23 04:40:39.455
  Dec 22 04:40:39.465: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6507  26159c65-d8a0-44b4-a729-a3c1e599a6e1 20414 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:40:39.465: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6507  26159c65-d8a0-44b4-a729-a3c1e599a6e1 20414 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/22/23 04:40:39.465
  Dec 22 04:40:39.474: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6507  c0974a71-02f4-4f55-9b51-ea5ee1908899 20415 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:40:39.474: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6507  c0974a71-02f4-4f55-9b51-ea5ee1908899 20415 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1222 04:40:39.667199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:40.667313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:41.667514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:42.668300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:43.669071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:44.669394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:45.669837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:46.669958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:47.670374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:48.670504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/22/23 04:40:49.476
  Dec 22 04:40:49.483: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6507  c0974a71-02f4-4f55-9b51-ea5ee1908899 20469 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:40:49.483: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6507  c0974a71-02f4-4f55-9b51-ea5ee1908899 20469 0 2023-12-22 04:40:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-22 04:40:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1222 04:40:49.672536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:50.672643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:51.673016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:52.673978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:53.674050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:54.674647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:55.674357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:56.674710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:57.674953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:40:58.675203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:40:59.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6507" for this suite. @ 12/22/23 04:40:59.49
• [20.119 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 12/22/23 04:40:59.5
  Dec 22 04:40:59.500: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:40:59.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:40:59.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:40:59.527
  STEP: Creating configMap configmap-9580/configmap-test-e23e9b3b-2bba-41c2-a99d-5dcc6e6b362d @ 12/22/23 04:40:59.531
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:40:59.538
  E1222 04:40:59.675663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:00.675816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:01.676497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:02.677315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:41:03.57
  Dec 22 04:41:03.575: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-configmaps-08c280d3-b9d1-44d0-a2b7-2c91482cff20 container env-test: <nil>
  STEP: delete the pod @ 12/22/23 04:41:03.583
  Dec 22 04:41:03.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9580" for this suite. @ 12/22/23 04:41:03.609
• [4.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 12/22/23 04:41:03.622
  Dec 22 04:41:03.622: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:41:03.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:03.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:03.653
  STEP: creating a ConfigMap @ 12/22/23 04:41:03.66
  STEP: fetching the ConfigMap @ 12/22/23 04:41:03.667
  STEP: patching the ConfigMap @ 12/22/23 04:41:03.671
  E1222 04:41:03.677993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/22/23 04:41:03.687
  STEP: deleting the ConfigMap by collection with a label selector @ 12/22/23 04:41:03.696
  STEP: listing all ConfigMaps in test namespace @ 12/22/23 04:41:03.707
  Dec 22 04:41:03.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4367" for this suite. @ 12/22/23 04:41:03.716
• [0.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 12/22/23 04:41:03.726
  Dec 22 04:41:03.726: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:41:03.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:03.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:03.758
  STEP: Starting the proxy @ 12/22/23 04:41:03.763
  Dec 22 04:41:03.763: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-2609 proxy --unix-socket=/tmp/kubectl-proxy-unix2994580701/test'
  STEP: retrieving proxy /api/ output @ 12/22/23 04:41:03.842
  Dec 22 04:41:03.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2609" for this suite. @ 12/22/23 04:41:03.849
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 12/22/23 04:41:03.86
  Dec 22 04:41:03.860: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 04:41:03.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:03.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:03.887
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/22/23 04:41:03.891
  E1222 04:41:04.678939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:05.679139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:06.680142      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:07.680609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:41:07.921
  Dec 22 04:41:07.925: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-56f6237b-3765-407a-9981-4577f79f04cb container test-container: <nil>
  STEP: delete the pod @ 12/22/23 04:41:07.943
  Dec 22 04:41:07.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5400" for this suite. @ 12/22/23 04:41:07.988
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 12/22/23 04:41:07.996
  Dec 22 04:41:07.996: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 04:41:07.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:08.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:08.021
  STEP: Creating service test in namespace statefulset-6705 @ 12/22/23 04:41:08.026
  Dec 22 04:41:08.048: INFO: Found 0 stateful pods, waiting for 1
  E1222 04:41:08.680726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:09.681259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:10.681437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:11.681595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:12.682140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:13.682283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:14.682399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:15.682655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:16.682752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:17.683006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:41:18.047: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/22/23 04:41:18.056
  W1222 04:41:18.069294      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Dec 22 04:41:18.077: INFO: Found 1 stateful pods, waiting for 2
  E1222 04:41:18.683446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:19.683985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:20.684341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:21.684380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:22.685337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:23.685511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:24.685634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:25.686399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:26.686990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:27.687931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:41:28.082: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:41:28.082: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/22/23 04:41:28.09
  STEP: Delete all of the StatefulSets @ 12/22/23 04:41:28.093
  STEP: Verify that StatefulSets have been deleted @ 12/22/23 04:41:28.104
  Dec 22 04:41:28.108: INFO: Deleting all statefulset in ns statefulset-6705
  Dec 22 04:41:28.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6705" for this suite. @ 12/22/23 04:41:28.131
• [20.172 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 12/22/23 04:41:28.168
  Dec 22 04:41:28.168: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:41:28.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:28.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:28.193
  STEP: Creating configMap with name projected-configmap-test-volume-map-56129072-3811-4582-834c-542a634ee6cd @ 12/22/23 04:41:28.198
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:41:28.204
  E1222 04:41:28.689313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:29.690322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:30.691133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:31.691369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:41:32.239
  Dec 22 04:41:32.246: INFO: Trying to get logs from node ip-172-31-11-160.us-east-2.compute.internal pod pod-projected-configmaps-7d9fb01c-4839-4c8d-a18b-a332a8419b96 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:41:32.261
  Dec 22 04:41:32.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2732" for this suite. @ 12/22/23 04:41:32.284
• [4.128 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/22/23 04:41:32.297
  Dec 22 04:41:32.297: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pods @ 12/22/23 04:41:32.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:32.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:32.325
  STEP: creating a Pod with a static label @ 12/22/23 04:41:32.335
  STEP: watching for Pod to be ready @ 12/22/23 04:41:32.344
  Dec 22 04:41:32.350: INFO: observed Pod pod-test in namespace pods-6926 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Dec 22 04:41:32.353: INFO: observed Pod pod-test in namespace pods-6926 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:32 +0000 UTC  }]
  Dec 22 04:41:32.381: INFO: observed Pod pod-test in namespace pods-6926 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:32 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:32 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:32 +0000 UTC  }]
  E1222 04:41:32.692045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:33.692982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:41:33.795: INFO: Found Pod pod-test in namespace pods-6926 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:33 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:33 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:33 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 04:41:32 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/22/23 04:41:33.799
  STEP: getting the Pod and ensuring that it's patched @ 12/22/23 04:41:33.813
  STEP: replacing the Pod's status Ready condition to False @ 12/22/23 04:41:33.817
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/22/23 04:41:33.837
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/22/23 04:41:33.837
  STEP: watching for the Pod to be deleted @ 12/22/23 04:41:33.853
  Dec 22 04:41:33.859: INFO: observed event type MODIFIED
  Dec 22 04:41:33.951: INFO: observed event type MODIFIED
  E1222 04:41:34.693258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:35.693346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:41:35.808: INFO: observed event type MODIFIED
  Dec 22 04:41:35.920: INFO: observed event type MODIFIED
  E1222 04:41:36.693975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:41:36.810: INFO: observed event type MODIFIED
  Dec 22 04:41:36.826: INFO: observed event type MODIFIED
  Dec 22 04:41:36.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6926" for this suite. @ 12/22/23 04:41:36.85
• [4.574 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/22/23 04:41:36.876
  Dec 22 04:41:36.876: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pods @ 12/22/23 04:41:36.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:36.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:36.905
  STEP: creating the pod @ 12/22/23 04:41:36.909
  STEP: submitting the pod to kubernetes @ 12/22/23 04:41:36.909
  W1222 04:41:36.920233      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1222 04:41:37.694409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:38.694618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 12/22/23 04:41:38.936
  STEP: updating the pod @ 12/22/23 04:41:38.94
  Dec 22 04:41:39.454: INFO: Successfully updated pod "pod-update-activedeadlineseconds-ff243d8a-6012-4749-80d4-d35b4ec0dbed"
  E1222 04:41:39.695276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:40.695388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:41.695462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:42.696326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:41:43.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3581" for this suite. @ 12/22/23 04:41:43.471
• [6.604 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 12/22/23 04:41:43.48
  Dec 22 04:41:43.480: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sched-preemption @ 12/22/23 04:41:43.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:41:43.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:41:43.513
  Dec 22 04:41:43.541: INFO: Waiting up to 1m0s for all nodes to be ready
  E1222 04:41:43.696401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:44.696532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:45.696960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:46.697183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:47.697332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:48.697348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:49.697504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:50.697703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:51.698130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:52.699078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:53.699596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:54.699697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:55.700728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:56.700943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:57.700976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:58.701324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:41:59.701469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:00.701663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:01.702442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:02.703368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:03.703480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:04.703964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:05.704080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:06.704197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:07.704596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:08.704960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:09.705676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:10.706563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:11.707201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:12.707695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:13.707750      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:14.708099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:15.709340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:16.710094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:17.710797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:18.710922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:19.711331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:20.711536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:21.711679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:22.711993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:23.712516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:24.712567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:25.713561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:26.713576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:27.713732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:28.714689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:29.715560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:30.715834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:31.716888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:32.716955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:33.717031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:34.717293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:35.717977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:36.718160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:37.719210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:38.719358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:39.719762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:40.719901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:41.720054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:42.720136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:42:43.547: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/22/23 04:42:43.551
  Dec 22 04:42:43.575: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Dec 22 04:42:43.586: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Dec 22 04:42:43.623: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Dec 22 04:42:43.651: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Dec 22 04:42:43.704: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  E1222 04:42:43.720979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:42:43.727: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  Dec 22 04:42:43.784: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  Dec 22 04:42:43.798: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/22/23 04:42:43.798
  E1222 04:42:44.721885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:45.721754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:46.722290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:47.722600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/22/23 04:42:47.867
  E1222 04:42:48.723393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:49.723842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:50.724193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:51.724135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:42:51.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9916" for this suite. @ 12/22/23 04:42:51.988
• [68.518 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 12/22/23 04:42:51.998
  Dec 22 04:42:51.998: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename security-context-test @ 12/22/23 04:42:51.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:42:52.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:42:52.028
  E1222 04:42:52.724297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:53.724494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:54.724801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:55.725159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:42:56.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4989" for this suite. @ 12/22/23 04:42:56.342
• [4.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/22/23 04:42:56.351
  Dec 22 04:42:56.351: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename containers @ 12/22/23 04:42:56.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:42:56.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:42:56.383
  STEP: Creating a pod to test override arguments @ 12/22/23 04:42:56.388
  E1222 04:42:56.726030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:57.726383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:58.727114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:42:59.727164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:43:00.442
  Dec 22 04:43:00.450: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod client-containers-6984ae74-f929-4469-aac4-6383ec69605c container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:43:00.462
  Dec 22 04:43:00.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5335" for this suite. @ 12/22/23 04:43:00.492
• [4.151 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 12/22/23 04:43:00.503
  Dec 22 04:43:00.503: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:43:00.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:00.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:00.541
  STEP: Creating configMap with name configmap-test-volume-f8052afc-3273-49bf-aabe-19912e4687ab @ 12/22/23 04:43:00.546
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:43:00.551
  E1222 04:43:00.727978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:01.728692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:02.728802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:03.729262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:43:04.576
  Dec 22 04:43:04.580: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-configmaps-5805bf9a-e60d-4040-8d78-d801854f87ff container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 04:43:04.586
  Dec 22 04:43:04.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1032" for this suite. @ 12/22/23 04:43:04.607
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 12/22/23 04:43:04.618
  Dec 22 04:43:04.618: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 04:43:04.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:04.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:04.663
  STEP: Creating simple DaemonSet "daemon-set" @ 12/22/23 04:43:04.716
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 04:43:04.724
  E1222 04:43:04.729458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:04.760: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:43:04.760: INFO: Node ip-172-31-11-160.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 04:43:05.730040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:05.744: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:43:05.744: INFO: Node ip-172-31-11-160.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 04:43:06.730082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:06.734: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 04:43:06.734: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 12/22/23 04:43:06.738
  Dec 22 04:43:06.742: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/22/23 04:43:06.742
  Dec 22 04:43:06.754: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/22/23 04:43:06.754
  Dec 22 04:43:06.757: INFO: Observed &DaemonSet event: ADDED
  Dec 22 04:43:06.757: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.757: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.757: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.757: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.758: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.758: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.758: INFO: Found daemon set daemon-set in namespace daemonsets-4367 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 22 04:43:06.758: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/22/23 04:43:06.758
  STEP: watching for the daemon set status to be patched @ 12/22/23 04:43:06.766
  Dec 22 04:43:06.769: INFO: Observed &DaemonSet event: ADDED
  Dec 22 04:43:06.769: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.772: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.772: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.773: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.773: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.773: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.774: INFO: Observed daemon set daemon-set in namespace daemonsets-4367 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 22 04:43:06.774: INFO: Observed &DaemonSet event: MODIFIED
  Dec 22 04:43:06.774: INFO: Found daemon set daemon-set in namespace daemonsets-4367 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Dec 22 04:43:06.774: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 04:43:06.779
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4367, will wait for the garbage collector to delete the pods @ 12/22/23 04:43:06.779
  Dec 22 04:43:06.839: INFO: Deleting DaemonSet.extensions daemon-set took: 6.917498ms
  Dec 22 04:43:06.940: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.751613ms
  E1222 04:43:07.730473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:08.731610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:09.545: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 04:43:09.545: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 04:43:09.549: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21573"},"items":null}

  Dec 22 04:43:09.553: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21573"},"items":null}

  Dec 22 04:43:09.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4367" for this suite. @ 12/22/23 04:43:09.588
• [4.978 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 12/22/23 04:43:09.598
  Dec 22 04:43:09.598: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 04:43:09.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:09.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:09.622
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/22/23 04:43:09.626
  E1222 04:43:09.732171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:10.732323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:11.733382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:12.733535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:43:13.66
  Dec 22 04:43:13.664: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-ac99d78a-6bee-4716-8c41-b4ebcb2d57da container test-container: <nil>
  STEP: delete the pod @ 12/22/23 04:43:13.671
  Dec 22 04:43:13.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6306" for this suite. @ 12/22/23 04:43:13.694
• [4.105 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 12/22/23 04:43:13.704
  Dec 22 04:43:13.704: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pod-network-test @ 12/22/23 04:43:13.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:13.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:13.728
  STEP: Performing setup for networking test in namespace pod-network-test-2692 @ 12/22/23 04:43:13.732
  STEP: creating a selector @ 12/22/23 04:43:13.732
  STEP: Creating the service pods in kubernetes @ 12/22/23 04:43:13.732
  Dec 22 04:43:13.732: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1222 04:43:13.733655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:14.733981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:15.734153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:16.734929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:17.736684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:18.735237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:19.735669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:20.735842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:21.736051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:22.736144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:23.736276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:24.736384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:25.736530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/22/23 04:43:25.884
  E1222 04:43:26.736629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:27.737590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:27.923: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Dec 22 04:43:27.923: INFO: Going to poll 10.42.1.33 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 04:43:27.928: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.33 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2692 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:43:27.928: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:43:27.929: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:43:27.929: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2692/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.33+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1222 04:43:28.737648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:29.003: INFO: Found all 1 expected endpoints: [netserver-0]
  Dec 22 04:43:29.004: INFO: Going to poll 10.42.2.104 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 04:43:29.009: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.104 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2692 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:43:29.011: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:43:29.011: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:43:29.012: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2692/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.104+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1222 04:43:29.738405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:30.069: INFO: Found all 1 expected endpoints: [netserver-1]
  Dec 22 04:43:30.070: INFO: Going to poll 10.42.0.26 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 04:43:30.075: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.26 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2692 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:43:30.075: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:43:30.076: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:43:30.076: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2692/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.26+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1222 04:43:30.738491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:31.142: INFO: Found all 1 expected endpoints: [netserver-2]
  Dec 22 04:43:31.142: INFO: Going to poll 10.42.3.49 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 04:43:31.146: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.3.49 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2692 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:43:31.146: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:43:31.147: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:43:31.147: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2692/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.3.49+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1222 04:43:31.739590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:32.239: INFO: Found all 1 expected endpoints: [netserver-3]
  Dec 22 04:43:32.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2692" for this suite. @ 12/22/23 04:43:32.247
• [18.557 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 12/22/23 04:43:32.263
  Dec 22 04:43:32.263: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:43:32.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:32.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:32.302
  STEP: creating a replication controller @ 12/22/23 04:43:32.308
  Dec 22 04:43:32.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 create -f -'
  Dec 22 04:43:32.535: INFO: stderr: ""
  Dec 22 04:43:32.535: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/22/23 04:43:32.536
  Dec 22 04:43:32.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 04:43:32.657: INFO: stderr: ""
  Dec 22 04:43:32.657: INFO: stdout: "update-demo-nautilus-6b9nn update-demo-nautilus-cwsgd "
  Dec 22 04:43:32.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 get pods update-demo-nautilus-6b9nn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E1222 04:43:32.739971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:32.756: INFO: stderr: ""
  Dec 22 04:43:32.756: INFO: stdout: ""
  Dec 22 04:43:32.756: INFO: update-demo-nautilus-6b9nn is created but not running
  E1222 04:43:33.740981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:34.741312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:35.742418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:36.742545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:37.742656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:37.757: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 04:43:37.866: INFO: stderr: ""
  Dec 22 04:43:37.866: INFO: stdout: "update-demo-nautilus-6b9nn update-demo-nautilus-cwsgd "
  Dec 22 04:43:37.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 get pods update-demo-nautilus-6b9nn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E1222 04:43:38.742828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:38.846: INFO: stderr: ""
  Dec 22 04:43:38.846: INFO: stdout: ""
  Dec 22 04:43:38.846: INFO: update-demo-nautilus-6b9nn is created but not running
  E1222 04:43:39.743334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:40.743582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:41.743682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:42.744219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:43.744603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:43.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 04:43:43.935: INFO: stderr: ""
  Dec 22 04:43:43.935: INFO: stdout: "update-demo-nautilus-6b9nn update-demo-nautilus-cwsgd "
  Dec 22 04:43:43.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 get pods update-demo-nautilus-6b9nn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 04:43:44.009: INFO: stderr: ""
  Dec 22 04:43:44.009: INFO: stdout: "true"
  Dec 22 04:43:44.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 get pods update-demo-nautilus-6b9nn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 04:43:44.088: INFO: stderr: ""
  Dec 22 04:43:44.088: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 04:43:44.088: INFO: validating pod update-demo-nautilus-6b9nn
  Dec 22 04:43:44.096: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 04:43:44.096: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 04:43:44.096: INFO: update-demo-nautilus-6b9nn is verified up and running
  Dec 22 04:43:44.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 get pods update-demo-nautilus-cwsgd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 04:43:44.170: INFO: stderr: ""
  Dec 22 04:43:44.170: INFO: stdout: "true"
  Dec 22 04:43:44.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 get pods update-demo-nautilus-cwsgd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 04:43:44.249: INFO: stderr: ""
  Dec 22 04:43:44.249: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 04:43:44.249: INFO: validating pod update-demo-nautilus-cwsgd
  Dec 22 04:43:44.257: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 04:43:44.257: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 04:43:44.257: INFO: update-demo-nautilus-cwsgd is verified up and running
  STEP: using delete to clean up resources @ 12/22/23 04:43:44.257
  Dec 22 04:43:44.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 delete --grace-period=0 --force -f -'
  Dec 22 04:43:44.342: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 04:43:44.342: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Dec 22 04:43:44.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 get rc,svc -l name=update-demo --no-headers'
  Dec 22 04:43:44.430: INFO: stderr: "No resources found in kubectl-4700 namespace.\n"
  Dec 22 04:43:44.430: INFO: stdout: ""
  Dec 22 04:43:44.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-4700 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 22 04:43:44.512: INFO: stderr: ""
  Dec 22 04:43:44.512: INFO: stdout: ""
  Dec 22 04:43:44.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4700" for this suite. @ 12/22/23 04:43:44.517
• [12.261 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 12/22/23 04:43:44.524
  Dec 22 04:43:44.524: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:43:44.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:44.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:44.55
  STEP: Creating configMap with name configmap-test-upd-43f608c6-4f01-450a-96a5-44d0fda96c3b @ 12/22/23 04:43:44.559
  STEP: Creating the pod @ 12/22/23 04:43:44.564
  E1222 04:43:44.744432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:45.744702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 12/22/23 04:43:46.584
  STEP: Waiting for pod with binary data @ 12/22/23 04:43:46.59
  Dec 22 04:43:46.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5042" for this suite. @ 12/22/23 04:43:46.6
• [2.081 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/22/23 04:43:46.606
  Dec 22 04:43:46.606: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:43:46.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:46.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:46.631
  STEP: Creating projection with secret that has name projected-secret-test-718f4227-4381-4a05-bdd6-c4e89f08fe21 @ 12/22/23 04:43:46.635
  STEP: Creating a pod to test consume secrets @ 12/22/23 04:43:46.642
  E1222 04:43:46.745393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:47.745306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:48.746717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:49.747199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:50.747956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:51.748068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:52.748882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:53.749074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:43:54.677
  Dec 22 04:43:54.681: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod pod-projected-secrets-cae77b95-0ba1-4dd9-97c8-10d1d455563f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 04:43:54.703
  E1222 04:43:54.749501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:54.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5030" for this suite. @ 12/22/23 04:43:54.763
• [8.166 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 12/22/23 04:43:54.773
  Dec 22 04:43:54.773: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 04:43:54.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:54.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:54.794
  STEP: Setting up server cert @ 12/22/23 04:43:54.821
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 04:43:55.612
  STEP: Deploying the webhook pod @ 12/22/23 04:43:55.62
  STEP: Wait for the deployment to be ready @ 12/22/23 04:43:55.632
  Dec 22 04:43:55.640: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1222 04:43:55.749934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:43:56.750013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 04:43:57.657
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 04:43:57.668
  E1222 04:43:57.750161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:58.668: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/22/23 04:43:58.675
  STEP: create a pod that should be updated by the webhook @ 12/22/23 04:43:58.699
  E1222 04:43:58.750820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:43:58.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4659" for this suite. @ 12/22/23 04:43:58.822
  STEP: Destroying namespace "webhook-markers-2456" for this suite. @ 12/22/23 04:43:58.861
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 12/22/23 04:43:58.874
  Dec 22 04:43:58.874: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:43:58.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:43:58.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:43:58.907
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:43:58.912
  E1222 04:43:59.751836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:00.751965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:01.752980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:02.753293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:44:02.953
  Dec 22 04:44:02.964: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-c7a72007-868a-44f5-b54c-31aa59a037a9 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:44:02.972
  Dec 22 04:44:02.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9275" for this suite. @ 12/22/23 04:44:03.008
• [4.149 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 12/22/23 04:44:03.024
  Dec 22 04:44:03.024: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename disruption @ 12/22/23 04:44:03.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:44:03.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:44:03.065
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:44:03.079
  E1222 04:44:03.753533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:04.754113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 12/22/23 04:44:05.083
  STEP: Waiting for all pods to be running @ 12/22/23 04:44:05.092
  Dec 22 04:44:05.106: INFO: running pods: 0 < 1
  E1222 04:44:05.754483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:06.755586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 12/22/23 04:44:07.097
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:44:07.114
  STEP: Patching PodDisruptionBudget status @ 12/22/23 04:44:07.122
  STEP: Waiting for the pdb to be processed @ 12/22/23 04:44:07.139
  Dec 22 04:44:07.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4169" for this suite. @ 12/22/23 04:44:07.163
• [4.146 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 12/22/23 04:44:07.17
  Dec 22 04:44:07.170: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 04:44:07.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:44:07.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:44:07.198
  STEP: Creating pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294 @ 12/22/23 04:44:07.202
  E1222 04:44:07.756714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:08.757215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 04:44:09.222
  Dec 22 04:44:09.225: INFO: Initial restart count of pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 is 0
  Dec 22 04:44:09.228: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:09.757282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:10.757481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:11.234: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:11.757866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:12.758363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:13.240: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:13.758517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:14.758740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:15.246: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:15.758922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:16.759411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:17.250: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:17.760297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:18.760494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:19.255: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:19.760942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:20.761760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:21.259: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:21.762392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:22.763494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:23.264: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:23.764344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:24.764717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:25.269: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:25.765015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:26.765160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:27.273: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:27.766052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:28.766128      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:29.279: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:29.766639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:30.767003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:31.284: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:31.767265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:32.767956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:33.288: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:33.768960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:34.769560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:35.293: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:35.770337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:36.770505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:37.298: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:37.770790      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:38.771041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:39.303: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:39.771195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:40.771296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:41.309: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:41.771745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:42.772438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:43.314: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:43.772571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:44.773590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:45.318: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:45.774450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:46.774724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:47.322: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:47.775738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:48.776359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:49.334: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:49.776989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:50.777131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:51.386: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:51.777401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:52.777697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:53.390: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:53.778410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:54.779368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:55.394: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:55.780317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:56.780539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:57.399: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:57.780656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:44:58.780793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:44:59.404: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:44:59.780920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:00.781022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:01.408: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:01.781543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:02.781730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:03.413: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:03.781988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:04.789316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:05.418: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:05.789998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:06.790403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:07.422: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:07.791476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:08.791588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:09.427: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:09.792235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:10.792307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:11.432: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:11.792980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:12.793241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:13.437: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:13.794328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:14.794475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:15.443: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:15.795514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:16.795881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:17.450: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:17.796979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:18.797590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:19.455: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:19.797824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:20.798917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:21.460: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:21.799535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:22.802885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:23.465: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:23.801612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:24.801883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:25.471: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:25.802015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:26.802051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:27.476: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:27.802789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:28.803159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:29.482: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:29.803270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:30.803498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:31.488: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:31.803688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:32.804123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:33.492: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:33.805234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:34.805402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:35.498: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:35.806649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:36.806558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:37.503: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:37.807489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:38.808067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:39.507: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:39.808207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:40.808378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:41.512: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:41.809015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:42.809298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:43.516: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:43.809468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:44.809577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:45.521: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:45.810333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:46.810490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:47.528: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:47.811190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:48.811418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:49.535: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:49.811646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:50.812315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:51.539: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:51.812719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:52.812842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:53.543: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:53.813724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:54.814058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:55.548: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:55.815128      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:56.815345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:57.552: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:57.816428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:45:58.816562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:45:59.557: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:45:59.816720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:00.816861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:01.563: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:01.816992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:02.817541      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:03.568: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:03.818357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:04.819096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:05.573: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:05.820147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:06.820183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:07.579: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:07.821630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:08.821341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:09.584: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:09.821720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:10.822392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:11.589: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:11.823042      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:12.823408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:13.594: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:13.823926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:14.824505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:15.598: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:15.825447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:16.826381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:17.603: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:17.826639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:18.827337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:19.608: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:19.828345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:20.828601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:21.615: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:21.829455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:22.829581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:23.619: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:23.829952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:24.830188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:25.624: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:25.830250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:26.830501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:27.628: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:27.831159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:28.831589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:29.633: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:29.831979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:30.832227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:31.637: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:31.833231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:32.833260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:33.641: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:33.833989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:34.834209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:35.648: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:35.834726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:36.834922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:37.654: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:37.835054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:38.835143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:39.658: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:39.836034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:40.836150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:41.663: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:41.836210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:42.836492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:43.666: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:43.837264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:44.837487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:45.671: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:45.837863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:46.838402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:47.678: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:47.839449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:48.839532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:49.686: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:49.840479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:50.840591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:51.699: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:51.840918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:52.840993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:53.703: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:53.841152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:54.841392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:55.709: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:55.842391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:56.842637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:57.714: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:57.842715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:46:58.843012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:46:59.719: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:46:59.843575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:00.843869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:01.724: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:01.844362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:02.844786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:03.728: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:03.845888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:04.846013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:05.733: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:05.846329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:06.846740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:07.740: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:07.847233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:08.847421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:09.744: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:09.848166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:10.848311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:11.748: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:11.848857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:12.849630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:13.755: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:13.849748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:14.850365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:15.762: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:15.851424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:16.851468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:17.766: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:17.852562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:18.852937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:19.771: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:19.853578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:20.854317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:21.776: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:21.854479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:22.855435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:23.781: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:23.855716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:24.856091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:25.794: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:25.856717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:26.856843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:27.799: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:27.857657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:28.857818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:29.803: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:29.859039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:30.859206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:31.807: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:31.860000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:32.860520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:33.811: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:33.861036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:34.861416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:35.816: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:35.861858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:36.862022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:37.821: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:37.862094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:38.862216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:39.826: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:39.862810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:40.863172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:41.830: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:41.863948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:42.864119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:43.835: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:43.864642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:44.865127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:45.842: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:45.866135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:46.866696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:47.847: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:47.867080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:48.867302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:49.853: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:49.868275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:50.870562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:51.858: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:51.871479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:52.872222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:53.862: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:53.872822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:54.873535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:55.869: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:55.873572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:56.873713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:57.874222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:57.874: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:47:58.874919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:47:59.875536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:47:59.883: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:48:00.875227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:01.875503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:01.888: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:48:02.876487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:03.876685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:03.893: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:48:04.876809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:05.876983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:05.898: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:48:06.877312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:07.878351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:07.902: INFO: Get pod test-webserver-62308ca2-34c9-4d95-8e07-c49a0969a626 in namespace container-probe-4294
  E1222 04:48:08.878684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:09.879297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/22/23 04:48:09.903
  Dec 22 04:48:09.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4294" for this suite. @ 12/22/23 04:48:09.946
• [242.786 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 12/22/23 04:48:09.957
  Dec 22 04:48:09.957: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:48:09.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:09.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:10.004
  STEP: validating cluster-info @ 12/22/23 04:48:10.008
  Dec 22 04:48:10.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6098 cluster-info'
  Dec 22 04:48:10.124: INFO: stderr: ""
  Dec 22 04:48:10.124: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Dec 22 04:48:10.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6098" for this suite. @ 12/22/23 04:48:10.132
• [0.183 seconds]
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 12/22/23 04:48:10.14
  Dec 22 04:48:10.140: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:48:10.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:10.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:10.166
  STEP: Creating configMap that has name configmap-test-emptyKey-861e2f0a-0dab-4c47-a810-847184ea350b @ 12/22/23 04:48:10.169
  Dec 22 04:48:10.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-700" for this suite. @ 12/22/23 04:48:10.177
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 12/22/23 04:48:10.186
  Dec 22 04:48:10.186: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:48:10.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:10.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:10.209
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:48:10.212
  E1222 04:48:10.880125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:11.880248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:12.881825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:13.882710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:48:14.248
  Dec 22 04:48:14.258: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-b8040263-202c-4b5b-8a35-7c66e29ee771 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:48:14.281
  Dec 22 04:48:14.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4433" for this suite. @ 12/22/23 04:48:14.304
• [4.125 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/22/23 04:48:14.312
  Dec 22 04:48:14.312: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pods @ 12/22/23 04:48:14.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:14.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:14.332
  E1222 04:48:14.884029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:15.883855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:16.884509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:17.884616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:18.885213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:19.885488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:48:20.408
  Dec 22 04:48:20.411: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod client-envvars-2b3e0d49-138c-4d19-9619-4c45d71dfe4f container env3cont: <nil>
  STEP: delete the pod @ 12/22/23 04:48:20.426
  Dec 22 04:48:20.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8348" for this suite. @ 12/22/23 04:48:20.48
• [6.185 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 12/22/23 04:48:20.498
  Dec 22 04:48:20.498: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sched-pred @ 12/22/23 04:48:20.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:20.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:20.551
  Dec 22 04:48:20.563: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 22 04:48:20.592: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 04:48:20.596: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-160.us-east-2.compute.internal before test
  Dec 22 04:48:20.605: INFO: svclb-traefik-080075b9-7dhph from kube-system started at 2023-12-22 03:39:13 +0000 UTC (2 container statuses recorded)
  Dec 22 04:48:20.605: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:48:20.605: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:48:20.605: INFO: sonobuoy-e2e-job-2ccc42035d274143 from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:48:20.605: INFO: 	Container e2e ready: true, restart count 0
  Dec 22 04:48:20.605: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:48:20.605: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-c4pmm from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:48:20.605: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:48:20.605: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:48:20.605: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-14-155.us-east-2.compute.internal before test
  Dec 22 04:48:20.624: INFO: svclb-traefik-080075b9-qh96k from kube-system started at 2023-12-22 04:32:29 +0000 UTC (2 container statuses recorded)
  Dec 22 04:48:20.624: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:48:20.624: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:48:20.625: INFO: server-envvars-0b31bccf-c433-42cc-9a62-05ea30fe7a22 from pods-8348 started at 2023-12-22 04:48:14 +0000 UTC (1 container statuses recorded)
  Dec 22 04:48:20.625: INFO: 	Container srv ready: true, restart count 0
  Dec 22 04:48:20.625: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-7psl7 from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:48:20.625: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:48:20.625: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:48:20.625: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-2-79.us-east-2.compute.internal before test
  Dec 22 04:48:20.647: INFO: coredns-6799fbcd5-rcvbg from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:48:20.647: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 04:48:20.647: INFO: helm-install-traefik-crd-m5lfj from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:48:20.647: INFO: 	Container helm ready: false, restart count 0
  Dec 22 04:48:20.647: INFO: helm-install-traefik-prpf8 from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:48:20.647: INFO: 	Container helm ready: false, restart count 2
  Dec 22 04:48:20.648: INFO: local-path-provisioner-84db5d44d9-968kz from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:48:20.648: INFO: 	Container local-path-provisioner ready: true, restart count 0
  Dec 22 04:48:20.648: INFO: metrics-server-67c658944b-54sc2 from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:48:20.648: INFO: 	Container metrics-server ready: true, restart count 0
  Dec 22 04:48:20.648: INFO: svclb-traefik-080075b9-mq9px from kube-system started at 2023-12-22 03:37:45 +0000 UTC (2 container statuses recorded)
  Dec 22 04:48:20.648: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:48:20.648: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:48:20.648: INFO: traefik-f4564c4f4-hprzl from kube-system started at 2023-12-22 03:37:45 +0000 UTC (1 container statuses recorded)
  Dec 22 04:48:20.648: INFO: 	Container traefik ready: true, restart count 0
  Dec 22 04:48:20.648: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-gvv9z from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:48:20.649: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:48:20.649: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:48:20.649: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-254.us-east-2.compute.internal before test
  Dec 22 04:48:20.670: INFO: svclb-traefik-080075b9-jqvvw from kube-system started at 2023-12-22 03:40:47 +0000 UTC (2 container statuses recorded)
  Dec 22 04:48:20.670: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:48:20.670: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:48:20.670: INFO: sonobuoy from sonobuoy started at 2023-12-22 03:57:51 +0000 UTC (1 container statuses recorded)
  Dec 22 04:48:20.670: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 22 04:48:20.670: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-wjwxp from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:48:20.670: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:48:20.670: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/22/23 04:48:20.671
  E1222 04:48:20.886284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:21.886811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/22/23 04:48:22.712
  STEP: Trying to apply a random label on the found node. @ 12/22/23 04:48:22.723
  STEP: verifying the node has the label kubernetes.io/e2e-de43b628-f094-4adc-a025-28c861d159da 42 @ 12/22/23 04:48:22.739
  STEP: Trying to relaunch the pod, now with labels. @ 12/22/23 04:48:22.745
  E1222 04:48:22.887669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:23.887813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-de43b628-f094-4adc-a025-28c861d159da off the node ip-172-31-14-155.us-east-2.compute.internal @ 12/22/23 04:48:24.766
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-de43b628-f094-4adc-a025-28c861d159da @ 12/22/23 04:48:24.78
  Dec 22 04:48:24.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3657" for this suite. @ 12/22/23 04:48:24.79
• [4.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 12/22/23 04:48:24.8
  Dec 22 04:48:24.800: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 04:48:24.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:24.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:24.875
  STEP: Creating resourceQuota "e2e-rq-status-xs5lq" @ 12/22/23 04:48:24.882
  E1222 04:48:24.887936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:24.894: INFO: Resource quota "e2e-rq-status-xs5lq" reports spec: hard cpu limit of 500m
  Dec 22 04:48:24.896: INFO: Resource quota "e2e-rq-status-xs5lq" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-xs5lq" /status @ 12/22/23 04:48:24.896
  STEP: Confirm /status for "e2e-rq-status-xs5lq" resourceQuota via watch @ 12/22/23 04:48:24.912
  Dec 22 04:48:24.914: INFO: observed resourceQuota "e2e-rq-status-xs5lq" in namespace "resourcequota-2072" with hard status: v1.ResourceList(nil)
  Dec 22 04:48:24.914: INFO: Found resourceQuota "e2e-rq-status-xs5lq" in namespace "resourcequota-2072" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Dec 22 04:48:24.914: INFO: ResourceQuota "e2e-rq-status-xs5lq" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/22/23 04:48:24.917
  Dec 22 04:48:24.924: INFO: Resource quota "e2e-rq-status-xs5lq" reports spec: hard cpu limit of 1
  Dec 22 04:48:24.925: INFO: Resource quota "e2e-rq-status-xs5lq" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-xs5lq" /status @ 12/22/23 04:48:24.925
  STEP: Confirm /status for "e2e-rq-status-xs5lq" resourceQuota via watch @ 12/22/23 04:48:24.931
  Dec 22 04:48:24.932: INFO: observed resourceQuota "e2e-rq-status-xs5lq" in namespace "resourcequota-2072" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Dec 22 04:48:24.932: INFO: Found resourceQuota "e2e-rq-status-xs5lq" in namespace "resourcequota-2072" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Dec 22 04:48:24.932: INFO: ResourceQuota "e2e-rq-status-xs5lq" /status was patched
  STEP: Get "e2e-rq-status-xs5lq" /status @ 12/22/23 04:48:24.932
  Dec 22 04:48:24.938: INFO: Resourcequota "e2e-rq-status-xs5lq" reports status: hard cpu of 1
  Dec 22 04:48:24.938: INFO: Resourcequota "e2e-rq-status-xs5lq" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-xs5lq" /status before checking Spec is unchanged @ 12/22/23 04:48:24.941
  Dec 22 04:48:24.948: INFO: Resourcequota "e2e-rq-status-xs5lq" reports status: hard cpu of 2
  Dec 22 04:48:24.948: INFO: Resourcequota "e2e-rq-status-xs5lq" reports status: hard memory of 2Gi
  Dec 22 04:48:24.950: INFO: Found resourceQuota "e2e-rq-status-xs5lq" in namespace "resourcequota-2072" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Dec 22 04:48:24.953: INFO: ResourceQuota "e2e-rq-status-xs5lq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xs5lq", GenerateName:"", Namespace:"resourcequota-2072", SelfLink:"", UID:"0078872e-9fb0-447e-bb85-58756c59162e", ResourceVersion:"23246", Generation:0, CreationTimestamp:time.Date(2023, time.December, 22, 4, 48, 24, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xs5lq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 4, 48, 24, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004846a08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 4, 48, 24, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004846a50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 22, 4, 48, 24, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004846a98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  E1222 04:48:25.888419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:26.888562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:27.888709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:28.889653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:29.890638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:29.954: INFO: ResourceQuota "e2e-rq-status-xs5lq" Spec was unchanged and /status reset
  Dec 22 04:48:29.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2072" for this suite. @ 12/22/23 04:48:29.961
• [5.170 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 12/22/23 04:48:29.97
  Dec 22 04:48:29.970: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:48:29.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:29.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:29.996
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:48:30.007
  E1222 04:48:30.891853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:31.891756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:32.892314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:33.892416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:48:34.045
  Dec 22 04:48:34.049: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod downwardapi-volume-c34a0f41-22ba-48ad-b118-b9e53634aa56 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:48:34.056
  Dec 22 04:48:34.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-989" for this suite. @ 12/22/23 04:48:34.075
• [4.114 seconds]
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 12/22/23 04:48:34.084
  Dec 22 04:48:34.084: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename cronjob @ 12/22/23 04:48:34.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:34.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:34.109
  STEP: Creating a cronjob @ 12/22/23 04:48:34.113
  STEP: creating @ 12/22/23 04:48:34.113
  STEP: getting @ 12/22/23 04:48:34.12
  STEP: listing @ 12/22/23 04:48:34.123
  STEP: watching @ 12/22/23 04:48:34.127
  Dec 22 04:48:34.127: INFO: starting watch
  STEP: cluster-wide listing @ 12/22/23 04:48:34.128
  STEP: cluster-wide watching @ 12/22/23 04:48:34.131
  Dec 22 04:48:34.131: INFO: starting watch
  STEP: patching @ 12/22/23 04:48:34.133
  STEP: updating @ 12/22/23 04:48:34.141
  Dec 22 04:48:34.164: INFO: waiting for watch events with expected annotations
  Dec 22 04:48:34.164: INFO: saw patched and updated annotations
  STEP: patching /status @ 12/22/23 04:48:34.165
  STEP: updating /status @ 12/22/23 04:48:34.177
  STEP: get /status @ 12/22/23 04:48:34.189
  STEP: deleting @ 12/22/23 04:48:34.192
  STEP: deleting a collection @ 12/22/23 04:48:34.222
  Dec 22 04:48:34.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-654" for this suite. @ 12/22/23 04:48:34.247
• [0.171 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 12/22/23 04:48:34.256
  Dec 22 04:48:34.256: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:48:34.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:34.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:34.281
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:48:34.284
  E1222 04:48:34.893211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:35.893606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:36.894059      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:37.894053      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:48:38.33
  Dec 22 04:48:38.334: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-ce39adc3-0d87-4f63-9072-91c1213f3639 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:48:38.341
  Dec 22 04:48:38.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3136" for this suite. @ 12/22/23 04:48:38.364
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/22/23 04:48:38.373
  Dec 22 04:48:38.373: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename svc-latency @ 12/22/23 04:48:38.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:38.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:38.398
  Dec 22 04:48:38.402: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-521 @ 12/22/23 04:48:38.403
  I1222 04:48:38.412000      20 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-521, replica count: 1
  E1222 04:48:38.894420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1222 04:48:39.463183      20 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1222 04:48:39.894904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:40.186: INFO: Created: latency-svc-qdbrg
  Dec 22 04:48:40.206: INFO: Got endpoints: latency-svc-qdbrg [643.081955ms]
  Dec 22 04:48:40.246: INFO: Created: latency-svc-bg6wv
  Dec 22 04:48:40.254: INFO: Got endpoints: latency-svc-bg6wv [47.254125ms]
  Dec 22 04:48:40.259: INFO: Created: latency-svc-kcpkq
  Dec 22 04:48:40.269: INFO: Got endpoints: latency-svc-kcpkq [62.249524ms]
  Dec 22 04:48:40.273: INFO: Created: latency-svc-m646n
  Dec 22 04:48:40.282: INFO: Created: latency-svc-42dq7
  Dec 22 04:48:40.292: INFO: Got endpoints: latency-svc-m646n [84.930379ms]
  Dec 22 04:48:40.300: INFO: Created: latency-svc-t8dr9
  Dec 22 04:48:40.302: INFO: Got endpoints: latency-svc-42dq7 [94.43909ms]
  Dec 22 04:48:40.326: INFO: Got endpoints: latency-svc-t8dr9 [118.85286ms]
  Dec 22 04:48:40.330: INFO: Created: latency-svc-frqkt
  Dec 22 04:48:40.341: INFO: Got endpoints: latency-svc-frqkt [133.486295ms]
  Dec 22 04:48:40.352: INFO: Created: latency-svc-4kb55
  Dec 22 04:48:40.364: INFO: Got endpoints: latency-svc-4kb55 [155.872958ms]
  Dec 22 04:48:40.369: INFO: Created: latency-svc-x2cz5
  Dec 22 04:48:40.392: INFO: Got endpoints: latency-svc-x2cz5 [183.984258ms]
  Dec 22 04:48:40.392: INFO: Created: latency-svc-v2kkh
  Dec 22 04:48:40.413: INFO: Got endpoints: latency-svc-v2kkh [205.14512ms]
  Dec 22 04:48:40.414: INFO: Created: latency-svc-9mgfk
  Dec 22 04:48:40.424: INFO: Got endpoints: latency-svc-9mgfk [216.162765ms]
  Dec 22 04:48:40.430: INFO: Created: latency-svc-qkssj
  Dec 22 04:48:40.440: INFO: Got endpoints: latency-svc-qkssj [231.626777ms]
  Dec 22 04:48:40.447: INFO: Created: latency-svc-vmcv4
  Dec 22 04:48:40.455: INFO: Got endpoints: latency-svc-vmcv4 [246.660486ms]
  Dec 22 04:48:40.461: INFO: Created: latency-svc-ksnjz
  Dec 22 04:48:40.470: INFO: Got endpoints: latency-svc-ksnjz [261.184411ms]
  Dec 22 04:48:40.477: INFO: Created: latency-svc-rvfjl
  Dec 22 04:48:40.490: INFO: Got endpoints: latency-svc-rvfjl [280.878109ms]
  Dec 22 04:48:40.491: INFO: Created: latency-svc-lbthf
  Dec 22 04:48:40.504: INFO: Got endpoints: latency-svc-lbthf [295.639426ms]
  Dec 22 04:48:40.505: INFO: Created: latency-svc-5jqt5
  Dec 22 04:48:40.514: INFO: Got endpoints: latency-svc-5jqt5 [259.821508ms]
  Dec 22 04:48:40.520: INFO: Created: latency-svc-wk7nm
  Dec 22 04:48:40.532: INFO: Got endpoints: latency-svc-wk7nm [263.162158ms]
  Dec 22 04:48:40.541: INFO: Created: latency-svc-bbzcs
  Dec 22 04:48:40.553: INFO: Got endpoints: latency-svc-bbzcs [261.09244ms]
  Dec 22 04:48:40.559: INFO: Created: latency-svc-cbkb9
  Dec 22 04:48:40.570: INFO: Got endpoints: latency-svc-cbkb9 [268.553003ms]
  Dec 22 04:48:40.577: INFO: Created: latency-svc-hs4rs
  Dec 22 04:48:40.587: INFO: Got endpoints: latency-svc-hs4rs [260.358113ms]
  Dec 22 04:48:40.592: INFO: Created: latency-svc-vsst9
  Dec 22 04:48:40.603: INFO: Got endpoints: latency-svc-vsst9 [262.076977ms]
  Dec 22 04:48:40.605: INFO: Created: latency-svc-p7xcd
  Dec 22 04:48:40.616: INFO: Created: latency-svc-628nl
  Dec 22 04:48:40.620: INFO: Got endpoints: latency-svc-p7xcd [256.075346ms]
  Dec 22 04:48:40.628: INFO: Got endpoints: latency-svc-628nl [235.892393ms]
  Dec 22 04:48:40.639: INFO: Created: latency-svc-6xmvz
  Dec 22 04:48:40.652: INFO: Got endpoints: latency-svc-6xmvz [238.796828ms]
  Dec 22 04:48:40.777: INFO: Created: latency-svc-2dnw9
  Dec 22 04:48:40.777: INFO: Created: latency-svc-4jxft
  Dec 22 04:48:40.782: INFO: Created: latency-svc-bkjvk
  Dec 22 04:48:40.783: INFO: Created: latency-svc-5gznq
  Dec 22 04:48:40.784: INFO: Created: latency-svc-nmbm6
  Dec 22 04:48:40.785: INFO: Created: latency-svc-rlkfh
  Dec 22 04:48:40.789: INFO: Created: latency-svc-2vfv2
  Dec 22 04:48:40.789: INFO: Created: latency-svc-fjk2m
  Dec 22 04:48:40.792: INFO: Created: latency-svc-fb9md
  Dec 22 04:48:40.792: INFO: Created: latency-svc-xrdt8
  Dec 22 04:48:40.794: INFO: Created: latency-svc-xwm59
  Dec 22 04:48:40.796: INFO: Created: latency-svc-9dxs9
  Dec 22 04:48:40.799: INFO: Created: latency-svc-rtck6
  Dec 22 04:48:40.799: INFO: Created: latency-svc-7sp2x
  Dec 22 04:48:40.800: INFO: Created: latency-svc-hq5m6
  Dec 22 04:48:40.821: INFO: Got endpoints: latency-svc-2dnw9 [193.189586ms]
  Dec 22 04:48:40.835: INFO: Got endpoints: latency-svc-rlkfh [410.346229ms]
  Dec 22 04:48:40.835: INFO: Got endpoints: latency-svc-2vfv2 [394.528943ms]
  Dec 22 04:48:40.837: INFO: Got endpoints: latency-svc-5gznq [216.781539ms]
  Dec 22 04:48:40.837: INFO: Got endpoints: latency-svc-nmbm6 [184.854695ms]
  Dec 22 04:48:40.851: INFO: Got endpoints: latency-svc-fjk2m [395.677953ms]
  Dec 22 04:48:40.860: INFO: Got endpoints: latency-svc-xrdt8 [389.881263ms]
  Dec 22 04:48:40.860: INFO: Got endpoints: latency-svc-fb9md [370.061303ms]
  Dec 22 04:48:40.875: INFO: Got endpoints: latency-svc-xwm59 [370.89825ms]
  Dec 22 04:48:40.875: INFO: Got endpoints: latency-svc-9dxs9 [361.113136ms]
  Dec 22 04:48:40.878: INFO: Got endpoints: latency-svc-rtck6 [345.630324ms]
  Dec 22 04:48:40.882: INFO: Got endpoints: latency-svc-7sp2x [328.954261ms]
  Dec 22 04:48:40.893: INFO: Created: latency-svc-4l7w8
  E1222 04:48:40.895215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:40.897: INFO: Got endpoints: latency-svc-hq5m6 [326.353048ms]
  Dec 22 04:48:40.901: INFO: Got endpoints: latency-svc-4jxft [314.566217ms]
  Dec 22 04:48:40.908: INFO: Got endpoints: latency-svc-bkjvk [304.073317ms]
  Dec 22 04:48:40.911: INFO: Got endpoints: latency-svc-4l7w8 [89.902591ms]
  Dec 22 04:48:40.915: INFO: Created: latency-svc-g9d58
  Dec 22 04:48:40.923: INFO: Got endpoints: latency-svc-g9d58 [88.446119ms]
  Dec 22 04:48:40.926: INFO: Created: latency-svc-8ddwp
  Dec 22 04:48:40.936: INFO: Got endpoints: latency-svc-8ddwp [100.380701ms]
  Dec 22 04:48:40.938: INFO: Created: latency-svc-sdrsz
  Dec 22 04:48:40.947: INFO: Got endpoints: latency-svc-sdrsz [110.388937ms]
  Dec 22 04:48:40.952: INFO: Created: latency-svc-twqs4
  Dec 22 04:48:40.961: INFO: Got endpoints: latency-svc-twqs4 [123.63818ms]
  Dec 22 04:48:40.967: INFO: Created: latency-svc-q57l4
  Dec 22 04:48:40.975: INFO: Created: latency-svc-crcgw
  Dec 22 04:48:40.982: INFO: Created: latency-svc-9cmbr
  Dec 22 04:48:40.988: INFO: Created: latency-svc-q6wj8
  Dec 22 04:48:40.998: INFO: Created: latency-svc-lgqng
  Dec 22 04:48:41.007: INFO: Got endpoints: latency-svc-q57l4 [155.503004ms]
  Dec 22 04:48:41.008: INFO: Created: latency-svc-6ggj9
  Dec 22 04:48:41.016: INFO: Created: latency-svc-jkqmv
  Dec 22 04:48:41.022: INFO: Created: latency-svc-w8hxj
  Dec 22 04:48:41.033: INFO: Created: latency-svc-gv9q8
  Dec 22 04:48:41.042: INFO: Created: latency-svc-n2hrq
  Dec 22 04:48:41.050: INFO: Created: latency-svc-66f42
  Dec 22 04:48:41.056: INFO: Got endpoints: latency-svc-crcgw [195.377466ms]
  Dec 22 04:48:41.060: INFO: Created: latency-svc-9mt6l
  Dec 22 04:48:41.068: INFO: Created: latency-svc-2fzsr
  Dec 22 04:48:41.077: INFO: Created: latency-svc-57llk
  Dec 22 04:48:41.085: INFO: Created: latency-svc-rx898
  Dec 22 04:48:41.092: INFO: Created: latency-svc-fwpns
  Dec 22 04:48:41.100: INFO: Created: latency-svc-jcsbs
  Dec 22 04:48:41.103: INFO: Got endpoints: latency-svc-9cmbr [242.53787ms]
  Dec 22 04:48:41.115: INFO: Created: latency-svc-bh7pb
  Dec 22 04:48:41.157: INFO: Got endpoints: latency-svc-q6wj8 [281.153101ms]
  Dec 22 04:48:41.172: INFO: Created: latency-svc-gd8td
  Dec 22 04:48:41.210: INFO: Got endpoints: latency-svc-lgqng [335.016283ms]
  Dec 22 04:48:41.227: INFO: Created: latency-svc-fx4ms
  Dec 22 04:48:41.255: INFO: Got endpoints: latency-svc-6ggj9 [376.237797ms]
  Dec 22 04:48:41.269: INFO: Created: latency-svc-k8k5s
  Dec 22 04:48:41.304: INFO: Got endpoints: latency-svc-jkqmv [421.551516ms]
  Dec 22 04:48:41.319: INFO: Created: latency-svc-c28qn
  Dec 22 04:48:41.355: INFO: Got endpoints: latency-svc-w8hxj [457.924187ms]
  Dec 22 04:48:41.374: INFO: Created: latency-svc-8krdl
  Dec 22 04:48:41.403: INFO: Got endpoints: latency-svc-gv9q8 [501.837164ms]
  Dec 22 04:48:41.416: INFO: Created: latency-svc-kgspw
  Dec 22 04:48:41.455: INFO: Got endpoints: latency-svc-n2hrq [547.413725ms]
  Dec 22 04:48:41.468: INFO: Created: latency-svc-kjbxf
  Dec 22 04:48:41.502: INFO: Got endpoints: latency-svc-66f42 [590.685425ms]
  Dec 22 04:48:41.515: INFO: Created: latency-svc-bd9gr
  Dec 22 04:48:41.552: INFO: Got endpoints: latency-svc-9mt6l [628.667092ms]
  Dec 22 04:48:41.565: INFO: Created: latency-svc-h2vbc
  Dec 22 04:48:41.602: INFO: Got endpoints: latency-svc-2fzsr [666.381885ms]
  Dec 22 04:48:41.614: INFO: Created: latency-svc-rqfgg
  Dec 22 04:48:41.653: INFO: Got endpoints: latency-svc-57llk [705.649562ms]
  Dec 22 04:48:41.667: INFO: Created: latency-svc-kq6j9
  Dec 22 04:48:41.703: INFO: Got endpoints: latency-svc-rx898 [742.254195ms]
  Dec 22 04:48:41.715: INFO: Created: latency-svc-87hr2
  Dec 22 04:48:41.756: INFO: Got endpoints: latency-svc-fwpns [748.380338ms]
  Dec 22 04:48:41.766: INFO: Created: latency-svc-bqqrh
  Dec 22 04:48:41.803: INFO: Got endpoints: latency-svc-jcsbs [747.607401ms]
  Dec 22 04:48:41.815: INFO: Created: latency-svc-v58lc
  Dec 22 04:48:41.853: INFO: Got endpoints: latency-svc-bh7pb [749.920961ms]
  Dec 22 04:48:41.864: INFO: Created: latency-svc-vw8p4
  E1222 04:48:41.895892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:41.903: INFO: Got endpoints: latency-svc-gd8td [745.663785ms]
  Dec 22 04:48:41.915: INFO: Created: latency-svc-7wn6l
  Dec 22 04:48:41.957: INFO: Got endpoints: latency-svc-fx4ms [746.606812ms]
  Dec 22 04:48:41.969: INFO: Created: latency-svc-69hd7
  Dec 22 04:48:42.004: INFO: Got endpoints: latency-svc-k8k5s [748.911792ms]
  Dec 22 04:48:42.021: INFO: Created: latency-svc-cwnbv
  Dec 22 04:48:42.054: INFO: Got endpoints: latency-svc-c28qn [749.659259ms]
  Dec 22 04:48:42.088: INFO: Created: latency-svc-45n2m
  Dec 22 04:48:42.102: INFO: Got endpoints: latency-svc-8krdl [747.087817ms]
  Dec 22 04:48:42.112: INFO: Created: latency-svc-8rxcp
  Dec 22 04:48:42.154: INFO: Got endpoints: latency-svc-kgspw [749.765759ms]
  Dec 22 04:48:42.165: INFO: Created: latency-svc-jfh45
  Dec 22 04:48:42.203: INFO: Got endpoints: latency-svc-kjbxf [747.724583ms]
  Dec 22 04:48:42.227: INFO: Created: latency-svc-2r79r
  Dec 22 04:48:42.253: INFO: Got endpoints: latency-svc-bd9gr [751.253722ms]
  Dec 22 04:48:42.265: INFO: Created: latency-svc-fh6qv
  Dec 22 04:48:42.305: INFO: Got endpoints: latency-svc-h2vbc [752.392813ms]
  Dec 22 04:48:42.318: INFO: Created: latency-svc-kg7f5
  Dec 22 04:48:42.353: INFO: Got endpoints: latency-svc-rqfgg [750.522456ms]
  Dec 22 04:48:42.365: INFO: Created: latency-svc-r6bgr
  Dec 22 04:48:42.401: INFO: Got endpoints: latency-svc-kq6j9 [747.853034ms]
  Dec 22 04:48:42.415: INFO: Created: latency-svc-kz2s9
  Dec 22 04:48:42.454: INFO: Got endpoints: latency-svc-87hr2 [750.102393ms]
  Dec 22 04:48:42.465: INFO: Created: latency-svc-9dtvf
  Dec 22 04:48:42.501: INFO: Got endpoints: latency-svc-bqqrh [745.565914ms]
  Dec 22 04:48:42.512: INFO: Created: latency-svc-699zn
  Dec 22 04:48:42.555: INFO: Got endpoints: latency-svc-v58lc [751.105502ms]
  Dec 22 04:48:42.565: INFO: Created: latency-svc-mx2sf
  Dec 22 04:48:42.603: INFO: Got endpoints: latency-svc-vw8p4 [750.136324ms]
  Dec 22 04:48:42.616: INFO: Created: latency-svc-lw7vr
  Dec 22 04:48:42.653: INFO: Got endpoints: latency-svc-7wn6l [749.634999ms]
  Dec 22 04:48:42.670: INFO: Created: latency-svc-cpbbn
  Dec 22 04:48:42.704: INFO: Got endpoints: latency-svc-69hd7 [746.743145ms]
  Dec 22 04:48:42.720: INFO: Created: latency-svc-q9hxw
  Dec 22 04:48:42.751: INFO: Got endpoints: latency-svc-cwnbv [747.38167ms]
  Dec 22 04:48:42.766: INFO: Created: latency-svc-vdx89
  Dec 22 04:48:42.804: INFO: Got endpoints: latency-svc-45n2m [749.516938ms]
  Dec 22 04:48:42.815: INFO: Created: latency-svc-56rvx
  Dec 22 04:48:42.854: INFO: Got endpoints: latency-svc-8rxcp [751.605566ms]
  Dec 22 04:48:42.865: INFO: Created: latency-svc-f9h5n
  E1222 04:48:42.896984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:42.904: INFO: Got endpoints: latency-svc-jfh45 [749.69946ms]
  Dec 22 04:48:42.916: INFO: Created: latency-svc-2jjfh
  Dec 22 04:48:42.953: INFO: Got endpoints: latency-svc-2r79r [749.520228ms]
  Dec 22 04:48:42.964: INFO: Created: latency-svc-hspg2
  Dec 22 04:48:43.003: INFO: Got endpoints: latency-svc-fh6qv [749.899711ms]
  Dec 22 04:48:43.018: INFO: Created: latency-svc-s5cww
  Dec 22 04:48:43.054: INFO: Got endpoints: latency-svc-kg7f5 [749.029634ms]
  Dec 22 04:48:43.065: INFO: Created: latency-svc-qrg8z
  Dec 22 04:48:43.101: INFO: Got endpoints: latency-svc-r6bgr [747.729513ms]
  Dec 22 04:48:43.115: INFO: Created: latency-svc-gvq2k
  Dec 22 04:48:43.152: INFO: Got endpoints: latency-svc-kz2s9 [750.235464ms]
  Dec 22 04:48:43.165: INFO: Created: latency-svc-ch2c8
  Dec 22 04:48:43.205: INFO: Got endpoints: latency-svc-9dtvf [750.610207ms]
  Dec 22 04:48:43.225: INFO: Created: latency-svc-5pqnk
  Dec 22 04:48:43.253: INFO: Got endpoints: latency-svc-699zn [751.580165ms]
  Dec 22 04:48:43.264: INFO: Created: latency-svc-rxgj2
  Dec 22 04:48:43.303: INFO: Got endpoints: latency-svc-mx2sf [748.6489ms]
  Dec 22 04:48:43.315: INFO: Created: latency-svc-xmn9j
  Dec 22 04:48:43.352: INFO: Got endpoints: latency-svc-lw7vr [748.334277ms]
  Dec 22 04:48:43.368: INFO: Created: latency-svc-ngf2j
  Dec 22 04:48:43.400: INFO: Got endpoints: latency-svc-cpbbn [747.719182ms]
  Dec 22 04:48:43.412: INFO: Created: latency-svc-c76bd
  Dec 22 04:48:43.452: INFO: Got endpoints: latency-svc-q9hxw [747.836683ms]
  Dec 22 04:48:43.463: INFO: Created: latency-svc-46gvm
  Dec 22 04:48:43.504: INFO: Got endpoints: latency-svc-vdx89 [751.963899ms]
  Dec 22 04:48:43.516: INFO: Created: latency-svc-6jbxn
  Dec 22 04:48:43.553: INFO: Got endpoints: latency-svc-56rvx [749.232205ms]
  Dec 22 04:48:43.563: INFO: Created: latency-svc-vtmzc
  Dec 22 04:48:43.602: INFO: Got endpoints: latency-svc-f9h5n [747.724382ms]
  Dec 22 04:48:43.617: INFO: Created: latency-svc-wpzvt
  Dec 22 04:48:43.651: INFO: Got endpoints: latency-svc-2jjfh [747.194767ms]
  Dec 22 04:48:43.662: INFO: Created: latency-svc-wfvct
  Dec 22 04:48:43.702: INFO: Got endpoints: latency-svc-hspg2 [749.256135ms]
  Dec 22 04:48:43.715: INFO: Created: latency-svc-2qtxs
  Dec 22 04:48:43.757: INFO: Got endpoints: latency-svc-s5cww [753.203089ms]
  Dec 22 04:48:43.770: INFO: Created: latency-svc-hct4w
  Dec 22 04:48:43.802: INFO: Got endpoints: latency-svc-qrg8z [747.801352ms]
  Dec 22 04:48:43.812: INFO: Created: latency-svc-dnm84
  Dec 22 04:48:43.853: INFO: Got endpoints: latency-svc-gvq2k [752.259241ms]
  Dec 22 04:48:43.864: INFO: Created: latency-svc-hbcjz
  E1222 04:48:43.898023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:43.903: INFO: Got endpoints: latency-svc-ch2c8 [751.397834ms]
  Dec 22 04:48:43.917: INFO: Created: latency-svc-4xjnv
  Dec 22 04:48:43.951: INFO: Got endpoints: latency-svc-5pqnk [746.709384ms]
  Dec 22 04:48:43.962: INFO: Created: latency-svc-w74tx
  Dec 22 04:48:44.002: INFO: Got endpoints: latency-svc-rxgj2 [749.251465ms]
  Dec 22 04:48:44.020: INFO: Created: latency-svc-kxcl4
  Dec 22 04:48:44.053: INFO: Got endpoints: latency-svc-xmn9j [749.655679ms]
  Dec 22 04:48:44.066: INFO: Created: latency-svc-cz8f6
  Dec 22 04:48:44.109: INFO: Got endpoints: latency-svc-ngf2j [757.062102ms]
  Dec 22 04:48:44.124: INFO: Created: latency-svc-2vxpm
  Dec 22 04:48:44.157: INFO: Got endpoints: latency-svc-c76bd [756.171334ms]
  Dec 22 04:48:44.170: INFO: Created: latency-svc-p5j95
  Dec 22 04:48:44.204: INFO: Got endpoints: latency-svc-46gvm [752.095979ms]
  Dec 22 04:48:44.221: INFO: Created: latency-svc-bm2xb
  Dec 22 04:48:44.251: INFO: Got endpoints: latency-svc-6jbxn [747.819233ms]
  Dec 22 04:48:44.266: INFO: Created: latency-svc-t9tct
  Dec 22 04:48:44.306: INFO: Got endpoints: latency-svc-vtmzc [753.024837ms]
  Dec 22 04:48:44.320: INFO: Created: latency-svc-v4t8w
  Dec 22 04:48:44.356: INFO: Got endpoints: latency-svc-wpzvt [753.808575ms]
  Dec 22 04:48:44.370: INFO: Created: latency-svc-ftzbt
  Dec 22 04:48:44.407: INFO: Got endpoints: latency-svc-wfvct [756.405316ms]
  Dec 22 04:48:44.422: INFO: Created: latency-svc-9vtw2
  Dec 22 04:48:44.456: INFO: Got endpoints: latency-svc-2qtxs [753.888925ms]
  Dec 22 04:48:44.468: INFO: Created: latency-svc-rlsr7
  Dec 22 04:48:44.501: INFO: Got endpoints: latency-svc-hct4w [744.278343ms]
  Dec 22 04:48:44.515: INFO: Created: latency-svc-fdgdn
  Dec 22 04:48:44.553: INFO: Got endpoints: latency-svc-dnm84 [750.713618ms]
  Dec 22 04:48:44.565: INFO: Created: latency-svc-t2h9d
  Dec 22 04:48:44.603: INFO: Got endpoints: latency-svc-hbcjz [749.67092ms]
  Dec 22 04:48:44.616: INFO: Created: latency-svc-4tjf8
  Dec 22 04:48:44.655: INFO: Got endpoints: latency-svc-4xjnv [751.876778ms]
  Dec 22 04:48:44.667: INFO: Created: latency-svc-m7x6p
  Dec 22 04:48:44.703: INFO: Got endpoints: latency-svc-w74tx [751.772997ms]
  Dec 22 04:48:44.721: INFO: Created: latency-svc-k6hw2
  Dec 22 04:48:44.753: INFO: Got endpoints: latency-svc-kxcl4 [750.220444ms]
  Dec 22 04:48:44.764: INFO: Created: latency-svc-g8qcz
  Dec 22 04:48:44.803: INFO: Got endpoints: latency-svc-cz8f6 [749.370297ms]
  Dec 22 04:48:44.812: INFO: Created: latency-svc-xxtqp
  Dec 22 04:48:44.852: INFO: Got endpoints: latency-svc-2vxpm [742.929632ms]
  Dec 22 04:48:44.862: INFO: Created: latency-svc-csqzv
  E1222 04:48:44.898134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:44.905: INFO: Got endpoints: latency-svc-p5j95 [747.978095ms]
  Dec 22 04:48:44.915: INFO: Created: latency-svc-szzm8
  Dec 22 04:48:44.952: INFO: Got endpoints: latency-svc-bm2xb [747.822203ms]
  Dec 22 04:48:44.964: INFO: Created: latency-svc-jhs8f
  Dec 22 04:48:45.002: INFO: Got endpoints: latency-svc-t9tct [750.90338ms]
  Dec 22 04:48:45.016: INFO: Created: latency-svc-hvfzd
  Dec 22 04:48:45.053: INFO: Got endpoints: latency-svc-v4t8w [747.095607ms]
  Dec 22 04:48:45.066: INFO: Created: latency-svc-fgpr4
  Dec 22 04:48:45.102: INFO: Got endpoints: latency-svc-ftzbt [746.561423ms]
  Dec 22 04:48:45.116: INFO: Created: latency-svc-xg8mb
  Dec 22 04:48:45.159: INFO: Got endpoints: latency-svc-9vtw2 [751.375614ms]
  Dec 22 04:48:45.182: INFO: Created: latency-svc-mhtqq
  Dec 22 04:48:45.204: INFO: Got endpoints: latency-svc-rlsr7 [747.41328ms]
  Dec 22 04:48:45.220: INFO: Created: latency-svc-wpnlq
  Dec 22 04:48:45.251: INFO: Got endpoints: latency-svc-fdgdn [749.945952ms]
  Dec 22 04:48:45.261: INFO: Created: latency-svc-2hhhp
  Dec 22 04:48:45.303: INFO: Got endpoints: latency-svc-t2h9d [749.78406ms]
  Dec 22 04:48:45.314: INFO: Created: latency-svc-sldxb
  Dec 22 04:48:45.353: INFO: Got endpoints: latency-svc-4tjf8 [750.177893ms]
  Dec 22 04:48:45.365: INFO: Created: latency-svc-hvdvp
  Dec 22 04:48:45.404: INFO: Got endpoints: latency-svc-m7x6p [748.710991ms]
  Dec 22 04:48:45.415: INFO: Created: latency-svc-wcb9d
  Dec 22 04:48:45.453: INFO: Got endpoints: latency-svc-k6hw2 [748.938332ms]
  Dec 22 04:48:45.467: INFO: Created: latency-svc-6vc65
  Dec 22 04:48:45.505: INFO: Got endpoints: latency-svc-g8qcz [752.309921ms]
  Dec 22 04:48:45.516: INFO: Created: latency-svc-zkw76
  Dec 22 04:48:45.553: INFO: Got endpoints: latency-svc-xxtqp [749.603678ms]
  Dec 22 04:48:45.566: INFO: Created: latency-svc-m4rrt
  Dec 22 04:48:45.604: INFO: Got endpoints: latency-svc-csqzv [751.266633ms]
  Dec 22 04:48:45.616: INFO: Created: latency-svc-m9j7r
  Dec 22 04:48:45.652: INFO: Got endpoints: latency-svc-szzm8 [746.944756ms]
  Dec 22 04:48:45.664: INFO: Created: latency-svc-kw9qx
  Dec 22 04:48:45.703: INFO: Got endpoints: latency-svc-jhs8f [750.746599ms]
  Dec 22 04:48:45.720: INFO: Created: latency-svc-tb4qs
  Dec 22 04:48:45.753: INFO: Got endpoints: latency-svc-hvfzd [750.055823ms]
  Dec 22 04:48:45.765: INFO: Created: latency-svc-wb9rd
  Dec 22 04:48:45.803: INFO: Got endpoints: latency-svc-fgpr4 [749.298186ms]
  Dec 22 04:48:45.817: INFO: Created: latency-svc-2bfw7
  Dec 22 04:48:45.853: INFO: Got endpoints: latency-svc-xg8mb [750.95573ms]
  Dec 22 04:48:45.893: INFO: Created: latency-svc-sp8ft
  E1222 04:48:45.898772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:45.915: INFO: Got endpoints: latency-svc-mhtqq [756.094804ms]
  Dec 22 04:48:45.938: INFO: Created: latency-svc-nwfnl
  Dec 22 04:48:45.970: INFO: Got endpoints: latency-svc-wpnlq [766.420993ms]
  Dec 22 04:48:45.990: INFO: Created: latency-svc-rlf8v
  Dec 22 04:48:46.012: INFO: Got endpoints: latency-svc-2hhhp [760.216219ms]
  Dec 22 04:48:46.028: INFO: Created: latency-svc-k85xj
  Dec 22 04:48:46.068: INFO: Got endpoints: latency-svc-sldxb [765.441655ms]
  Dec 22 04:48:46.086: INFO: Created: latency-svc-r4ss5
  Dec 22 04:48:46.115: INFO: Got endpoints: latency-svc-hvdvp [761.935325ms]
  Dec 22 04:48:46.131: INFO: Created: latency-svc-pbgl5
  Dec 22 04:48:46.153: INFO: Got endpoints: latency-svc-wcb9d [748.874862ms]
  Dec 22 04:48:46.180: INFO: Created: latency-svc-9kz5w
  Dec 22 04:48:46.203: INFO: Got endpoints: latency-svc-6vc65 [750.429715ms]
  Dec 22 04:48:46.224: INFO: Created: latency-svc-6zdfg
  Dec 22 04:48:46.251: INFO: Got endpoints: latency-svc-zkw76 [745.624444ms]
  Dec 22 04:48:46.267: INFO: Created: latency-svc-p97x5
  Dec 22 04:48:46.303: INFO: Got endpoints: latency-svc-m4rrt [750.055193ms]
  Dec 22 04:48:46.315: INFO: Created: latency-svc-s6pcq
  Dec 22 04:48:46.352: INFO: Got endpoints: latency-svc-m9j7r [747.770233ms]
  Dec 22 04:48:46.366: INFO: Created: latency-svc-crkk2
  Dec 22 04:48:46.404: INFO: Got endpoints: latency-svc-kw9qx [751.815878ms]
  Dec 22 04:48:46.415: INFO: Created: latency-svc-g5kll
  Dec 22 04:48:46.452: INFO: Got endpoints: latency-svc-tb4qs [748.502719ms]
  Dec 22 04:48:46.466: INFO: Created: latency-svc-qrkcx
  Dec 22 04:48:46.505: INFO: Got endpoints: latency-svc-wb9rd [751.777237ms]
  Dec 22 04:48:46.517: INFO: Created: latency-svc-fxmms
  Dec 22 04:48:46.553: INFO: Got endpoints: latency-svc-2bfw7 [750.068082ms]
  Dec 22 04:48:46.567: INFO: Created: latency-svc-ps6sb
  Dec 22 04:48:46.602: INFO: Got endpoints: latency-svc-sp8ft [748.375118ms]
  Dec 22 04:48:46.612: INFO: Created: latency-svc-z6c7l
  Dec 22 04:48:46.653: INFO: Got endpoints: latency-svc-nwfnl [738.01026ms]
  Dec 22 04:48:46.665: INFO: Created: latency-svc-d65sp
  Dec 22 04:48:46.703: INFO: Got endpoints: latency-svc-rlf8v [732.083968ms]
  Dec 22 04:48:46.714: INFO: Created: latency-svc-vrrsw
  Dec 22 04:48:46.752: INFO: Got endpoints: latency-svc-k85xj [739.721644ms]
  Dec 22 04:48:46.763: INFO: Created: latency-svc-zfrzm
  Dec 22 04:48:46.802: INFO: Got endpoints: latency-svc-r4ss5 [733.905554ms]
  Dec 22 04:48:46.815: INFO: Created: latency-svc-fbhwc
  Dec 22 04:48:46.852: INFO: Got endpoints: latency-svc-pbgl5 [736.466826ms]
  Dec 22 04:48:46.863: INFO: Created: latency-svc-zkzxh
  E1222 04:48:46.899862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:46.908: INFO: Got endpoints: latency-svc-9kz5w [754.812443ms]
  Dec 22 04:48:46.920: INFO: Created: latency-svc-fl5mx
  Dec 22 04:48:46.951: INFO: Got endpoints: latency-svc-6zdfg [747.606361ms]
  Dec 22 04:48:46.965: INFO: Created: latency-svc-ftnbk
  Dec 22 04:48:47.004: INFO: Got endpoints: latency-svc-p97x5 [752.520424ms]
  Dec 22 04:48:47.014: INFO: Created: latency-svc-dzpkk
  Dec 22 04:48:47.054: INFO: Got endpoints: latency-svc-s6pcq [751.369794ms]
  Dec 22 04:48:47.065: INFO: Created: latency-svc-69snh
  Dec 22 04:48:47.103: INFO: Got endpoints: latency-svc-crkk2 [750.799799ms]
  Dec 22 04:48:47.114: INFO: Created: latency-svc-w56g8
  Dec 22 04:48:47.152: INFO: Got endpoints: latency-svc-g5kll [747.613322ms]
  Dec 22 04:48:47.163: INFO: Created: latency-svc-mkzk2
  Dec 22 04:48:47.205: INFO: Got endpoints: latency-svc-qrkcx [752.742505ms]
  Dec 22 04:48:47.227: INFO: Created: latency-svc-57drp
  Dec 22 04:48:47.252: INFO: Got endpoints: latency-svc-fxmms [746.615603ms]
  Dec 22 04:48:47.261: INFO: Created: latency-svc-zsw9n
  Dec 22 04:48:47.304: INFO: Got endpoints: latency-svc-ps6sb [750.390496ms]
  Dec 22 04:48:47.317: INFO: Created: latency-svc-j49hw
  Dec 22 04:48:47.353: INFO: Got endpoints: latency-svc-z6c7l [751.178923ms]
  Dec 22 04:48:47.365: INFO: Created: latency-svc-sxff5
  Dec 22 04:48:47.404: INFO: Got endpoints: latency-svc-d65sp [750.87875ms]
  Dec 22 04:48:47.419: INFO: Created: latency-svc-tsj8v
  Dec 22 04:48:47.463: INFO: Got endpoints: latency-svc-vrrsw [760.244ms]
  Dec 22 04:48:47.474: INFO: Created: latency-svc-7zmr6
  Dec 22 04:48:47.504: INFO: Got endpoints: latency-svc-zfrzm [752.619805ms]
  Dec 22 04:48:47.518: INFO: Created: latency-svc-57ddm
  Dec 22 04:48:47.557: INFO: Got endpoints: latency-svc-fbhwc [754.344209ms]
  Dec 22 04:48:47.763: INFO: Created: latency-svc-p8ms4
  Dec 22 04:48:47.764: INFO: Got endpoints: latency-svc-zkzxh [912.244334ms]
  Dec 22 04:48:47.771: INFO: Got endpoints: latency-svc-dzpkk [767.11301ms]
  Dec 22 04:48:47.771: INFO: Got endpoints: latency-svc-fl5mx [862.660478ms]
  Dec 22 04:48:47.771: INFO: Got endpoints: latency-svc-ftnbk [820.183344ms]
  Dec 22 04:48:47.784: INFO: Created: latency-svc-kxvc7
  Dec 22 04:48:47.795: INFO: Created: latency-svc-2nlqb
  Dec 22 04:48:47.803: INFO: Created: latency-svc-c5fsh
  Dec 22 04:48:47.806: INFO: Got endpoints: latency-svc-69snh [751.291533ms]
  Dec 22 04:48:47.816: INFO: Created: latency-svc-l85hf
  Dec 22 04:48:47.822: INFO: Created: latency-svc-z2jv2
  Dec 22 04:48:47.852: INFO: Got endpoints: latency-svc-w56g8 [749.348127ms]
  Dec 22 04:48:47.868: INFO: Created: latency-svc-7tzrs
  E1222 04:48:47.900776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:47.902: INFO: Got endpoints: latency-svc-mkzk2 [750.232075ms]
  Dec 22 04:48:47.919: INFO: Created: latency-svc-d6zpj
  Dec 22 04:48:47.954: INFO: Got endpoints: latency-svc-57drp [749.60516ms]
  Dec 22 04:48:47.966: INFO: Created: latency-svc-26bz4
  Dec 22 04:48:48.003: INFO: Got endpoints: latency-svc-zsw9n [751.650218ms]
  Dec 22 04:48:48.019: INFO: Created: latency-svc-2xr95
  Dec 22 04:48:48.053: INFO: Got endpoints: latency-svc-j49hw [749.170016ms]
  Dec 22 04:48:48.102: INFO: Got endpoints: latency-svc-sxff5 [749.167506ms]
  Dec 22 04:48:48.155: INFO: Got endpoints: latency-svc-tsj8v [750.316906ms]
  Dec 22 04:48:48.202: INFO: Got endpoints: latency-svc-7zmr6 [739.103859ms]
  Dec 22 04:48:48.256: INFO: Got endpoints: latency-svc-57ddm [751.249904ms]
  Dec 22 04:48:48.302: INFO: Got endpoints: latency-svc-p8ms4 [744.754988ms]
  Dec 22 04:48:48.351: INFO: Got endpoints: latency-svc-kxvc7 [586.566231ms]
  Dec 22 04:48:48.405: INFO: Got endpoints: latency-svc-2nlqb [634.143969ms]
  Dec 22 04:48:48.452: INFO: Got endpoints: latency-svc-c5fsh [680.424286ms]
  Dec 22 04:48:48.503: INFO: Got endpoints: latency-svc-l85hf [731.455843ms]
  Dec 22 04:48:48.554: INFO: Got endpoints: latency-svc-z2jv2 [748.380037ms]
  Dec 22 04:48:48.604: INFO: Got endpoints: latency-svc-7tzrs [751.232332ms]
  Dec 22 04:48:48.653: INFO: Got endpoints: latency-svc-d6zpj [750.896958ms]
  Dec 22 04:48:48.704: INFO: Got endpoints: latency-svc-26bz4 [749.367625ms]
  Dec 22 04:48:48.753: INFO: Got endpoints: latency-svc-2xr95 [749.262734ms]
  Dec 22 04:48:48.753: INFO: Latencies: [47.254125ms 62.249524ms 84.930379ms 88.446119ms 89.902591ms 94.43909ms 100.380701ms 110.388937ms 118.85286ms 123.63818ms 133.486295ms 155.503004ms 155.872958ms 183.984258ms 184.854695ms 193.189586ms 195.377466ms 205.14512ms 216.162765ms 216.781539ms 231.626777ms 235.892393ms 238.796828ms 242.53787ms 246.660486ms 256.075346ms 259.821508ms 260.358113ms 261.09244ms 261.184411ms 262.076977ms 263.162158ms 268.553003ms 280.878109ms 281.153101ms 295.639426ms 304.073317ms 314.566217ms 326.353048ms 328.954261ms 335.016283ms 345.630324ms 361.113136ms 370.061303ms 370.89825ms 376.237797ms 389.881263ms 394.528943ms 395.677953ms 410.346229ms 421.551516ms 457.924187ms 501.837164ms 547.413725ms 586.566231ms 590.685425ms 628.667092ms 634.143969ms 666.381885ms 680.424286ms 705.649562ms 731.455843ms 732.083968ms 733.905554ms 736.466826ms 738.01026ms 739.103859ms 739.721644ms 742.254195ms 742.929632ms 744.278343ms 744.754988ms 745.565914ms 745.624444ms 745.663785ms 746.561423ms 746.606812ms 746.615603ms 746.709384ms 746.743145ms 746.944756ms 747.087817ms 747.095607ms 747.194767ms 747.38167ms 747.41328ms 747.606361ms 747.607401ms 747.613322ms 747.719182ms 747.724382ms 747.724583ms 747.729513ms 747.770233ms 747.801352ms 747.819233ms 747.822203ms 747.836683ms 747.853034ms 747.978095ms 748.334277ms 748.375118ms 748.380037ms 748.380338ms 748.502719ms 748.6489ms 748.710991ms 748.874862ms 748.911792ms 748.938332ms 749.029634ms 749.167506ms 749.170016ms 749.232205ms 749.251465ms 749.256135ms 749.262734ms 749.298186ms 749.348127ms 749.367625ms 749.370297ms 749.516938ms 749.520228ms 749.603678ms 749.60516ms 749.634999ms 749.655679ms 749.659259ms 749.67092ms 749.69946ms 749.765759ms 749.78406ms 749.899711ms 749.920961ms 749.945952ms 750.055193ms 750.055823ms 750.068082ms 750.102393ms 750.136324ms 750.177893ms 750.220444ms 750.232075ms 750.235464ms 750.316906ms 750.390496ms 750.429715ms 750.522456ms 750.610207ms 750.713618ms 750.746599ms 750.799799ms 750.87875ms 750.896958ms 750.90338ms 750.95573ms 751.105502ms 751.178923ms 751.232332ms 751.249904ms 751.253722ms 751.266633ms 751.291533ms 751.369794ms 751.375614ms 751.397834ms 751.580165ms 751.605566ms 751.650218ms 751.772997ms 751.777237ms 751.815878ms 751.876778ms 751.963899ms 752.095979ms 752.259241ms 752.309921ms 752.392813ms 752.520424ms 752.619805ms 752.742505ms 753.024837ms 753.203089ms 753.808575ms 753.888925ms 754.344209ms 754.812443ms 756.094804ms 756.171334ms 756.405316ms 757.062102ms 760.216219ms 760.244ms 761.935325ms 765.441655ms 766.420993ms 767.11301ms 820.183344ms 862.660478ms 912.244334ms]
  Dec 22 04:48:48.753: INFO: 50 %ile: 748.334277ms
  Dec 22 04:48:48.753: INFO: 90 %ile: 752.742505ms
  Dec 22 04:48:48.753: INFO: 99 %ile: 862.660478ms
  Dec 22 04:48:48.753: INFO: Total sample count: 200
  Dec 22 04:48:48.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-521" for this suite. @ 12/22/23 04:48:48.76
• [10.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 12/22/23 04:48:48.767
  Dec 22 04:48:48.767: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 04:48:48.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:48.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:48.795
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/22/23 04:48:48.8
  E1222 04:48:48.901549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:49.902526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 12/22/23 04:48:50.83
  STEP: Then the orphan pod is adopted @ 12/22/23 04:48:50.838
  E1222 04:48:50.902591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 12/22/23 04:48:51.847
  Dec 22 04:48:51.851: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/22/23 04:48:51.863
  E1222 04:48:51.903194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:52.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5601" for this suite. @ 12/22/23 04:48:52.883
• [4.122 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 12/22/23 04:48:52.89
  Dec 22 04:48:52.890: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 04:48:52.891
  E1222 04:48:52.904617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:52.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:52.922
  STEP: Creating Pod @ 12/22/23 04:48:52.928
  E1222 04:48:53.904921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:54.905341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:55.905457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:56.905582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 12/22/23 04:48:56.976
  Dec 22 04:48:56.976: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1961 PodName:pod-sharedvolume-6cf2ac25-74ef-40b8-b9da-74a37660a0f3 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 04:48:56.976: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 04:48:56.977: INFO: ExecWithOptions: Clientset creation
  Dec 22 04:48:56.977: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-1961/pods/pod-sharedvolume-6cf2ac25-74ef-40b8-b9da-74a37660a0f3/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Dec 22 04:48:57.063: INFO: Exec stderr: ""
  Dec 22 04:48:57.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1961" for this suite. @ 12/22/23 04:48:57.068
• [4.185 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 12/22/23 04:48:57.075
  Dec 22 04:48:57.075: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:48:57.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:57.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:57.155
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/22/23 04:48:57.159
  Dec 22 04:48:57.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-621 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Dec 22 04:48:57.273: INFO: stderr: ""
  Dec 22 04:48:57.273: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/22/23 04:48:57.273
  Dec 22 04:48:57.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-621 delete pods e2e-test-httpd-pod'
  E1222 04:48:57.906350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:48:58.906454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:48:59.635: INFO: stderr: ""
  Dec 22 04:48:59.635: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 22 04:48:59.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-621" for this suite. @ 12/22/23 04:48:59.656
• [2.589 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/22/23 04:48:59.665
  Dec 22 04:48:59.665: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename watch @ 12/22/23 04:48:59.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:59.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:59.698
  STEP: creating a new configmap @ 12/22/23 04:48:59.703
  STEP: modifying the configmap once @ 12/22/23 04:48:59.712
  STEP: modifying the configmap a second time @ 12/22/23 04:48:59.724
  STEP: deleting the configmap @ 12/22/23 04:48:59.736
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/22/23 04:48:59.743
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/22/23 04:48:59.745
  Dec 22 04:48:59.745: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3283  d6e9a855-0e06-48f7-ac26-8f4889d63a74 25037 0 2023-12-22 04:48:59 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-12-22 04:48:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:48:59.745: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3283  d6e9a855-0e06-48f7-ac26-8f4889d63a74 25039 0 2023-12-22 04:48:59 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-12-22 04:48:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 04:48:59.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3283" for this suite. @ 12/22/23 04:48:59.753
• [0.111 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 12/22/23 04:48:59.777
  Dec 22 04:48:59.777: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 04:48:59.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:48:59.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:48:59.809
  STEP: Creating service test in namespace statefulset-8982 @ 12/22/23 04:48:59.813
  STEP: Creating a new StatefulSet @ 12/22/23 04:48:59.824
  Dec 22 04:48:59.839: INFO: Found 0 stateful pods, waiting for 3
  E1222 04:48:59.906910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:00.906914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:01.907287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:02.907447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:03.908285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:04.908615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:05.908421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:06.908755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:07.908961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:08.909308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:49:09.839: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:49:09.839: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:49:09.839: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/22/23 04:49:09.851
  Dec 22 04:49:09.873: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 12/22/23 04:49:09.873
  E1222 04:49:09.910040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:10.911042      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:11.911851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:12.911958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:13.912086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:14.912773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:15.912874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:16.912997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:17.913301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:18.913407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/22/23 04:49:19.883
  STEP: Performing a canary update @ 12/22/23 04:49:19.883
  Dec 22 04:49:19.904: INFO: Updating stateful set ss2
  Dec 22 04:49:19.912: INFO: Waiting for Pod statefulset-8982/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1222 04:49:19.914307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:20.914805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:21.914818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:22.915557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:23.915773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:24.916351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:25.917302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:26.917357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:27.918404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:28.919455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/22/23 04:49:29.914
  E1222 04:49:29.920449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:49:30.034: INFO: Found 2 stateful pods, waiting for 3
  E1222 04:49:30.921260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:31.921422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:32.922459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:33.922753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:34.923204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:35.924480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:36.923940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:37.924243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:38.924526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:39.924944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:49:40.015: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:49:40.015: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 04:49:40.015: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/22/23 04:49:40.022
  Dec 22 04:49:40.042: INFO: Updating stateful set ss2
  Dec 22 04:49:40.052: INFO: Waiting for Pod statefulset-8982/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1222 04:49:40.925290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:41.926352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:42.927338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:43.927549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:44.928514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:45.928785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:46.929169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:47.929308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:48.929470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:49.930336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:49:50.071: INFO: Updating stateful set ss2
  Dec 22 04:49:50.081: INFO: Waiting for StatefulSet statefulset-8982/ss2 to complete update
  Dec 22 04:49:50.081: INFO: Waiting for Pod statefulset-8982/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1222 04:49:50.930851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:51.931106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:52.931468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:53.931860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:54.931978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:55.932467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:56.932696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:57.933572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:58.933749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:49:59.934515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:50:00.084: INFO: Deleting all statefulset in ns statefulset-8982
  Dec 22 04:50:00.087: INFO: Scaling statefulset ss2 to 0
  E1222 04:50:00.934057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:01.934152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:02.935080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:03.935602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:04.935725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:05.936088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:06.936227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:07.936550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:08.936489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:09.937228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:50:10.105: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 04:50:10.109: INFO: Deleting statefulset ss2
  Dec 22 04:50:10.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8982" for this suite. @ 12/22/23 04:50:10.142
• [70.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 12/22/23 04:50:10.151
  Dec 22 04:50:10.151: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 04:50:10.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:50:10.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:50:10.178
  STEP: Counting existing ResourceQuota @ 12/22/23 04:50:10.184
  E1222 04:50:10.937388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:11.938411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:12.938568      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:13.939035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:14.939122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/22/23 04:50:15.188
  STEP: Ensuring resource quota status is calculated @ 12/22/23 04:50:15.194
  E1222 04:50:15.940214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:16.941033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 12/22/23 04:50:17.199
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/22/23 04:50:17.217
  E1222 04:50:17.941430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:18.941606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/22/23 04:50:19.221
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/22/23 04:50:19.224
  STEP: Ensuring a pod cannot update its resource requirements @ 12/22/23 04:50:19.227
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/22/23 04:50:19.231
  E1222 04:50:19.942545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:20.942711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/22/23 04:50:21.237
  STEP: Ensuring resource quota status released the pod usage @ 12/22/23 04:50:21.254
  E1222 04:50:21.942750      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:22.943612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:50:23.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4630" for this suite. @ 12/22/23 04:50:23.266
• [13.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 12/22/23 04:50:23.274
  Dec 22 04:50:23.274: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:50:23.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:50:23.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:50:23.302
  STEP: Creating configMap with name projected-configmap-test-volume-map-d8ba1746-f785-4001-b6a3-8d887633aefb @ 12/22/23 04:50:23.307
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:50:23.313
  E1222 04:50:23.944049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:24.944557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:25.945315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:26.945558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:50:27.357
  Dec 22 04:50:27.363: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-projected-configmaps-e680cdf8-e586-4df1-99ad-25b11ffa34db container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:50:27.386
  Dec 22 04:50:27.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8778" for this suite. @ 12/22/23 04:50:27.418
• [4.159 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 12/22/23 04:50:27.434
  Dec 22 04:50:27.434: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/22/23 04:50:27.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:50:27.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:50:27.48
  STEP: create the container to handle the HTTPGet hook request. @ 12/22/23 04:50:27.49
  E1222 04:50:27.945632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:28.946009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/22/23 04:50:29.521
  E1222 04:50:29.946655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:30.946809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/22/23 04:50:31.542
  STEP: delete the pod with lifecycle hook @ 12/22/23 04:50:31.553
  E1222 04:50:31.947715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:32.948439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:50:33.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2232" for this suite. @ 12/22/23 04:50:33.58
• [6.152 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/22/23 04:50:33.586
  Dec 22 04:50:33.586: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename events @ 12/22/23 04:50:33.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:50:33.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:50:33.617
  STEP: Create set of events @ 12/22/23 04:50:33.624
  STEP: get a list of Events with a label in the current namespace @ 12/22/23 04:50:33.644
  STEP: delete a list of events @ 12/22/23 04:50:33.648
  Dec 22 04:50:33.648: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/22/23 04:50:33.672
  Dec 22 04:50:33.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4031" for this suite. @ 12/22/23 04:50:33.681
• [0.103 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 12/22/23 04:50:33.689
  Dec 22 04:50:33.689: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 04:50:33.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:50:33.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:50:33.714
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9993 @ 12/22/23 04:50:33.72
  STEP: changing the ExternalName service to type=ClusterIP @ 12/22/23 04:50:33.728
  STEP: creating replication controller externalname-service in namespace services-9993 @ 12/22/23 04:50:33.75
  I1222 04:50:33.760491      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9993, replica count: 2
  E1222 04:50:33.949013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:34.949373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:35.949445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1222 04:50:36.811459      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 04:50:36.811: INFO: Creating new exec pod
  E1222 04:50:36.950406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:37.950519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:38.951185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:50:39.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9993 exec execpodpbdwh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E1222 04:50:39.951794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:50:40.013: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 22 04:50:40.013: INFO: stdout: ""
  Dec 22 04:50:40.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9993 exec execpodpbdwh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E1222 04:50:40.951863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:50:41.009: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 22 04:50:41.009: INFO: stdout: "externalname-service-hs5tz"
  Dec 22 04:50:41.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9993 exec execpodpbdwh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.250.33 80'
  Dec 22 04:50:41.186: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.250.33 80\nConnection to 10.43.250.33 80 port [tcp/http] succeeded!\n"
  Dec 22 04:50:41.186: INFO: stdout: "externalname-service-hs5tz"
  Dec 22 04:50:41.186: INFO: Cleaning up the ExternalName to ClusterIP test service
  Dec 22 04:50:41.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9993" for this suite. @ 12/22/23 04:50:41.219
• [7.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 12/22/23 04:50:41.227
  Dec 22 04:50:41.227: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:50:41.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:50:41.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:50:41.246
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-ba5db9b0-d2bb-42f8-9cf4-e68f3f0f28c8 @ 12/22/23 04:50:41.253
  STEP: Creating the pod @ 12/22/23 04:50:41.264
  E1222 04:50:41.952025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:42.952277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-ba5db9b0-d2bb-42f8-9cf4-e68f3f0f28c8 @ 12/22/23 04:50:43.302
  STEP: waiting to observe update in volume @ 12/22/23 04:50:43.308
  E1222 04:50:43.952420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:44.952954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:45.953795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:46.953923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:47.954151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:48.954295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:49.954831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:50.954977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:51.955520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:52.956647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:53.957691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:54.957804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:55.958012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:56.958367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:57.958723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:58.959779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:50:59.960841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:00.960964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:01.961674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:02.961952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:03.962709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:04.963174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:05.964155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:06.964378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:07.964448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:08.965409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:09.965963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:10.966117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:11.966171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:12.967159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:13.967782      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:14.968023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:15.968481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:16.969076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:17.969810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:18.970725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:19.971875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:20.972300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:21.972906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:22.973044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:23.973340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:24.973507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:25.973651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:26.973791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:27.974347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:28.974822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:29.974822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:30.975079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:31.975987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:32.976100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:33.976199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:34.976618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:35.977399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:36.977547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:37.978081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:38.978476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:39.979178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:40.979472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:41.980515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:42.980927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:43.981667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:44.982412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:45.983296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:46.983631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:47.984058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:48.984478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:49.985010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:50.985370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:51.985745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:52.986181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:53.986722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:54.987025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:55.987295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:56.987574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:57.988545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:58.988781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:51:59.989505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:00.989152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:01.989307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:02.989303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:03.989659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:04.989815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:05.990290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:06.990608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:07.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9465" for this suite. @ 12/22/23 04:52:07.935
• [86.733 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 12/22/23 04:52:07.962
  Dec 22 04:52:07.962: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/22/23 04:52:07.963
  E1222 04:52:07.991560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:08.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:08.009
  STEP: create the container to handle the HTTPGet hook request. @ 12/22/23 04:52:08.017
  E1222 04:52:08.992147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:09.992226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/22/23 04:52:10.047
  E1222 04:52:10.992341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:11.992535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 12/22/23 04:52:12.065
  E1222 04:52:12.992798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:13.993334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 12/22/23 04:52:14.084
  Dec 22 04:52:14.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4662" for this suite. @ 12/22/23 04:52:14.096
• [6.142 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 12/22/23 04:52:14.104
  Dec 22 04:52:14.104: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 04:52:14.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:14.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:14.128
  STEP: Creating ReplicationController "e2e-rc-wvcvs" @ 12/22/23 04:52:14.132
  Dec 22 04:52:14.139: INFO: Get Replication Controller "e2e-rc-wvcvs" to confirm replicas
  E1222 04:52:14.993436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:15.139: INFO: Get Replication Controller "e2e-rc-wvcvs" to confirm replicas
  Dec 22 04:52:15.143: INFO: Found 1 replicas for "e2e-rc-wvcvs" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-wvcvs" @ 12/22/23 04:52:15.143
  STEP: Updating a scale subresource @ 12/22/23 04:52:15.147
  STEP: Verifying replicas where modified for replication controller "e2e-rc-wvcvs" @ 12/22/23 04:52:15.154
  Dec 22 04:52:15.154: INFO: Get Replication Controller "e2e-rc-wvcvs" to confirm replicas
  E1222 04:52:15.994705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:16.155: INFO: Get Replication Controller "e2e-rc-wvcvs" to confirm replicas
  Dec 22 04:52:16.160: INFO: Found 2 replicas for "e2e-rc-wvcvs" replication controller
  Dec 22 04:52:16.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9430" for this suite. @ 12/22/23 04:52:16.167
• [2.071 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 12/22/23 04:52:16.176
  Dec 22 04:52:16.176: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 04:52:16.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:16.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:16.203
  STEP: Counting existing ResourceQuota @ 12/22/23 04:52:16.208
  E1222 04:52:16.995300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:17.995470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:18.996033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:19.996214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:20.996319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/22/23 04:52:21.212
  STEP: Ensuring resource quota status is calculated @ 12/22/23 04:52:21.219
  E1222 04:52:21.997527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:22.997634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 12/22/23 04:52:23.224
  STEP: Ensuring resource quota status captures replicaset creation @ 12/22/23 04:52:23.235
  E1222 04:52:23.998201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:24.998724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 12/22/23 04:52:25.24
  STEP: Ensuring resource quota status released usage @ 12/22/23 04:52:25.246
  E1222 04:52:25.999316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:26.999594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:27.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8965" for this suite. @ 12/22/23 04:52:27.259
• [11.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 12/22/23 04:52:27.268
  Dec 22 04:52:27.268: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename limitrange @ 12/22/23 04:52:27.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:27.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:27.299
  STEP: Creating LimitRange "e2e-limitrange-bh9x7" in namespace "limitrange-261" @ 12/22/23 04:52:27.303
  STEP: Creating another limitRange in another namespace @ 12/22/23 04:52:27.309
  Dec 22 04:52:27.337: INFO: Namespace "e2e-limitrange-bh9x7-8606" created
  Dec 22 04:52:27.337: INFO: Creating LimitRange "e2e-limitrange-bh9x7" in namespace "e2e-limitrange-bh9x7-8606"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-bh9x7" @ 12/22/23 04:52:27.348
  Dec 22 04:52:27.356: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-bh9x7" in "limitrange-261" namespace @ 12/22/23 04:52:27.357
  Dec 22 04:52:27.369: INFO: LimitRange "e2e-limitrange-bh9x7" has been patched
  STEP: Delete LimitRange "e2e-limitrange-bh9x7" by Collection with labelSelector: "e2e-limitrange-bh9x7=patched" @ 12/22/23 04:52:27.369
  STEP: Confirm that the limitRange "e2e-limitrange-bh9x7" has been deleted @ 12/22/23 04:52:27.378
  Dec 22 04:52:27.378: INFO: Requesting list of LimitRange to confirm quantity
  Dec 22 04:52:27.381: INFO: Found 0 LimitRange with label "e2e-limitrange-bh9x7=patched"
  Dec 22 04:52:27.381: INFO: LimitRange "e2e-limitrange-bh9x7" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-bh9x7" @ 12/22/23 04:52:27.382
  Dec 22 04:52:27.385: INFO: Found 1 limitRange
  Dec 22 04:52:27.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-261" for this suite. @ 12/22/23 04:52:27.391
  STEP: Destroying namespace "e2e-limitrange-bh9x7-8606" for this suite. @ 12/22/23 04:52:27.397
• [0.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 12/22/23 04:52:27.407
  Dec 22 04:52:27.408: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sched-pred @ 12/22/23 04:52:27.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:27.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:27.43
  Dec 22 04:52:27.434: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 22 04:52:27.445: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 04:52:27.449: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-160.us-east-2.compute.internal before test
  Dec 22 04:52:27.456: INFO: svclb-traefik-080075b9-7dhph from kube-system started at 2023-12-22 03:39:13 +0000 UTC (2 container statuses recorded)
  Dec 22 04:52:27.457: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:52:27.457: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:52:27.457: INFO: sonobuoy-e2e-job-2ccc42035d274143 from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:52:27.457: INFO: 	Container e2e ready: true, restart count 0
  Dec 22 04:52:27.457: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:52:27.457: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-c4pmm from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:52:27.457: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:52:27.457: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:52:27.457: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-14-155.us-east-2.compute.internal before test
  Dec 22 04:52:27.464: INFO: svclb-traefik-080075b9-qh96k from kube-system started at 2023-12-22 04:32:29 +0000 UTC (2 container statuses recorded)
  Dec 22 04:52:27.464: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:52:27.464: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:52:27.464: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-7psl7 from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:52:27.464: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:52:27.464: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:52:27.464: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-2-79.us-east-2.compute.internal before test
  Dec 22 04:52:27.470: INFO: coredns-6799fbcd5-rcvbg from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:52:27.470: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 04:52:27.470: INFO: helm-install-traefik-crd-m5lfj from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:52:27.470: INFO: 	Container helm ready: false, restart count 0
  Dec 22 04:52:27.471: INFO: helm-install-traefik-prpf8 from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:52:27.471: INFO: 	Container helm ready: false, restart count 2
  Dec 22 04:52:27.471: INFO: local-path-provisioner-84db5d44d9-968kz from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:52:27.471: INFO: 	Container local-path-provisioner ready: true, restart count 0
  Dec 22 04:52:27.471: INFO: metrics-server-67c658944b-54sc2 from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 04:52:27.471: INFO: 	Container metrics-server ready: true, restart count 0
  Dec 22 04:52:27.471: INFO: svclb-traefik-080075b9-mq9px from kube-system started at 2023-12-22 03:37:45 +0000 UTC (2 container statuses recorded)
  Dec 22 04:52:27.471: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:52:27.471: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:52:27.471: INFO: traefik-f4564c4f4-hprzl from kube-system started at 2023-12-22 03:37:45 +0000 UTC (1 container statuses recorded)
  Dec 22 04:52:27.471: INFO: 	Container traefik ready: true, restart count 0
  Dec 22 04:52:27.471: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-gvv9z from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:52:27.471: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:52:27.471: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 04:52:27.471: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-254.us-east-2.compute.internal before test
  Dec 22 04:52:27.476: INFO: svclb-traefik-080075b9-jqvvw from kube-system started at 2023-12-22 03:40:47 +0000 UTC (2 container statuses recorded)
  Dec 22 04:52:27.476: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 04:52:27.477: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 04:52:27.477: INFO: sonobuoy from sonobuoy started at 2023-12-22 03:57:51 +0000 UTC (1 container statuses recorded)
  Dec 22 04:52:27.477: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 22 04:52:27.477: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-wjwxp from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 04:52:27.477: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 04:52:27.477: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/22/23 04:52:27.477
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17a30e3eed2ad9f5], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 12/22/23 04:52:27.518
  E1222 04:52:27.999746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:28.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8592" for this suite. @ 12/22/23 04:52:28.515
• [1.113 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 12/22/23 04:52:28.522
  Dec 22 04:52:28.522: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 04:52:28.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:28.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:28.551
  STEP: creating a collection of services @ 12/22/23 04:52:28.555
  Dec 22 04:52:28.555: INFO: Creating e2e-svc-a-8m4dh
  Dec 22 04:52:28.566: INFO: Creating e2e-svc-b-pmbn5
  Dec 22 04:52:28.603: INFO: Creating e2e-svc-c-27r5q
  STEP: deleting service collection @ 12/22/23 04:52:28.62
  Dec 22 04:52:28.650: INFO: Collection of services has been deleted
  Dec 22 04:52:28.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-781" for this suite. @ 12/22/23 04:52:28.654
• [0.139 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/22/23 04:52:28.661
  Dec 22 04:52:28.661: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pods @ 12/22/23 04:52:28.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:28.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:28.683
  Dec 22 04:52:28.687: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: creating the pod @ 12/22/23 04:52:28.688
  STEP: submitting the pod to kubernetes @ 12/22/23 04:52:28.688
  E1222 04:52:28.999738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:29.999946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:30.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2734" for this suite. @ 12/22/23 04:52:30.729
• [2.081 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 12/22/23 04:52:30.742
  Dec 22 04:52:30.742: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename job @ 12/22/23 04:52:30.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:30.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:30.771
  STEP: Creating a suspended job @ 12/22/23 04:52:30.778
  STEP: Patching the Job @ 12/22/23 04:52:30.785
  STEP: Watching for Job to be patched @ 12/22/23 04:52:30.841
  Dec 22 04:52:30.848: INFO: Event ADDED observed for Job e2e-wwchn in namespace job-5453 with labels: map[e2e-job-label:e2e-wwchn] and annotations: map[]
  Dec 22 04:52:30.848: INFO: Event MODIFIED observed for Job e2e-wwchn in namespace job-5453 with labels: map[e2e-job-label:e2e-wwchn] and annotations: map[]
  Dec 22 04:52:30.848: INFO: Event MODIFIED found for Job e2e-wwchn in namespace job-5453 with labels: map[e2e-job-label:e2e-wwchn e2e-wwchn:patched] and annotations: map[]
  STEP: Updating the job @ 12/22/23 04:52:30.848
  STEP: Watching for Job to be updated @ 12/22/23 04:52:30.876
  Dec 22 04:52:30.879: INFO: Event MODIFIED found for Job e2e-wwchn in namespace job-5453 with labels: map[e2e-job-label:e2e-wwchn e2e-wwchn:patched] and annotations: map[updated:true]
  Dec 22 04:52:30.879: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/22/23 04:52:30.88
  Dec 22 04:52:30.886: INFO: Job: e2e-wwchn as labels: map[e2e-job-label:e2e-wwchn e2e-wwchn:patched]
  STEP: Waiting for job to complete @ 12/22/23 04:52:30.887
  E1222 04:52:31.001271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:32.001364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:33.002310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:34.002767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:35.003580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:36.003693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:37.004308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:38.004461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 12/22/23 04:52:38.892
  STEP: Watching for Job to be deleted @ 12/22/23 04:52:38.903
  Dec 22 04:52:38.908: INFO: Event MODIFIED observed for Job e2e-wwchn in namespace job-5453 with labels: map[e2e-job-label:e2e-wwchn e2e-wwchn:patched] and annotations: map[updated:true]
  Dec 22 04:52:38.909: INFO: Event MODIFIED observed for Job e2e-wwchn in namespace job-5453 with labels: map[e2e-job-label:e2e-wwchn e2e-wwchn:patched] and annotations: map[updated:true]
  Dec 22 04:52:38.910: INFO: Event MODIFIED observed for Job e2e-wwchn in namespace job-5453 with labels: map[e2e-job-label:e2e-wwchn e2e-wwchn:patched] and annotations: map[updated:true]
  Dec 22 04:52:38.911: INFO: Event MODIFIED observed for Job e2e-wwchn in namespace job-5453 with labels: map[e2e-job-label:e2e-wwchn e2e-wwchn:patched] and annotations: map[updated:true]
  Dec 22 04:52:38.911: INFO: Event MODIFIED observed for Job e2e-wwchn in namespace job-5453 with labels: map[e2e-job-label:e2e-wwchn e2e-wwchn:patched] and annotations: map[updated:true]
  Dec 22 04:52:38.911: INFO: Event DELETED found for Job e2e-wwchn in namespace job-5453 with labels: map[e2e-job-label:e2e-wwchn e2e-wwchn:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/22/23 04:52:38.911
  Dec 22 04:52:38.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5453" for this suite. @ 12/22/23 04:52:38.923
• [8.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 12/22/23 04:52:38.945
  Dec 22 04:52:38.945: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 04:52:38.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:38.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:38.987
  STEP: Creating configMap with name configmap-test-volume-map-703c38c0-afd1-467c-a4de-63b2b8a8c363 @ 12/22/23 04:52:38.993
  STEP: Creating a pod to test consume configMaps @ 12/22/23 04:52:39
  E1222 04:52:39.004765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:40.005305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:41.005431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:42.006323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:43.006464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:52:43.026
  Dec 22 04:52:43.029: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-configmaps-2d8d7137-635d-4184-a61b-15e4978da7c3 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:52:43.041
  Dec 22 04:52:43.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4700" for this suite. @ 12/22/23 04:52:43.065
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/22/23 04:52:43.075
  Dec 22 04:52:43.075: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename proxy @ 12/22/23 04:52:43.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:43.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:43.107
  Dec 22 04:52:43.112: INFO: Creating pod...
  E1222 04:52:44.006722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:45.007109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:45.127: INFO: Creating service...
  Dec 22 04:52:45.137: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/pods/agnhost/proxy?method=DELETE
  Dec 22 04:52:45.154: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 22 04:52:45.154: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/pods/agnhost/proxy?method=OPTIONS
  Dec 22 04:52:45.163: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 22 04:52:45.163: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/pods/agnhost/proxy?method=PATCH
  Dec 22 04:52:45.170: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 22 04:52:45.170: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/pods/agnhost/proxy?method=POST
  Dec 22 04:52:45.180: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 22 04:52:45.180: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/pods/agnhost/proxy?method=PUT
  Dec 22 04:52:45.184: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 22 04:52:45.184: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/services/e2e-proxy-test-service/proxy?method=DELETE
  Dec 22 04:52:45.188: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 22 04:52:45.188: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Dec 22 04:52:45.192: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 22 04:52:45.192: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/services/e2e-proxy-test-service/proxy?method=PATCH
  Dec 22 04:52:45.197: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 22 04:52:45.197: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/services/e2e-proxy-test-service/proxy?method=POST
  Dec 22 04:52:45.201: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 22 04:52:45.201: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/services/e2e-proxy-test-service/proxy?method=PUT
  Dec 22 04:52:45.206: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 22 04:52:45.206: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/pods/agnhost/proxy?method=GET
  Dec 22 04:52:45.209: INFO: http.Client request:GET StatusCode:301
  Dec 22 04:52:45.209: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/services/e2e-proxy-test-service/proxy?method=GET
  Dec 22 04:52:45.213: INFO: http.Client request:GET StatusCode:301
  Dec 22 04:52:45.213: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/pods/agnhost/proxy?method=HEAD
  Dec 22 04:52:45.216: INFO: http.Client request:HEAD StatusCode:301
  Dec 22 04:52:45.216: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8013/services/e2e-proxy-test-service/proxy?method=HEAD
  Dec 22 04:52:45.220: INFO: http.Client request:HEAD StatusCode:301
  Dec 22 04:52:45.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8013" for this suite. @ 12/22/23 04:52:45.224
• [2.157 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 12/22/23 04:52:45.233
  Dec 22 04:52:45.233: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 04:52:45.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:52:45.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:52:45.253
  STEP: Creating pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533 @ 12/22/23 04:52:45.257
  E1222 04:52:46.007596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:47.007775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 04:52:47.281
  Dec 22 04:52:47.286: INFO: Initial restart count of pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a is 0
  Dec 22 04:52:47.290: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:52:48.007870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:49.008797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:49.295: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:52:50.009371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:51.009505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:51.299: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:52:52.009578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:53.009808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:53.304: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:52:54.010751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:55.011124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:55.310: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:52:56.011300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:57.011395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:57.315: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:52:58.011553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:52:59.012104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:52:59.319: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:00.012233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:01.012435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:01.324: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:02.014276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:03.014930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:03.331: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:04.014983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:05.015126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:05.335: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:06.015651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:07.015789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:07.342: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:08.016794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:09.016940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:09.346: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:10.017427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:11.018585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:11.350: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:12.019221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:13.019358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:13.369: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:14.019639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:15.019766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:15.374: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:16.019878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:17.020334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:17.379: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:18.020439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:19.021086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:19.383: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:20.021295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:21.021443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:21.387: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:22.022283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:23.022682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:23.400: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:24.023577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:25.023800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:25.406: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:26.024854      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:27.025090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:27.411: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:28.025555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:29.025672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:29.416: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:30.026350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:31.027417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:31.420: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:32.028125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:33.028507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:33.425: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:34.028699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:35.029022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:35.429: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:36.029137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:37.029301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:37.434: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:38.030314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:39.030949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:39.439: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:40.031068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:41.031197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:41.444: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:42.032117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:43.033464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:43.449: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:44.033901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:45.034630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:45.454: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:46.034864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:47.035107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:47.458: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:48.035652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:49.036484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:49.463: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:50.036694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:51.036843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:51.471: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:52.037702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:53.038106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:53.478: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:54.039102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:55.039690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:55.484: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:56.039613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:57.039910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:57.488: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:53:58.040664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:53:59.041439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:53:59.494: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:00.042172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:01.044243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:01.500: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:02.044232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:03.044339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:03.504: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:04.044700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:05.044795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:05.509: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:06.045562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:07.046469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:07.515: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:08.047043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:09.047884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:09.520: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:10.048176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:11.048299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:11.591: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:12.049009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:13.049318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:13.596: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:14.050425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:15.050595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:15.601: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:16.051678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:17.051827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:17.605: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:18.051941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:19.052778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:19.609: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:20.052860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:21.053071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:21.614: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:22.053143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:23.053608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:23.619: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:24.053680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:25.053857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:25.626: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:26.054366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:27.054811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:27.633: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:28.057629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:29.058467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:29.637: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:30.059481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:31.059794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:31.642: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:32.060268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:33.060626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:33.646: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:34.063341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:35.063861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:35.652: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:36.063968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:37.064412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:37.657: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:38.064621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:39.065158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:39.661: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:40.066176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:41.066920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:41.665: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:42.067333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:43.067556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:43.670: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:44.067838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:45.068017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:45.675: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:46.068580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:47.069447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:47.679: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:48.070353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:49.070835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:49.684: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:50.070997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:51.071267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:51.688: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:52.072291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:53.072710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:53.693: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:54.073677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:55.073893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:55.697: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:56.073957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:57.074302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:57.703: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:54:58.074450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:54:59.074944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:54:59.707: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:00.075108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:01.075535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:01.715: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:02.077079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:03.077281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:03.720: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:04.077691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:05.078297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:05.724: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:06.079209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:07.079483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:07.729: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:08.082353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:09.082841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:09.734: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:10.083231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:11.083591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:11.739: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:12.083499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:13.083607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:13.747: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:14.083972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:15.084298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:15.751: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:16.085043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:17.085525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:17.757: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:18.085547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:19.086035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:19.762: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:20.086852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:21.087180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:21.766: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:22.088125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:23.089270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:23.771: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:24.089699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:25.089881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:25.776: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:26.090902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:27.090989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:27.785: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:28.091104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:29.091222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:29.790: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:30.092045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:31.092386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:31.984: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:32.093287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:33.094352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:33.990: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:34.094908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:35.095092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:35.994: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:36.096003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:37.096493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:38.096696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:38.575: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:39.096644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:40.097372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:40.580: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:41.098158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:42.098595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:42.584: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:43.099600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:44.099726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:44.588: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:45.100538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:46.100649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:46.593: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:47.101717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:48.101845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:48.600: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:49.102233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:50.103639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:50.605: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:51.106831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:52.106912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:52.611: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:53.107051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:54.108089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:54.616: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:55.108461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:56.108585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:56.621: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:57.108727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:55:58.108840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:55:58.627: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:55:59.109762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:00.110631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:00.631: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:01.111177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:02.111318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:02.636: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:03.111555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:04.112235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:04.641: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:05.112584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:06.112846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:06.646: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:07.112912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:08.115373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:08.651: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:09.116434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:10.116517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:10.656: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:11.116764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:12.117000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:12.660: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:13.118099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:14.118610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:14.666: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:15.119434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:16.120305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:16.671: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:17.120705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:18.120887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:18.677: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:19.121021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:20.121276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:20.682: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:21.121417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:22.121578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:22.686: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:23.121738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:24.122058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:24.691: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:25.122192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:26.122451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:26.695: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:27.123400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:28.124025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:28.701: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:29.124051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:30.125040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:30.706: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:31.125236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:32.125303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:32.880: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:33.126359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:34.126974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:34.885: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:35.127521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:36.127637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:36.892: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:37.128130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:38.128459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:38.897: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:39.129212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:40.129334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:40.902: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:41.130360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:42.130491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:42.914: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:43.131121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:44.131164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:44.918: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:45.132242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:46.132669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:46.923: INFO: Get pod test-grpc-e0ca76a1-f4bc-4903-87a6-192bd171e22a in namespace container-probe-6533
  E1222 04:56:47.133688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:48.133778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/22/23 04:56:48.923
  Dec 22 04:56:48.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6533" for this suite. @ 12/22/23 04:56:48.955
• [243.740 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/22/23 04:56:48.973
  Dec 22 04:56:48.973: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename init-container @ 12/22/23 04:56:48.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:49.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:49.01
  STEP: creating the pod @ 12/22/23 04:56:49.013
  Dec 22 04:56:49.013: INFO: PodSpec: initContainers in spec.initContainers
  E1222 04:56:49.134489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:50.135660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:51.136239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:52.136996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:56:52.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3229" for this suite. @ 12/22/23 04:56:52.235
• [3.271 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 12/22/23 04:56:52.245
  Dec 22 04:56:52.245: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 04:56:52.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:52.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:52.273
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/22/23 04:56:52.278
  E1222 04:56:53.137291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:54.138317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:55.138653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:56.138777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:56:56.314
  Dec 22 04:56:56.317: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod pod-4e01cd5b-b503-4340-a7b4-af862d025a21 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 04:56:56.335
  Dec 22 04:56:56.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6600" for this suite. @ 12/22/23 04:56:56.366
• [4.132 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 12/22/23 04:56:56.377
  Dec 22 04:56:56.377: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:56:56.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:56:56.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:56:56.412
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 04:56:56.415
  E1222 04:56:57.139345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:58.139549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:56:59.140621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:00.140781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:57:00.446
  Dec 22 04:57:00.449: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod downwardapi-volume-83b23649-8322-4e95-be3e-264851cfd51c container client-container: <nil>
  STEP: delete the pod @ 12/22/23 04:57:00.455
  Dec 22 04:57:00.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3766" for this suite. @ 12/22/23 04:57:00.483
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 12/22/23 04:57:00.493
  Dec 22 04:57:00.493: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 04:57:00.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:57:00.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:57:00.52
  E1222 04:57:01.141599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:02.142475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 12/22/23 04:57:02.556
  Dec 22 04:57:02.556: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1485 pod-service-account-e5a5a69f-979c-4e72-8921-98229f95178c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 12/22/23 04:57:02.699
  Dec 22 04:57:02.699: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1485 pod-service-account-e5a5a69f-979c-4e72-8921-98229f95178c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/22/23 04:57:02.872
  Dec 22 04:57:02.872: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1485 pod-service-account-e5a5a69f-979c-4e72-8921-98229f95178c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Dec 22 04:57:03.128: INFO: Got root ca configmap in namespace "svcaccounts-1485"
  Dec 22 04:57:03.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1485" for this suite. @ 12/22/23 04:57:03.138
  E1222 04:57:03.143733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.655 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 12/22/23 04:57:03.148
  Dec 22 04:57:03.148: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 04:57:03.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:57:03.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:57:03.177
  STEP: Setting up server cert @ 12/22/23 04:57:03.211
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 04:57:03.988
  STEP: Deploying the webhook pod @ 12/22/23 04:57:03.997
  STEP: Wait for the deployment to be ready @ 12/22/23 04:57:04.013
  Dec 22 04:57:04.023: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1222 04:57:04.144579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:05.144904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 04:57:06.036
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 04:57:06.049
  E1222 04:57:06.145383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:57:07.049: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/22/23 04:57:07.057
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/22/23 04:57:07.079
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/22/23 04:57:07.092
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/22/23 04:57:07.105
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/22/23 04:57:07.117
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/22/23 04:57:07.125
  E1222 04:57:07.145721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:57:07.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7523" for this suite. @ 12/22/23 04:57:07.2
  STEP: Destroying namespace "webhook-markers-6159" for this suite. @ 12/22/23 04:57:07.209
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 12/22/23 04:57:07.22
  Dec 22 04:57:07.221: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename apf @ 12/22/23 04:57:07.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:57:07.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:57:07.246
  STEP: getting /apis @ 12/22/23 04:57:07.25
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/22/23 04:57:07.258
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/22/23 04:57:07.26
  STEP: creating @ 12/22/23 04:57:07.262
  STEP: getting @ 12/22/23 04:57:07.299
  STEP: listing @ 12/22/23 04:57:07.306
  STEP: watching @ 12/22/23 04:57:07.311
  Dec 22 04:57:07.311: INFO: starting watch
  STEP: patching @ 12/22/23 04:57:07.313
  STEP: updating @ 12/22/23 04:57:07.326
  Dec 22 04:57:07.343: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 12/22/23 04:57:07.345
  STEP: patching /status @ 12/22/23 04:57:07.35
  STEP: updating /status @ 12/22/23 04:57:07.362
  STEP: deleting @ 12/22/23 04:57:07.384
  STEP: deleting a collection @ 12/22/23 04:57:07.401
  Dec 22 04:57:07.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3214" for this suite. @ 12/22/23 04:57:07.431
• [0.219 seconds]
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 12/22/23 04:57:07.44
  Dec 22 04:57:07.440: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sysctl @ 12/22/23 04:57:07.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:57:07.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:57:07.461
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/22/23 04:57:07.466
  Dec 22 04:57:07.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1277" for this suite. @ 12/22/23 04:57:07.476
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 12/22/23 04:57:07.486
  Dec 22 04:57:07.486: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 04:57:07.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:57:07.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:57:07.516
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/22/23 04:57:07.52
  E1222 04:57:08.145860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:09.146992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:10.147442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:11.147548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:57:11.553
  Dec 22 04:57:11.556: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-44278944-0aa2-4e11-9882-a4fe3e746e4f container test-container: <nil>
  STEP: delete the pod @ 12/22/23 04:57:11.57
  Dec 22 04:57:11.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5767" for this suite. @ 12/22/23 04:57:11.599
• [4.121 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 12/22/23 04:57:11.609
  Dec 22 04:57:11.609: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 04:57:11.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:57:11.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:57:11.643
  STEP: Creating a pod to test downward api env vars @ 12/22/23 04:57:11.649
  E1222 04:57:12.148471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:13.148809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:14.149894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:15.150025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:57:15.676
  Dec 22 04:57:15.679: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downward-api-63084810-fd28-4281-8449-7e58dff58e46 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 04:57:15.687
  Dec 22 04:57:15.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6438" for this suite. @ 12/22/23 04:57:15.708
• [4.106 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/22/23 04:57:15.716
  Dec 22 04:57:15.717: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 04:57:15.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:57:15.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:57:15.745
  STEP: Creating secret with name s-test-opt-del-f79247b5-920d-43f5-92d2-b2081132a9fc @ 12/22/23 04:57:15.753
  STEP: Creating secret with name s-test-opt-upd-1aa69da0-2e5b-4f4f-8917-7487a688de73 @ 12/22/23 04:57:15.76
  STEP: Creating the pod @ 12/22/23 04:57:15.774
  E1222 04:57:16.150115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:17.150357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-f79247b5-920d-43f5-92d2-b2081132a9fc @ 12/22/23 04:57:17.875
  STEP: Updating secret s-test-opt-upd-1aa69da0-2e5b-4f4f-8917-7487a688de73 @ 12/22/23 04:57:17.893
  STEP: Creating secret with name s-test-opt-create-b2c1d1db-b6e9-48a4-b3c4-a9ad86fde5d8 @ 12/22/23 04:57:17.899
  STEP: waiting to observe update in volume @ 12/22/23 04:57:17.904
  E1222 04:57:18.151315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:19.151745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:20.151914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:21.152071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:22.152488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:23.153047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:24.153350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:25.153402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:26.154453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:27.155487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:28.156244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:29.156872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:30.157764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:31.157943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:32.158879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:33.159294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:34.159540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:35.159613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:36.159770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:37.160122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:38.160102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:39.161140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:40.162096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:41.162238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:42.163072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:43.163714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:44.164817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:45.165101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:46.165166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:47.165318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:48.165571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:49.166015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:50.166509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:51.166667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:52.166734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:53.167163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:54.167539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:55.167787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:56.169486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:57.170503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:58.170952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:57:59.171874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:00.176833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:01.176957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:02.177946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:03.178449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:04.178877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:05.178685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:06.178821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:07.178867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:08.179753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:09.180362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:10.180506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:11.181423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:12.181473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:13.182453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:14.183046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:15.183460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:16.183813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:17.183963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:18.184192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:19.184905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:20.185292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:21.185589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:22.185730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:23.186021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:24.186519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:58:24.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9088" for this suite. @ 12/22/23 04:58:24.29
• [68.580 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 12/22/23 04:58:24.298
  Dec 22 04:58:24.298: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 04:58:24.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:58:24.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:58:24.328
  E1222 04:58:25.187000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:26.187200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:58:26.370: INFO: Deleting pod "var-expansion-02f77445-03c1-4247-a4b8-e318acdea613" in namespace "var-expansion-7158"
  Dec 22 04:58:26.379: INFO: Wait up to 5m0s for pod "var-expansion-02f77445-03c1-4247-a4b8-e318acdea613" to be fully deleted
  E1222 04:58:27.187314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:28.187468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:58:28.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7158" for this suite. @ 12/22/23 04:58:28.392
• [4.106 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 12/22/23 04:58:28.405
  Dec 22 04:58:28.405: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubelet-test @ 12/22/23 04:58:28.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:58:28.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:58:28.427
  E1222 04:58:29.187518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:30.188206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:58:30.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4491" for this suite. @ 12/22/23 04:58:30.473
• [2.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/22/23 04:58:30.489
  Dec 22 04:58:30.489: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename containers @ 12/22/23 04:58:30.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:58:30.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:58:30.525
  STEP: Creating a pod to test override all @ 12/22/23 04:58:30.53
  E1222 04:58:31.188377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:32.188486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:33.189285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:34.189617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:58:34.569
  Dec 22 04:58:34.575: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod client-containers-46278577-50ee-4693-8a63-76d48f160437 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:58:34.584
  Dec 22 04:58:34.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3119" for this suite. @ 12/22/23 04:58:34.623
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 12/22/23 04:58:34.641
  Dec 22 04:58:34.641: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 04:58:34.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:58:34.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:58:34.679
  Dec 22 04:58:34.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1135 create -f -'
  Dec 22 04:58:34.919: INFO: stderr: ""
  Dec 22 04:58:34.919: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Dec 22 04:58:34.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1135 create -f -'
  Dec 22 04:58:35.145: INFO: stderr: ""
  Dec 22 04:58:35.145: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/22/23 04:58:35.145
  E1222 04:58:35.189872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:58:36.150: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:58:36.150: INFO: Found 0 / 1
  E1222 04:58:36.190656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:58:37.152: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:58:37.152: INFO: Found 1 / 1
  Dec 22 04:58:37.152: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Dec 22 04:58:37.156: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 04:58:37.156: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 22 04:58:37.156: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1135 describe pod agnhost-primary-g7n6j'
  E1222 04:58:37.191106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:58:37.265: INFO: stderr: ""
  Dec 22 04:58:37.265: INFO: stdout: "Name:             agnhost-primary-g7n6j\nNamespace:        kubectl-1135\nPriority:         0\nService Account:  default\nNode:             ip-172-31-14-155.us-east-2.compute.internal/172.31.14.155\nStart Time:       Fri, 22 Dec 2023 04:58:35 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.42.2.138\nIPs:\n  IP:           10.42.2.138\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://77431f3999d43d7cf17ee8b0584f9fa0d751a97a25229f761e101b8e310145a4\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 22 Dec 2023 04:58:35 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-2gzqn (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-2gzqn:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-1135/agnhost-primary-g7n6j to ip-172-31-14-155.us-east-2.compute.internal\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Dec 22 04:58:37.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1135 describe rc agnhost-primary'
  Dec 22 04:58:37.380: INFO: stderr: ""
  Dec 22 04:58:37.380: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1135\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-g7n6j\n"
  Dec 22 04:58:37.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1135 describe service agnhost-primary'
  Dec 22 04:58:37.489: INFO: stderr: ""
  Dec 22 04:58:37.489: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1135\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.43.9.77\nIPs:               10.43.9.77\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.42.2.138:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Dec 22 04:58:37.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1135 describe node ip-172-31-11-160.us-east-2.compute.internal'
  Dec 22 04:58:37.654: INFO: stderr: ""
  Dec 22 04:58:37.655: INFO: stdout: "Name:               ip-172-31-11-160.us-east-2.compute.internal\nRoles:              control-plane,etcd,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=k3s\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-11-160.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/master=true\n                    node.kubernetes.io/instance-type=k3s\n                    role-control-plane=true\n                    role-etcd=true\n                    role-worker=true\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.11.160\n                    etcd.k3s.cattle.io/local-snapshots-timestamp: 2023-12-22T03:44:57Z\n                    etcd.k3s.cattle.io/node-address: 172.31.11.160\n                    etcd.k3s.cattle.io/node-name: ip-172-31-11-160.us-east-2.compute.internal-01dce1e6\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"6a:26:79:56:a0:3f\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.11.160\n                    k3s.io/encryption-config-hash: start-3781feaf04241213e83991924dbae6835b8885ba04d2320f870ed32e3d15c1c5\n                    k3s.io/external-ip: 18.227.72.232\n                    k3s.io/hostname: ip-172-31-11-160.us-east-2.compute.internal\n                    k3s.io/internal-ip: 172.31.11.160\n                    k3s.io/node-args:\n                      [\"server\",\"--write-kubeconfig-mode\",\"0644\",\"--tls-san\",\"18.116.28.93\",\"--server\",\"https://18.116.28.93:6443\",\"--token\",\"********\",\"--node-...\n                    k3s.io/node-config-hash: WGPX5YD4CBWMHQBNUVRYOZKUC6DQ4FQ7QFK5KVUU2QL36OW4WCDQ====\n                    k3s.io/node-env: {\"K3S_DATA_DIR\":\"/var/lib/rancher/k3s/data/e5efd5aeb0cb8e4c1d802582bd7085968576e89d8f34ca22a450b4f4ae4d4c15\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Fri, 22 Dec 2023 03:39:12 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-11-160.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 22 Dec 2023 04:58:32 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Fri, 22 Dec 2023 04:54:34 +0000   Fri, 22 Dec 2023 03:39:12 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Fri, 22 Dec 2023 04:54:34 +0000   Fri, 22 Dec 2023 03:39:12 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Fri, 22 Dec 2023 04:54:34 +0000   Fri, 22 Dec 2023 03:39:12 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Fri, 22 Dec 2023 04:54:34 +0000   Fri, 22 Dec 2023 03:39:12 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\n  EtcdIsVoter      True    Fri, 22 Dec 2023 03:39:37 +0000   Fri, 22 Dec 2023 03:39:37 +0000   MemberNotLearner             Node is a voting member of the etcd cluster\nAddresses:\n  InternalIP:  172.31.11.160\n  ExternalIP:  18.227.72.232\n  Hostname:    ip-172-31-11-160.us-east-2.compute.internal\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      20937708Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3961848Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      20368202327\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3961848Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 ec26c31fc72aafd83a3152bb102dc46b\n  System UUID:                ec26c31f-c72a-afd8-3a31-52bb102dc46b\n  Boot ID:                    fd54d820-cea4-4898-ae87-c121e9fabace\n  Kernel Version:             5.14.21-150400.22-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP4\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.11-k3s2\n  Kubelet Version:            v1.29.0+k3s1\n  Kube-Proxy Version:         v1.29.0+k3s1\nPodCIDR:                      10.42.1.0/24\nPodCIDRs:                     10.42.1.0/24\nProviderID:                   k3s://ip-172-31-11-160.us-east-2.compute.internal\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 svclb-traefik-080075b9-7dhph                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         79m\n  sonobuoy                    sonobuoy-e2e-job-2ccc42035d274143                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         60m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-084388581afe4c51-c4pmm    0 (0%)        0 (0%)      0 (0%)           0 (0%)         60m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests  Limits\n  --------               --------  ------\n  cpu                    0 (0%)    0 (0%)\n  memory                 0 (0%)    0 (0%)\n  ephemeral-storage      0 (0%)    0 (0%)\n  hugepages-1Gi          0 (0%)    0 (0%)\n  hugepages-2Mi          0 (0%)    0 (0%)\n  scheduling.k8s.io/foo  0         0\nEvents:                  <none>\n"
  Dec 22 04:58:37.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1135 describe namespace kubectl-1135'
  Dec 22 04:58:37.762: INFO: stderr: ""
  Dec 22 04:58:37.763: INFO: stdout: "Name:         kubectl-1135\nLabels:       e2e-framework=kubectl\n              e2e-run=1c3f25ab-b78f-4716-9d38-999c2e46ee7c\n              kubernetes.io/metadata.name=kubectl-1135\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Dec 22 04:58:37.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1135" for this suite. @ 12/22/23 04:58:37.769
• [3.139 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 12/22/23 04:58:37.779
  Dec 22 04:58:37.779: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 04:58:37.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:58:37.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:58:37.812
  STEP: Creating a pod to test service account token:  @ 12/22/23 04:58:37.819
  E1222 04:58:38.191745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:39.192682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:40.193475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:41.193563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 04:58:41.851
  Dec 22 04:58:41.858: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod test-pod-c6b21a98-b4cc-4d6a-8e7f-96dca400e109 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 04:58:41.867
  Dec 22 04:58:41.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8291" for this suite. @ 12/22/23 04:58:41.89
• [4.122 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/22/23 04:58:41.902
  Dec 22 04:58:41.902: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-runtime @ 12/22/23 04:58:41.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:58:41.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:58:41.93
  STEP: create the container @ 12/22/23 04:58:41.934
  W1222 04:58:41.943633      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/22/23 04:58:41.943
  E1222 04:58:42.193710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:43.194724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:44.195463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:45.195696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/22/23 04:58:45.332
  STEP: the container should be terminated @ 12/22/23 04:58:45.337
  STEP: the termination message should be set @ 12/22/23 04:58:45.337
  Dec 22 04:58:45.337: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/22/23 04:58:45.337
  Dec 22 04:58:45.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8281" for this suite. @ 12/22/23 04:58:45.37
• [3.482 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 12/22/23 04:58:45.384
  Dec 22 04:58:45.384: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename events @ 12/22/23 04:58:45.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:58:45.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:58:45.418
  STEP: creating a test event @ 12/22/23 04:58:45.426
  STEP: listing all events in all namespaces @ 12/22/23 04:58:45.432
  STEP: patching the test event @ 12/22/23 04:58:45.439
  STEP: fetching the test event @ 12/22/23 04:58:45.449
  STEP: updating the test event @ 12/22/23 04:58:45.452
  STEP: getting the test event @ 12/22/23 04:58:45.465
  STEP: deleting the test event @ 12/22/23 04:58:45.469
  STEP: listing all events in all namespaces @ 12/22/23 04:58:45.483
  Dec 22 04:58:45.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1117" for this suite. @ 12/22/23 04:58:45.495
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 12/22/23 04:58:45.505
  Dec 22 04:58:45.505: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 04:58:45.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:58:45.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:58:45.529
  Dec 22 04:58:45.533: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/22/23 04:58:45.549
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/22/23 04:58:45.557
  E1222 04:58:46.196876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/22/23 04:58:46.571
  Dec 22 04:58:46.585: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/22/23 04:58:46.586
  E1222 04:58:47.197202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:58:47.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5065" for this suite. @ 12/22/23 04:58:47.603
• [2.108 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 12/22/23 04:58:47.614
  Dec 22 04:58:47.614: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sched-preemption @ 12/22/23 04:58:47.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:58:47.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:58:47.643
  Dec 22 04:58:47.667: INFO: Waiting up to 1m0s for all nodes to be ready
  E1222 04:58:48.198215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:49.198709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:50.198858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:51.198971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:52.199289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:53.200203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:54.200378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:55.200509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:56.201457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:57.202388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:58.203437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:58:59.203869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:00.204649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:01.204816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:02.205789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:03.206796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:04.207195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:05.207424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:06.207497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:07.207772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:08.208840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:09.208969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:10.209768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:11.209941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:12.211018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:13.211419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:14.211871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:15.212027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:16.212126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:17.212259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:18.213485      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:19.214379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:20.214601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:21.214688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:22.215368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:23.215487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:24.215944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:25.216607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:26.216778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:27.216878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:28.217596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:29.218018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:30.219095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:31.220031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:32.220193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:33.220303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:34.220867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:35.221001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:36.221301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:37.221393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:38.221477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:39.222163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:40.222921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:41.222955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:42.223698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:43.224560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:44.224778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:45.224896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:46.225982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:47.226161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:59:47.672: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/22/23 04:59:47.676
  Dec 22 04:59:47.676: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/22/23 04:59:47.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 04:59:47.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 04:59:47.701
  STEP: Finding an available node @ 12/22/23 04:59:47.705
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/22/23 04:59:47.705
  E1222 04:59:48.226985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:49.227918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/22/23 04:59:50.023
  Dec 22 04:59:50.038: INFO: found a healthy node: ip-172-31-14-155.us-east-2.compute.internal
  E1222 04:59:50.228340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:51.229151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:52.229560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:53.230357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:54.231120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:55.231380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:59:56.122: INFO: pods created so far: [1 1 1]
  Dec 22 04:59:56.122: INFO: length of pods created so far: 3
  E1222 04:59:56.231617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:57.231711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 04:59:58.136: INFO: pods created so far: [2 2 1]
  E1222 04:59:58.232322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 04:59:59.232544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:00.232810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:01.233740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:02.234461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:03.234791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:04.235530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:05.235884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:00:05.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-101" for this suite. @ 12/22/23 05:00:05.584
  Dec 22 05:00:05.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1771" for this suite. @ 12/22/23 05:00:05.967
• [78.368 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 12/22/23 05:00:05.982
  Dec 22 05:00:05.982: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename controllerrevisions @ 12/22/23 05:00:05.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:00:06.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:00:06.022
  STEP: Creating DaemonSet "e2e-hx62s-daemon-set" @ 12/22/23 05:00:06.059
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 05:00:06.07
  Dec 22 05:00:06.087: INFO: Number of nodes with available pods controlled by daemonset e2e-hx62s-daemon-set: 0
  Dec 22 05:00:06.087: INFO: Node ip-172-31-11-160.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:00:06.236272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:00:07.082: INFO: Number of nodes with available pods controlled by daemonset e2e-hx62s-daemon-set: 1
  Dec 22 05:00:07.082: INFO: Node ip-172-31-11-160.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:00:07.237427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:08.237905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:00:08.442: INFO: Number of nodes with available pods controlled by daemonset e2e-hx62s-daemon-set: 4
  Dec 22 05:00:08.442: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset e2e-hx62s-daemon-set
  STEP: Confirm DaemonSet "e2e-hx62s-daemon-set" successfully created with "daemonset-name=e2e-hx62s-daemon-set" label @ 12/22/23 05:00:08.448
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-hx62s-daemon-set" @ 12/22/23 05:00:08.456
  Dec 22 05:00:08.460: INFO: Located ControllerRevision: "e2e-hx62s-daemon-set-f546568cd"
  STEP: Patching ControllerRevision "e2e-hx62s-daemon-set-f546568cd" @ 12/22/23 05:00:08.465
  Dec 22 05:00:08.473: INFO: e2e-hx62s-daemon-set-f546568cd has been patched
  STEP: Create a new ControllerRevision @ 12/22/23 05:00:08.473
  Dec 22 05:00:08.480: INFO: Created ControllerRevision: e2e-hx62s-daemon-set-689576554d
  STEP: Confirm that there are two ControllerRevisions @ 12/22/23 05:00:08.48
  Dec 22 05:00:08.480: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 22 05:00:08.484: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-hx62s-daemon-set-f546568cd" @ 12/22/23 05:00:08.484
  STEP: Confirm that there is only one ControllerRevision @ 12/22/23 05:00:08.492
  Dec 22 05:00:08.492: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 22 05:00:08.497: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-hx62s-daemon-set-689576554d" @ 12/22/23 05:00:08.505
  Dec 22 05:00:08.518: INFO: e2e-hx62s-daemon-set-689576554d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/22/23 05:00:08.518
  W1222 05:00:08.531898      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/22/23 05:00:08.532
  Dec 22 05:00:08.532: INFO: Requesting list of ControllerRevisions to confirm quantity
  E1222 05:00:09.238382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:00:09.532: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 22 05:00:09.537: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-hx62s-daemon-set-689576554d=updated" @ 12/22/23 05:00:09.537
  STEP: Confirm that there is only one ControllerRevision @ 12/22/23 05:00:09.554
  Dec 22 05:00:09.555: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 22 05:00:09.570: INFO: Found 1 ControllerRevisions
  Dec 22 05:00:09.581: INFO: ControllerRevision "e2e-hx62s-daemon-set-6688dcd449" has revision 3
  STEP: Deleting DaemonSet "e2e-hx62s-daemon-set" @ 12/22/23 05:00:09.594
  STEP: deleting DaemonSet.extensions e2e-hx62s-daemon-set in namespace controllerrevisions-5465, will wait for the garbage collector to delete the pods @ 12/22/23 05:00:09.594
  Dec 22 05:00:09.660: INFO: Deleting DaemonSet.extensions e2e-hx62s-daemon-set took: 6.126253ms
  Dec 22 05:00:09.761: INFO: Terminating DaemonSet.extensions e2e-hx62s-daemon-set pods took: 100.542032ms
  E1222 05:00:10.239358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:11.239626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:00:11.313: INFO: Number of nodes with available pods controlled by daemonset e2e-hx62s-daemon-set: 0
  Dec 22 05:00:11.314: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-hx62s-daemon-set
  Dec 22 05:00:11.320: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29299"},"items":null}

  Dec 22 05:00:11.328: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29299"},"items":null}

  Dec 22 05:00:11.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5465" for this suite. @ 12/22/23 05:00:11.372
• [5.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/22/23 05:00:11.395
  Dec 22 05:00:11.395: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:00:11.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:00:11.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:00:11.502
  STEP: Creating secret with name s-test-opt-del-9ca6489a-297e-48c0-9cbb-ac4cc6b3342d @ 12/22/23 05:00:11.52
  STEP: Creating secret with name s-test-opt-upd-b2da6882-dd02-4ec4-8b54-db9f3c784bb8 @ 12/22/23 05:00:11.541
  STEP: Creating the pod @ 12/22/23 05:00:11.558
  E1222 05:00:12.239726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:13.240087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-9ca6489a-297e-48c0-9cbb-ac4cc6b3342d @ 12/22/23 05:00:13.663
  STEP: Updating secret s-test-opt-upd-b2da6882-dd02-4ec4-8b54-db9f3c784bb8 @ 12/22/23 05:00:13.671
  STEP: Creating secret with name s-test-opt-create-a22de954-7592-4bd1-ab6b-c0c6bb0168ab @ 12/22/23 05:00:13.678
  STEP: waiting to observe update in volume @ 12/22/23 05:00:13.685
  E1222 05:00:14.240923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:15.241866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:16.242395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:17.242515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:18.243111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:19.244031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:20.244131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:21.244299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:22.245052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:23.245295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:24.245749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:25.246421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:26.247210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:27.247352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:28.248296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:29.249300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:30.250433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:31.250528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:32.251564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:33.251663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:34.252506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:35.252671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:36.252769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:37.252864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:38.253264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:39.254029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:40.254091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:41.254301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:42.254427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:43.254792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:44.255815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:45.255948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:46.256086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:47.256267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:48.256379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:49.257175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:50.258006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:51.258130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:52.259214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:53.259343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:54.260068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:55.260208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:56.261049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:57.269497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:58.262205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:00:59.263166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:00.263542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:01.263673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:02.263732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:03.264249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:04.264904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:05.265191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:06.266003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:07.268527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:08.268537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:09.269673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:10.270054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:11.270220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:12.270997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:13.271442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:14.272417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:15.272623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:16.273452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:17.273590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:18.273752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:19.273861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:20.274385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:21.275030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:22.275256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:23.276293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:24.276528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:01:24.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-944" for this suite. @ 12/22/23 05:01:24.668
• [73.283 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 12/22/23 05:01:24.679
  Dec 22 05:01:24.680: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 05:01:24.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:24.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:24.708
  STEP: creating an Endpoint @ 12/22/23 05:01:24.716
  STEP: waiting for available Endpoint @ 12/22/23 05:01:24.722
  STEP: listing all Endpoints @ 12/22/23 05:01:24.725
  STEP: updating the Endpoint @ 12/22/23 05:01:24.729
  STEP: fetching the Endpoint @ 12/22/23 05:01:24.738
  STEP: patching the Endpoint @ 12/22/23 05:01:24.741
  STEP: fetching the Endpoint @ 12/22/23 05:01:24.755
  STEP: deleting the Endpoint by Collection @ 12/22/23 05:01:24.759
  STEP: waiting for Endpoint deletion @ 12/22/23 05:01:24.786
  STEP: fetching the Endpoint @ 12/22/23 05:01:24.788
  Dec 22 05:01:24.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5102" for this suite. @ 12/22/23 05:01:24.797
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 12/22/23 05:01:24.804
  Dec 22 05:01:24.804: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:01:24.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:24.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:24.829
  STEP: Counting existing ResourceQuota @ 12/22/23 05:01:24.833
  E1222 05:01:25.276639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:26.277553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:27.277921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:28.278639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:29.278818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/22/23 05:01:29.837
  STEP: Ensuring resource quota status is calculated @ 12/22/23 05:01:29.849
  E1222 05:01:30.279480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:31.280086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:01:31.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6765" for this suite. @ 12/22/23 05:01:31.872
• [7.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 12/22/23 05:01:31.893
  Dec 22 05:01:31.893: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 05:01:31.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:31.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:31.923
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:01:31.925
  E1222 05:01:32.280804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:33.281337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:34.282199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:01:34.602
  Dec 22 05:01:34.607: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-76a73817-3af9-4a6f-915f-d7dd0b661046 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:01:34.621
  Dec 22 05:01:34.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4961" for this suite. @ 12/22/23 05:01:34.649
• [2.763 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 12/22/23 05:01:34.655
  Dec 22 05:01:34.655: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename disruption @ 12/22/23 05:01:34.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:34.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:34.679
  STEP: Waiting for the pdb to be processed @ 12/22/23 05:01:34.691
  E1222 05:01:35.283363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:36.283306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 12/22/23 05:01:36.731
  Dec 22 05:01:36.756: INFO: running pods: 0 < 3
  E1222 05:01:37.283436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:38.283599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:01:38.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9579" for this suite. @ 12/22/23 05:01:38.748
• [4.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/22/23 05:01:38.757
  Dec 22 05:01:38.757: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:01:38.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:38.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:38.798
  STEP: Creating secret with name secret-test-90ee68b2-bdd7-4a81-8550-d35b347608cf @ 12/22/23 05:01:38.835
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:01:38.842
  E1222 05:01:39.283660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:40.283883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:41.284831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:42.285178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:01:42.873
  Dec 22 05:01:42.879: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-secrets-a8872388-aad5-4f89-bbed-014967e83e70 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:01:42.887
  Dec 22 05:01:42.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3334" for this suite. @ 12/22/23 05:01:42.924
  STEP: Destroying namespace "secret-namespace-2628" for this suite. @ 12/22/23 05:01:42.951
• [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 12/22/23 05:01:42.959
  Dec 22 05:01:42.959: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 05:01:42.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:42.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:42.99
  STEP: Creating a pod to test env composition @ 12/22/23 05:01:42.994
  E1222 05:01:43.285929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:44.286108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:45.286106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:46.286471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:01:47.042
  Dec 22 05:01:47.050: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod var-expansion-00925183-ac37-40e5-a2fb-8a563fc91815 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 05:01:47.064
  Dec 22 05:01:47.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2634" for this suite. @ 12/22/23 05:01:47.109
• [4.158 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 12/22/23 05:01:47.117
  Dec 22 05:01:47.117: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename apf @ 12/22/23 05:01:47.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:47.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:47.145
  STEP: getting /apis @ 12/22/23 05:01:47.15
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/22/23 05:01:47.157
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/22/23 05:01:47.159
  STEP: creating @ 12/22/23 05:01:47.16
  STEP: getting @ 12/22/23 05:01:47.179
  STEP: listing @ 12/22/23 05:01:47.183
  STEP: watching @ 12/22/23 05:01:47.188
  Dec 22 05:01:47.188: INFO: starting watch
  STEP: patching @ 12/22/23 05:01:47.189
  STEP: updating @ 12/22/23 05:01:47.196
  Dec 22 05:01:47.208: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 12/22/23 05:01:47.208
  STEP: patching /status @ 12/22/23 05:01:47.212
  STEP: updating /status @ 12/22/23 05:01:47.219
  STEP: deleting @ 12/22/23 05:01:47.228
  STEP: deleting a collection @ 12/22/23 05:01:47.241
  Dec 22 05:01:47.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7982" for this suite. @ 12/22/23 05:01:47.263
• [0.151 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 12/22/23 05:01:47.269
  Dec 22 05:01:47.269: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:01:47.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:47.284
  E1222 05:01:47.286949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:47.288
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/22/23 05:01:47.292
  E1222 05:01:48.287987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:49.288910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:50.288923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:51.289178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:01:51.362
  Dec 22 05:01:51.365: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-64b693ca-f7ba-4ed4-a9f3-370d67159613 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:01:51.372
  Dec 22 05:01:51.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8923" for this suite. @ 12/22/23 05:01:51.393
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 12/22/23 05:01:51.402
  Dec 22 05:01:51.402: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 05:01:51.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:51.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:51.429
  STEP: Read namespace status @ 12/22/23 05:01:51.437
  Dec 22 05:01:51.442: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/22/23 05:01:51.442
  Dec 22 05:01:51.450: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/22/23 05:01:51.45
  Dec 22 05:01:51.461: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Dec 22 05:01:51.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-553" for this suite. @ 12/22/23 05:01:51.468
• [0.074 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/22/23 05:01:51.476
  Dec 22 05:01:51.476: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:01:51.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:51.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:51.504
  STEP: Creating secret with name secret-test-map-6cd1258b-85e0-4be7-947c-bcbb282cdd1b @ 12/22/23 05:01:51.508
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:01:51.514
  E1222 05:01:52.290030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:53.290266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:54.290368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:55.290653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:01:55.543
  Dec 22 05:01:55.547: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-secrets-3dfec1d5-ed8d-4849-8cb6-6102115d151a container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:01:55.554
  Dec 22 05:01:55.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5992" for this suite. @ 12/22/23 05:01:55.578
• [4.109 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/22/23 05:01:55.586
  Dec 22 05:01:55.586: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename watch @ 12/22/23 05:01:55.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:55.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:55.614
  STEP: creating a watch on configmaps @ 12/22/23 05:01:55.618
  STEP: creating a new configmap @ 12/22/23 05:01:55.621
  STEP: modifying the configmap once @ 12/22/23 05:01:55.627
  STEP: closing the watch once it receives two notifications @ 12/22/23 05:01:55.636
  Dec 22 05:01:55.636: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3755  17398bf2-cc19-46d5-a191-d83bdfec9f83 30037 0 2023-12-22 05:01:55 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-22 05:01:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:01:55.636: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3755  17398bf2-cc19-46d5-a191-d83bdfec9f83 30038 0 2023-12-22 05:01:55 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-22 05:01:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/22/23 05:01:55.636
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/22/23 05:01:55.647
  STEP: deleting the configmap @ 12/22/23 05:01:55.649
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/22/23 05:01:55.656
  Dec 22 05:01:55.657: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3755  17398bf2-cc19-46d5-a191-d83bdfec9f83 30039 0 2023-12-22 05:01:55 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-22 05:01:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:01:55.657: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3755  17398bf2-cc19-46d5-a191-d83bdfec9f83 30040 0 2023-12-22 05:01:55 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-22 05:01:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:01:55.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3755" for this suite. @ 12/22/23 05:01:55.662
• [0.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 12/22/23 05:01:55.673
  Dec 22 05:01:55.673: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:01:55.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:55.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:55.701
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/22/23 05:01:55.705
  E1222 05:01:56.291064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:57.292065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:58.292743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:01:59.292940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:01:59.728
  Dec 22 05:01:59.732: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-b30480fa-8dd7-43a0-ae5a-c5c881fe1435 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:01:59.739
  Dec 22 05:01:59.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5753" for this suite. @ 12/22/23 05:01:59.762
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 12/22/23 05:01:59.77
  Dec 22 05:01:59.770: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 05:01:59.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:01:59.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:01:59.796
  Dec 22 05:01:59.801: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:02:00.293674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:01.303825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/22/23 05:02:01.742
  Dec 22 05:02:01.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-2373 --namespace=crd-publish-openapi-2373 create -f -'
  Dec 22 05:02:01.873: INFO: stderr: ""
  Dec 22 05:02:01.873: INFO: stdout: "e2e-test-crd-publish-openapi-789-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Dec 22 05:02:01.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-2373 --namespace=crd-publish-openapi-2373 delete e2e-test-crd-publish-openapi-789-crds test-cr'
  Dec 22 05:02:01.999: INFO: stderr: ""
  Dec 22 05:02:01.999: INFO: stdout: "e2e-test-crd-publish-openapi-789-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Dec 22 05:02:01.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-2373 --namespace=crd-publish-openapi-2373 apply -f -'
  Dec 22 05:02:02.121: INFO: stderr: ""
  Dec 22 05:02:02.121: INFO: stdout: "e2e-test-crd-publish-openapi-789-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Dec 22 05:02:02.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-2373 --namespace=crd-publish-openapi-2373 delete e2e-test-crd-publish-openapi-789-crds test-cr'
  Dec 22 05:02:02.222: INFO: stderr: ""
  Dec 22 05:02:02.222: INFO: stdout: "e2e-test-crd-publish-openapi-789-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/22/23 05:02:02.222
  Dec 22 05:02:02.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-2373 explain e2e-test-crd-publish-openapi-789-crds'
  E1222 05:02:02.304292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:02:02.323: INFO: stderr: ""
  Dec 22 05:02:02.323: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-789-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1222 05:02:03.304547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:02:04.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2373" for this suite. @ 12/22/23 05:02:04.259
• [4.495 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 12/22/23 05:02:04.266
  Dec 22 05:02:04.266: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 05:02:04.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:02:04.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:02:04.294
  STEP: creating service in namespace services-5563 @ 12/22/23 05:02:04.297
  STEP: creating service affinity-clusterip in namespace services-5563 @ 12/22/23 05:02:04.298
  E1222 05:02:04.305643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-clusterip in namespace services-5563 @ 12/22/23 05:02:04.323
  I1222 05:02:04.337806      20 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-5563, replica count: 3
  E1222 05:02:05.306547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:06.306667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:07.306681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1222 05:02:07.389137      20 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 05:02:07.397: INFO: Creating new exec pod
  E1222 05:02:08.307272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:09.307099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:10.307795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:02:10.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-5563 exec execpod-affinitycgkg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Dec 22 05:02:10.573: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Dec 22 05:02:10.573: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:02:10.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-5563 exec execpod-affinitycgkg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.234.110 80'
  Dec 22 05:02:10.723: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.234.110 80\nConnection to 10.43.234.110 80 port [tcp/http] succeeded!\n"
  Dec 22 05:02:10.723: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:02:10.723: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-5563 exec execpod-affinitycgkg8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.234.110:80/ ; done'
  Dec 22 05:02:10.942: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.234.110:80/\n"
  Dec 22 05:02:10.942: INFO: stdout: "\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w\naffinity-clusterip-jdv8w"
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Received response from host: affinity-clusterip-jdv8w
  Dec 22 05:02:10.943: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5563, will wait for the garbage collector to delete the pods @ 12/22/23 05:02:10.975
  Dec 22 05:02:11.054: INFO: Deleting ReplicationController affinity-clusterip took: 16.111108ms
  Dec 22 05:02:11.155: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.633943ms
  E1222 05:02:11.308557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:12.309722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:13.310341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:02:14.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5563" for this suite. @ 12/22/23 05:02:14.281
• [10.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 12/22/23 05:02:14.297
  Dec 22 05:02:14.297: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:02:14.298
  E1222 05:02:14.310556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:02:14.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:02:14.326
  STEP: Creating configMap with name cm-test-opt-del-4fc851c4-95b3-4139-b643-0d62c786638d @ 12/22/23 05:02:14.334
  STEP: Creating configMap with name cm-test-opt-upd-f57678ba-a2c5-4d6c-8008-94f703b9443d @ 12/22/23 05:02:14.34
  STEP: Creating the pod @ 12/22/23 05:02:14.345
  E1222 05:02:15.310698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:16.311627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-4fc851c4-95b3-4139-b643-0d62c786638d @ 12/22/23 05:02:16.479
  STEP: Updating configmap cm-test-opt-upd-f57678ba-a2c5-4d6c-8008-94f703b9443d @ 12/22/23 05:02:16.489
  STEP: Creating configMap with name cm-test-opt-create-883475ed-7868-4964-9d43-2d0adc8b6f72 @ 12/22/23 05:02:16.495
  STEP: waiting to observe update in volume @ 12/22/23 05:02:16.5
  E1222 05:02:17.312285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:18.312355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:19.312454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:20.312560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:21.312763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:22.313020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:23.313171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:24.313419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:25.314376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:26.314532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:27.314639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:28.314788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:29.314963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:30.315882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:31.316286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:32.316407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:33.317410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:34.317965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:35.318035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:36.318127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:37.318447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:38.318591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:39.318759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:40.319407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:41.319519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:42.319649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:43.319991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:44.320081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:45.320220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:46.320617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:47.320743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:48.320834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:49.321474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:50.321611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:51.321731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:52.322413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:53.322548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:54.322965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:55.324066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:56.324520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:57.324563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:58.324804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:02:59.329639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:00.330556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:01.331811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:02.331890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:03.332903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:04.334090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:05.335111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:06.335193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:07.335805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:08.335923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:09.336730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:10.337995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:11.338367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:12.338416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:13.339878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:14.341163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:15.342001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:16.342468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:17.343172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:18.343308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:19.343704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:20.344082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:21.344149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:22.344614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:23.344759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:24.345014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:25.345840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:26.346510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:03:26.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5819" for this suite. @ 12/22/23 05:03:26.832
• [72.541 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 12/22/23 05:03:26.838
  Dec 22 05:03:26.838: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 05:03:26.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:26.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:26.87
  STEP: Create a ReplicaSet @ 12/22/23 05:03:26.874
  STEP: Verify that the required pods have come up @ 12/22/23 05:03:26.883
  Dec 22 05:03:26.887: INFO: Pod name sample-pod: Found 0 pods out of 3
  E1222 05:03:27.347116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:28.347410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:29.348011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:30.348153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:31.348927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:03:31.891: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/22/23 05:03:31.891
  Dec 22 05:03:31.895: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/22/23 05:03:31.895
  STEP: DeleteCollection of the ReplicaSets @ 12/22/23 05:03:31.898
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/22/23 05:03:31.907
  Dec 22 05:03:31.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2837" for this suite. @ 12/22/23 05:03:31.915
• [5.085 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/22/23 05:03:31.924
  Dec 22 05:03:31.924: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:03:31.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:31.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:31.992
  Dec 22 05:03:32.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6519" for this suite. @ 12/22/23 05:03:32.066
• [0.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 12/22/23 05:03:32.08
  Dec 22 05:03:32.080: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:03:32.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:32.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:32.121
  STEP: Setting up server cert @ 12/22/23 05:03:32.163
  E1222 05:03:32.348959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:03:32.735
  STEP: Deploying the webhook pod @ 12/22/23 05:03:32.742
  STEP: Wait for the deployment to be ready @ 12/22/23 05:03:32.753
  Dec 22 05:03:32.759: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1222 05:03:33.349294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:34.350206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:03:34.769
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:03:34.779
  E1222 05:03:35.351310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:03:35.780: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/22/23 05:03:35.852
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/22/23 05:03:35.93
  STEP: Deleting the collection of validation webhooks @ 12/22/23 05:03:36.017
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/22/23 05:03:36.06
  Dec 22 05:03:36.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3965" for this suite. @ 12/22/23 05:03:36.148
  STEP: Destroying namespace "webhook-markers-8283" for this suite. @ 12/22/23 05:03:36.157
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 12/22/23 05:03:36.166
  Dec 22 05:03:36.166: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:03:36.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:36.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:36.192
  STEP: Creating configMap with name configmap-test-volume-map-93193f0d-5139-4cf8-9bec-4ce09ad380ad @ 12/22/23 05:03:36.196
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:03:36.202
  E1222 05:03:36.352229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:37.352284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:38.352671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:39.352755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:03:40.331
  Dec 22 05:03:40.334: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-configmaps-2e693760-2925-4299-9a7d-0cbb18f55ba5 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:03:40.341
  E1222 05:03:40.353683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:03:40.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1873" for this suite. @ 12/22/23 05:03:40.362
• [4.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 12/22/23 05:03:40.369
  Dec 22 05:03:40.369: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:03:40.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:40.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:40.397
  STEP: Setting up server cert @ 12/22/23 05:03:40.424
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:03:41.213
  STEP: Deploying the webhook pod @ 12/22/23 05:03:41.219
  STEP: Wait for the deployment to be ready @ 12/22/23 05:03:41.231
  Dec 22 05:03:41.237: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1222 05:03:41.353706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:42.353898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:03:43.246
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:03:43.256
  E1222 05:03:43.354351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:03:44.257: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/22/23 05:03:44.263
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/22/23 05:03:44.288
  STEP: Creating a configMap that should not be mutated @ 12/22/23 05:03:44.295
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/22/23 05:03:44.305
  STEP: Creating a configMap that should be mutated @ 12/22/23 05:03:44.314
  E1222 05:03:44.355261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:03:44.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5613" for this suite. @ 12/22/23 05:03:44.391
  STEP: Destroying namespace "webhook-markers-2062" for this suite. @ 12/22/23 05:03:44.4
• [4.038 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 12/22/23 05:03:44.408
  Dec 22 05:03:44.408: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-webhook @ 12/22/23 05:03:44.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:44.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:44.438
  STEP: Setting up server cert @ 12/22/23 05:03:44.442
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/22/23 05:03:45.135
  STEP: Deploying the custom resource conversion webhook pod @ 12/22/23 05:03:45.14
  STEP: Wait for the deployment to be ready @ 12/22/23 05:03:45.152
  Dec 22 05:03:45.158: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E1222 05:03:45.356043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:46.356352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:03:47.167
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:03:47.177
  E1222 05:03:47.357079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:03:48.178: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Dec 22 05:03:48.184: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:03:48.360735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:49.360958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:50.361722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 12/22/23 05:03:50.757
  STEP: v2 custom resource should be converted @ 12/22/23 05:03:50.766
  Dec 22 05:03:51.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2581" for this suite. @ 12/22/23 05:03:51.347
• [6.946 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 12/22/23 05:03:51.356
  Dec 22 05:03:51.356: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename chunking @ 12/22/23 05:03:51.358
  E1222 05:03:51.362641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:03:51.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:03:51.403
  STEP: creating a large number of resources @ 12/22/23 05:03:51.408
  E1222 05:03:52.362852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:53.363517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:54.363833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:55.364560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:56.364549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:57.365075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:58.365227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:03:59.365355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:00.365704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:01.365918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:02.369882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:03.370484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:04.370878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:05.371830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:06.372559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:07.376333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:08.381491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 12/22/23 05:04:09.064
  Dec 22 05:04:09.114: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 22 05:04:09.163: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Dec 22 05:04:09.213: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 22 05:04:09.263: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 22 05:04:09.313: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 22 05:04:09.362: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  E1222 05:04:09.377268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:04:09.412: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 22 05:04:09.463: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 22 05:04:09.512: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 22 05:04:09.563: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 22 05:04:09.613: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Dec 22 05:04:09.663: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 22 05:04:09.712: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 22 05:04:09.763: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 22 05:04:09.813: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Dec 22 05:04:09.862: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 22 05:04:09.913: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 22 05:04:09.964: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Dec 22 05:04:10.012: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Dec 22 05:04:10.062: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 22 05:04:10.113: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 22 05:04:10.163: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Dec 22 05:04:10.212: INFO: Retrieved 17/17 results with rv 31453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 22 05:04:10.264: INFO: Retrieved 9/17 results with rv 31453 and continue 
  Dec 22 05:04:10.313: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 22 05:04:10.362: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E1222 05:04:10.377283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:04:10.413: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 22 05:04:10.463: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 22 05:04:10.512: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 22 05:04:10.564: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Dec 22 05:04:10.617: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 22 05:04:10.664: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 22 05:04:10.713: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 22 05:04:10.763: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 22 05:04:10.813: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Dec 22 05:04:10.862: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 22 05:04:10.913: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 22 05:04:10.965: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 22 05:04:11.014: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Dec 22 05:04:11.062: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 22 05:04:11.112: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 22 05:04:11.163: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Dec 22 05:04:11.213: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Dec 22 05:04:11.263: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 22 05:04:11.312: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 22 05:04:11.363: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E1222 05:04:11.378235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:04:11.413: INFO: Retrieved 17/17 results with rv 31457 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NTcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 22 05:04:11.463: INFO: Retrieved 9/17 results with rv 31457 and continue 
  Dec 22 05:04:11.513: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 22 05:04:11.563: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Dec 22 05:04:11.613: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 22 05:04:11.663: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 22 05:04:11.714: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 22 05:04:11.762: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Dec 22 05:04:11.812: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 22 05:04:11.862: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 22 05:04:11.912: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 22 05:04:11.962: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 22 05:04:12.013: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Dec 22 05:04:12.063: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 22 05:04:12.112: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 22 05:04:12.162: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 22 05:04:12.212: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Dec 22 05:04:12.263: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 22 05:04:12.312: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 22 05:04:12.365: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  E1222 05:04:12.379269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:04:12.412: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Dec 22 05:04:12.464: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 22 05:04:12.513: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 22 05:04:12.562: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Dec 22 05:04:12.613: INFO: Retrieved 17/17 results with rv 31460 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE0NjAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 22 05:04:12.663: INFO: Retrieved 9/17 results with rv 31460 and continue 
  STEP: retrieving those results all at once @ 12/22/23 05:04:12.663
  Dec 22 05:04:12.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1007" for this suite. @ 12/22/23 05:04:12.763
• [21.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/22/23 05:04:12.819
  Dec 22 05:04:12.819: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename certificates @ 12/22/23 05:04:12.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:12.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:12.858
  E1222 05:04:13.379901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 12/22/23 05:04:13.439
  STEP: getting /apis/certificates.k8s.io @ 12/22/23 05:04:13.445
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/22/23 05:04:13.447
  STEP: creating @ 12/22/23 05:04:13.448
  STEP: getting @ 12/22/23 05:04:13.465
  STEP: listing @ 12/22/23 05:04:13.47
  STEP: watching @ 12/22/23 05:04:13.473
  Dec 22 05:04:13.473: INFO: starting watch
  STEP: patching @ 12/22/23 05:04:13.475
  STEP: updating @ 12/22/23 05:04:13.481
  Dec 22 05:04:13.489: INFO: waiting for watch events with expected annotations
  Dec 22 05:04:13.489: INFO: saw patched and updated annotations
  STEP: getting /approval @ 12/22/23 05:04:13.489
  STEP: patching /approval @ 12/22/23 05:04:13.492
  STEP: updating /approval @ 12/22/23 05:04:13.498
  STEP: getting /status @ 12/22/23 05:04:13.507
  STEP: patching /status @ 12/22/23 05:04:13.51
  STEP: updating /status @ 12/22/23 05:04:13.518
  STEP: deleting @ 12/22/23 05:04:13.529
  STEP: deleting a collection @ 12/22/23 05:04:13.541
  Dec 22 05:04:13.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5959" for this suite. @ 12/22/23 05:04:13.558
• [0.747 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 12/22/23 05:04:13.567
  Dec 22 05:04:13.567: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 05:04:13.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:13.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:13.641
  STEP: creating a Namespace @ 12/22/23 05:04:13.646
  STEP: patching the Namespace @ 12/22/23 05:04:13.712
  STEP: get the Namespace and ensuring it has the label @ 12/22/23 05:04:13.72
  Dec 22 05:04:13.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6224" for this suite. @ 12/22/23 05:04:13.729
  STEP: Destroying namespace "nspatchtest-a3a182fe-42d0-49a7-b6dc-1268d43c18ee-4239" for this suite. @ 12/22/23 05:04:13.736
• [0.179 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/22/23 05:04:13.746
  Dec 22 05:04:13.746: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pods @ 12/22/23 05:04:13.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:13.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:13.788
  STEP: Create a pod @ 12/22/23 05:04:13.791
  E1222 05:04:14.380555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:15.381090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 12/22/23 05:04:15.81
  Dec 22 05:04:15.821: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Dec 22 05:04:15.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9521" for this suite. @ 12/22/23 05:04:15.826
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 12/22/23 05:04:15.832
  Dec 22 05:04:15.832: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 05:04:15.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:15.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:15.857
  Dec 22 05:04:15.861: INFO: Creating ReplicaSet my-hostname-basic-3dd2e579-6e16-4348-869d-3c95ff73bc49
  Dec 22 05:04:15.873: INFO: Pod name my-hostname-basic-3dd2e579-6e16-4348-869d-3c95ff73bc49: Found 0 pods out of 1
  E1222 05:04:16.381264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:17.381718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:18.381786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:19.382268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:20.382450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:04:20.878: INFO: Pod name my-hostname-basic-3dd2e579-6e16-4348-869d-3c95ff73bc49: Found 1 pods out of 1
  Dec 22 05:04:20.878: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-3dd2e579-6e16-4348-869d-3c95ff73bc49" is running
  Dec 22 05:04:20.882: INFO: Pod "my-hostname-basic-3dd2e579-6e16-4348-869d-3c95ff73bc49-kjttw" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 05:04:17 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 05:04:15 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 05:04:17 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 05:04:17 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 05:04:15 +0000 UTC Reason: Message:}])
  Dec 22 05:04:20.882: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/22/23 05:04:20.882
  Dec 22 05:04:20.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6733" for this suite. @ 12/22/23 05:04:20.903
• [5.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 12/22/23 05:04:20.91
  Dec 22 05:04:20.910: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:04:20.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:20.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:20.933
  STEP: Setting up server cert @ 12/22/23 05:04:20.991
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:04:21.359
  STEP: Deploying the webhook pod @ 12/22/23 05:04:21.37
  E1222 05:04:21.383206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 12/22/23 05:04:21.39
  Dec 22 05:04:21.401: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1222 05:04:22.383475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:23.383845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:04:23.413
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:04:23.424
  E1222 05:04:24.384708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:04:24.425: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/22/23 05:04:24.506
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/22/23 05:04:24.541
  Dec 22 05:04:24.541: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:04:24.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-903" for this suite. @ 12/22/23 05:04:24.625
  STEP: Destroying namespace "webhook-markers-3089" for this suite. @ 12/22/23 05:04:24.632
• [3.729 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/22/23 05:04:24.64
  Dec 22 05:04:24.640: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:04:24.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:24.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:24.663
  STEP: Creating projection with secret that has name projected-secret-test-c9321a83-acf3-496f-91e2-d3a677f25864 @ 12/22/23 05:04:24.667
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:04:24.675
  E1222 05:04:25.385301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:26.385459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:27.385539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:28.385625      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:04:28.698
  Dec 22 05:04:28.701: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-projected-secrets-17af9be4-2c4c-4073-9b74-a7b880b6ecab container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:04:28.706
  Dec 22 05:04:28.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-753" for this suite. @ 12/22/23 05:04:28.725
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 12/22/23 05:04:28.733
  Dec 22 05:04:28.733: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename gc @ 12/22/23 05:04:28.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:04:28.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:04:28.76
  STEP: create the rc @ 12/22/23 05:04:28.766
  W1222 05:04:28.773685      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1222 05:04:29.386358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:30.387333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:31.388417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:32.389079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:33.389866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:34.390397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/22/23 05:04:35.024
  E1222 05:04:35.391535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 12/22/23 05:04:35.399
  E1222 05:04:36.392195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:37.392469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:38.392749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:39.392888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:40.392978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/22/23 05:04:40.403
  E1222 05:04:41.393306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:42.393454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:43.393643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:44.394216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:45.394775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:46.395278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:47.395311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:48.395600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:49.396146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:50.396162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:51.396547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:52.396728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:53.396847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:54.397947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:55.401055      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:56.401307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:57.401438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:58.402482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:04:59.402480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:00.403541      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:01.403894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:02.404144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:03.404585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:04.405204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:05.406168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:06.406534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:07.407026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:08.407470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:09.407648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:10.408409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/22/23 05:05:10.415
  W1222 05:05:10.421328      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Dec 22 05:05:10.421: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 05:05:10.421: INFO: Deleting pod "simpletest.rc-22k97" in namespace "gc-7706"
  Dec 22 05:05:10.438: INFO: Deleting pod "simpletest.rc-2bnhc" in namespace "gc-7706"
  Dec 22 05:05:10.461: INFO: Deleting pod "simpletest.rc-2dvdr" in namespace "gc-7706"
  Dec 22 05:05:10.479: INFO: Deleting pod "simpletest.rc-2mtx4" in namespace "gc-7706"
  Dec 22 05:05:10.494: INFO: Deleting pod "simpletest.rc-2rdm8" in namespace "gc-7706"
  Dec 22 05:05:10.542: INFO: Deleting pod "simpletest.rc-2zf2n" in namespace "gc-7706"
  Dec 22 05:05:10.569: INFO: Deleting pod "simpletest.rc-2zjbn" in namespace "gc-7706"
  Dec 22 05:05:10.600: INFO: Deleting pod "simpletest.rc-4jszt" in namespace "gc-7706"
  Dec 22 05:05:10.649: INFO: Deleting pod "simpletest.rc-4mtkq" in namespace "gc-7706"
  Dec 22 05:05:11.168: INFO: Deleting pod "simpletest.rc-579kz" in namespace "gc-7706"
  Dec 22 05:05:11.222: INFO: Deleting pod "simpletest.rc-5cx9f" in namespace "gc-7706"
  Dec 22 05:05:11.267: INFO: Deleting pod "simpletest.rc-5pw2c" in namespace "gc-7706"
  Dec 22 05:05:11.302: INFO: Deleting pod "simpletest.rc-5wnqq" in namespace "gc-7706"
  Dec 22 05:05:11.332: INFO: Deleting pod "simpletest.rc-642v8" in namespace "gc-7706"
  Dec 22 05:05:11.372: INFO: Deleting pod "simpletest.rc-67zkh" in namespace "gc-7706"
  E1222 05:05:11.409091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:05:11.429: INFO: Deleting pod "simpletest.rc-6cr44" in namespace "gc-7706"
  Dec 22 05:05:11.546: INFO: Deleting pod "simpletest.rc-6nhw8" in namespace "gc-7706"
  Dec 22 05:05:11.605: INFO: Deleting pod "simpletest.rc-6vmrh" in namespace "gc-7706"
  Dec 22 05:05:11.636: INFO: Deleting pod "simpletest.rc-7gsgz" in namespace "gc-7706"
  Dec 22 05:05:11.752: INFO: Deleting pod "simpletest.rc-7nvc5" in namespace "gc-7706"
  Dec 22 05:05:11.900: INFO: Deleting pod "simpletest.rc-7ps5m" in namespace "gc-7706"
  Dec 22 05:05:11.993: INFO: Deleting pod "simpletest.rc-7v9zb" in namespace "gc-7706"
  Dec 22 05:05:12.012: INFO: Deleting pod "simpletest.rc-8247p" in namespace "gc-7706"
  Dec 22 05:05:12.068: INFO: Deleting pod "simpletest.rc-8bfjv" in namespace "gc-7706"
  Dec 22 05:05:12.133: INFO: Deleting pod "simpletest.rc-8hjmh" in namespace "gc-7706"
  Dec 22 05:05:12.169: INFO: Deleting pod "simpletest.rc-8sbk8" in namespace "gc-7706"
  Dec 22 05:05:12.273: INFO: Deleting pod "simpletest.rc-9llwj" in namespace "gc-7706"
  Dec 22 05:05:12.329: INFO: Deleting pod "simpletest.rc-9m6k5" in namespace "gc-7706"
  Dec 22 05:05:12.373: INFO: Deleting pod "simpletest.rc-9pkjp" in namespace "gc-7706"
  E1222 05:05:12.409636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:05:12.430: INFO: Deleting pod "simpletest.rc-9swfl" in namespace "gc-7706"
  Dec 22 05:05:12.470: INFO: Deleting pod "simpletest.rc-9z78x" in namespace "gc-7706"
  Dec 22 05:05:12.659: INFO: Deleting pod "simpletest.rc-b8rhd" in namespace "gc-7706"
  Dec 22 05:05:13.179: INFO: Deleting pod "simpletest.rc-bfpsv" in namespace "gc-7706"
  Dec 22 05:05:13.322: INFO: Deleting pod "simpletest.rc-bhnjn" in namespace "gc-7706"
  Dec 22 05:05:13.398: INFO: Deleting pod "simpletest.rc-blm2w" in namespace "gc-7706"
  E1222 05:05:13.410579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:05:13.446: INFO: Deleting pod "simpletest.rc-bpqgb" in namespace "gc-7706"
  Dec 22 05:05:13.504: INFO: Deleting pod "simpletest.rc-c2snh" in namespace "gc-7706"
  Dec 22 05:05:13.550: INFO: Deleting pod "simpletest.rc-cbx84" in namespace "gc-7706"
  Dec 22 05:05:13.593: INFO: Deleting pod "simpletest.rc-ckcmh" in namespace "gc-7706"
  Dec 22 05:05:13.644: INFO: Deleting pod "simpletest.rc-cnskx" in namespace "gc-7706"
  Dec 22 05:05:13.692: INFO: Deleting pod "simpletest.rc-cshcd" in namespace "gc-7706"
  Dec 22 05:05:13.716: INFO: Deleting pod "simpletest.rc-d97zt" in namespace "gc-7706"
  Dec 22 05:05:13.749: INFO: Deleting pod "simpletest.rc-dgzq9" in namespace "gc-7706"
  Dec 22 05:05:13.779: INFO: Deleting pod "simpletest.rc-dqjzv" in namespace "gc-7706"
  Dec 22 05:05:13.797: INFO: Deleting pod "simpletest.rc-fp6gn" in namespace "gc-7706"
  Dec 22 05:05:13.818: INFO: Deleting pod "simpletest.rc-fxf62" in namespace "gc-7706"
  Dec 22 05:05:13.836: INFO: Deleting pod "simpletest.rc-gn8h2" in namespace "gc-7706"
  Dec 22 05:05:13.857: INFO: Deleting pod "simpletest.rc-gqnxk" in namespace "gc-7706"
  Dec 22 05:05:13.893: INFO: Deleting pod "simpletest.rc-gs7d6" in namespace "gc-7706"
  Dec 22 05:05:13.934: INFO: Deleting pod "simpletest.rc-hbrhj" in namespace "gc-7706"
  Dec 22 05:05:13.986: INFO: Deleting pod "simpletest.rc-hcrzr" in namespace "gc-7706"
  Dec 22 05:05:14.083: INFO: Deleting pod "simpletest.rc-htdt4" in namespace "gc-7706"
  Dec 22 05:05:14.110: INFO: Deleting pod "simpletest.rc-hvxdm" in namespace "gc-7706"
  Dec 22 05:05:14.170: INFO: Deleting pod "simpletest.rc-j6tjk" in namespace "gc-7706"
  Dec 22 05:05:14.205: INFO: Deleting pod "simpletest.rc-jnsgf" in namespace "gc-7706"
  Dec 22 05:05:14.256: INFO: Deleting pod "simpletest.rc-kvfbq" in namespace "gc-7706"
  Dec 22 05:05:14.320: INFO: Deleting pod "simpletest.rc-l7dbz" in namespace "gc-7706"
  Dec 22 05:05:14.353: INFO: Deleting pod "simpletest.rc-ldmt8" in namespace "gc-7706"
  Dec 22 05:05:14.408: INFO: Deleting pod "simpletest.rc-lmsxj" in namespace "gc-7706"
  E1222 05:05:14.411060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:05:14.449: INFO: Deleting pod "simpletest.rc-mxxw8" in namespace "gc-7706"
  Dec 22 05:05:14.512: INFO: Deleting pod "simpletest.rc-mzxbc" in namespace "gc-7706"
  Dec 22 05:05:14.655: INFO: Deleting pod "simpletest.rc-n9zvt" in namespace "gc-7706"
  Dec 22 05:05:14.736: INFO: Deleting pod "simpletest.rc-nlwnz" in namespace "gc-7706"
  Dec 22 05:05:14.828: INFO: Deleting pod "simpletest.rc-nmxwt" in namespace "gc-7706"
  Dec 22 05:05:14.889: INFO: Deleting pod "simpletest.rc-p2xwg" in namespace "gc-7706"
  Dec 22 05:05:14.954: INFO: Deleting pod "simpletest.rc-ppchv" in namespace "gc-7706"
  Dec 22 05:05:15.045: INFO: Deleting pod "simpletest.rc-pqw5x" in namespace "gc-7706"
  Dec 22 05:05:15.108: INFO: Deleting pod "simpletest.rc-pvxw6" in namespace "gc-7706"
  Dec 22 05:05:15.214: INFO: Deleting pod "simpletest.rc-q6kdc" in namespace "gc-7706"
  E1222 05:05:15.411172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:05:15.521: INFO: Deleting pod "simpletest.rc-qfz9b" in namespace "gc-7706"
  Dec 22 05:05:15.553: INFO: Deleting pod "simpletest.rc-qklr4" in namespace "gc-7706"
  Dec 22 05:05:15.589: INFO: Deleting pod "simpletest.rc-qrx2n" in namespace "gc-7706"
  Dec 22 05:05:15.744: INFO: Deleting pod "simpletest.rc-r4g4d" in namespace "gc-7706"
  Dec 22 05:05:15.766: INFO: Deleting pod "simpletest.rc-rbxqp" in namespace "gc-7706"
  Dec 22 05:05:15.805: INFO: Deleting pod "simpletest.rc-rc2dc" in namespace "gc-7706"
  Dec 22 05:05:15.831: INFO: Deleting pod "simpletest.rc-rcdx2" in namespace "gc-7706"
  Dec 22 05:05:15.857: INFO: Deleting pod "simpletest.rc-rfdgx" in namespace "gc-7706"
  Dec 22 05:05:15.902: INFO: Deleting pod "simpletest.rc-rj8zq" in namespace "gc-7706"
  Dec 22 05:05:15.980: INFO: Deleting pod "simpletest.rc-rjljz" in namespace "gc-7706"
  Dec 22 05:05:16.034: INFO: Deleting pod "simpletest.rc-rkkr8" in namespace "gc-7706"
  Dec 22 05:05:16.093: INFO: Deleting pod "simpletest.rc-s9s26" in namespace "gc-7706"
  Dec 22 05:05:16.126: INFO: Deleting pod "simpletest.rc-sdrhl" in namespace "gc-7706"
  Dec 22 05:05:16.195: INFO: Deleting pod "simpletest.rc-smjwb" in namespace "gc-7706"
  Dec 22 05:05:16.231: INFO: Deleting pod "simpletest.rc-szrfh" in namespace "gc-7706"
  Dec 22 05:05:16.284: INFO: Deleting pod "simpletest.rc-tplqf" in namespace "gc-7706"
  Dec 22 05:05:16.316: INFO: Deleting pod "simpletest.rc-v7kcm" in namespace "gc-7706"
  Dec 22 05:05:16.345: INFO: Deleting pod "simpletest.rc-vbnjb" in namespace "gc-7706"
  Dec 22 05:05:16.381: INFO: Deleting pod "simpletest.rc-vnh9s" in namespace "gc-7706"
  E1222 05:05:16.412234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:05:16.469: INFO: Deleting pod "simpletest.rc-vss28" in namespace "gc-7706"
  Dec 22 05:05:16.491: INFO: Deleting pod "simpletest.rc-vwcf9" in namespace "gc-7706"
  Dec 22 05:05:16.547: INFO: Deleting pod "simpletest.rc-w4c9n" in namespace "gc-7706"
  Dec 22 05:05:16.626: INFO: Deleting pod "simpletest.rc-w8mxc" in namespace "gc-7706"
  Dec 22 05:05:16.698: INFO: Deleting pod "simpletest.rc-wpzcc" in namespace "gc-7706"
  Dec 22 05:05:16.758: INFO: Deleting pod "simpletest.rc-xbkvx" in namespace "gc-7706"
  Dec 22 05:05:16.788: INFO: Deleting pod "simpletest.rc-xf4xd" in namespace "gc-7706"
  Dec 22 05:05:16.978: INFO: Deleting pod "simpletest.rc-xgjm8" in namespace "gc-7706"
  Dec 22 05:05:17.038: INFO: Deleting pod "simpletest.rc-xthhk" in namespace "gc-7706"
  Dec 22 05:05:17.078: INFO: Deleting pod "simpletest.rc-xvs87" in namespace "gc-7706"
  Dec 22 05:05:17.102: INFO: Deleting pod "simpletest.rc-xzfdc" in namespace "gc-7706"
  Dec 22 05:05:17.149: INFO: Deleting pod "simpletest.rc-zmqx9" in namespace "gc-7706"
  Dec 22 05:05:17.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7706" for this suite. @ 12/22/23 05:05:17.196
• [48.477 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/22/23 05:05:17.211
  Dec 22 05:05:17.211: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename cronjob @ 12/22/23 05:05:17.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:05:17.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:05:17.292
  STEP: Creating a ForbidConcurrent cronjob @ 12/22/23 05:05:17.295
  STEP: Ensuring a job is scheduled @ 12/22/23 05:05:17.304
  E1222 05:05:17.413045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:18.413340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:19.414008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:20.414136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:21.415730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:22.415395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:23.416174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:24.416827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:25.416926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:26.417056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:27.417896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:28.417925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:29.418722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:30.419078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:31.419971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:32.420099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:33.420877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:34.421638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:35.421999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:36.422164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:37.422608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:38.422798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:39.423531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:40.423667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:41.424299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:42.424465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:43.425501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:44.425796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:45.426679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:46.426853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:47.427655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:48.427821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:49.428572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:50.428699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:51.429048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:52.429762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:53.430502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:54.430903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:55.431342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:56.431470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:57.432341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:58.432572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:05:59.433456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:00.433771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 12/22/23 05:06:01.308
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/22/23 05:06:01.311
  STEP: Ensuring no more jobs are scheduled @ 12/22/23 05:06:01.315
  E1222 05:06:01.434139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:02.434371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:03.434895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:04.435149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:05.435441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:06.435538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:07.435901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:08.436049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:09.437037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:10.437276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:11.438325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:12.438579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:13.438979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:14.439066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:15.439211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:16.439795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:17.440728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:18.440897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:19.441891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:20.442655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:21.443333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:22.443835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:23.444953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:24.445288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:25.446235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:26.446484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:27.447520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:28.447647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:29.448077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:30.448342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:31.448908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:32.449324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:33.449918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:34.450151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:35.450405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:36.450482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:37.450979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:38.451345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:39.451397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:40.452159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:41.453162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:42.453236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:43.453524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:44.454495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:45.455036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:46.455157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:47.455267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:48.456073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:49.456474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:50.456641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:51.457660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:52.458172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:53.459279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:54.459945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:55.461253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:56.461308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:57.462208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:58.462481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:06:59.463385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:00.463568      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:01.463694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:02.464183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:03.465362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:04.465823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:05.467617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:06.468119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:07.468725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:08.468889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:09.468991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:10.469293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:11.470101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:12.471095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:13.471874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:14.472682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:15.473277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:16.473400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:17.473797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:18.474030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:19.474951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:20.475456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:21.476561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:22.477037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:23.478080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:24.478550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:25.479620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:26.479583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:27.479973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:28.480363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:29.480398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:30.480687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:31.481718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:32.482139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:33.482354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:34.482890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:35.483769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:36.483855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:37.484434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:38.484571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:39.484753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:40.485542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:41.486186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:42.486336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:43.486730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:44.487734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:45.488649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:46.488774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:47.489702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:48.489876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:49.490827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:50.490973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:51.492020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:52.492169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:53.493046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:54.493296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:55.494171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:56.494298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:57.494915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:58.495156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:07:59.496106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:00.498249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:01.496522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:02.497203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:03.497869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:04.498446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:05.498714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:06.498971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:07.499501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:08.500217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:09.500046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:10.500158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:11.500570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:12.501041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:13.502003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:14.502153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:15.502504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:16.502582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:17.502902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:18.503056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:19.503885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:20.504945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:21.505035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:22.505595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:23.505715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:24.506264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:25.507099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:26.507230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:27.507962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:28.508870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:29.509926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:30.510645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:31.512400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:32.511847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:33.512089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:34.512701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:35.512827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:36.514655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:37.515166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:38.515413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:39.517622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:40.517745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:41.517852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:42.518345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:43.519384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:44.519443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:45.519921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:46.520149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:47.521006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:48.521319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:49.522276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:50.522416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:51.522980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:52.523141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:53.523689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:54.523892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:55.524603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:56.525198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:57.525689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:58.525781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:08:59.526349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:00.526537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:01.527190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:02.527588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:03.528092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:04.528224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:05.528396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:06.528640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:07.528826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:08.530226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:09.530783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:10.531123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:11.532066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:12.533077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:13.533207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:14.533996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:15.534862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:16.535798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:17.536250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:18.536512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:19.537224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:20.537263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:21.538383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:22.539170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:23.539826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:24.540145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:25.540787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:26.540691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:27.541408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:28.541582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:29.541758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:30.541908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:31.542052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:32.542413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:33.542899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:34.543018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:35.543190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:36.543931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:37.544094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:38.545041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:39.545658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:40.545831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:41.545940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:42.546345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:43.546697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:44.547498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:45.548286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:46.548442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:47.548546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:48.548735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:49.549485      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:50.550068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:51.550348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:52.551343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:53.552292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:54.552424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:55.553006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:56.553347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:57.553978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:58.554135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:09:59.555165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:00.555280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:01.555727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:02.556187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:03.564124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:04.564442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:05.565009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:06.565346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:07.566187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:08.566405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:09.566499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:10.567368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:11.567438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:12.568073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:13.568998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:14.569894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:15.569941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:16.570366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:17.570587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:18.571590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:19.572340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:20.572577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:21.573014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:22.573144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:23.573920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:24.574252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:25.574968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:26.575120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:27.576036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:28.576448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:29.577152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:30.577276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:31.578229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:32.578664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:33.579078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:34.579189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:35.580279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:36.580399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:37.580915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:38.580831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:39.581482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:40.581665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:41.582163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:42.582622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:43.583481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:44.584264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:45.584779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:46.585276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:47.585372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:48.586340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:49.587161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:50.587266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:51.588257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:52.589238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:53.590204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:54.590781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:55.591945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:56.592193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:57.592778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:58.592910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:10:59.593749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:00.593818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 12/22/23 05:11:01.321
  Dec 22 05:11:01.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1103" for this suite. @ 12/22/23 05:11:01.337
• [344.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 12/22/23 05:11:01.35
  Dec 22 05:11:01.350: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-webhook @ 12/22/23 05:11:01.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:11:01.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:11:01.392
  STEP: Setting up server cert @ 12/22/23 05:11:01.396
  E1222 05:11:01.594354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/22/23 05:11:02.122
  E1222 05:11:02.595174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the custom resource conversion webhook pod @ 12/22/23 05:11:02.725
  STEP: Wait for the deployment to be ready @ 12/22/23 05:11:02.749
  Dec 22 05:11:02.761: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1222 05:11:03.595272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:04.596216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:11:04.772
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:11:04.784
  E1222 05:11:05.596327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:11:05.784: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Dec 22 05:11:05.790: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:11:06.596814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:07.597239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 12/22/23 05:11:08.357
  STEP: Create a v2 custom resource @ 12/22/23 05:11:08.376
  STEP: List CRs in v1 @ 12/22/23 05:11:08.409
  STEP: List CRs in v2 @ 12/22/23 05:11:08.422
  E1222 05:11:08.597817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:11:08.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5870" for this suite. @ 12/22/23 05:11:08.995
• [7.651 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/22/23 05:11:09.001
  Dec 22 05:11:09.001: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename hostport @ 12/22/23 05:11:09.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:11:09.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:11:09.057
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/22/23 05:11:09.073
  E1222 05:11:09.597941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:10.598390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.14.155 on the node which pod1 resides and expect scheduled @ 12/22/23 05:11:11.111
  E1222 05:11:11.598512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:12.598624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:13.599442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:14.599879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:15.600001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:16.600204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:17.600213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:18.600514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:19.600653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:20.600771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:21.601549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:22.601763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.14.155 but use UDP protocol on the node which pod2 resides @ 12/22/23 05:11:23.149
  E1222 05:11:23.602432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:24.602610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:25.603134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:26.603267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/22/23 05:11:27.19
  Dec 22 05:11:27.190: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.14.155 http://127.0.0.1:54323/hostname] Namespace:hostport-258 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:11:27.190: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:11:27.190: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:11:27.190: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-258/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.14.155+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.14.155, port: 54323 @ 12/22/23 05:11:27.263
  Dec 22 05:11:27.264: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.14.155:54323/hostname] Namespace:hostport-258 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:11:27.264: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:11:27.264: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:11:27.265: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-258/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.14.155%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.14.155, port: 54323 UDP @ 12/22/23 05:11:27.342
  Dec 22 05:11:27.342: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.14.155 54323] Namespace:hostport-258 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:11:27.342: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:11:27.345: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:11:27.345: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-258/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.14.155+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1222 05:11:27.604327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:28.604677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:29.605079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:30.605288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:31.605435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:11:32.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-258" for this suite. @ 12/22/23 05:11:32.553
• [23.558 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 12/22/23 05:11:32.561
  Dec 22 05:11:32.561: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename server-version @ 12/22/23 05:11:32.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:11:32.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:11:32.586
  STEP: Request ServerVersion @ 12/22/23 05:11:32.589
  STEP: Confirm major version @ 12/22/23 05:11:32.59
  Dec 22 05:11:32.590: INFO: Major version: 1
  STEP: Confirm minor version @ 12/22/23 05:11:32.59
  Dec 22 05:11:32.590: INFO: cleanMinorVersion: 29
  Dec 22 05:11:32.590: INFO: Minor version: 29
  Dec 22 05:11:32.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-725" for this suite. @ 12/22/23 05:11:32.596
  E1222 05:11:32.605517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.044 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 12/22/23 05:11:32.606
  Dec 22 05:11:32.606: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:11:32.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:11:32.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:11:32.63
  STEP: Setting up server cert @ 12/22/23 05:11:32.659
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:11:33.125
  STEP: Deploying the webhook pod @ 12/22/23 05:11:33.133
  STEP: Wait for the deployment to be ready @ 12/22/23 05:11:33.145
  Dec 22 05:11:33.156: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1222 05:11:33.606508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:34.607510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:11:35.168
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:11:35.18
  E1222 05:11:35.607696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:11:36.180: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/22/23 05:11:36.187
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/22/23 05:11:36.209
  STEP: Creating a dummy validating-webhook-configuration object @ 12/22/23 05:11:36.232
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/22/23 05:11:36.242
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/22/23 05:11:36.249
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/22/23 05:11:36.262
  Dec 22 05:11:36.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5778" for this suite. @ 12/22/23 05:11:36.347
  STEP: Destroying namespace "webhook-markers-7417" for this suite. @ 12/22/23 05:11:36.354
• [3.756 seconds]
------------------------------
SSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 12/22/23 05:11:36.362
  Dec 22 05:11:36.362: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename taint-single-pod @ 12/22/23 05:11:36.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:11:36.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:11:36.384
  Dec 22 05:11:36.388: INFO: Waiting up to 1m0s for all nodes to be ready
  E1222 05:11:36.608725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:37.608868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:38.608959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:39.609516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:40.609950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:41.610784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:42.611514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:43.612175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:44.613233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:45.613445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:46.614396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:47.614548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:48.614784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:49.614932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:50.614957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:51.615248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:52.615736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:53.616062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:54.616252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:55.616420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:56.617497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:57.618044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:58.618772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:11:59.618927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:00.619711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:01.620007      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:02.621096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:03.621324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:04.622124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:05.622250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:06.623305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:07.623508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:08.624232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:09.624410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:10.624952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:11.625159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:12.626252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:13.627033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:14.627478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:15.627637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:16.627991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:17.629062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:18.629205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:19.629712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:20.629825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:21.630116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:22.630785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:23.631888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:24.633274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:25.633765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:26.634803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:27.635126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:28.635201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:29.635420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:30.635962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:31.636109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:32.636196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:33.637131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:34.637363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:35.638473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:12:36.388: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 05:12:36.392: INFO: Starting informer...
  STEP: Starting pod... @ 12/22/23 05:12:36.392
  Dec 22 05:12:36.608: INFO: Pod is running on ip-172-31-14-155.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/22/23 05:12:36.608
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/22/23 05:12:36.624
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/22/23 05:12:36.636
  Dec 22 05:12:36.636: INFO: Pod wasn't evicted. Proceeding
  Dec 22 05:12:36.636: INFO: Removing taint from Node
  E1222 05:12:36.638617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/22/23 05:12:36.664
  STEP: Waiting some time to make sure that toleration time passed. @ 12/22/23 05:12:36.759
  E1222 05:12:37.638786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:38.639735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:39.639858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:40.639980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:41.640533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:42.641522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:43.641649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:44.642049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:45.642530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:46.643461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:47.643834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:48.644120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:49.644517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:50.644798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:51.645349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:52.646306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:53.646547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:54.646655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:55.646762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:56.647805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:57.647937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:58.649030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:12:59.649293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:00.649459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:01.649670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:02.650264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:03.650488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:04.650605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:05.650866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:06.651006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:07.651980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:08.652452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:09.652774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:10.652936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:11.653259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:12.653664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:13.654326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:14.654487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:15.654631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:16.654763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:17.655059      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:18.655789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:19.655933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:20.656214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:21.656348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:22.656849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:23.657280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:24.657982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:25.658458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:26.658710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:27.658949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:28.659212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:29.659393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:30.659495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:31.659709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:32.660006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:33.660259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:34.660780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:35.661813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:36.662386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:37.662736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:38.662899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:39.663334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:40.663474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:41.663514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:42.663580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:43.664343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:44.664613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:45.664792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:46.664898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:47.665014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:48.665342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:49.666370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:50.666508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:51.666734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:13:51.761: INFO: Pod wasn't evicted. Test successful
  Dec 22 05:13:51.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9548" for this suite. @ 12/22/23 05:13:51.767
• [135.411 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/22/23 05:13:51.774
  Dec 22 05:13:51.774: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename cronjob @ 12/22/23 05:13:51.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:13:51.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:13:51.801
  STEP: Creating a cronjob @ 12/22/23 05:13:51.805
  STEP: Ensuring more than one job is running at a time @ 12/22/23 05:13:51.814
  E1222 05:13:52.667168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:53.667559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:54.667449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:55.667688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:56.667806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:57.668057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:58.668206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:13:59.668660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:00.668834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:01.669226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:02.670049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:03.670524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:04.670682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:05.671380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:06.671924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:07.672391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:08.673215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:09.673550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:10.673704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:11.674521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:12.675244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:13.676200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:14.676401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:15.676527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:16.676704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:17.676771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:18.676933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:19.677291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:20.677374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:21.677625      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:22.678171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:23.678450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:24.678894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:25.679062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:26.679153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:27.679266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:28.679396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:29.680401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:30.680517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:31.680738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:32.680868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:33.680979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:34.681276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:35.682378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:36.682454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:37.682696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:38.682839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:39.683338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:40.683791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:41.683938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:42.684105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:43.684975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:44.685298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:45.685471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:46.685599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:47.686367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:48.687224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:49.687670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:50.688305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:51.688446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:52.688847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:53.688918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:54.689316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:55.689491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:56.689630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:57.689758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:58.689921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:14:59.690351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:00.690541      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:01.690668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/22/23 05:15:01.818
  STEP: Removing cronjob @ 12/22/23 05:15:01.823
  Dec 22 05:15:01.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2373" for this suite. @ 12/22/23 05:15:01.834
• [70.067 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 12/22/23 05:15:01.842
  Dec 22 05:15:01.842: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename disruption @ 12/22/23 05:15:01.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:15:02.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:15:02.498
  STEP: creating the pdb @ 12/22/23 05:15:02.503
  STEP: Waiting for the pdb to be processed @ 12/22/23 05:15:02.509
  E1222 05:15:02.691749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:03.691886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 12/22/23 05:15:04.514
  STEP: Waiting for the pdb to be processed @ 12/22/23 05:15:04.545
  STEP: patching the pdb @ 12/22/23 05:15:04.554
  STEP: Waiting for the pdb to be processed @ 12/22/23 05:15:04.565
  E1222 05:15:04.691946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:05.692079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 12/22/23 05:15:06.575
  Dec 22 05:15:06.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5168" for this suite. @ 12/22/23 05:15:06.582
• [4.752 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 12/22/23 05:15:06.594
  Dec 22 05:15:06.594: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:15:06.595
  E1222 05:15:06.692212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:15:06.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:15:06.826
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:15:06.829
  E1222 05:15:07.692900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:08.693042      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:09.693201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:10.693390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:15:11.028
  Dec 22 05:15:11.031: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-0db8c9e6-b3ce-481b-956d-3c3317fbe051 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:15:11.044
  Dec 22 05:15:11.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-116" for this suite. @ 12/22/23 05:15:11.077
• [4.490 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 12/22/23 05:15:11.085
  Dec 22 05:15:11.085: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename podtemplate @ 12/22/23 05:15:11.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:15:11.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:15:11.165
  STEP: Create a pod template @ 12/22/23 05:15:11.169
  STEP: Replace a pod template @ 12/22/23 05:15:11.18
  Dec 22 05:15:11.190: INFO: Found updated podtemplate annotation: "true"

  Dec 22 05:15:11.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1724" for this suite. @ 12/22/23 05:15:11.195
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 12/22/23 05:15:11.205
  Dec 22 05:15:11.205: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:15:11.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:15:11.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:15:11.233
  STEP: Setting up server cert @ 12/22/23 05:15:11.269
  E1222 05:15:11.693710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:12.694593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:15:12.952
  STEP: Deploying the webhook pod @ 12/22/23 05:15:12.964
  STEP: Wait for the deployment to be ready @ 12/22/23 05:15:12.978
  Dec 22 05:15:12.989: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1222 05:15:13.695172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:14.695328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:15:15.002
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:15:15.017
  E1222 05:15:15.696063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:15:16.018: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 22 05:15:16.024: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4942-crds.webhook.example.com via the AdmissionRegistration API @ 12/22/23 05:15:16.534
  E1222 05:15:16.696274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/22/23 05:15:16.793
  E1222 05:15:17.696716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:18.697322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:19.698367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:15:19.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5368" for this suite. @ 12/22/23 05:15:19.901
  STEP: Destroying namespace "webhook-markers-9467" for this suite. @ 12/22/23 05:15:19.921
• [8.735 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 12/22/23 05:15:19.94
  Dec 22 05:15:19.940: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 05:15:19.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:15:19.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:15:19.965
  Dec 22 05:15:19.969: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:15:20.698489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/22/23 05:15:21.55
  Dec 22 05:15:21.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5201 --namespace=crd-publish-openapi-5201 create -f -'
  Dec 22 05:15:21.656: INFO: stderr: ""
  Dec 22 05:15:21.656: INFO: stdout: "e2e-test-crd-publish-openapi-8869-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Dec 22 05:15:21.656: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5201 --namespace=crd-publish-openapi-5201 delete e2e-test-crd-publish-openapi-8869-crds test-cr'
  E1222 05:15:21.698962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:15:21.746: INFO: stderr: ""
  Dec 22 05:15:21.746: INFO: stdout: "e2e-test-crd-publish-openapi-8869-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Dec 22 05:15:21.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5201 --namespace=crd-publish-openapi-5201 apply -f -'
  Dec 22 05:15:21.835: INFO: stderr: ""
  Dec 22 05:15:21.835: INFO: stdout: "e2e-test-crd-publish-openapi-8869-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Dec 22 05:15:21.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5201 --namespace=crd-publish-openapi-5201 delete e2e-test-crd-publish-openapi-8869-crds test-cr'
  Dec 22 05:15:21.920: INFO: stderr: ""
  Dec 22 05:15:21.920: INFO: stdout: "e2e-test-crd-publish-openapi-8869-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/22/23 05:15:21.92
  Dec 22 05:15:21.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5201 explain e2e-test-crd-publish-openapi-8869-crds'
  Dec 22 05:15:21.994: INFO: stderr: ""
  Dec 22 05:15:21.994: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8869-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1222 05:15:22.699164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:23.699802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:15:24.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5201" for this suite. @ 12/22/23 05:15:24.024
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 12/22/23 05:15:24.038
  Dec 22 05:15:24.038: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename podtemplate @ 12/22/23 05:15:24.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:15:24.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:15:24.065
  Dec 22 05:15:24.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5824" for this suite. @ 12/22/23 05:15:24.109
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/22/23 05:15:24.116
  Dec 22 05:15:24.116: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/22/23 05:15:24.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:15:24.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:15:24.143
  STEP: creating @ 12/22/23 05:15:24.147
  STEP: getting @ 12/22/23 05:15:24.176
  STEP: listing in namespace @ 12/22/23 05:15:24.19
  STEP: patching @ 12/22/23 05:15:24.214
  STEP: deleting @ 12/22/23 05:15:24.495
  Dec 22 05:15:24.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5456" for this suite. @ 12/22/23 05:15:24.52
• [0.409 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 12/22/23 05:15:24.526
  Dec 22 05:15:24.526: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename runtimeclass @ 12/22/23 05:15:24.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:15:24.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:15:24.551
  E1222 05:15:24.700488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:25.700547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:15:26.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5087" for this suite. @ 12/22/23 05:15:26.657
• [2.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 12/22/23 05:15:26.665
  Dec 22 05:15:26.665: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename endpointslice @ 12/22/23 05:15:26.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:15:26.699
  E1222 05:15:26.701758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:15:26.703
  E1222 05:15:27.703062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:28.703372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:29.703898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:30.704229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:31.704453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 12/22/23 05:15:31.808
  E1222 05:15:32.705466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:33.705560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:34.706111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:35.706259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:36.706373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 12/22/23 05:15:36.816
  E1222 05:15:37.707381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:38.707520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:39.707640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:40.707927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:41.708057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/22/23 05:15:41.824
  E1222 05:15:42.708981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:43.709152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:44.709278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:45.709443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:46.709688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 12/22/23 05:15:46.831
  Dec 22 05:15:47.195: INFO: EndpointSlice for Service endpointslice-4449/example-named-port not found
  E1222 05:15:47.709849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:48.710491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:49.710752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:50.711043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:51.712023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:52.712671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:53.712822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:54.713240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:55.713286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:56.714383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:15:57.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4449" for this suite. @ 12/22/23 05:15:57.204
• [30.546 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 12/22/23 05:15:57.213
  Dec 22 05:15:57.213: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:15:57.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:15:57.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:15:57.249
  STEP: creating all guestbook components @ 12/22/23 05:15:57.254
  Dec 22 05:15:57.254: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Dec 22 05:15:57.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 create -f -'
  Dec 22 05:15:57.451: INFO: stderr: ""
  Dec 22 05:15:57.451: INFO: stdout: "service/agnhost-replica created\n"
  Dec 22 05:15:57.451: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Dec 22 05:15:57.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 create -f -'
  Dec 22 05:15:57.626: INFO: stderr: ""
  Dec 22 05:15:57.627: INFO: stdout: "service/agnhost-primary created\n"
  Dec 22 05:15:57.627: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Dec 22 05:15:57.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 create -f -'
  E1222 05:15:57.714953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:15:57.793: INFO: stderr: ""
  Dec 22 05:15:57.793: INFO: stdout: "service/frontend created\n"
  Dec 22 05:15:57.793: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Dec 22 05:15:57.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 create -f -'
  Dec 22 05:15:57.918: INFO: stderr: ""
  Dec 22 05:15:57.918: INFO: stdout: "deployment.apps/frontend created\n"
  Dec 22 05:15:57.918: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Dec 22 05:15:57.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 create -f -'
  Dec 22 05:15:58.108: INFO: stderr: ""
  Dec 22 05:15:58.108: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Dec 22 05:15:58.108: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Dec 22 05:15:58.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 create -f -'
  Dec 22 05:15:58.274: INFO: stderr: ""
  Dec 22 05:15:58.274: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/22/23 05:15:58.274
  Dec 22 05:15:58.274: INFO: Waiting for all frontend pods to be Running.
  E1222 05:15:58.715082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:15:59.715123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:00.715210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:01.715354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:02.715558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:16:03.326: INFO: Waiting for frontend to serve content.
  Dec 22 05:16:03.339: INFO: Trying to add a new entry to the guestbook.
  Dec 22 05:16:03.356: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/22/23 05:16:03.374
  Dec 22 05:16:03.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 delete --grace-period=0 --force -f -'
  Dec 22 05:16:03.513: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:16:03.513: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/22/23 05:16:03.513
  Dec 22 05:16:03.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 delete --grace-period=0 --force -f -'
  Dec 22 05:16:03.616: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:16:03.616: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/22/23 05:16:03.616
  Dec 22 05:16:03.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 delete --grace-period=0 --force -f -'
  Dec 22 05:16:03.705: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:16:03.705: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/22/23 05:16:03.706
  Dec 22 05:16:03.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 delete --grace-period=0 --force -f -'
  E1222 05:16:03.716500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:16:03.789: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:16:03.789: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/22/23 05:16:03.789
  Dec 22 05:16:03.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 delete --grace-period=0 --force -f -'
  Dec 22 05:16:03.916: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:16:03.916: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/22/23 05:16:03.916
  Dec 22 05:16:03.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9885 delete --grace-period=0 --force -f -'
  Dec 22 05:16:04.073: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:16:04.073: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Dec 22 05:16:04.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9885" for this suite. @ 12/22/23 05:16:04.078
• [6.885 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 12/22/23 05:16:04.098
  Dec 22 05:16:04.099: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:16:04.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:16:04.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:16:04.152
  STEP: creating the pod @ 12/22/23 05:16:04.157
  Dec 22 05:16:04.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-7960 create -f -'
  Dec 22 05:16:04.411: INFO: stderr: ""
  Dec 22 05:16:04.412: INFO: stdout: "pod/pause created\n"
  E1222 05:16:04.716543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:05.717351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/22/23 05:16:06.419
  Dec 22 05:16:06.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-7960 label pods pause testing-label=testing-label-value'
  Dec 22 05:16:06.517: INFO: stderr: ""
  Dec 22 05:16:06.517: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/22/23 05:16:06.517
  Dec 22 05:16:06.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-7960 get pod pause -L testing-label'
  Dec 22 05:16:06.608: INFO: stderr: ""
  Dec 22 05:16:06.608: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/22/23 05:16:06.608
  Dec 22 05:16:06.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-7960 label pods pause testing-label-'
  Dec 22 05:16:06.699: INFO: stderr: ""
  Dec 22 05:16:06.699: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/22/23 05:16:06.699
  Dec 22 05:16:06.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-7960 get pod pause -L testing-label'
  E1222 05:16:06.718013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:16:06.803: INFO: stderr: ""
  Dec 22 05:16:06.803: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 12/22/23 05:16:06.803
  Dec 22 05:16:06.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-7960 delete --grace-period=0 --force -f -'
  Dec 22 05:16:06.952: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:16:06.952: INFO: stdout: "pod \"pause\" force deleted\n"
  Dec 22 05:16:06.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-7960 get rc,svc -l name=pause --no-headers'
  Dec 22 05:16:07.137: INFO: stderr: "No resources found in kubectl-7960 namespace.\n"
  Dec 22 05:16:07.137: INFO: stdout: ""
  Dec 22 05:16:07.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-7960 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 22 05:16:07.235: INFO: stderr: ""
  Dec 22 05:16:07.235: INFO: stdout: ""
  Dec 22 05:16:07.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7960" for this suite. @ 12/22/23 05:16:07.24
• [3.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 12/22/23 05:16:07.248
  Dec 22 05:16:07.248: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:16:07.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:16:07.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:16:07.274
  STEP: Counting existing ResourceQuota @ 12/22/23 05:16:07.278
  E1222 05:16:07.719430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:08.720157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:09.720954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:10.721744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:11.721820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/22/23 05:16:12.286
  E1222 05:16:12.721992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status is calculated @ 12/22/23 05:16:12.895
  E1222 05:16:13.722489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:14.722828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 12/22/23 05:16:14.9
  STEP: Creating a NodePort Service @ 12/22/23 05:16:14.927
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/22/23 05:16:14.953
  STEP: Ensuring resource quota status captures service creation @ 12/22/23 05:16:14.997
  E1222 05:16:15.723036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:16.723268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 12/22/23 05:16:17.001
  STEP: Ensuring resource quota status released usage @ 12/22/23 05:16:17.041
  E1222 05:16:17.723381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:18.723862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:16:19.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4196" for this suite. @ 12/22/23 05:16:19.446
• [12.217 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 12/22/23 05:16:19.466
  Dec 22 05:16:19.466: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/22/23 05:16:19.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:16:19.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:16:19.489
  STEP: fetching the /apis discovery document @ 12/22/23 05:16:19.492
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/22/23 05:16:19.494
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/22/23 05:16:19.494
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/22/23 05:16:19.494
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/22/23 05:16:19.495
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/22/23 05:16:19.495
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/22/23 05:16:19.497
  Dec 22 05:16:19.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6714" for this suite. @ 12/22/23 05:16:19.503
• [0.045 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 12/22/23 05:16:19.511
  Dec 22 05:16:19.511: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 05:16:19.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:16:19.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:16:19.535
  STEP: Creating service test in namespace statefulset-6153 @ 12/22/23 05:16:19.538
  STEP: Looking for a node to schedule stateful set and pod @ 12/22/23 05:16:19.553
  STEP: Creating pod with conflicting port in namespace statefulset-6153 @ 12/22/23 05:16:19.566
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6153 @ 12/22/23 05:16:19.574
  E1222 05:16:19.724806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:20.725099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-6153 @ 12/22/23 05:16:21.581
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6153 @ 12/22/23 05:16:21.588
  Dec 22 05:16:21.658: INFO: Observed stateful pod in namespace: statefulset-6153, name: ss-0, uid: 52678de9-c2bb-40dd-972a-f37fd593a229, status phase: Pending. Waiting for statefulset controller to delete.
  Dec 22 05:16:21.658: INFO: Observed stateful pod in namespace: statefulset-6153, name: ss-0, uid: 52678de9-c2bb-40dd-972a-f37fd593a229, status phase: Failed. Waiting for statefulset controller to delete.
  Dec 22 05:16:21.664: INFO: Observed stateful pod in namespace: statefulset-6153, name: ss-0, uid: 52678de9-c2bb-40dd-972a-f37fd593a229, status phase: Failed. Waiting for statefulset controller to delete.
  Dec 22 05:16:21.664: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-6153
  STEP: Removing pod with conflicting port in namespace statefulset-6153 @ 12/22/23 05:16:21.664
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6153 and will be in running state @ 12/22/23 05:16:21.709
  E1222 05:16:21.725626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:22.726347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:23.726728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:24.727241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:16:25.720: INFO: Deleting all statefulset in ns statefulset-6153
  Dec 22 05:16:25.723: INFO: Scaling statefulset ss to 0
  E1222 05:16:25.727506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:26.727679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:27.727843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:28.728081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:29.728360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:30.728501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:31.728619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:32.729079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:33.729455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:34.729618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:35.729754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:16:35.745: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 05:16:35.751: INFO: Deleting statefulset ss
  Dec 22 05:16:35.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6153" for this suite. @ 12/22/23 05:16:35.769
• [16.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 12/22/23 05:16:35.785
  Dec 22 05:16:35.785: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 05:16:35.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:16:35.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:16:35.83
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:16:35.838
  E1222 05:16:36.730152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:37.730234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:38.730410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:39.730892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:16:39.866
  Dec 22 05:16:39.870: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-94f013a1-bfab-4a43-843f-7aac7aaa5d76 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:16:39.875
  Dec 22 05:16:39.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-932" for this suite. @ 12/22/23 05:16:39.895
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 12/22/23 05:16:39.907
  Dec 22 05:16:39.907: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pod-network-test @ 12/22/23 05:16:39.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:16:39.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:16:39.934
  STEP: Performing setup for networking test in namespace pod-network-test-1948 @ 12/22/23 05:16:39.941
  STEP: creating a selector @ 12/22/23 05:16:39.941
  STEP: Creating the service pods in kubernetes @ 12/22/23 05:16:39.941
  Dec 22 05:16:39.941: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1222 05:16:40.731350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:41.731741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:42.732424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:43.732437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:44.733079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:45.733281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:46.733537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:47.733647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:48.733875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:49.734496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:50.734643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:51.734762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/22/23 05:16:52.047
  E1222 05:16:52.735852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:53.736119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:16:54.076: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Dec 22 05:16:54.077: INFO: Going to poll 10.42.1.72 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:16:54.079: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.72:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1948 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:16:54.079: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:16:54.080: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:16:54.080: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1948/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.72%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:16:54.144: INFO: Found all 1 expected endpoints: [netserver-0]
  Dec 22 05:16:54.144: INFO: Going to poll 10.42.2.206 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:16:54.147: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.206:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1948 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:16:54.147: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:16:54.148: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:16:54.148: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1948/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.206%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:16:54.202: INFO: Found all 1 expected endpoints: [netserver-1]
  Dec 22 05:16:54.202: INFO: Going to poll 10.42.0.53 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:16:54.205: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.53:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1948 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:16:54.205: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:16:54.206: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:16:54.206: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1948/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.53%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:16:54.269: INFO: Found all 1 expected endpoints: [netserver-2]
  Dec 22 05:16:54.269: INFO: Going to poll 10.42.3.108 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Dec 22 05:16:54.273: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.3.108:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1948 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:16:54.273: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:16:54.274: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:16:54.274: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1948/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.3.108%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:16:54.340: INFO: Found all 1 expected endpoints: [netserver-3]
  Dec 22 05:16:54.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1948" for this suite. @ 12/22/23 05:16:54.344
• [14.443 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 12/22/23 05:16:54.35
  Dec 22 05:16:54.350: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename limitrange @ 12/22/23 05:16:54.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:16:54.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:16:54.375
  STEP: Creating a LimitRange @ 12/22/23 05:16:54.379
  STEP: Setting up watch @ 12/22/23 05:16:54.379
  STEP: Submitting a LimitRange @ 12/22/23 05:16:54.483
  STEP: Verifying LimitRange creation was observed @ 12/22/23 05:16:54.489
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/22/23 05:16:54.489
  Dec 22 05:16:54.502: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Dec 22 05:16:54.502: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/22/23 05:16:54.502
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/22/23 05:16:54.511
  Dec 22 05:16:54.517: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Dec 22 05:16:54.517: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/22/23 05:16:54.517
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/22/23 05:16:54.523
  Dec 22 05:16:54.527: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Dec 22 05:16:54.528: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/22/23 05:16:54.528
  STEP: Failing to create a Pod with more than max resources @ 12/22/23 05:16:54.531
  STEP: Updating a LimitRange @ 12/22/23 05:16:54.536
  STEP: Verifying LimitRange updating is effective @ 12/22/23 05:16:54.541
  E1222 05:16:54.736585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:55.736734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 12/22/23 05:16:56.546
  STEP: Failing to create a Pod with more than max resources @ 12/22/23 05:16:56.552
  STEP: Deleting a LimitRange @ 12/22/23 05:16:56.555
  STEP: Verifying the LimitRange was deleted @ 12/22/23 05:16:56.566
  E1222 05:16:56.737559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:57.737732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:58.737844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:16:59.738275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:00.738650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:01.570: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/22/23 05:17:01.57
  Dec 22 05:17:01.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2306" for this suite. @ 12/22/23 05:17:01.594
• [7.254 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 12/22/23 05:17:01.604
  Dec 22 05:17:01.604: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:17:01.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:01.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:01.675
  STEP: Creating configMap with name projected-configmap-test-volume-1b3673eb-8adb-44f9-8fc2-9604df0324c7 @ 12/22/23 05:17:01.697
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:17:01.718
  E1222 05:17:01.738859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:02.739101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:03.740968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:04.741175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:05.741289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:17:06.083
  Dec 22 05:17:06.088: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-projected-configmaps-96d0e74f-863d-408f-b85a-1d150139b858 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:17:06.101
  Dec 22 05:17:06.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4830" for this suite. @ 12/22/23 05:17:06.126
• [4.531 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 12/22/23 05:17:06.138
  Dec 22 05:17:06.138: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 05:17:06.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:06.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:06.167
  STEP: creating service multiprotocol-test in namespace services-9933 @ 12/22/23 05:17:06.17
  STEP: creating pod pod1 in namespace services-9933 @ 12/22/23 05:17:06.226
  STEP: Creating pod pod1 in namespace services-9933 @ 12/22/23 05:17:06.226
  E1222 05:17:06.741413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:07.742350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-9933 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 12/22/23 05:17:08.268
  Dec 22 05:17:08.278: INFO: successfully validated that service multiprotocol-test in namespace services-9933 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 12/22/23 05:17:08.278
  Dec 22 05:17:08.278: INFO: Creating new exec pod
  E1222 05:17:08.742959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:09.743422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:10.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.251 80'
  Dec 22 05:17:10.456: INFO: stderr: "+ + echonc -v hostName -t\n -w 2 10.43.107.251 80\nConnection to 10.43.107.251 80 port [tcp/http] succeeded!\n"
  Dec 22 05:17:10.456: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:17:10.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.107.251 80'
  E1222 05:17:10.744306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:11.744390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:12.744948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:13.745194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:14.599: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.107.251 80\nConnection to 10.43.107.251 80 port [udp/*] succeeded!\n"
  Dec 22 05:17:14.599: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 12/22/23 05:17:14.599
  Dec 22 05:17:14.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.251 80'
  E1222 05:17:14.745508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:14.777: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.107.251 80\nConnection to 10.43.107.251 80 port [tcp/http] succeeded!\n"
  Dec 22 05:17:14.777: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:17:14.777: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.107.251 80'
  E1222 05:17:15.746418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:16.746919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:17.747302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:18.748409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:18.924: INFO: stderr: "+ + ncecho -v hostName -u\n -w 2 10.43.107.251 80\nConnection to 10.43.107.251 80 port [udp/*] succeeded!\n"
  Dec 22 05:17:18.924: INFO: stdout: ""
  Dec 22 05:17:18.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.107.251 80'
  E1222 05:17:19.748501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:20.748631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:21.748698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:22.749223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:23.079: INFO: stderr: "+ + echonc -v hostName -u\n -w 2 10.43.107.251 80\nConnection to 10.43.107.251 80 port [udp/*] succeeded!\n"
  Dec 22 05:17:23.079: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 12/22/23 05:17:23.079
  Dec 22 05:17:23.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.107.251 80'
  E1222 05:17:23.749489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:24.750416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:25.751029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:26.751333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:27.244: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.107.251 80\nConnection to 10.43.107.251 80 port [udp/*] succeeded!\n"
  Dec 22 05:17:27.245: INFO: stdout: "pod1"
  Dec 22 05:17:27.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.251 80'
  E1222 05:17:27.751493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:28.751631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:29.392: INFO: rc: 1
  Dec 22 05:17:29.392: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.251 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.107.251 80
  + echo hostName
  nc: connect to 10.43.107.251 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 22 05:17:29.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.251 80'
  E1222 05:17:29.752147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:30.752298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:31.547: INFO: rc: 1
  Dec 22 05:17:31.547: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.251 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.107.251 80
  + echo hostName
  nc: connect to 10.43.107.251 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 22 05:17:31.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.251 80'
  E1222 05:17:31.753026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:32.753481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:33.687: INFO: rc: 1
  Dec 22 05:17:33.688: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-9933 exec execpodl22cs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.251 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.107.251 80
  nc: connect to 10.43.107.251 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 22 05:17:33.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9933" for this suite. @ 12/22/23 05:17:33.692
  E1222 05:17:33.753909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
• [27.716 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/22/23 05:17:33.854
  Dec 22 05:17:33.854: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-runtime @ 12/22/23 05:17:33.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:34.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:34.244
  STEP: create the container @ 12/22/23 05:17:34.251
  W1222 05:17:34.269297      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/22/23 05:17:34.269
  E1222 05:17:34.753748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:35.753870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:36.754874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:37.755508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:38.755656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/22/23 05:17:39.323
  STEP: the container should be terminated @ 12/22/23 05:17:39.331
  STEP: the termination message should be set @ 12/22/23 05:17:39.332
  Dec 22 05:17:39.332: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/22/23 05:17:39.332
  Dec 22 05:17:39.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9537" for this suite. @ 12/22/23 05:17:39.357
• [5.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 12/22/23 05:17:39.365
  Dec 22 05:17:39.365: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename ingressclass @ 12/22/23 05:17:39.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:39.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:39.389
  STEP: getting /apis @ 12/22/23 05:17:39.392
  STEP: getting /apis/networking.k8s.io @ 12/22/23 05:17:39.398
  STEP: getting /apis/networking.k8s.iov1 @ 12/22/23 05:17:39.4
  STEP: creating @ 12/22/23 05:17:39.401
  STEP: getting @ 12/22/23 05:17:39.417
  STEP: listing @ 12/22/23 05:17:39.42
  STEP: watching @ 12/22/23 05:17:39.423
  Dec 22 05:17:39.423: INFO: starting watch
  STEP: patching @ 12/22/23 05:17:39.425
  STEP: updating @ 12/22/23 05:17:39.45
  Dec 22 05:17:39.482: INFO: waiting for watch events with expected annotations
  Dec 22 05:17:39.482: INFO: saw patched and updated annotations
  STEP: deleting @ 12/22/23 05:17:39.482
  STEP: deleting a collection @ 12/22/23 05:17:39.501
  Dec 22 05:17:39.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6716" for this suite. @ 12/22/23 05:17:39.548
• [0.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 12/22/23 05:17:39.56
  Dec 22 05:17:39.560: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename runtimeclass @ 12/22/23 05:17:39.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:39.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:39.585
  E1222 05:17:39.756166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:40.756318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:41.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7739" for this suite. @ 12/22/23 05:17:41.62
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 12/22/23 05:17:41.626
  Dec 22 05:17:41.627: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:17:41.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:41.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:41.653
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:17:41.656
  E1222 05:17:41.757253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:42.757788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:43.758692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:44.759207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:17:45.679
  Dec 22 05:17:45.682: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod downwardapi-volume-0a66d4ae-6cb1-4a47-938b-45929375ce51 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:17:45.698
  Dec 22 05:17:45.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1377" for this suite. @ 12/22/23 05:17:45.723
• [4.106 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 12/22/23 05:17:45.732
  Dec 22 05:17:45.732: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:17:45.737
  E1222 05:17:45.760038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:45.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:45.985
  STEP: Setting up server cert @ 12/22/23 05:17:46.023
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:17:46.734
  STEP: Deploying the webhook pod @ 12/22/23 05:17:46.741
  STEP: Wait for the deployment to be ready @ 12/22/23 05:17:46.753
  E1222 05:17:46.760254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:46.761: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1222 05:17:47.760380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:48.760562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:17:48.77
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:17:48.785
  E1222 05:17:49.760937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:49.786: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/22/23 05:17:49.793
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/22/23 05:17:49.794
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/22/23 05:17:49.794
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/22/23 05:17:49.794
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/22/23 05:17:49.796
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/22/23 05:17:49.796
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/22/23 05:17:49.797
  Dec 22 05:17:49.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5848" for this suite. @ 12/22/23 05:17:49.842
  STEP: Destroying namespace "webhook-markers-8258" for this suite. @ 12/22/23 05:17:49.853
• [4.129 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 12/22/23 05:17:49.862
  Dec 22 05:17:49.862: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename dns @ 12/22/23 05:17:49.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:50.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:50.099
  STEP: Creating a test headless service @ 12/22/23 05:17:50.104
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7552 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7552;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7552 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7552;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7552.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7552.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7552.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7552.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7552.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7552.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7552.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7552.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7552.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7552.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7552.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7552.svc;check="$$(dig +notcp +noall +answer +search 170.197.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.197.170_udp@PTR;check="$$(dig +tcp +noall +answer +search 170.197.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.197.170_tcp@PTR;sleep 1; done
   @ 12/22/23 05:17:50.126
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7552 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7552;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7552 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7552;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7552.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7552.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7552.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7552.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7552.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7552.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7552.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7552.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7552.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7552.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7552.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7552.svc;check="$$(dig +notcp +noall +answer +search 170.197.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.197.170_udp@PTR;check="$$(dig +tcp +noall +answer +search 170.197.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.197.170_tcp@PTR;sleep 1; done
   @ 12/22/23 05:17:50.126
  STEP: creating a pod to probe DNS @ 12/22/23 05:17:50.126
  STEP: submitting the pod to kubernetes @ 12/22/23 05:17:50.126
  E1222 05:17:50.761789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:51.762212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/22/23 05:17:52.158
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:17:52.161
  Dec 22 05:17:52.167: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.170: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.174: INFO: Unable to read wheezy_udp@dns-test-service.dns-7552 from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.177: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7552 from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.180: INFO: Unable to read wheezy_udp@dns-test-service.dns-7552.svc from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.182: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7552.svc from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.187: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7552.svc from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.190: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7552.svc from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.206: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.209: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.212: INFO: Unable to read jessie_udp@dns-test-service.dns-7552 from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.215: INFO: Unable to read jessie_tcp@dns-test-service.dns-7552 from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.219: INFO: Unable to read jessie_udp@dns-test-service.dns-7552.svc from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.223: INFO: Unable to read jessie_tcp@dns-test-service.dns-7552.svc from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.227: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7552.svc from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.230: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7552.svc from pod dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0: the server could not find the requested resource (get pods dns-test-eab8f0e4-9878-4010-a485-d91999711ee0)
  Dec 22 05:17:52.245: INFO: Lookups using dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7552 wheezy_tcp@dns-test-service.dns-7552 wheezy_udp@dns-test-service.dns-7552.svc wheezy_tcp@dns-test-service.dns-7552.svc wheezy_udp@_http._tcp.dns-test-service.dns-7552.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7552.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7552 jessie_tcp@dns-test-service.dns-7552 jessie_udp@dns-test-service.dns-7552.svc jessie_tcp@dns-test-service.dns-7552.svc jessie_udp@_http._tcp.dns-test-service.dns-7552.svc jessie_tcp@_http._tcp.dns-test-service.dns-7552.svc]

  Dec 22 05:17:52.251: INFO: Pod client logs for webserver: 
  Dec 22 05:17:52.259: INFO: Pod client logs for querier: 
  Dec 22 05:17:52.264: INFO: Pod client logs for jessie-querier: 
  E1222 05:17:52.762225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:53.762392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:54.762769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:55.763089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:56.763172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:17:57.245: INFO: DNS probes using dns-7552/dns-test-eab8f0e4-9878-4010-a485-d91999711ee0 succeeded

  STEP: deleting the pod @ 12/22/23 05:17:57.245
  STEP: deleting the test service @ 12/22/23 05:17:57.27
  STEP: deleting the test headless service @ 12/22/23 05:17:57.343
  Dec 22 05:17:57.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7552" for this suite. @ 12/22/23 05:17:57.363
• [7.508 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 12/22/23 05:17:57.37
  Dec 22 05:17:57.370: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename security-context @ 12/22/23 05:17:57.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:17:57.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:17:57.393
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/22/23 05:17:57.396
  E1222 05:17:57.763911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:58.764304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:17:59.764732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:00.765294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:18:01.429
  Dec 22 05:18:01.432: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod security-context-2fd2baee-591c-441b-bfd3-32c64c2f6abb container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:18:01.437
  Dec 22 05:18:01.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-420" for this suite. @ 12/22/23 05:18:01.459
• [4.095 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 12/22/23 05:18:01.467
  Dec 22 05:18:01.467: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:18:01.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:01.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:01.505
  STEP: creating a Deployment @ 12/22/23 05:18:01.512
  Dec 22 05:18:01.512: INFO: Creating simple deployment test-deployment-4f6kc
  Dec 22 05:18:01.549: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 18, 1, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 18, 1, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"test-deployment-4f6kc-5d576bd769\""}}, CollisionCount:(*int32)(nil)}
  E1222 05:18:01.765746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:02.766731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 12/22/23 05:18:03.555
  Dec 22 05:18:03.559: INFO: Deployment test-deployment-4f6kc has Conditions: [{Available True 2023-12-22 05:18:02 +0000 UTC 2023-12-22 05:18:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-12-22 05:18:02 +0000 UTC 2023-12-22 05:18:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4f6kc-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/22/23 05:18:03.559
  Dec 22 05:18:03.569: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 18, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 18, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 18, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 18, 1, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-4f6kc-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/22/23 05:18:03.569
  Dec 22 05:18:03.571: INFO: Observed &Deployment event: ADDED
  Dec 22 05:18:03.572: INFO: Observed Deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:18:01 +0000 UTC 2023-12-22 05:18:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4f6kc-5d576bd769"}
  Dec 22 05:18:03.572: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:18:03.572: INFO: Observed Deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:18:01 +0000 UTC 2023-12-22 05:18:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4f6kc-5d576bd769"}
  Dec 22 05:18:03.573: INFO: Observed Deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-22 05:18:01 +0000 UTC 2023-12-22 05:18:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 22 05:18:03.573: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:18:03.573: INFO: Observed Deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-22 05:18:01 +0000 UTC 2023-12-22 05:18:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 22 05:18:03.573: INFO: Observed Deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:18:01 +0000 UTC 2023-12-22 05:18:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4f6kc-5d576bd769" is progressing.}
  Dec 22 05:18:03.573: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:18:03.573: INFO: Observed Deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-22 05:18:02 +0000 UTC 2023-12-22 05:18:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 22 05:18:03.573: INFO: Observed Deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:18:02 +0000 UTC 2023-12-22 05:18:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4f6kc-5d576bd769" has successfully progressed.}
  Dec 22 05:18:03.574: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:18:03.574: INFO: Observed Deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-22 05:18:02 +0000 UTC 2023-12-22 05:18:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 22 05:18:03.574: INFO: Observed Deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:18:02 +0000 UTC 2023-12-22 05:18:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4f6kc-5d576bd769" has successfully progressed.}
  Dec 22 05:18:03.574: INFO: Found Deployment test-deployment-4f6kc in namespace deployment-6837 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 05:18:03.574: INFO: Deployment test-deployment-4f6kc has an updated status
  STEP: patching the Statefulset Status @ 12/22/23 05:18:03.574
  Dec 22 05:18:03.574: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 22 05:18:03.581: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/22/23 05:18:03.581
  Dec 22 05:18:03.584: INFO: Observed &Deployment event: ADDED
  Dec 22 05:18:03.584: INFO: Observed deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:18:01 +0000 UTC 2023-12-22 05:18:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4f6kc-5d576bd769"}
  Dec 22 05:18:03.584: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:18:03.584: INFO: Observed deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:18:01 +0000 UTC 2023-12-22 05:18:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4f6kc-5d576bd769"}
  Dec 22 05:18:03.584: INFO: Observed deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-22 05:18:01 +0000 UTC 2023-12-22 05:18:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 22 05:18:03.584: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:18:03.584: INFO: Observed deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-22 05:18:01 +0000 UTC 2023-12-22 05:18:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 22 05:18:03.584: INFO: Observed deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:18:01 +0000 UTC 2023-12-22 05:18:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4f6kc-5d576bd769" is progressing.}
  Dec 22 05:18:03.584: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:18:03.584: INFO: Observed deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-22 05:18:02 +0000 UTC 2023-12-22 05:18:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 22 05:18:03.584: INFO: Observed deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:18:02 +0000 UTC 2023-12-22 05:18:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4f6kc-5d576bd769" has successfully progressed.}
  Dec 22 05:18:03.585: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:18:03.585: INFO: Observed deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-22 05:18:02 +0000 UTC 2023-12-22 05:18:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 22 05:18:03.585: INFO: Observed deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-22 05:18:02 +0000 UTC 2023-12-22 05:18:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4f6kc-5d576bd769" has successfully progressed.}
  Dec 22 05:18:03.585: INFO: Observed deployment test-deployment-4f6kc in namespace deployment-6837 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 05:18:03.585: INFO: Observed &Deployment event: MODIFIED
  Dec 22 05:18:03.585: INFO: Found deployment test-deployment-4f6kc in namespace deployment-6837 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Dec 22 05:18:03.586: INFO: Deployment test-deployment-4f6kc has a patched status
  Dec 22 05:18:03.589: INFO: Deployment "test-deployment-4f6kc":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-4f6kc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6837",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b3c0838-cbf8-40e4-a16b-2acdf2ef2d78",
      ResourceVersion: (string) (len=5) "38312",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 05:18:03.598: INFO: New ReplicaSet "test-deployment-4f6kc-5d576bd769" of Deployment "test-deployment-4f6kc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-4f6kc-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6837",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c26b33a-2acb-48d6-a12d-6f684019e4e7",
      ResourceVersion: (string) (len=5) "38303",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-4f6kc",
          UID: (types.UID) (len=36) "6b3c0838-cbf8-40e4-a16b-2acdf2ef2d78",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 62 33  |k:{\"uid\":\"6b3|
              00000120  63 30 38 33 38 2d 63 62  66 38 2d 34 30 65 34 2d  |c0838-cbf8-40e4-|
              00000130  61 31 36 62 2d 32 61 63  64 66 32 65 66 32 64 37  |a16b-2acdf2ef2d7|
              00000140  38 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |8\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:18:03.605: INFO: Pod "test-deployment-4f6kc-5d576bd769-p4j47" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-4f6kc-5d576bd769-p4j47",
      GenerateName: (string) (len=33) "test-deployment-4f6kc-5d576bd769-",
      Namespace: (string) (len=15) "deployment-6837",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c18b0ab6-8b64-4371-8b33-25838428d3d9",
      ResourceVersion: (string) (len=5) "38302",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-4f6kc-5d576bd769",
          UID: (types.UID) (len=36) "1c26b33a-2acb-48d6-a12d-6f684019e4e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 31 63 32 36 62 33 33  61 2d 32 61 63 62 2d 34  |"1c26b33a-2acb-4|
              000000a0  38 64 36 2d 61 31 32 64  2d 36 66 36 38 34 30 31  |8d6-a12d-6f68401|
              000000b0  39 65 34 65 37 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |9e4e7\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 32 31  34 5c 22 7d 22 3a 7b 22  |.42.2.214\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ksp25",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ksp25",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) (len=11) "10.42.2.214",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.214"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838819082,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://45e8f2d3e61cd60313e1d2a5c98fa0cdaa9ce87e8fda5ad8e91d1adfe42b66d7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:18:03.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6837" for this suite. @ 12/22/23 05:18:03.615
• [2.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/22/23 05:18:03.626
  Dec 22 05:18:03.626: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 05:18:03.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:03.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:03.651
  Dec 22 05:18:03.682: INFO: Create a RollingUpdate DaemonSet
  Dec 22 05:18:03.689: INFO: Check that daemon pods launch on every node of the cluster
  Dec 22 05:18:03.699: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:18:03.699: INFO: Node ip-172-31-11-160.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:18:03.769691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:04.700: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 05:18:04.700: INFO: Node ip-172-31-11-160.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:18:04.770081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:05.697: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 05:18:05.697: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  Dec 22 05:18:05.697: INFO: Update the DaemonSet to trigger a rollout
  Dec 22 05:18:05.706: INFO: Updating DaemonSet daemon-set
  E1222 05:18:05.770345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:06.770797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:07.724: INFO: Roll back the DaemonSet before rollout is complete
  Dec 22 05:18:07.736: INFO: Updating DaemonSet daemon-set
  Dec 22 05:18:07.736: INFO: Make sure DaemonSet rollback is complete
  Dec 22 05:18:07.740: INFO: Wrong image for pod: daemon-set-c8npw. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Dec 22 05:18:07.741: INFO: Pod daemon-set-c8npw is not available
  E1222 05:18:07.771289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:08.772201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:09.745: INFO: Pod daemon-set-d5vpf is not available
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 05:18:09.767
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9086, will wait for the garbage collector to delete the pods @ 12/22/23 05:18:09.767
  E1222 05:18:09.772496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:09.832: INFO: Deleting DaemonSet.extensions daemon-set took: 7.528105ms
  Dec 22 05:18:09.933: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.578547ms
  E1222 05:18:10.773226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:11.436: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:18:11.436: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 05:18:11.438: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38474"},"items":null}

  Dec 22 05:18:11.441: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38474"},"items":null}

  Dec 22 05:18:11.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9086" for this suite. @ 12/22/23 05:18:11.462
• [7.843 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/22/23 05:18:11.469
  Dec 22 05:18:11.469: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:18:11.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:11.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:11.492
  STEP: creating a Deployment @ 12/22/23 05:18:11.499
  STEP: waiting for Deployment to be created @ 12/22/23 05:18:11.507
  STEP: waiting for all Replicas to be Ready @ 12/22/23 05:18:11.509
  Dec 22 05:18:11.510: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:18:11.511: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:18:11.527: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:18:11.527: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:18:11.556: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:18:11.556: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:18:11.584: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 22 05:18:11.585: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1222 05:18:11.773708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:12.637: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Dec 22 05:18:12.637: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E1222 05:18:12.774630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:13.322: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/22/23 05:18:13.322
  Dec 22 05:18:13.337: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/22/23 05:18:13.338
  Dec 22 05:18:13.340: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0
  Dec 22 05:18:13.340: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0
  Dec 22 05:18:13.340: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0
  Dec 22 05:18:13.340: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0
  Dec 22 05:18:13.340: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0
  Dec 22 05:18:13.340: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0
  Dec 22 05:18:13.340: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0
  Dec 22 05:18:13.340: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 0
  Dec 22 05:18:13.341: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  Dec 22 05:18:13.341: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  Dec 22 05:18:13.341: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:13.341: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:13.341: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:13.341: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:13.353: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:13.353: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:13.375: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:13.376: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:13.406: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  Dec 22 05:18:13.406: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  Dec 22 05:18:13.406: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  Dec 22 05:18:13.406: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  E1222 05:18:13.775041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:14.707: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:14.707: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:14.741: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  STEP: listing Deployments @ 12/22/23 05:18:14.741
  Dec 22 05:18:14.745: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/22/23 05:18:14.745
  Dec 22 05:18:14.767: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/22/23 05:18:14.767
  E1222 05:18:14.775399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:14.777: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:18:14.796: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:18:14.865: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:18:14.896: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:18:14.927: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:18:15.666: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:18:15.703: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:18:15.723: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:18:15.745: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 22 05:18:15.758: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1222 05:18:15.776058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:16.776156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:17.014: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/22/23 05:18:17.062
  STEP: fetching the DeploymentStatus @ 12/22/23 05:18:17.078
  Dec 22 05:18:17.086: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  Dec 22 05:18:17.086: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  Dec 22 05:18:17.086: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  Dec 22 05:18:17.086: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  Dec 22 05:18:17.087: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 1
  Dec 22 05:18:17.087: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:17.087: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:17.087: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:17.088: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:17.088: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 2
  Dec 22 05:18:17.088: INFO: observed Deployment test-deployment in namespace deployment-8074 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/22/23 05:18:17.088
  Dec 22 05:18:17.100: INFO: observed event type MODIFIED
  Dec 22 05:18:17.100: INFO: observed event type MODIFIED
  Dec 22 05:18:17.100: INFO: observed event type MODIFIED
  Dec 22 05:18:17.101: INFO: observed event type MODIFIED
  Dec 22 05:18:17.101: INFO: observed event type MODIFIED
  Dec 22 05:18:17.101: INFO: observed event type MODIFIED
  Dec 22 05:18:17.101: INFO: observed event type MODIFIED
  Dec 22 05:18:17.101: INFO: observed event type MODIFIED
  Dec 22 05:18:17.101: INFO: observed event type MODIFIED
  Dec 22 05:18:17.102: INFO: observed event type MODIFIED
  Dec 22 05:18:17.102: INFO: observed event type MODIFIED
  Dec 22 05:18:17.102: INFO: observed event type MODIFIED
  Dec 22 05:18:17.102: INFO: observed event type MODIFIED
  Dec 22 05:18:17.103: INFO: observed event type MODIFIED
  Dec 22 05:18:17.110: INFO: Log out all the ReplicaSets if there is no deployment created
  Dec 22 05:18:17.122: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e35fa791-14eb-412b-8805-e021427f7fa9",
      ResourceVersion: (string) (len=5) "38653",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6f629c35-89d3-46bd-abce-95040a97c0d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 66 36 32  39 63 33 35 2d 38 39 64  |":\"6f629c35-89d|
              00000130  33 2d 34 36 62 64 2d 61  62 63 65 2d 39 35 30 34  |3-46bd-abce-9504|
              00000140  30 61 39 37 63 30 64 31  5c 22 7d 22 3a 7b 7d 7d  |0a97c0d1\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 22 05:18:17.136: INFO: pod: "test-deployment-64fd565c98-7gs4f":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-7gs4f",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7aaf5840-3627-4593-bb44-f76752e385ff",
      ResourceVersion: (string) (len=5) "38663",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "e35fa791-14eb-412b-8805-e021427f7fa9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 33 35 66 61 37 39 31  |uid\":\"e35fa791|
              000000a0  2d 31 34 65 62 2d 34 31  32 62 2d 38 38 30 35 2d  |-14eb-412b-8805-|
              000000b0  65 30 32 31 34 32 37 66  37 66 61 39 5c 22 7d 22  |e021427f7fa9\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=701) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |:phase":{},"f:po|
              00000260  64 49 50 22 3a 7b 7d 2c  22 66 3a 70 6f 64 49 50  |dIP":{},"f:podIP|
              00000270  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000280  22 69 70 5c 22 3a 5c 22  31 30 2e 34 32 2e 31 2e  |"ip\":\"10.42.1.|
              00000290  37 34 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |74\"}":{".":{},"|
              000002a0  66 3a 69 70 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 74  |f:ip":{}}},"f:st|
              000002b0  61 72 74 54 69 6d 65 22  3a 7b 7d 7d 7d           |artTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w5sv9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w5sv9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-160.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.160",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.160"
        }
      },
      PodIP: (string) (len=10) "10.42.1.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838819095,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838819096,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://2af2dbb34cfc4c493886fb15e4ba82184d52420598b5443edc1d3d041b5c12e9"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://2af2dbb34cfc4c493886fb15e4ba82184d52420598b5443edc1d3d041b5c12e9",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 22 05:18:17.140: INFO: pod: "test-deployment-64fd565c98-jlm27":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-jlm27",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "202f87bd-e925-447b-9086-5c05fc041893",
      ResourceVersion: (string) (len=5) "38647",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "e35fa791-14eb-412b-8805-e021427f7fa9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 33 35 66 61 37 39 31  |uid\":\"e35fa791|
              000000a0  2d 31 34 65 62 2d 34 31  32 62 2d 38 38 30 35 2d  |-14eb-412b-8805-|
              000000b0  65 30 32 31 34 32 37 66  37 66 61 39 5c 22 7d 22  |e021427f7fa9\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 32 31  37 5c 22 7d 22 3a 7b 22  |.42.2.217\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c7s8q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c7s8q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) (len=11) "10.42.2.217",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.217"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838819094,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://a36dbc205e00f2116db5c573ba03eb15e538a0e5c80a306d043e244d448297d0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 22 05:18:17.143: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "476e38f4-3fee-4261-947d-467fc6702bb5",
      ResourceVersion: (string) (len=5) "38557",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6f629c35-89d3-46bd-abce-95040a97c0d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 66 36 32  39 63 33 35 2d 38 39 64  |":\"6f629c35-89d|
              00000130  33 2d 34 36 62 64 2d 61  62 63 65 2d 39 35 30 34  |3-46bd-abce-9504|
              00000140  30 61 39 37 63 30 64 31  5c 22 7d 22 3a 7b 7d 7d  |0a97c0d1\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 22 05:18:17.148: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3098f5a3-5a99-4fc3-829e-dc65117a9c8b",
      ResourceVersion: (string) (len=5) "38642",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6f629c35-89d3-46bd-abce-95040a97c0d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 66 36 32  39 63 33 35 2d 38 39 64  |":\"6f629c35-89d|
              00000130  33 2d 34 36 62 64 2d 61  62 63 65 2d 39 35 30 34  |3-46bd-abce-9504|
              00000140  30 61 39 37 63 30 64 31  5c 22 7d 22 3a 7b 7d 7d  |0a97c0d1\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 22 05:18:17.157: INFO: pod: "test-deployment-79ff746c4-6qpf7":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-6qpf7",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "897bacbc-bd68-4db1-be5c-984b4130e1d6",
      ResourceVersion: (string) (len=5) "38640",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "3098f5a3-5a99-4fc3-829e-dc65117a9c8b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 30 39 38 66 35 61 33  |uid\":\"3098f5a3|
              000000a0  2d 35 61 39 39 2d 34 66  63 33 2d 38 32 39 65 2d  |-5a99-4fc3-829e-|
              000000b0  64 63 36 35 31 31 37 61  39 63 38 62 5c 22 7d 22  |dc65117a9c8b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 31  33 5c 22 7d 22 3a 7b 22  |.42.3.113\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x2gzg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x2gzg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-8-254.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.254"
        }
      },
      PodIP: (string) (len=11) "10.42.3.113",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.113"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838819096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9fe71275b8d29d4c654227a1f4b9f8d6fe5b0b2da05fbd4d60a2a82bae94d08e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 22 05:18:17.159: INFO: pod: "test-deployment-79ff746c4-j85s9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-j85s9",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "206f8818-b80d-4f00-adea-320967edc38a",
      ResourceVersion: (string) (len=5) "38595",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "3098f5a3-5a99-4fc3-829e-dc65117a9c8b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 30 39 38 66 35 61 33  |uid\":\"3098f5a3|
              000000a0  2d 35 61 39 39 2d 34 66  63 33 2d 38 32 39 65 2d  |-5a99-4fc3-829e-|
              000000b0  64 63 36 35 31 31 37 61  39 63 38 62 5c 22 7d 22  |dc65117a9c8b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 32 31  38 5c 22 7d 22 3a 7b 22  |.42.2.218\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m9mll",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m9mll",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) (len=11) "10.42.2.218",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.218"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838819095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://541ff28507ec9003191e55b09c993b6733438b02701558da7f4e7b373c6e5c06",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 22 05:18:17.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8074" for this suite. @ 12/22/23 05:18:17.167
• [5.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 12/22/23 05:18:17.178
  Dec 22 05:18:17.178: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename runtimeclass @ 12/22/23 05:18:17.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:17.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:17.247
  STEP: Deleting RuntimeClass runtimeclass-5746-delete-me @ 12/22/23 05:18:17.272
  STEP: Waiting for the RuntimeClass to disappear @ 12/22/23 05:18:17.295
  Dec 22 05:18:17.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5746" for this suite. @ 12/22/23 05:18:17.334
• [0.174 seconds]
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/22/23 05:18:17.352
  Dec 22 05:18:17.352: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/22/23 05:18:17.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:17.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:17.386
  STEP: Setting up the test @ 12/22/23 05:18:17.39
  STEP: Creating hostNetwork=false pod @ 12/22/23 05:18:17.39
  E1222 05:18:17.777240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:18.777260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 12/22/23 05:18:19.432
  E1222 05:18:19.778427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:20.778686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 12/22/23 05:18:21.453
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/22/23 05:18:21.453
  Dec 22 05:18:21.453: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:18:21.453: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:18:21.454: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:18:21.454: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 22 05:18:21.579: INFO: Exec stderr: ""
  Dec 22 05:18:21.579: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:18:21.579: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:18:21.580: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:18:21.580: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 22 05:18:21.637: INFO: Exec stderr: ""
  Dec 22 05:18:21.637: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:18:21.637: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:18:21.638: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:18:21.638: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 22 05:18:21.694: INFO: Exec stderr: ""
  Dec 22 05:18:21.694: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:18:21.694: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:18:21.695: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:18:21.695: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 22 05:18:21.770: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/22/23 05:18:21.77
  Dec 22 05:18:21.770: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:18:21.770: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:18:21.771: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:18:21.771: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E1222 05:18:21.779451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:21.829: INFO: Exec stderr: ""
  Dec 22 05:18:21.829: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:18:21.829: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:18:21.830: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:18:21.830: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Dec 22 05:18:21.896: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/22/23 05:18:21.896
  Dec 22 05:18:21.896: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:18:21.896: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:18:21.897: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:18:21.897: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 22 05:18:21.958: INFO: Exec stderr: ""
  Dec 22 05:18:21.958: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:18:21.958: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:18:21.959: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:18:21.959: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 22 05:18:22.046: INFO: Exec stderr: ""
  Dec 22 05:18:22.046: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:18:22.047: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:18:22.048: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:18:22.048: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 22 05:18:22.118: INFO: Exec stderr: ""
  Dec 22 05:18:22.118: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:18:22.118: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:18:22.118: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:18:22.118: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 22 05:18:22.169: INFO: Exec stderr: ""
  Dec 22 05:18:22.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6232" for this suite. @ 12/22/23 05:18:22.174
• [4.839 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 12/22/23 05:18:22.194
  Dec 22 05:18:22.194: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 05:18:22.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:22.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:22.221
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4341 @ 12/22/23 05:18:22.225
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/22/23 05:18:22.24
  STEP: creating service externalsvc in namespace services-4341 @ 12/22/23 05:18:22.24
  STEP: creating replication controller externalsvc in namespace services-4341 @ 12/22/23 05:18:22.258
  I1222 05:18:22.265888      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-4341, replica count: 2
  E1222 05:18:22.780798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:23.781450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:24.781482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1222 05:18:25.317256      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/22/23 05:18:25.323
  Dec 22 05:18:25.340: INFO: Creating new exec pod
  E1222 05:18:25.782384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:26.782859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:27.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-4341 exec execpodrkxx8 -- /bin/sh -x -c nslookup nodeport-service.services-4341.svc.cluster.local'
  Dec 22 05:18:27.555: INFO: stderr: "+ nslookup nodeport-service.services-4341.svc.cluster.local\n"
  Dec 22 05:18:27.555: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-4341.svc.cluster.local\tcanonical name = externalsvc.services-4341.svc.cluster.local.\nName:\texternalsvc.services-4341.svc.cluster.local\nAddress: 10.43.109.28\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4341, will wait for the garbage collector to delete the pods @ 12/22/23 05:18:27.555
  Dec 22 05:18:27.620: INFO: Deleting ReplicationController externalsvc took: 11.040766ms
  Dec 22 05:18:27.720: INFO: Terminating ReplicationController externalsvc pods took: 100.142103ms
  E1222 05:18:27.782907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:28.783848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:29.784834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:30.785191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:31.337: INFO: Cleaning up the NodePort to ExternalName test service
  Dec 22 05:18:31.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4341" for this suite. @ 12/22/23 05:18:31.352
• [9.166 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 12/22/23 05:18:31.361
  Dec 22 05:18:31.362: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename podtemplate @ 12/22/23 05:18:31.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:31.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:31.387
  STEP: Create set of pod templates @ 12/22/23 05:18:31.39
  Dec 22 05:18:31.397: INFO: created test-podtemplate-1
  Dec 22 05:18:31.404: INFO: created test-podtemplate-2
  Dec 22 05:18:31.412: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/22/23 05:18:31.412
  STEP: delete collection of pod templates @ 12/22/23 05:18:31.415
  Dec 22 05:18:31.415: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/22/23 05:18:31.429
  Dec 22 05:18:31.429: INFO: requesting list of pod templates to confirm quantity
  Dec 22 05:18:31.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5278" for this suite. @ 12/22/23 05:18:31.437
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 12/22/23 05:18:31.446
  Dec 22 05:18:31.446: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/22/23 05:18:31.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:31.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:31.47
  Dec 22 05:18:31.474: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:18:31.785845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:32.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5234" for this suite. @ 12/22/23 05:18:32.038
• [0.600 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 12/22/23 05:18:32.047
  Dec 22 05:18:32.047: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:18:32.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:32.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:32.071
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/22/23 05:18:32.075
  E1222 05:18:32.785946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:33.786057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:34.786219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:35.786327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:18:36.096
  Dec 22 05:18:36.100: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-f25b967e-208a-404f-9e2a-7ef06804a531 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:18:36.106
  Dec 22 05:18:36.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8308" for this suite. @ 12/22/23 05:18:36.129
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 12/22/23 05:18:36.138
  Dec 22 05:18:36.138: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename dns @ 12/22/23 05:18:36.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:36.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:36.171
  STEP: Creating a test headless service @ 12/22/23 05:18:36.174
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8566.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8566.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8566.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8566.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8566.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8566.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8566.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8566.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8566.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8566.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 105.235.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.235.105_udp@PTR;check="$$(dig +tcp +noall +answer +search 105.235.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.235.105_tcp@PTR;sleep 1; done
   @ 12/22/23 05:18:36.198
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8566.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8566.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8566.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8566.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8566.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8566.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8566.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8566.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8566.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8566.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 105.235.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.235.105_udp@PTR;check="$$(dig +tcp +noall +answer +search 105.235.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.235.105_tcp@PTR;sleep 1; done
   @ 12/22/23 05:18:36.198
  STEP: creating a pod to probe DNS @ 12/22/23 05:18:36.198
  STEP: submitting the pod to kubernetes @ 12/22/23 05:18:36.199
  E1222 05:18:36.786712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:37.786892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/22/23 05:18:38.225
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:18:38.228
  Dec 22 05:18:38.235: INFO: Unable to read wheezy_udp@dns-test-service.dns-8566.svc.cluster.local from pod dns-8566/dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb: the server could not find the requested resource (get pods dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb)
  Dec 22 05:18:38.240: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8566.svc.cluster.local from pod dns-8566/dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb: the server could not find the requested resource (get pods dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb)
  Dec 22 05:18:38.248: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local from pod dns-8566/dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb: the server could not find the requested resource (get pods dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb)
  Dec 22 05:18:38.260: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local from pod dns-8566/dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb: the server could not find the requested resource (get pods dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb)
  Dec 22 05:18:38.283: INFO: Unable to read jessie_udp@dns-test-service.dns-8566.svc.cluster.local from pod dns-8566/dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb: the server could not find the requested resource (get pods dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb)
  Dec 22 05:18:38.288: INFO: Unable to read jessie_tcp@dns-test-service.dns-8566.svc.cluster.local from pod dns-8566/dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb: the server could not find the requested resource (get pods dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb)
  Dec 22 05:18:38.292: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local from pod dns-8566/dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb: the server could not find the requested resource (get pods dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb)
  Dec 22 05:18:38.309: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local from pod dns-8566/dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb: the server could not find the requested resource (get pods dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb)
  Dec 22 05:18:38.331: INFO: Lookups using dns-8566/dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb failed for: [wheezy_udp@dns-test-service.dns-8566.svc.cluster.local wheezy_tcp@dns-test-service.dns-8566.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local jessie_udp@dns-test-service.dns-8566.svc.cluster.local jessie_tcp@dns-test-service.dns-8566.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8566.svc.cluster.local]

  Dec 22 05:18:38.337: INFO: Pod client logs for webserver: 
  Dec 22 05:18:38.342: INFO: Pod client logs for querier: 
  Dec 22 05:18:38.347: INFO: Pod client logs for jessie-querier: 
  E1222 05:18:38.787071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:39.787285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:40.787421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:41.787566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:42.788164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:43.293: INFO: DNS probes using dns-8566/dns-test-0eb4e787-08a0-43b1-9745-6964f2b759eb succeeded

  STEP: deleting the pod @ 12/22/23 05:18:43.293
  STEP: deleting the test service @ 12/22/23 05:18:43.334
  STEP: deleting the test headless service @ 12/22/23 05:18:43.374
  Dec 22 05:18:43.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8566" for this suite. @ 12/22/23 05:18:43.397
• [7.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/22/23 05:18:43.407
  Dec 22 05:18:43.407: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename proxy @ 12/22/23 05:18:43.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:43.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:43.443
  Dec 22 05:18:43.447: INFO: Creating pod...
  E1222 05:18:43.788462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:44.788704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:45.472: INFO: Creating service...
  Dec 22 05:18:45.485: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy/some/path/with/DELETE
  Dec 22 05:18:45.494: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 22 05:18:45.494: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy/some/path/with/GET
  Dec 22 05:18:45.498: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Dec 22 05:18:45.498: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy/some/path/with/HEAD
  Dec 22 05:18:45.502: INFO: http.Client request:HEAD | StatusCode:200
  Dec 22 05:18:45.502: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy/some/path/with/OPTIONS
  Dec 22 05:18:45.506: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 22 05:18:45.506: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy/some/path/with/PATCH
  Dec 22 05:18:45.510: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 22 05:18:45.510: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy/some/path/with/POST
  Dec 22 05:18:45.513: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 22 05:18:45.513: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy/some/path/with/PUT
  Dec 22 05:18:45.517: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 22 05:18:45.517: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/services/test-service/proxy/some/path/with/DELETE
  Dec 22 05:18:45.522: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 22 05:18:45.522: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/services/test-service/proxy/some/path/with/GET
  Dec 22 05:18:45.526: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Dec 22 05:18:45.527: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/services/test-service/proxy/some/path/with/HEAD
  Dec 22 05:18:45.541: INFO: http.Client request:HEAD | StatusCode:200
  Dec 22 05:18:45.541: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/services/test-service/proxy/some/path/with/OPTIONS
  Dec 22 05:18:45.548: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 22 05:18:45.549: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/services/test-service/proxy/some/path/with/PATCH
  Dec 22 05:18:45.554: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 22 05:18:45.554: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/services/test-service/proxy/some/path/with/POST
  Dec 22 05:18:45.559: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 22 05:18:45.559: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-610/services/test-service/proxy/some/path/with/PUT
  Dec 22 05:18:45.566: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 22 05:18:45.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-610" for this suite. @ 12/22/23 05:18:45.574
• [2.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 12/22/23 05:18:45.583
  Dec 22 05:18:45.583: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubelet-test @ 12/22/23 05:18:45.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:45.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:45.604
  E1222 05:18:45.789551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:46.789665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:18:47.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4663" for this suite. @ 12/22/23 05:18:47.699
• [2.125 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/22/23 05:18:47.709
  Dec 22 05:18:47.709: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:18:47.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:47.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:47.746
  STEP: Creating secret with name secret-test-map-00e0c91e-5a68-4ca6-871a-daf54b3a760a @ 12/22/23 05:18:47.758
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:18:47.764
  E1222 05:18:47.790374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:48.790667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:49.791218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:50.791387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:51.791642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:18:51.817
  Dec 22 05:18:51.825: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod pod-secrets-ed384685-6d47-4ef5-9291-b3e79b95ff2d container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:18:51.836
  Dec 22 05:18:51.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4593" for this suite. @ 12/22/23 05:18:51.857
• [4.157 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/22/23 05:18:51.866
  Dec 22 05:18:51.866: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename subpath @ 12/22/23 05:18:51.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:18:51.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:18:51.889
  STEP: Setting up data @ 12/22/23 05:18:51.892
  STEP: Creating pod pod-subpath-test-configmap-nq2v @ 12/22/23 05:18:51.905
  STEP: Creating a pod to test atomic-volume-subpath @ 12/22/23 05:18:51.905
  E1222 05:18:52.792362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:53.792453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:54.792974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:55.793300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:56.794356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:57.794653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:58.794886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:18:59.795817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:00.795969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:01.796218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:02.797142      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:03.797298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:04.797490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:05.798385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:06.799473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:07.799805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:08.799665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:09.800140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:10.800393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:11.800617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:12.801410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:13.802371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:19:14.315
  Dec 22 05:19:14.319: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod pod-subpath-test-configmap-nq2v container test-container-subpath-configmap-nq2v: <nil>
  STEP: delete the pod @ 12/22/23 05:19:14.325
  E1222 05:19:14.802803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pod pod-subpath-test-configmap-nq2v @ 12/22/23 05:19:14.907
  Dec 22 05:19:14.907: INFO: Deleting pod "pod-subpath-test-configmap-nq2v" in namespace "subpath-1270"
  Dec 22 05:19:14.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1270" for this suite. @ 12/22/23 05:19:14.914
• [23.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 12/22/23 05:19:14.925
  Dec 22 05:19:14.925: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sched-preemption @ 12/22/23 05:19:14.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:19:14.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:19:14.948
  Dec 22 05:19:14.971: INFO: Waiting up to 1m0s for all nodes to be ready
  E1222 05:19:15.802975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:16.803639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:17.804623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:18.804905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:19.805269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:20.805492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:21.806518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:22.807394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:23.807513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:24.807948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:25.808145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:26.808801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:27.809757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:28.810558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:29.810709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:30.810789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:31.811227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:32.811391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:33.811624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:34.812178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:35.812290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:36.813099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:37.813198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:38.813297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:39.813465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:40.813600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:41.814427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:42.814542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:43.814661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:44.814813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:45.815173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:46.815449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:47.815720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:48.816576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:49.817306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:50.817445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:51.818357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:52.818416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:53.818552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:54.818964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:55.819092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:56.819194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:57.819320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:58.819580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:19:59.820108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:00.820227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:01.820956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:02.820940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:03.821314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:04.822341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:05.822431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:06.822804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:07.823058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:08.823218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:09.823318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:10.823437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:11.823587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:12.824090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:13.825187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:14.825290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:14.976: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/22/23 05:20:14.979
  Dec 22 05:20:15.007: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Dec 22 05:20:15.019: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Dec 22 05:20:15.064: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Dec 22 05:20:15.080: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Dec 22 05:20:15.193: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Dec 22 05:20:15.236: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  Dec 22 05:20:15.276: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  Dec 22 05:20:15.290: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/22/23 05:20:15.29
  E1222 05:20:15.825742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:16.825797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/22/23 05:20:17.328
  E1222 05:20:17.826949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:18.827213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:19.828274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:20.828315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:21.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9151" for this suite. @ 12/22/23 05:20:21.475
• [66.557 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 12/22/23 05:20:21.483
  Dec 22 05:20:21.483: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 05:20:21.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:20:21.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:20:21.514
  STEP: Updating Namespace "namespaces-3827" @ 12/22/23 05:20:21.519
  Dec 22 05:20:21.533: INFO: Namespace "namespaces-3827" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"1c3f25ab-b78f-4716-9d38-999c2e46ee7c", "kubernetes.io/metadata.name":"namespaces-3827", "namespaces-3827":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Dec 22 05:20:21.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3827" for this suite. @ 12/22/23 05:20:21.539
• [0.063 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 12/22/23 05:20:21.547
  Dec 22 05:20:21.547: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubelet-test @ 12/22/23 05:20:21.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:20:21.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:20:21.572
  STEP: Waiting for pod completion @ 12/22/23 05:20:21.589
  E1222 05:20:21.828493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:22.829258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:23.829823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:24.830092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:25.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2098" for this suite. @ 12/22/23 05:20:25.617
• [4.081 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/22/23 05:20:25.628
  Dec 22 05:20:25.628: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pods @ 12/22/23 05:20:25.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:20:25.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:20:25.651
  STEP: creating the pod @ 12/22/23 05:20:25.654
  STEP: submitting the pod to kubernetes @ 12/22/23 05:20:25.654
  STEP: verifying QOS class is set on the pod @ 12/22/23 05:20:25.665
  Dec 22 05:20:25.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7007" for this suite. @ 12/22/23 05:20:25.673
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 12/22/23 05:20:25.718
  Dec 22 05:20:25.718: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:20:25.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:20:25.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:20:25.75
  Dec 22 05:20:25.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-3315 version'
  E1222 05:20:25.833299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:25.841: INFO: stderr: ""
  Dec 22 05:20:25.841: INFO: stdout: "Client Version: v1.29.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.0+k3s1\n"
  Dec 22 05:20:25.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3315" for this suite. @ 12/22/23 05:20:25.846
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/22/23 05:20:25.865
  Dec 22 05:20:25.865: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename watch @ 12/22/23 05:20:25.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:20:25.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:20:25.924
  STEP: getting a starting resourceVersion @ 12/22/23 05:20:25.928
  STEP: starting a background goroutine to produce watch events @ 12/22/23 05:20:25.933
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/22/23 05:20:25.933
  E1222 05:20:26.833669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:27.834165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:28.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9685" for this suite. @ 12/22/23 05:20:28.67
• [2.856 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/22/23 05:20:28.724
  Dec 22 05:20:28.724: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:20:28.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:20:28.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:20:28.752
  STEP: Creating configMap with name configmap-projected-all-test-volume-f9e461b8-9067-479a-9f29-dfe58e3aeea1 @ 12/22/23 05:20:28.755
  STEP: Creating secret with name secret-projected-all-test-volume-adcbccfe-633b-468c-a2b0-b28d31e8d4c7 @ 12/22/23 05:20:28.762
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/22/23 05:20:28.768
  E1222 05:20:28.834878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:29.835328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:30.835422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:31.835499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:20:32.789
  Dec 22 05:20:32.793: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod projected-volume-c229ffe0-a4e9-4315-b180-f4f71c38daea container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:20:32.799
  E1222 05:20:32.836306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:32.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4380" for this suite. @ 12/22/23 05:20:32.912
• [4.203 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/22/23 05:20:32.927
  Dec 22 05:20:32.927: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename conformance-tests @ 12/22/23 05:20:32.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:20:32.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:20:32.955
  STEP: Getting node addresses @ 12/22/23 05:20:32.963
  Dec 22 05:20:32.963: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Dec 22 05:20:32.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7236" for this suite. @ 12/22/23 05:20:32.98
• [0.062 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 12/22/23 05:20:32.989
  Dec 22 05:20:32.989: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 05:20:32.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:20:33.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:20:33.017
  STEP: Creating service test in namespace statefulset-7230 @ 12/22/23 05:20:33.021
  STEP: Creating stateful set ss in namespace statefulset-7230 @ 12/22/23 05:20:33.031
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7230 @ 12/22/23 05:20:33.045
  Dec 22 05:20:33.049: INFO: Found 0 stateful pods, waiting for 1
  E1222 05:20:33.836949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:34.837301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:35.837399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:36.838183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:37.838869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:38.839326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:39.839803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:40.840030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:41.840135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:42.840811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:43.050: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/22/23 05:20:43.05
  Dec 22 05:20:43.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-7230 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 05:20:43.729: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 05:20:43.729: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 05:20:43.729: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 05:20:43.733: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1222 05:20:43.841360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:44.841523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:45.841929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:46.842062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:47.843116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:48.844265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:49.844712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:50.845757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:51.845921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:52.846349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:20:53.846545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:53.987: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 05:20:53.987: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 22 05:20:54.012: INFO: POD   NODE                                        PHASE    GRACE  CONDITIONS
  Dec 22 05:20:54.012: INFO: ss-0  ip-172-31-8-254.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:34 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:33 +0000 UTC  }]
  Dec 22 05:20:54.012: INFO: 
  Dec 22 05:20:54.012: INFO: StatefulSet ss has not reached scale 3, at 1
  E1222 05:20:54.846637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:55.017: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.991893148s
  E1222 05:20:55.846960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:56.022: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.986515629s
  E1222 05:20:56.847040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:57.026: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.982580653s
  E1222 05:20:57.847582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:58.032: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.977993372s
  E1222 05:20:58.848600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:20:59.036: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.971628484s
  E1222 05:20:59.849548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:00.041: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.966963251s
  E1222 05:21:00.850369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:01.046: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.962148107s
  E1222 05:21:01.850946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:02.053: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.957451144s
  E1222 05:21:02.851505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:03.066: INFO: Verifying statefulset ss doesn't scale past 3 for another 951.006175ms
  E1222 05:21:03.851895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7230 @ 12/22/23 05:21:04.067
  Dec 22 05:21:04.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-7230 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 05:21:04.258: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 05:21:04.258: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 05:21:04.258: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 05:21:04.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-7230 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 05:21:04.394: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Dec 22 05:21:04.394: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 05:21:04.394: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 05:21:04.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-7230 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 05:21:04.557: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Dec 22 05:21:04.557: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 05:21:04.557: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 05:21:04.561: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 05:21:04.561: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 05:21:04.561: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/22/23 05:21:04.561
  Dec 22 05:21:04.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-7230 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 05:21:04.719: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 05:21:04.719: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 05:21:04.719: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 05:21:04.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-7230 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1222 05:21:04.852540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:04.862: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 05:21:04.862: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 05:21:04.862: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 05:21:04.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-7230 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 05:21:05.008: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 05:21:05.008: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 05:21:05.008: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 05:21:05.008: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 22 05:21:05.012: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1222 05:21:05.852676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:06.852920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:07.853030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:08.853279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:09.854499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:10.854942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:11.855080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:12.855205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:13.855561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:14.855777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:15.015: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 05:21:15.015: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 05:21:15.015: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 05:21:15.028: INFO: POD   NODE                                         PHASE    GRACE  CONDITIONS
  Dec 22 05:21:15.028: INFO: ss-0  ip-172-31-8-254.us-east-2.compute.internal   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:34 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:21:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:21:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:33 +0000 UTC  }]
  Dec 22 05:21:15.028: INFO: ss-1  ip-172-31-11-160.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:54 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:21:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:21:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:54 +0000 UTC  }]
  Dec 22 05:21:15.028: INFO: ss-2  ip-172-31-14-155.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:54 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:21:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:21:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:54 +0000 UTC  }]
  Dec 22 05:21:15.028: INFO: 
  Dec 22 05:21:15.028: INFO: StatefulSet ss has not reached scale 0, at 3
  E1222 05:21:15.857021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:16.031: INFO: POD   NODE                                         PHASE      GRACE  CONDITIONS
  Dec 22 05:21:16.031: INFO: ss-2  ip-172-31-14-155.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:21:15 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:54 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:21:05 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:21:05 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-22 05:20:54 +0000 UTC  }]
  Dec 22 05:21:16.031: INFO: 
  Dec 22 05:21:16.031: INFO: StatefulSet ss has not reached scale 0, at 1
  E1222 05:21:16.857372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:17.035: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.992690031s
  E1222 05:21:17.858408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:18.039: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.988393921s
  E1222 05:21:18.858738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:19.043: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.984652247s
  E1222 05:21:19.859489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:20.046: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.981121113s
  E1222 05:21:20.859651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:21.060: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.978048174s
  E1222 05:21:21.860594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:22.064: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.964029691s
  E1222 05:21:22.861399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:23.068: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.960199485s
  E1222 05:21:23.862467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:24.072: INFO: Verifying statefulset ss doesn't scale past 0 for another 955.980086ms
  E1222 05:21:24.863089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7230 @ 12/22/23 05:21:25.072
  Dec 22 05:21:25.076: INFO: Scaling statefulset ss to 0
  Dec 22 05:21:25.087: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 05:21:25.090: INFO: Deleting all statefulset in ns statefulset-7230
  Dec 22 05:21:25.095: INFO: Scaling statefulset ss to 0
  Dec 22 05:21:25.108: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 05:21:25.111: INFO: Deleting statefulset ss
  Dec 22 05:21:25.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7230" for this suite. @ 12/22/23 05:21:25.127
• [52.146 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 12/22/23 05:21:25.139
  Dec 22 05:21:25.139: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename events @ 12/22/23 05:21:25.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:21:25.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:21:25.167
  STEP: Create set of events @ 12/22/23 05:21:25.171
  Dec 22 05:21:25.182: INFO: created test-event-1
  Dec 22 05:21:25.188: INFO: created test-event-2
  Dec 22 05:21:25.193: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/22/23 05:21:25.193
  STEP: delete collection of events @ 12/22/23 05:21:25.196
  Dec 22 05:21:25.196: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/22/23 05:21:25.212
  Dec 22 05:21:25.212: INFO: requesting list of events to confirm quantity
  Dec 22 05:21:25.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8854" for this suite. @ 12/22/23 05:21:25.219
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 12/22/23 05:21:25.226
  Dec 22 05:21:25.226: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:21:25.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:21:25.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:21:25.255
  STEP: Creating projection with secret that has name secret-emptykey-test-6bcfaeb5-4c47-4c7e-bc79-f8819e803f77 @ 12/22/23 05:21:25.258
  Dec 22 05:21:25.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4234" for this suite. @ 12/22/23 05:21:25.265
• [0.046 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 12/22/23 05:21:25.273
  Dec 22 05:21:25.273: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:21:25.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:21:25.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:21:25.308
  STEP: Setting up server cert @ 12/22/23 05:21:25.334
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:21:25.672
  STEP: Deploying the webhook pod @ 12/22/23 05:21:25.679
  STEP: Wait for the deployment to be ready @ 12/22/23 05:21:25.69
  Dec 22 05:21:25.698: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1222 05:21:25.864186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:26.864337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:21:27.707
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:21:27.75
  E1222 05:21:27.864887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:28.750: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E1222 05:21:28.865040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/22/23 05:21:28.966
  STEP: create a pod @ 12/22/23 05:21:28.996
  E1222 05:21:29.865297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:30.865626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/22/23 05:21:31.015
  Dec 22 05:21:31.015: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=webhook-4716 attach --namespace=webhook-4716 to-be-attached-pod -i -c=container1'
  Dec 22 05:21:31.148: INFO: rc: 1
  Dec 22 05:21:31.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4716" for this suite. @ 12/22/23 05:21:31.202
  STEP: Destroying namespace "webhook-markers-944" for this suite. @ 12/22/23 05:21:31.208
• [5.942 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 12/22/23 05:21:31.215
  Dec 22 05:21:31.215: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename namespaces @ 12/22/23 05:21:31.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:21:31.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:21:31.264
  STEP: Creating a test namespace @ 12/22/23 05:21:31.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:21:31.285
  STEP: Creating a service in the namespace @ 12/22/23 05:21:31.289
  STEP: Deleting the namespace @ 12/22/23 05:21:31.315
  STEP: Waiting for the namespace to be removed. @ 12/22/23 05:21:31.332
  E1222 05:21:31.866595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:32.866711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:33.866824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:34.867897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:35.868785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:36.868801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 12/22/23 05:21:37.336
  STEP: Verifying there is no service in the namespace @ 12/22/23 05:21:37.744
  Dec 22 05:21:37.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1723" for this suite. @ 12/22/23 05:21:37.764
  STEP: Destroying namespace "nsdeletetest-3052" for this suite. @ 12/22/23 05:21:37.773
  Dec 22 05:21:37.775: INFO: Namespace nsdeletetest-3052 was already deleted
  STEP: Destroying namespace "nsdeletetest-4448" for this suite. @ 12/22/23 05:21:37.776
• [6.568 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 12/22/23 05:21:37.785
  Dec 22 05:21:37.785: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 05:21:37.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:21:37.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:21:37.811
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/22/23 05:21:37.814
  Dec 22 05:21:37.815: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:21:37.869932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:38.870981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:39.763: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:21:39.871951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:40.872078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:41.872700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:42.873255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:43.873954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:44.874102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:45.874409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:46.875052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:47.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6619" for this suite. @ 12/22/23 05:21:47.254
• [9.476 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 12/22/23 05:21:47.261
  Dec 22 05:21:47.261: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:21:47.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:21:47.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:21:47.285
  STEP: Setting up server cert @ 12/22/23 05:21:47.324
  E1222 05:21:47.875606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:21:47.96
  STEP: Deploying the webhook pod @ 12/22/23 05:21:47.966
  STEP: Wait for the deployment to be ready @ 12/22/23 05:21:47.978
  Dec 22 05:21:47.989: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1222 05:21:48.876573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:49.877028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:21:49.998
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:21:50.007
  E1222 05:21:50.877272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:21:51.008: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/22/23 05:21:51.015
  STEP: create a configmap that should be updated by the webhook @ 12/22/23 05:21:51.038
  Dec 22 05:21:51.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8406" for this suite. @ 12/22/23 05:21:51.128
  STEP: Destroying namespace "webhook-markers-67" for this suite. @ 12/22/23 05:21:51.139
• [3.888 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 12/22/23 05:21:51.149
  Dec 22 05:21:51.149: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:21:51.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:21:51.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:21:51.194
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/22/23 05:21:51.197
  E1222 05:21:51.877634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:52.877802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:53.877934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:54.878494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:21:55.219
  Dec 22 05:21:55.233: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-8221250a-b480-4a18-b370-9dca0d5e7c43 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:21:55.242
  Dec 22 05:21:55.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9041" for this suite. @ 12/22/23 05:21:55.28
• [4.139 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 12/22/23 05:21:55.288
  Dec 22 05:21:55.288: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:21:55.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:21:55.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:21:55.314
  STEP: creating secret secrets-9563/secret-test-98213f8d-2968-4ba3-a422-e2018c4e69e6 @ 12/22/23 05:21:55.319
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:21:55.326
  E1222 05:21:55.879064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:56.879181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:57.880159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:21:58.880276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:21:59.355
  Dec 22 05:21:59.363: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-configmaps-de8b892e-a3f7-4cd3-9ebf-3c460a79b7b8 container env-test: <nil>
  STEP: delete the pod @ 12/22/23 05:21:59.368
  Dec 22 05:21:59.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9563" for this suite. @ 12/22/23 05:21:59.388
• [4.106 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 12/22/23 05:21:59.395
  Dec 22 05:21:59.395: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:21:59.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:21:59.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:21:59.425
  STEP: creating a secret @ 12/22/23 05:21:59.43
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/22/23 05:21:59.435
  STEP: patching the secret @ 12/22/23 05:21:59.442
  STEP: deleting the secret using a LabelSelector @ 12/22/23 05:21:59.454
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/22/23 05:21:59.467
  Dec 22 05:21:59.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5169" for this suite. @ 12/22/23 05:21:59.48
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 12/22/23 05:21:59.49
  Dec 22 05:21:59.490: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename gc @ 12/22/23 05:21:59.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:21:59.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:21:59.517
  STEP: create the deployment @ 12/22/23 05:21:59.52
  W1222 05:21:59.526167      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/22/23 05:21:59.526
  E1222 05:21:59.880988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 12/22/23 05:22:00.031
  STEP: wait for all rs to be garbage collected @ 12/22/23 05:22:00.038
  STEP: expected 0 rs, got 1 rs @ 12/22/23 05:22:00.049
  STEP: expected 0 pods, got 2 pods @ 12/22/23 05:22:00.057
  STEP: Gathering metrics @ 12/22/23 05:22:00.547
  W1222 05:22:00.551525      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Dec 22 05:22:00.551: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 05:22:00.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-657" for this suite. @ 12/22/23 05:22:00.555
• [1.072 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 12/22/23 05:22:00.562
  Dec 22 05:22:00.562: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sched-pred @ 12/22/23 05:22:00.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:00.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:00.688
  Dec 22 05:22:00.691: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 22 05:22:00.706: INFO: Waiting for terminating namespaces to be deleted...
  Dec 22 05:22:00.710: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-160.us-east-2.compute.internal before test
  Dec 22 05:22:00.714: INFO: svclb-traefik-080075b9-7dhph from kube-system started at 2023-12-22 03:39:13 +0000 UTC (2 container statuses recorded)
  Dec 22 05:22:00.714: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 05:22:00.714: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 05:22:00.714: INFO: sonobuoy-e2e-job-2ccc42035d274143 from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 05:22:00.714: INFO: 	Container e2e ready: true, restart count 0
  Dec 22 05:22:00.714: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 05:22:00.714: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-c4pmm from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 05:22:00.714: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 05:22:00.714: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 05:22:00.714: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-14-155.us-east-2.compute.internal before test
  Dec 22 05:22:00.727: INFO: svclb-traefik-080075b9-vn45p from kube-system started at 2023-12-22 05:12:37 +0000 UTC (2 container statuses recorded)
  Dec 22 05:22:00.727: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 05:22:00.727: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 05:22:00.727: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-7psl7 from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 05:22:00.727: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 05:22:00.727: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 05:22:00.727: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-2-79.us-east-2.compute.internal before test
  Dec 22 05:22:00.733: INFO: coredns-6799fbcd5-rcvbg from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 05:22:00.734: INFO: 	Container coredns ready: true, restart count 0
  Dec 22 05:22:00.734: INFO: helm-install-traefik-crd-m5lfj from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 05:22:00.734: INFO: 	Container helm ready: false, restart count 0
  Dec 22 05:22:00.734: INFO: helm-install-traefik-prpf8 from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 05:22:00.734: INFO: 	Container helm ready: false, restart count 2
  Dec 22 05:22:00.734: INFO: local-path-provisioner-84db5d44d9-968kz from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 05:22:00.734: INFO: 	Container local-path-provisioner ready: true, restart count 0
  Dec 22 05:22:00.734: INFO: metrics-server-67c658944b-54sc2 from kube-system started at 2023-12-22 03:37:09 +0000 UTC (1 container statuses recorded)
  Dec 22 05:22:00.734: INFO: 	Container metrics-server ready: true, restart count 0
  Dec 22 05:22:00.734: INFO: svclb-traefik-080075b9-mq9px from kube-system started at 2023-12-22 03:37:45 +0000 UTC (2 container statuses recorded)
  Dec 22 05:22:00.734: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 05:22:00.734: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 05:22:00.734: INFO: traefik-f4564c4f4-hprzl from kube-system started at 2023-12-22 03:37:45 +0000 UTC (1 container statuses recorded)
  Dec 22 05:22:00.734: INFO: 	Container traefik ready: true, restart count 0
  Dec 22 05:22:00.734: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-gvv9z from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 05:22:00.734: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 05:22:00.734: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 22 05:22:00.734: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-254.us-east-2.compute.internal before test
  Dec 22 05:22:00.740: INFO: svclb-traefik-080075b9-jqvvw from kube-system started at 2023-12-22 03:40:47 +0000 UTC (2 container statuses recorded)
  Dec 22 05:22:00.740: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Dec 22 05:22:00.741: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Dec 22 05:22:00.741: INFO: sonobuoy from sonobuoy started at 2023-12-22 03:57:51 +0000 UTC (1 container statuses recorded)
  Dec 22 05:22:00.741: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 22 05:22:00.741: INFO: sonobuoy-systemd-logs-daemon-set-084388581afe4c51-wjwxp from sonobuoy started at 2023-12-22 03:57:54 +0000 UTC (2 container statuses recorded)
  Dec 22 05:22:00.741: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 22 05:22:00.741: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-11-160.us-east-2.compute.internal @ 12/22/23 05:22:00.762
  STEP: verifying the node has the label node ip-172-31-14-155.us-east-2.compute.internal @ 12/22/23 05:22:00.781
  STEP: verifying the node has the label node ip-172-31-2-79.us-east-2.compute.internal @ 12/22/23 05:22:00.811
  STEP: verifying the node has the label node ip-172-31-8-254.us-east-2.compute.internal @ 12/22/23 05:22:00.83
  Dec 22 05:22:00.842: INFO: Pod coredns-6799fbcd5-rcvbg requesting resource cpu=100m on Node ip-172-31-2-79.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod local-path-provisioner-84db5d44d9-968kz requesting resource cpu=0m on Node ip-172-31-2-79.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod metrics-server-67c658944b-54sc2 requesting resource cpu=100m on Node ip-172-31-2-79.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod svclb-traefik-080075b9-7dhph requesting resource cpu=0m on Node ip-172-31-11-160.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod svclb-traefik-080075b9-jqvvw requesting resource cpu=0m on Node ip-172-31-8-254.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod svclb-traefik-080075b9-mq9px requesting resource cpu=0m on Node ip-172-31-2-79.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod svclb-traefik-080075b9-vn45p requesting resource cpu=0m on Node ip-172-31-14-155.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod traefik-f4564c4f4-hprzl requesting resource cpu=0m on Node ip-172-31-2-79.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-8-254.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod sonobuoy-e2e-job-2ccc42035d274143 requesting resource cpu=0m on Node ip-172-31-11-160.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod sonobuoy-systemd-logs-daemon-set-084388581afe4c51-7psl7 requesting resource cpu=0m on Node ip-172-31-14-155.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod sonobuoy-systemd-logs-daemon-set-084388581afe4c51-c4pmm requesting resource cpu=0m on Node ip-172-31-11-160.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod sonobuoy-systemd-logs-daemon-set-084388581afe4c51-gvv9z requesting resource cpu=0m on Node ip-172-31-2-79.us-east-2.compute.internal
  Dec 22 05:22:00.842: INFO: Pod sonobuoy-systemd-logs-daemon-set-084388581afe4c51-wjwxp requesting resource cpu=0m on Node ip-172-31-8-254.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/22/23 05:22:00.842
  Dec 22 05:22:00.842: INFO: Creating a pod which consumes cpu=1400m on Node ip-172-31-11-160.us-east-2.compute.internal
  Dec 22 05:22:00.851: INFO: Creating a pod which consumes cpu=1400m on Node ip-172-31-14-155.us-east-2.compute.internal
  Dec 22 05:22:00.859: INFO: Creating a pod which consumes cpu=1260m on Node ip-172-31-2-79.us-east-2.compute.internal
  Dec 22 05:22:00.871: INFO: Creating a pod which consumes cpu=1400m on Node ip-172-31-8-254.us-east-2.compute.internal
  E1222 05:22:00.881958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:01.882542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:02.883520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:03.883693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:04.883825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/22/23 05:22:04.91
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-07a07336-3f2d-40fa-bd92-e6d3217b07d8.17a30fdbd4134e95], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1264/filler-pod-07a07336-3f2d-40fa-bd92-e6d3217b07d8 to ip-172-31-14-155.us-east-2.compute.internal] @ 12/22/23 05:22:04.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-07a07336-3f2d-40fa-bd92-e6d3217b07d8.17a30fdc1a0a1c73], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/22/23 05:22:04.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-07a07336-3f2d-40fa-bd92-e6d3217b07d8.17a30fdc1b779021], Reason = [Created], Message = [Created container filler-pod-07a07336-3f2d-40fa-bd92-e6d3217b07d8] @ 12/22/23 05:22:04.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-07a07336-3f2d-40fa-bd92-e6d3217b07d8.17a30fdc22b44fa2], Reason = [Started], Message = [Started container filler-pod-07a07336-3f2d-40fa-bd92-e6d3217b07d8] @ 12/22/23 05:22:04.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-82b51b6d-fcf9-41cc-8737-5f3a3d85d7a3.17a30fdbd54c0b59], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1264/filler-pod-82b51b6d-fcf9-41cc-8737-5f3a3d85d7a3 to ip-172-31-8-254.us-east-2.compute.internal] @ 12/22/23 05:22:04.921
  STEP: Considering event: 
  Type = [Warning], Name = [filler-pod-82b51b6d-fcf9-41cc-8737-5f3a3d85d7a3.17a30fdc1ad74710], Reason = [FailedMount], Message = [MountVolume.SetUp failed for volume "kube-api-access-ctv62" : failed to sync configmap cache: timed out waiting for the condition] @ 12/22/23 05:22:04.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-82b51b6d-fcf9-41cc-8737-5f3a3d85d7a3.17a30fdc4d38409e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/22/23 05:22:04.922
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-82b51b6d-fcf9-41cc-8737-5f3a3d85d7a3.17a30fdc4e63d1d0], Reason = [Created], Message = [Created container filler-pod-82b51b6d-fcf9-41cc-8737-5f3a3d85d7a3] @ 12/22/23 05:22:04.922
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-82b51b6d-fcf9-41cc-8737-5f3a3d85d7a3.17a30fdc5445bce7], Reason = [Started], Message = [Started container filler-pod-82b51b6d-fcf9-41cc-8737-5f3a3d85d7a3] @ 12/22/23 05:22:04.922
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dba33d9a-0e8b-40d5-9465-3156e954b8af.17a30fdbd50b6323], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1264/filler-pod-dba33d9a-0e8b-40d5-9465-3156e954b8af to ip-172-31-2-79.us-east-2.compute.internal] @ 12/22/23 05:22:04.922
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dba33d9a-0e8b-40d5-9465-3156e954b8af.17a30fdbf3a531bf], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/22/23 05:22:04.922
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dba33d9a-0e8b-40d5-9465-3156e954b8af.17a30fdbf58f6d1a], Reason = [Created], Message = [Created container filler-pod-dba33d9a-0e8b-40d5-9465-3156e954b8af] @ 12/22/23 05:22:04.922
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dba33d9a-0e8b-40d5-9465-3156e954b8af.17a30fdbfbd45d65], Reason = [Started], Message = [Started container filler-pod-dba33d9a-0e8b-40d5-9465-3156e954b8af] @ 12/22/23 05:22:04.922
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e67ed7f1-c6e5-451f-93c8-3ba3d324d1e7.17a30fdbd325e51b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1264/filler-pod-e67ed7f1-c6e5-451f-93c8-3ba3d324d1e7 to ip-172-31-11-160.us-east-2.compute.internal] @ 12/22/23 05:22:04.922
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e67ed7f1-c6e5-451f-93c8-3ba3d324d1e7.17a30fdbf5651e8d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/22/23 05:22:04.923
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e67ed7f1-c6e5-451f-93c8-3ba3d324d1e7.17a30fdbf6ab78fa], Reason = [Created], Message = [Created container filler-pod-e67ed7f1-c6e5-451f-93c8-3ba3d324d1e7] @ 12/22/23 05:22:04.923
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e67ed7f1-c6e5-451f-93c8-3ba3d324d1e7.17a30fdbfe738194], Reason = [Started], Message = [Started container filler-pod-e67ed7f1-c6e5-451f-93c8-3ba3d324d1e7] @ 12/22/23 05:22:04.923
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17a30fdcc5207610], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.] @ 12/22/23 05:22:04.966
  E1222 05:22:05.883927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-11-160.us-east-2.compute.internal @ 12/22/23 05:22:06.421
  STEP: verifying the node doesn't have the label node @ 12/22/23 05:22:06.447
  STEP: removing the label node off the node ip-172-31-14-155.us-east-2.compute.internal @ 12/22/23 05:22:06.457
  STEP: verifying the node doesn't have the label node @ 12/22/23 05:22:06.486
  STEP: removing the label node off the node ip-172-31-2-79.us-east-2.compute.internal @ 12/22/23 05:22:06.491
  STEP: verifying the node doesn't have the label node @ 12/22/23 05:22:06.508
  STEP: removing the label node off the node ip-172-31-8-254.us-east-2.compute.internal @ 12/22/23 05:22:06.521
  STEP: verifying the node doesn't have the label node @ 12/22/23 05:22:06.537
  Dec 22 05:22:06.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1264" for this suite. @ 12/22/23 05:22:06.547
• [5.993 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 12/22/23 05:22:06.558
  Dec 22 05:22:06.558: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:22:06.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:06.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:06.601
  STEP: Creating configMap with name configmap-test-upd-911bb272-a8de-4653-9443-80fadbaed921 @ 12/22/23 05:22:06.611
  STEP: Creating the pod @ 12/22/23 05:22:06.621
  E1222 05:22:06.884594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:07.885457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-911bb272-a8de-4653-9443-80fadbaed921 @ 12/22/23 05:22:08.662
  STEP: waiting to observe update in volume @ 12/22/23 05:22:08.67
  E1222 05:22:08.886287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:09.886755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:10.886897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:11.887715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:22:12.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4701" for this suite. @ 12/22/23 05:22:12.693
• [6.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 12/22/23 05:22:12.7
  Dec 22 05:22:12.700: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:22:12.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:12.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:12.729
  STEP: Setting up server cert @ 12/22/23 05:22:12.777
  E1222 05:22:12.888522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:22:13.665
  STEP: Deploying the webhook pod @ 12/22/23 05:22:13.672
  STEP: Wait for the deployment to be ready @ 12/22/23 05:22:13.685
  Dec 22 05:22:13.695: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1222 05:22:13.888635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:14.889248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:22:15.704
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:22:15.713
  E1222 05:22:15.889656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:22:16.713: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/22/23 05:22:16.785
  STEP: Creating a configMap that should be mutated @ 12/22/23 05:22:16.806
  STEP: Deleting the collection of validation webhooks @ 12/22/23 05:22:16.839
  STEP: Creating a configMap that should not be mutated @ 12/22/23 05:22:16.878
  E1222 05:22:16.889851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:22:16.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8424" for this suite. @ 12/22/23 05:22:16.929
  STEP: Destroying namespace "webhook-markers-9659" for this suite. @ 12/22/23 05:22:16.95
• [4.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 12/22/23 05:22:16.961
  Dec 22 05:22:16.961: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename csi-storageclass @ 12/22/23 05:22:16.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:16.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:16.985
  STEP: Creating a StorageClass @ 12/22/23 05:22:16.99
  STEP: Get StorageClass "e2e-cvj6b" @ 12/22/23 05:22:16.996
  STEP: Patching the StorageClass "e2e-cvj6b" @ 12/22/23 05:22:17
  STEP: Delete StorageClass "e2e-cvj6b" @ 12/22/23 05:22:17.008
  STEP: Confirm deletion of StorageClass "e2e-cvj6b" @ 12/22/23 05:22:17.013
  STEP: Create a replacement StorageClass @ 12/22/23 05:22:17.016
  STEP: Updating StorageClass "e2e-v2-k9qml" @ 12/22/23 05:22:17.021
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-k9qml=updated" @ 12/22/23 05:22:17.03
  STEP: Deleting StorageClass "e2e-v2-k9qml" via DeleteCollection @ 12/22/23 05:22:17.033
  STEP: Confirm deletion of StorageClass "e2e-v2-k9qml" @ 12/22/23 05:22:17.041
  Dec 22 05:22:17.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8902" for this suite. @ 12/22/23 05:22:17.062
• [0.124 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 12/22/23 05:22:17.086
  Dec 22 05:22:17.086: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 05:22:17.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:17.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:17.174
  STEP: Creating a pod to test downward api env vars @ 12/22/23 05:22:17.181
  E1222 05:22:17.890447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:18.891524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:19.892209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:20.892340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:22:21.226
  Dec 22 05:22:21.229: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downward-api-51cd02b2-251c-4c65-ba53-384b58f73bd5 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 05:22:21.234
  Dec 22 05:22:21.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4950" for this suite. @ 12/22/23 05:22:21.256
• [4.178 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 12/22/23 05:22:21.266
  Dec 22 05:22:21.266: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:22:21.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:21.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:21.293
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/22/23 05:22:21.296
  E1222 05:22:21.892829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:22.893253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:23.893989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:24.894690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:22:25.828
  Dec 22 05:22:25.830: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-acc00ec4-8c83-4ef4-a95a-f04f6306aa9f container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:22:25.836
  Dec 22 05:22:25.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7656" for this suite. @ 12/22/23 05:22:25.854
• [4.594 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 12/22/23 05:22:25.861
  Dec 22 05:22:25.861: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 05:22:25.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:25.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:25.889
  STEP: creating service in namespace services-2110 @ 12/22/23 05:22:25.893
  STEP: creating service affinity-clusterip-transition in namespace services-2110 @ 12/22/23 05:22:25.893
  E1222 05:22:25.894512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2110 @ 12/22/23 05:22:25.904
  I1222 05:22:25.910932      20 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-2110, replica count: 3
  E1222 05:22:26.894962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:27.895840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:28.896012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1222 05:22:28.963042      20 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 05:22:28.970: INFO: Creating new exec pod
  E1222 05:22:29.897034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:30.897308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:31.897373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:22:31.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-2110 exec execpod-affinityrdj2v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Dec 22 05:22:32.141: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Dec 22 05:22:32.142: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:22:32.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-2110 exec execpod-affinityrdj2v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.249.145 80'
  Dec 22 05:22:32.297: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.249.145 80\nConnection to 10.43.249.145 80 port [tcp/http] succeeded!\n"
  Dec 22 05:22:32.297: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:22:32.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-2110 exec execpod-affinityrdj2v -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.249.145:80/ ; done'
  Dec 22 05:22:32.547: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n"
  Dec 22 05:22:32.547: INFO: stdout: "\naffinity-clusterip-transition-cq7kx\naffinity-clusterip-transition-cq7kx\naffinity-clusterip-transition-kbtxx\naffinity-clusterip-transition-cq7kx\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-cq7kx\naffinity-clusterip-transition-cq7kx\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-cq7kx\naffinity-clusterip-transition-cq7kx\naffinity-clusterip-transition-kbtxx\naffinity-clusterip-transition-kbtxx\naffinity-clusterip-transition-cq7kx\naffinity-clusterip-transition-kbtxx\naffinity-clusterip-transition-kbtxx\naffinity-clusterip-transition-rfrgg"
  Dec 22 05:22:32.547: INFO: Received response from host: affinity-clusterip-transition-cq7kx
  Dec 22 05:22:32.547: INFO: Received response from host: affinity-clusterip-transition-cq7kx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-kbtxx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-cq7kx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-cq7kx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-cq7kx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-cq7kx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-cq7kx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-kbtxx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-kbtxx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-cq7kx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-kbtxx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-kbtxx
  Dec 22 05:22:32.548: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-2110 exec execpod-affinityrdj2v -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.249.145:80/ ; done'
  Dec 22 05:22:32.782: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.249.145:80/\n"
  Dec 22 05:22:32.782: INFO: stdout: "\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg\naffinity-clusterip-transition-rfrgg"
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Received response from host: affinity-clusterip-transition-rfrgg
  Dec 22 05:22:32.782: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2110, will wait for the garbage collector to delete the pods @ 12/22/23 05:22:32.798
  Dec 22 05:22:32.861: INFO: Deleting ReplicationController affinity-clusterip-transition took: 7.00176ms
  E1222 05:22:32.897578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:22:32.962: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.577677ms
  E1222 05:22:33.897782      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:34.898574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:35.899145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:22:35.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2110" for this suite. @ 12/22/23 05:22:35.906
• [10.053 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 12/22/23 05:22:35.915
  Dec 22 05:22:35.915: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/22/23 05:22:35.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:35.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:35.94
  STEP: getting /apis @ 12/22/23 05:22:35.944
  STEP: getting /apis/storage.k8s.io @ 12/22/23 05:22:35.951
  STEP: getting /apis/storage.k8s.io/v1 @ 12/22/23 05:22:35.953
  STEP: creating @ 12/22/23 05:22:35.955
  STEP: watching @ 12/22/23 05:22:35.977
  Dec 22 05:22:35.977: INFO: starting watch
  STEP: getting @ 12/22/23 05:22:35.986
  STEP: listing in namespace @ 12/22/23 05:22:35.988
  STEP: listing across namespaces @ 12/22/23 05:22:35.993
  STEP: patching @ 12/22/23 05:22:35.996
  STEP: updating @ 12/22/23 05:22:36.004
  Dec 22 05:22:36.010: INFO: waiting for watch events with expected annotations in namespace
  Dec 22 05:22:36.011: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/22/23 05:22:36.011
  STEP: deleting a collection @ 12/22/23 05:22:36.023
  Dec 22 05:22:36.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3822" for this suite. @ 12/22/23 05:22:36.041
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 12/22/23 05:22:36.05
  Dec 22 05:22:36.050: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 05:22:36.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:36.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:36.071
  STEP: Creating a pod to test downward api env vars @ 12/22/23 05:22:36.074
  E1222 05:22:36.899234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:37.900052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:38.900250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:39.900424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:22:40.098
  Dec 22 05:22:40.101: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downward-api-4bcf3ecf-b8c5-4223-94ac-2cfae0c256eb container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 05:22:40.107
  Dec 22 05:22:40.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9544" for this suite. @ 12/22/23 05:22:40.134
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 12/22/23 05:22:40.147
  Dec 22 05:22:40.147: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/22/23 05:22:40.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:40.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:40.174
  Dec 22 05:22:40.178: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:22:40.901525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:41.901949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:42.904519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:43.904939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:44.905453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:45.905610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:22:46.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8823" for this suite. @ 12/22/23 05:22:46.424
• [6.292 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 12/22/23 05:22:46.439
  Dec 22 05:22:46.439: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 05:22:46.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:22:46.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:22:46.541
  STEP: Creating service test in namespace statefulset-6969 @ 12/22/23 05:22:46.544
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/22/23 05:22:46.553
  STEP: Creating stateful set ss in namespace statefulset-6969 @ 12/22/23 05:22:46.556
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6969 @ 12/22/23 05:22:46.575
  Dec 22 05:22:46.578: INFO: Found 0 stateful pods, waiting for 1
  E1222 05:22:46.905998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:47.906107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:48.906327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:49.906475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:50.906583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:51.906724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:52.906871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:53.906944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:54.907078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:55.907187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:22:56.581: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/22/23 05:22:56.581
  Dec 22 05:22:56.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-6969 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 05:22:56.760: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 05:22:56.760: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 05:22:56.760: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 05:22:56.764: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1222 05:22:56.907510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:57.908189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:58.908281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:22:59.909211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:00.909437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:01.910444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:02.911575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:03.911667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:04.912129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:05.912359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:06.764: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 05:23:06.764: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 22 05:23:06.778: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999958s
  E1222 05:23:06.912819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:07.782: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996450097s
  E1222 05:23:07.912883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:08.789: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.989478814s
  E1222 05:23:08.913669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:09.794: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.98465356s
  E1222 05:23:09.914283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:10.799: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.981008706s
  E1222 05:23:10.914594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:11.803: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.975787369s
  E1222 05:23:11.915641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:12.815: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.971527789s
  E1222 05:23:12.916623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:13.822: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.959763955s
  E1222 05:23:13.916836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:14.826: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.952638321s
  E1222 05:23:14.917539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:15.829: INFO: Verifying statefulset ss doesn't scale past 1 for another 948.658443ms
  E1222 05:23:15.918075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6969 @ 12/22/23 05:23:16.83
  Dec 22 05:23:16.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-6969 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1222 05:23:16.919261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:16.992: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 05:23:16.992: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 05:23:16.992: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 05:23:16.995: INFO: Found 1 stateful pods, waiting for 3
  E1222 05:23:17.919563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:18.920336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:19.920455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:20.920587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:21.921319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:22.922097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:23.922345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:24.922511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:25.922816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:26.923056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:26.997: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 05:23:26.997: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 22 05:23:26.997: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/22/23 05:23:26.997
  STEP: Scale down will halt with unhealthy stateful pod @ 12/22/23 05:23:26.997
  Dec 22 05:23:27.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-6969 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 05:23:27.166: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 05:23:27.167: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 05:23:27.167: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 05:23:27.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-6969 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 05:23:27.355: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 05:23:27.355: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 05:23:27.355: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 05:23:27.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-6969 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 22 05:23:27.584: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 22 05:23:27.584: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 22 05:23:27.584: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 22 05:23:27.584: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 22 05:23:27.586: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1222 05:23:27.923328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:28.923480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:29.924696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:30.924695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:31.925286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:32.925829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:33.926908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:34.927026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:35.927969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:36.928066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:37.591: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 05:23:37.591: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 05:23:37.591: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Dec 22 05:23:37.603: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999968s
  E1222 05:23:37.928594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:38.608: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996355287s
  E1222 05:23:38.929386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:39.611: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992310739s
  E1222 05:23:39.930234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:40.615: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.988702905s
  E1222 05:23:40.933612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:41.621: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.982564589s
  E1222 05:23:41.934379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:42.625: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.978702114s
  E1222 05:23:42.934515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:43.630: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.974496905s
  E1222 05:23:43.935527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:44.634: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.970428267s
  E1222 05:23:44.936433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:45.638: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.965520162s
  E1222 05:23:45.936741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:46.643: INFO: Verifying statefulset ss doesn't scale past 3 for another 960.96507ms
  E1222 05:23:46.936855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6969 @ 12/22/23 05:23:47.643
  Dec 22 05:23:47.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-6969 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 05:23:47.790: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 05:23:47.790: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 05:23:47.790: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 05:23:47.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-6969 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1222 05:23:47.938248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:23:47.949: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 05:23:47.949: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 05:23:47.949: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 05:23:47.949: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=statefulset-6969 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 22 05:23:48.122: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 22 05:23:48.122: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 22 05:23:48.122: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 22 05:23:48.122: INFO: Scaling statefulset ss to 0
  E1222 05:23:48.937799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:49.938493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:50.939374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:51.940061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:52.940549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:53.940692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:54.941381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:55.942329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:56.942551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:57.943104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/22/23 05:23:58.184
  Dec 22 05:23:58.185: INFO: Deleting all statefulset in ns statefulset-6969
  Dec 22 05:23:58.187: INFO: Scaling statefulset ss to 0
  Dec 22 05:23:58.198: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 05:23:58.200: INFO: Deleting statefulset ss
  Dec 22 05:23:58.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6969" for this suite. @ 12/22/23 05:23:58.221
• [71.789 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 12/22/23 05:23:58.231
  Dec 22 05:23:58.232: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 05:23:58.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:23:58.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:23:58.281
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/22/23 05:23:58.286
  Dec 22 05:23:58.305: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1222 05:23:58.943620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:23:59.943754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:00.943904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:01.944172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:02.944673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:24:03.310: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 05:24:03.31
  STEP: getting scale subresource @ 12/22/23 05:24:03.31
  STEP: updating a scale subresource @ 12/22/23 05:24:03.315
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/22/23 05:24:03.321
  STEP: Patch a scale subresource @ 12/22/23 05:24:03.324
  Dec 22 05:24:03.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7946" for this suite. @ 12/22/23 05:24:03.537
• [5.317 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 12/22/23 05:24:03.55
  Dec 22 05:24:03.550: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:24:03.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:24:03.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:24:03.606
  STEP: Creating configMap with name projected-configmap-test-volume-18e900f0-7b4f-469c-ad04-4627f5dd0764 @ 12/22/23 05:24:03.61
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:24:03.616
  E1222 05:24:03.945214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:04.945331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:24:05.642
  Dec 22 05:24:05.645: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-projected-configmaps-379a525c-2970-4002-b082-0ecfcd9d70a7 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:24:05.652
  Dec 22 05:24:05.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5576" for this suite. @ 12/22/23 05:24:05.68
• [2.137 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 12/22/23 05:24:05.687
  Dec 22 05:24:05.688: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename dns @ 12/22/23 05:24:05.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:24:05.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:24:05.713
  STEP: Creating a test headless service @ 12/22/23 05:24:05.717
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-436.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-436.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/22/23 05:24:05.724
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-436.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-436.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/22/23 05:24:05.724
  STEP: creating a pod to probe DNS @ 12/22/23 05:24:05.724
  STEP: submitting the pod to kubernetes @ 12/22/23 05:24:05.724
  E1222 05:24:05.946321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:06.946523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/22/23 05:24:07.751
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:24:07.754
  Dec 22 05:24:07.770: INFO: DNS probes using dns-436/dns-test-9e86f453-1b4e-402f-ba72-30bf260bb528 succeeded

  STEP: deleting the pod @ 12/22/23 05:24:07.77
  STEP: deleting the test headless service @ 12/22/23 05:24:07.783
  Dec 22 05:24:07.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-436" for this suite. @ 12/22/23 05:24:07.809
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/22/23 05:24:07.821
  Dec 22 05:24:07.822: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-runtime @ 12/22/23 05:24:07.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:24:07.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:24:07.848
  STEP: create the container @ 12/22/23 05:24:07.852
  W1222 05:24:07.863255      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/22/23 05:24:07.863
  E1222 05:24:07.946646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:08.947293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:09.947920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/22/23 05:24:10.891
  STEP: the container should be terminated @ 12/22/23 05:24:10.895
  STEP: the termination message should be set @ 12/22/23 05:24:10.895
  Dec 22 05:24:10.895: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/22/23 05:24:10.895
  Dec 22 05:24:10.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6337" for this suite. @ 12/22/23 05:24:10.916
• [3.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 12/22/23 05:24:10.925
  Dec 22 05:24:10.925: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 05:24:10.926
  E1222 05:24:10.949068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:24:10.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:24:10.957
  Dec 22 05:24:10.991: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:24:11.949150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:12.949365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1222 05:24:13.528700      20 warnings.go:70] unknown field "alpha"
  W1222 05:24:13.528741      20 warnings.go:70] unknown field "beta"
  W1222 05:24:13.528750      20 warnings.go:70] unknown field "delta"
  W1222 05:24:13.528759      20 warnings.go:70] unknown field "epsilon"
  W1222 05:24:13.528765      20 warnings.go:70] unknown field "gamma"
  E1222 05:24:13.950024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:24:14.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6773" for this suite. @ 12/22/23 05:24:14.079
• [3.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/22/23 05:24:14.086
  Dec 22 05:24:14.086: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename cronjob @ 12/22/23 05:24:14.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:24:14.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:24:14.113
  STEP: Creating a suspended cronjob @ 12/22/23 05:24:14.116
  STEP: Ensuring no jobs are scheduled @ 12/22/23 05:24:14.123
  E1222 05:24:14.950251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:15.950496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:16.951491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:17.951847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:18.952233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:19.953839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:20.953980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:21.954356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:22.954411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:23.955076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:24.956132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:25.956371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:26.956819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:27.956955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:28.959280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:29.957811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:30.958410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:31.958544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:32.959357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:33.960074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:34.962273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:35.962633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:36.963621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:37.964196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:38.964919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:39.964984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:40.965147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:41.965403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:42.966447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:43.967058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:44.967696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:45.968802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:46.969242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:47.969661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:48.970142      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:49.970675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:50.970953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:51.971104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:52.971497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:53.971917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:54.972050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:55.973014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:56.972747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:57.972857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:58.973845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:24:59.974334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:00.975338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:01.976060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:02.976927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:03.977540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:04.977973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:05.978580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:06.978704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:07.980124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:08.980650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:09.980871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:10.981348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:11.981573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:12.982566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:13.983337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:14.983816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:15.983984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:16.984930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:17.985282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:18.985672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:19.986390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:20.987125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:21.987329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:22.988130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:23.988558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:24.989647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:25.990175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:26.990732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:27.990892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:28.991328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:29.992036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:30.992394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:31.992645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:32.993557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:33.993748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:34.993855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:35.993895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:36.994025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:37.994146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:38.994757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:39.994880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:40.995652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:41.995897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:42.996768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:43.997705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:44.997866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:45.997985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:46.998077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:47.998197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:48.998834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:49.998929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:51.000016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:52.000190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:53.000526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:54.002521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:55.002668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:56.002766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:57.002930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:58.003027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:25:59.003831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:00.008153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:01.008283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:02.008539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:03.008552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:04.008664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:05.009268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:06.009372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:07.009518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:08.009741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:09.010346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:10.010502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:11.010655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:12.010738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:13.011226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:14.011798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:15.012050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:16.012181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:17.013012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:18.025354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:19.025361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:20.026413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:21.026538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:22.027821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:23.028043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:24.028364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:25.028507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:26.028908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:27.029132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:28.030052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:29.031051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:30.031306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:31.031852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:32.032022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:33.032211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:34.032684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:35.032893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:36.033198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:37.033296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:38.033921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:39.034678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:40.035125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:41.036114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:42.036286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:43.037276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:44.037738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:45.038502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:46.039082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:47.039781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:48.040048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:49.041161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:50.041269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:51.042457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:52.042777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:53.043712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:54.045945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:55.046095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:56.046375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:57.046942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:58.047144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:26:59.047811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:00.048090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:01.049043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:02.049333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:03.049815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:04.050482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:05.050762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:06.051726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:07.051828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:08.052067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:09.052826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:10.053091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:11.053987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:12.054245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:13.054855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:14.055510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:15.055862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:16.056160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:17.057275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:18.057380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:19.057964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:20.058380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:21.059308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:22.059800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:23.060111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:24.060649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:25.061307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:26.062356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:27.062617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:28.062841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:29.063936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:30.064079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:31.064960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:32.065258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:33.065569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:34.065985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:35.066307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:36.066589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:37.067255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:38.067504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:39.067919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:40.068268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:41.068592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:42.068941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:43.069536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:44.070024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:45.070474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:46.070723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:47.071310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:48.071649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:49.072278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:50.072681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:51.072986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:52.073124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:53.074201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:54.074769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:55.074887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:56.075101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:57.075653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:58.075737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:27:59.076826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:00.076929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:01.077051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:02.077279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:03.078415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:04.078903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:05.079794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:06.080024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:07.081037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:08.081974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:09.082186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:10.085243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:11.085377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:12.086358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:13.086977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:14.087421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:15.088086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:16.088427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:17.088802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:18.089488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:19.089891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:20.089870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:21.090528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:22.090914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:23.091067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:24.092386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:25.092519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:26.092666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:27.092834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:28.093000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:29.093816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:30.094656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:31.094744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:32.094905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:33.095064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:34.095605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:35.095771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:36.095866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:37.095998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:38.096373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:39.096871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:40.096981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:41.097995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:42.098454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:43.099353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:44.099672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:45.099738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:46.100206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:47.100357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:48.100604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:49.101567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:50.101680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:51.102170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:52.102217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:53.103022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:54.103973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:55.104368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:56.104407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:57.104480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:58.104528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:28:59.104623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:00.104821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:01.105331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:02.105497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:03.105706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:04.105880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:05.105840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:06.105975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:07.106755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:08.107186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:09.108400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:10.108585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:11.108739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:12.108869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:13.109773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:14.110646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/22/23 05:29:14.135
  STEP: Removing cronjob @ 12/22/23 05:29:14.138
  Dec 22 05:29:14.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3755" for this suite. @ 12/22/23 05:29:14.148
• [300.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/22/23 05:29:14.155
  Dec 22 05:29:14.156: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename subpath @ 12/22/23 05:29:14.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:29:14.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:29:14.184
  STEP: Setting up data @ 12/22/23 05:29:14.188
  STEP: Creating pod pod-subpath-test-configmap-vxnv @ 12/22/23 05:29:14.199
  STEP: Creating a pod to test atomic-volume-subpath @ 12/22/23 05:29:14.199
  E1222 05:29:15.111696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:16.112560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:17.113371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:18.113709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:19.113977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:20.114095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:21.114265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:22.114379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:23.115337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:24.115866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:25.116485      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:26.116660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:27.117484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:28.117567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:29.117752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:30.117923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:31.118478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:32.118899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:33.119657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:34.119780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:35.120705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:36.121098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:29:36.676
  Dec 22 05:29:36.679: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-subpath-test-configmap-vxnv container test-container-subpath-configmap-vxnv: <nil>
  STEP: delete the pod @ 12/22/23 05:29:36.691
  STEP: Deleting pod pod-subpath-test-configmap-vxnv @ 12/22/23 05:29:36.708
  Dec 22 05:29:36.708: INFO: Deleting pod "pod-subpath-test-configmap-vxnv" in namespace "subpath-1632"
  Dec 22 05:29:36.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1632" for this suite. @ 12/22/23 05:29:36.716
• [22.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 12/22/23 05:29:36.725
  Dec 22 05:29:36.725: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename endpointslice @ 12/22/23 05:29:36.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:29:36.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:29:36.752
  STEP: getting /apis @ 12/22/23 05:29:36.755
  STEP: getting /apis/discovery.k8s.io @ 12/22/23 05:29:36.764
  STEP: getting /apis/discovery.k8s.iov1 @ 12/22/23 05:29:36.768
  STEP: creating @ 12/22/23 05:29:36.77
  STEP: getting @ 12/22/23 05:29:36.794
  STEP: listing @ 12/22/23 05:29:36.797
  STEP: watching @ 12/22/23 05:29:36.8
  Dec 22 05:29:36.800: INFO: starting watch
  STEP: cluster-wide listing @ 12/22/23 05:29:36.802
  STEP: cluster-wide watching @ 12/22/23 05:29:36.805
  Dec 22 05:29:36.805: INFO: starting watch
  STEP: patching @ 12/22/23 05:29:36.807
  STEP: updating @ 12/22/23 05:29:36.813
  Dec 22 05:29:36.824: INFO: waiting for watch events with expected annotations
  Dec 22 05:29:36.824: INFO: saw patched and updated annotations
  STEP: deleting @ 12/22/23 05:29:36.824
  STEP: deleting a collection @ 12/22/23 05:29:36.836
  Dec 22 05:29:36.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8479" for this suite. @ 12/22/23 05:29:36.855
• [0.136 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 12/22/23 05:29:36.861
  Dec 22 05:29:36.861: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sysctl @ 12/22/23 05:29:36.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:29:36.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:29:36.885
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/22/23 05:29:36.889
  STEP: Watching for error events or started pod @ 12/22/23 05:29:36.897
  E1222 05:29:37.121547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:38.121786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 12/22/23 05:29:38.902
  E1222 05:29:39.122661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:40.122846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 12/22/23 05:29:40.912
  STEP: Getting logs from the pod @ 12/22/23 05:29:40.912
  STEP: Checking that the sysctl is actually updated @ 12/22/23 05:29:40.92
  Dec 22 05:29:40.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5089" for this suite. @ 12/22/23 05:29:40.925
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 12/22/23 05:29:40.936
  Dec 22 05:29:40.936: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:29:40.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:29:40.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:29:40.968
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/22/23 05:29:40.972
  Dec 22 05:29:40.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9590 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Dec 22 05:29:41.116: INFO: stderr: ""
  Dec 22 05:29:41.116: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/22/23 05:29:41.116
  Dec 22 05:29:41.116: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9590 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  E1222 05:29:41.127832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:29:41.238: INFO: stderr: ""
  Dec 22 05:29:41.238: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/22/23 05:29:41.238
  Dec 22 05:29:41.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-9590 delete pods e2e-test-httpd-pod'
  E1222 05:29:42.128501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:43.128805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:29:43.144: INFO: stderr: ""
  Dec 22 05:29:43.144: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 22 05:29:43.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9590" for this suite. @ 12/22/23 05:29:43.15
• [2.223 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 12/22/23 05:29:43.16
  Dec 22 05:29:43.160: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 05:29:43.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:29:43.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:29:43.186
  STEP: Creating ServiceAccount "e2e-sa-zfkcj"  @ 12/22/23 05:29:43.189
  Dec 22 05:29:43.194: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-zfkcj"  @ 12/22/23 05:29:43.194
  Dec 22 05:29:43.203: INFO: AutomountServiceAccountToken: true
  Dec 22 05:29:43.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-757" for this suite. @ 12/22/23 05:29:43.208
• [0.056 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/22/23 05:29:43.216
  Dec 22 05:29:43.216: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:29:43.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:29:43.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:29:43.242
  Dec 22 05:29:43.245: INFO: Creating deployment "test-recreate-deployment"
  Dec 22 05:29:43.253: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Dec 22 05:29:43.260: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  E1222 05:29:44.129289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:45.129414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:29:45.269: INFO: Waiting deployment "test-recreate-deployment" to complete
  Dec 22 05:29:45.273: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Dec 22 05:29:45.286: INFO: Updating deployment test-recreate-deployment
  Dec 22 05:29:45.286: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Dec 22 05:29:45.451: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7186",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d524f67e-5bb6-4439-937f-132f09a79205",
      ResourceVersion: (string) (len=5) "43460",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819783,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 05:29:45.463: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7186",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03289b6d-f399-430f-ba39-fb8c0d6960d6",
      ResourceVersion: (string) (len=5) "43455",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819785,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d524f67e-5bb6-4439-937f-132f09a79205",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 35 32 34 66 36  37 65 2d 35 62 62 36 2d  |\"d524f67e-5bb6-|
              00000120  34 34 33 39 2d 39 33 37  66 2d 31 33 32 66 30 39  |4439-937f-132f09|
              00000130  61 37 39 32 30 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a79205\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:29:45.465: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Dec 22 05:29:45.465: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7186",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "baf4157e-3530-45de-b69f-acd071ad0c1a",
      ResourceVersion: (string) (len=5) "43446",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819783,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d524f67e-5bb6-4439-937f-132f09a79205",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 35 32 34 66 36  37 65 2d 35 62 62 36 2d  |\"d524f67e-5bb6-|
              00000120  34 34 33 39 2d 39 33 37  66 2d 31 33 32 66 30 39  |4439-937f-132f09|
              00000130  61 37 39 32 30 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a79205\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:29:45.471: INFO: Pod "test-recreate-deployment-76fb77d45-9qb7s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-9qb7s",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-7186",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9cb90b65-0b20-4abb-b7c4-00431198e17c",
      ResourceVersion: (string) (len=5) "43458",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819785,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "03289b6d-f399-430f-ba39-fb8c0d6960d6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  32 38 39 62 36 64 2d 66  |d\":\"03289b6d-f|
              00000090  33 39 39 2d 34 33 30 66  2d 62 61 33 39 2d 66 62  |399-430f-ba39-fb|
              000000a0  38 63 30 64 36 39 36 30  64 36 5c 22 7d 22 3a 7b  |8c0d6960d6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kv5m6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kv5m6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838819785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838819785,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:29:45.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7186" for this suite. @ 12/22/23 05:29:45.48
• [2.276 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 12/22/23 05:29:45.492
  Dec 22 05:29:45.492: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 05:29:45.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:29:45.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:29:45.528
  STEP: Creating pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838 @ 12/22/23 05:29:45.535
  E1222 05:29:46.130399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:47.130699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 05:29:47.561
  Dec 22 05:29:47.570: INFO: Initial restart count of pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 is 0
  Dec 22 05:29:47.573: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:29:48.130844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:49.131789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:29:49.577: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:29:50.131809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:51.131919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:29:51.580: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:29:52.132373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:53.132597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:29:53.584: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:29:54.133387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:55.134332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:29:55.588: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:29:56.134791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:57.134900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:29:57.593: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:29:58.135974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:29:59.136482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:29:59.597: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:00.137227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:01.137462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:01.603: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:02.138402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:03.139312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:03.608: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:04.139389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:05.139593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:05.613: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:06.139664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:07.139770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:07.618: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:08.139911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:09.139937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:09.627: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:10.140040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:11.140140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:11.631: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:12.140267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:13.141920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:13.634: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:14.141465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:15.141667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:15.639: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:16.142063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:17.142265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:17.643: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:18.142942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:19.143984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:19.646: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:20.144065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:21.144577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:21.651: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:22.145415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:23.146145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:23.655: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:24.146373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:25.146624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:25.660: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:26.146805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:27.147587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:27.665: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:28.148493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:29.149423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:29.668: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:30.150247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:31.150511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:31.677: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:32.150651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:33.151524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:33.688: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:34.152489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:35.152710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:35.699: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  E1222 05:30:36.152830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:37.152923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:37.705: INFO: Get pod busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 in namespace container-probe-5838
  Dec 22 05:30:37.705: INFO: Restart count of pod container-probe-5838/busybox-3fe7c39f-a469-4dc4-87f4-8b478c91ac44 is now 1 (50.134739516s elapsed)
  STEP: deleting the pod @ 12/22/23 05:30:37.705
  Dec 22 05:30:37.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5838" for this suite. @ 12/22/23 05:30:37.728
• [52.244 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/22/23 05:30:37.737
  Dec 22 05:30:37.737: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename init-container @ 12/22/23 05:30:37.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:37.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:37.768
  STEP: creating the pod @ 12/22/23 05:30:37.771
  Dec 22 05:30:37.771: INFO: PodSpec: initContainers in spec.initContainers
  E1222 05:30:38.153143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:39.153746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:40.154441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:41.154525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:41.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9059" for this suite. @ 12/22/23 05:30:41.362
• [3.633 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/22/23 05:30:41.371
  Dec 22 05:30:41.371: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename containers @ 12/22/23 05:30:41.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:41.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:41.403
  E1222 05:30:42.155101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:43.155082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:43.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4050" for this suite. @ 12/22/23 05:30:43.438
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 12/22/23 05:30:43.447
  Dec 22 05:30:43.447: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename statefulset @ 12/22/23 05:30:43.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:30:43.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:30:43.472
  STEP: Creating service test in namespace statefulset-3209 @ 12/22/23 05:30:43.477
  STEP: Creating statefulset ss in namespace statefulset-3209 @ 12/22/23 05:30:43.487
  Dec 22 05:30:43.496: INFO: Found 0 stateful pods, waiting for 1
  E1222 05:30:44.156021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:45.156094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:46.156204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:47.156865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:48.156761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:49.156825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:50.157246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:51.157390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:52.157551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:53.158334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:30:53.502: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/22/23 05:30:53.511
  STEP: Getting /status @ 12/22/23 05:30:53.523
  Dec 22 05:30:53.530: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/22/23 05:30:53.53
  Dec 22 05:30:53.540: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/22/23 05:30:53.54
  Dec 22 05:30:53.543: INFO: Observed &StatefulSet event: ADDED
  Dec 22 05:30:53.543: INFO: Found Statefulset ss in namespace statefulset-3209 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 05:30:53.543: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/22/23 05:30:53.543
  Dec 22 05:30:53.543: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 22 05:30:53.553: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/22/23 05:30:53.553
  Dec 22 05:30:53.555: INFO: Observed &StatefulSet event: ADDED
  Dec 22 05:30:53.555: INFO: Observed Statefulset ss in namespace statefulset-3209 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 22 05:30:53.555: INFO: Observed &StatefulSet event: MODIFIED
  Dec 22 05:30:53.555: INFO: Found Statefulset ss in namespace statefulset-3209 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Dec 22 05:30:53.555: INFO: Deleting all statefulset in ns statefulset-3209
  Dec 22 05:30:53.558: INFO: Scaling statefulset ss to 0
  E1222 05:30:54.158717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:55.158833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:56.159257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:57.159395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:58.159841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:30:59.160727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:00.161597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:01.161847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:02.162429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:03.162867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:31:03.573: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 22 05:31:03.577: INFO: Deleting statefulset ss
  Dec 22 05:31:03.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3209" for this suite. @ 12/22/23 05:31:03.595
• [20.155 seconds]
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 12/22/23 05:31:03.602
  Dec 22 05:31:03.602: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 05:31:03.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:31:03.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:31:03.63
  STEP: Creating replication controller my-hostname-basic-a6066da1-680b-4252-baed-4a135cd56932 @ 12/22/23 05:31:03.633
  Dec 22 05:31:03.644: INFO: Pod name my-hostname-basic-a6066da1-680b-4252-baed-4a135cd56932: Found 0 pods out of 1
  E1222 05:31:04.163461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:05.163648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:06.164235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:07.164391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:08.164495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:31:08.648: INFO: Pod name my-hostname-basic-a6066da1-680b-4252-baed-4a135cd56932: Found 1 pods out of 1
  Dec 22 05:31:08.648: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-a6066da1-680b-4252-baed-4a135cd56932" are running
  Dec 22 05:31:08.651: INFO: Pod "my-hostname-basic-a6066da1-680b-4252-baed-4a135cd56932-w85bn" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 05:31:04 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 05:31:03 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 05:31:04 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 05:31:04 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-22 05:31:03 +0000 UTC Reason: Message:}])
  Dec 22 05:31:08.651: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/22/23 05:31:08.651
  Dec 22 05:31:08.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2260" for this suite. @ 12/22/23 05:31:08.673
• [5.077 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 12/22/23 05:31:08.68
  Dec 22 05:31:08.680: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:31:08.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:31:08.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:31:08.711
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/22/23 05:31:08.715
  E1222 05:31:09.165564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:10.166471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:11.166595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:12.166733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:31:12.736
  Dec 22 05:31:12.739: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-316e09b4-6cb7-4c6e-a727-27f2c331300a container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:31:12.752
  Dec 22 05:31:12.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1570" for this suite. @ 12/22/23 05:31:12.778
• [4.104 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 12/22/23 05:31:12.785
  Dec 22 05:31:12.785: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:31:12.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:31:12.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:31:12.807
  STEP: Creating the pod @ 12/22/23 05:31:12.81
  E1222 05:31:13.167796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:14.168587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:15.169375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:31:15.358: INFO: Successfully updated pod "labelsupdatebfb3764a-4a19-4b3c-b252-4cdfc6683913"
  E1222 05:31:16.170334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:17.170564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:18.170848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:19.171264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:31:19.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7199" for this suite. @ 12/22/23 05:31:19.392
• [6.623 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/22/23 05:31:19.409
  Dec 22 05:31:19.409: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-watch @ 12/22/23 05:31:19.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:31:19.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:31:19.434
  Dec 22 05:31:19.438: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:31:20.172263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:21.172712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 12/22/23 05:31:21.976
  Dec 22 05:31:21.982: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T05:31:21Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T05:31:21Z]] name:name1 resourceVersion:44064 uid:b5fffd50-4f73-46a7-b33e-3dcb225053ed] num:map[num1:9223372036854775807 num2:1000000]]}
  E1222 05:31:22.172862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:23.173283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:24.174342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:25.174478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:26.174589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:27.175657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:28.175788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:29.175929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:30.176152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:31.176150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 12/22/23 05:31:31.982
  Dec 22 05:31:31.991: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T05:31:31Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T05:31:31Z]] name:name2 resourceVersion:44110 uid:30291038-31f4-404d-b5d8-f669161c21c9] num:map[num1:9223372036854775807 num2:1000000]]}
  E1222 05:31:32.177159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:33.177284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:34.177805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:35.178483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:36.178766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:37.179020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:38.179303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:39.179605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:40.180704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:41.180811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 12/22/23 05:31:41.993
  Dec 22 05:31:42.002: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T05:31:21Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T05:31:41Z]] name:name1 resourceVersion:44145 uid:b5fffd50-4f73-46a7-b33e-3dcb225053ed] num:map[num1:9223372036854775807 num2:1000000]]}
  E1222 05:31:42.180887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:43.181291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:44.182016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:45.182166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:46.182310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:47.182384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:48.182500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:49.183235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:50.183369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:51.183490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 12/22/23 05:31:52.003
  Dec 22 05:31:52.010: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T05:31:31Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T05:31:52Z]] name:name2 resourceVersion:44181 uid:30291038-31f4-404d-b5d8-f669161c21c9] num:map[num1:9223372036854775807 num2:1000000]]}
  E1222 05:31:52.183614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:53.184786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:54.185266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:55.185404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:56.185856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:57.186484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:58.186949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:31:59.187202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:00.187308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:01.187607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 12/22/23 05:32:02.01
  Dec 22 05:32:02.021: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T05:31:21Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T05:31:41Z]] name:name1 resourceVersion:44217 uid:b5fffd50-4f73-46a7-b33e-3dcb225053ed] num:map[num1:9223372036854775807 num2:1000000]]}
  E1222 05:32:02.187656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:03.187846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:04.187970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:05.188097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:06.188239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:07.188510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:08.189563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:09.189851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:10.190030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:11.190167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 12/22/23 05:32:12.021
  Dec 22 05:32:12.029: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-22T05:31:31Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-22T05:31:52Z]] name:name2 resourceVersion:44252 uid:30291038-31f4-404d-b5d8-f669161c21c9] num:map[num1:9223372036854775807 num2:1000000]]}
  E1222 05:32:12.190751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:13.190893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:14.191406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:15.191540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:16.191800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:17.191989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:18.192764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:19.193278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:20.193306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:21.194378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:22.194950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:32:22.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-5313" for this suite. @ 12/22/23 05:32:22.548
• [63.145 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 12/22/23 05:32:22.554
  Dec 22 05:32:22.554: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 05:32:22.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:32:22.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:32:22.584
  STEP: creating the pod @ 12/22/23 05:32:23.108
  STEP: waiting for pod running @ 12/22/23 05:32:23.123
  E1222 05:32:23.195530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:24.195964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 12/22/23 05:32:25.131
  Dec 22 05:32:25.134: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9541 PodName:var-expansion-4b62d2ea-2230-43d5-a90a-6087336a769a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:32:25.134: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:32:25.136: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:32:25.136: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-9541/pods/var-expansion-4b62d2ea-2230-43d5-a90a-6087336a769a/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  E1222 05:32:25.196909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: test for file in mounted path @ 12/22/23 05:32:25.205
  Dec 22 05:32:25.209: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9541 PodName:var-expansion-4b62d2ea-2230-43d5-a90a-6087336a769a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:32:25.209: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:32:25.209: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:32:25.209: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-9541/pods/var-expansion-4b62d2ea-2230-43d5-a90a-6087336a769a/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 12/22/23 05:32:25.281
  Dec 22 05:32:25.794: INFO: Successfully updated pod "var-expansion-4b62d2ea-2230-43d5-a90a-6087336a769a"
  STEP: waiting for annotated pod running @ 12/22/23 05:32:25.794
  STEP: deleting the pod gracefully @ 12/22/23 05:32:25.798
  Dec 22 05:32:25.798: INFO: Deleting pod "var-expansion-4b62d2ea-2230-43d5-a90a-6087336a769a" in namespace "var-expansion-9541"
  Dec 22 05:32:25.805: INFO: Wait up to 5m0s for pod "var-expansion-4b62d2ea-2230-43d5-a90a-6087336a769a" to be fully deleted
  E1222 05:32:26.197632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:27.198365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:28.199150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:29.200156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:30.200458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:31.200446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:32.200574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:33.200775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:34.201463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:35.202431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:36.203319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:37.204363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:38.205080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:39.205577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:40.206328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:41.206582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:42.207091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:43.207211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:44.207892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:45.208000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:46.209079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:47.209356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:48.210316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:49.211296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:50.212282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:51.212463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:52.212590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:53.213332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:54.214384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:55.214721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:56.215536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:57.215786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:32:57.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9541" for this suite. @ 12/22/23 05:32:57.885
• [35.336 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 12/22/23 05:32:57.891
  Dec 22 05:32:57.891: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:32:57.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:32:57.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:32:57.945
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/22/23 05:32:57.949
  E1222 05:32:58.215876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:32:59.215944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:00.216037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:01.216098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:33:01.97
  Dec 22 05:33:01.980: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-5d2b99fc-22b8-407e-989d-2cbd62783236 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:33:01.999
  Dec 22 05:33:02.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3644" for this suite. @ 12/22/23 05:33:02.037
• [4.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 12/22/23 05:33:02.053
  Dec 22 05:33:02.053: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename var-expansion @ 12/22/23 05:33:02.054
  E1222 05:33:02.216684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:33:02.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:33:02.511
  STEP: Creating a pod to test substitution in container's args @ 12/22/23 05:33:02.518
  E1222 05:33:03.217687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:04.218637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:05.218744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:06.218977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:33:06.555
  Dec 22 05:33:06.558: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod var-expansion-c90f2ccb-951f-4deb-9000-6d5485a28d95 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 05:33:06.563
  Dec 22 05:33:06.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9228" for this suite. @ 12/22/23 05:33:06.585
• [4.541 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/22/23 05:33:06.594
  Dec 22 05:33:06.594: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename subpath @ 12/22/23 05:33:06.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:33:06.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:33:06.621
  STEP: Setting up data @ 12/22/23 05:33:06.624
  STEP: Creating pod pod-subpath-test-projected-9zkd @ 12/22/23 05:33:06.636
  STEP: Creating a pod to test atomic-volume-subpath @ 12/22/23 05:33:06.636
  E1222 05:33:07.219152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:08.219924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:09.220959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:10.221302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:11.222137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:12.222739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:13.223685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:14.224190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:15.225172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:16.225557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:17.226251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:18.226297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:19.227047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:20.227316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:21.228040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:22.228387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:23.228778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:24.229417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:25.230472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:26.231526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:27.231747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:28.231854      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:29.232622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:30.232999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:33:30.733
  Dec 22 05:33:30.736: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-subpath-test-projected-9zkd container test-container-subpath-projected-9zkd: <nil>
  STEP: delete the pod @ 12/22/23 05:33:30.741
  STEP: Deleting pod pod-subpath-test-projected-9zkd @ 12/22/23 05:33:30.758
  Dec 22 05:33:30.758: INFO: Deleting pod "pod-subpath-test-projected-9zkd" in namespace "subpath-8674"
  Dec 22 05:33:30.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8674" for this suite. @ 12/22/23 05:33:30.766
• [24.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 12/22/23 05:33:30.775
  Dec 22 05:33:30.775: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 05:33:30.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:33:30.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:33:30.798
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3268 @ 12/22/23 05:33:30.801
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/22/23 05:33:30.81
  STEP: creating service externalsvc in namespace services-3268 @ 12/22/23 05:33:30.811
  STEP: creating replication controller externalsvc in namespace services-3268 @ 12/22/23 05:33:30.823
  I1222 05:33:30.830319      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3268, replica count: 2
  E1222 05:33:31.233804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:32.234764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:33.235115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1222 05:33:33.881991      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/22/23 05:33:33.885
  Dec 22 05:33:33.899: INFO: Creating new exec pod
  E1222 05:33:34.236115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:35.236400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:33:35.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-3268 exec execpodhczcz -- /bin/sh -x -c nslookup clusterip-service.services-3268.svc.cluster.local'
  Dec 22 05:33:36.113: INFO: stderr: "+ nslookup clusterip-service.services-3268.svc.cluster.local\n"
  Dec 22 05:33:36.113: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-3268.svc.cluster.local\tcanonical name = externalsvc.services-3268.svc.cluster.local.\nName:\texternalsvc.services-3268.svc.cluster.local\nAddress: 10.43.94.2\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3268, will wait for the garbage collector to delete the pods @ 12/22/23 05:33:36.113
  Dec 22 05:33:36.173: INFO: Deleting ReplicationController externalsvc took: 5.355978ms
  E1222 05:33:36.236525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:33:36.274: INFO: Terminating ReplicationController externalsvc pods took: 100.721396ms
  E1222 05:33:37.237124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:38.237792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:33:38.902: INFO: Cleaning up the ClusterIP to ExternalName test service
  Dec 22 05:33:38.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3268" for this suite. @ 12/22/23 05:33:38.918
• [8.151 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 12/22/23 05:33:38.927
  Dec 22 05:33:38.927: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename dns @ 12/22/23 05:33:38.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:33:38.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:33:38.95
  STEP: Creating a test headless service @ 12/22/23 05:33:38.953
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4517.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4517.svc.cluster.local;sleep 1; done
   @ 12/22/23 05:33:38.969
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4517.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4517.svc.cluster.local;sleep 1; done
   @ 12/22/23 05:33:38.969
  STEP: creating a pod to probe DNS @ 12/22/23 05:33:38.969
  STEP: submitting the pod to kubernetes @ 12/22/23 05:33:38.969
  E1222 05:33:39.238736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:40.239073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/22/23 05:33:40.997
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:33:41.001
  Dec 22 05:33:41.007: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local from pod dns-4517/dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea: the server could not find the requested resource (get pods dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea)
  Dec 22 05:33:41.011: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local from pod dns-4517/dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea: the server could not find the requested resource (get pods dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea)
  Dec 22 05:33:41.014: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4517.svc.cluster.local from pod dns-4517/dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea: the server could not find the requested resource (get pods dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea)
  Dec 22 05:33:41.018: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4517.svc.cluster.local from pod dns-4517/dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea: the server could not find the requested resource (get pods dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea)
  Dec 22 05:33:41.021: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local from pod dns-4517/dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea: the server could not find the requested resource (get pods dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea)
  Dec 22 05:33:41.024: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local from pod dns-4517/dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea: the server could not find the requested resource (get pods dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea)
  Dec 22 05:33:41.027: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4517.svc.cluster.local from pod dns-4517/dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea: the server could not find the requested resource (get pods dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea)
  Dec 22 05:33:41.030: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4517.svc.cluster.local from pod dns-4517/dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea: the server could not find the requested resource (get pods dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea)
  Dec 22 05:33:41.030: INFO: Lookups using dns-4517/dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4517.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4517.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4517.svc.cluster.local jessie_udp@dns-test-service-2.dns-4517.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4517.svc.cluster.local]

  Dec 22 05:33:41.036: INFO: Pod client logs for webserver: 
  Dec 22 05:33:41.040: INFO: Pod client logs for querier: 
  Dec 22 05:33:41.045: INFO: Pod client logs for jessie-querier: 
  E1222 05:33:41.239951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:42.240163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:43.240624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:44.240724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:45.240929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:33:46.033: INFO: DNS probes using dns-4517/dns-test-fbd4f18e-5de9-408a-845f-779b47e279ea succeeded

  STEP: deleting the pod @ 12/22/23 05:33:46.033
  STEP: deleting the test headless service @ 12/22/23 05:33:46.05
  Dec 22 05:33:46.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4517" for this suite. @ 12/22/23 05:33:46.107
• [7.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 12/22/23 05:33:46.131
  Dec 22 05:33:46.131: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:33:46.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:33:46.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:33:46.17
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:33:46.18
  E1222 05:33:46.241547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:47.242312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:48.242377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:49.242912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:33:50.235
  Dec 22 05:33:50.240: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-12581d96-eef5-4dfa-919c-b38034e81547 container client-container: <nil>
  E1222 05:33:50.244323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 12/22/23 05:33:50.246
  Dec 22 05:33:50.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2000" for this suite. @ 12/22/23 05:33:50.268
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 12/22/23 05:33:50.277
  Dec 22 05:33:50.277: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 05:33:50.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:33:50.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:33:50.304
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3810 @ 12/22/23 05:33:50.308
  STEP: changing the ExternalName service to type=NodePort @ 12/22/23 05:33:50.315
  STEP: creating replication controller externalname-service in namespace services-3810 @ 12/22/23 05:33:50.336
  I1222 05:33:50.344235      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3810, replica count: 2
  E1222 05:33:51.244323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:52.244999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:53.245748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1222 05:33:53.396298      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 05:33:53.396: INFO: Creating new exec pod
  E1222 05:33:54.246338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:55.246563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:33:56.246843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:33:56.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-3810 exec execpodldljw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 22 05:33:56.565: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 22 05:33:56.565: INFO: stdout: ""
  E1222 05:33:57.247130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:33:57.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-3810 exec execpodldljw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 22 05:33:57.599: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 22 05:33:57.599: INFO: stdout: "externalname-service-8bxdn"
  Dec 22 05:33:57.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-3810 exec execpodldljw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.113.58 80'
  Dec 22 05:33:57.779: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.113.58 80\nConnection to 10.43.113.58 80 port [tcp/http] succeeded!\n"
  Dec 22 05:33:57.779: INFO: stdout: "externalname-service-8bxdn"
  Dec 22 05:33:57.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-3810 exec execpodldljw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.79 30703'
  Dec 22 05:33:57.928: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.79 30703\nConnection to 172.31.2.79 30703 port [tcp/*] succeeded!\n"
  Dec 22 05:33:57.928: INFO: stdout: ""
  E1222 05:33:58.248041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:33:58.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-3810 exec execpodldljw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.79 30703'
  Dec 22 05:33:58.956: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.79 30703\nConnection to 172.31.2.79 30703 port [tcp/*] succeeded!\n"
  Dec 22 05:33:58.956: INFO: stdout: "externalname-service-8bxdn"
  Dec 22 05:33:58.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-3810 exec execpodldljw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.14.155 30703'
  Dec 22 05:33:59.118: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.14.155 30703\nConnection to 172.31.14.155 30703 port [tcp/*] succeeded!\n"
  Dec 22 05:33:59.118: INFO: stdout: ""
  E1222 05:33:59.249732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:33:59.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-3810 exec execpodldljw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.14.155 30703'
  Dec 22 05:34:00.117: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.14.155 30703\nConnection to 172.31.14.155 30703 port [tcp/*] succeeded!\n"
  Dec 22 05:34:00.117: INFO: stdout: "externalname-service-8bxdn"
  Dec 22 05:34:00.117: INFO: Cleaning up the ExternalName to NodePort test service
  Dec 22 05:34:00.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3810" for this suite. @ 12/22/23 05:34:00.144
• [9.874 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 12/22/23 05:34:00.151
  Dec 22 05:34:00.151: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:34:00.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:34:00.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:34:00.176
  STEP: Setting up server cert @ 12/22/23 05:34:00.211
  E1222 05:34:00.249367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:34:00.999
  STEP: Deploying the webhook pod @ 12/22/23 05:34:01.009
  STEP: Wait for the deployment to be ready @ 12/22/23 05:34:01.022
  Dec 22 05:34:01.028: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1222 05:34:01.250695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:02.251251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:34:03.04
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:34:03.056
  E1222 05:34:03.251118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:34:04.057: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/22/23 05:34:04.063
  STEP: create a pod that should be denied by the webhook @ 12/22/23 05:34:04.099
  STEP: create a pod that causes the webhook to hang @ 12/22/23 05:34:04.136
  E1222 05:34:04.251651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:05.252612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:06.252793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:07.253026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:08.253240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:09.253849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:10.254015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:11.254336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:12.254429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:13.254924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 12/22/23 05:34:14.147
  STEP: create a configmap that should be admitted by the webhook @ 12/22/23 05:34:14.168
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/22/23 05:34:14.183
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/22/23 05:34:14.192
  STEP: create a namespace that bypass the webhook @ 12/22/23 05:34:14.198
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/22/23 05:34:14.229
  E1222 05:34:14.255389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:34:14.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7807" for this suite. @ 12/22/23 05:34:14.345
  STEP: Destroying namespace "webhook-markers-8275" for this suite. @ 12/22/23 05:34:14.481
  STEP: Destroying namespace "exempted-namespace-4816" for this suite. @ 12/22/23 05:34:14.489
• [14.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 12/22/23 05:34:14.499
  Dec 22 05:34:14.499: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename gc @ 12/22/23 05:34:14.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:34:14.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:34:14.528
  STEP: create the rc1 @ 12/22/23 05:34:14.538
  STEP: create the rc2 @ 12/22/23 05:34:14.549
  E1222 05:34:15.257482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:16.257774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:17.257817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:18.258423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:19.258627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:20.259093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/22/23 05:34:20.718
  E1222 05:34:21.259951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:22.260693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:23.260978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:24.260977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/22/23 05:34:24.265
  STEP: wait for the rc to be deleted @ 12/22/23 05:34:24.294
  E1222 05:34:25.261276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:26.261307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:27.261798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:28.262095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:29.262659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:34:29.446: INFO: 70 pods remaining
  Dec 22 05:34:29.446: INFO: 70 pods has nil DeletionTimestamp
  Dec 22 05:34:29.446: INFO: 
  E1222 05:34:30.262960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:31.263097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:32.263548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:33.264643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:34.264891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/22/23 05:34:34.309
  W1222 05:34:34.315145      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Dec 22 05:34:34.315: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 05:34:34.315: INFO: Deleting pod "simpletest-rc-to-be-deleted-262dd" in namespace "gc-4000"
  Dec 22 05:34:34.332: INFO: Deleting pod "simpletest-rc-to-be-deleted-27ktw" in namespace "gc-4000"
  Dec 22 05:34:34.347: INFO: Deleting pod "simpletest-rc-to-be-deleted-28b8x" in namespace "gc-4000"
  Dec 22 05:34:34.368: INFO: Deleting pod "simpletest-rc-to-be-deleted-2cnzh" in namespace "gc-4000"
  Dec 22 05:34:34.389: INFO: Deleting pod "simpletest-rc-to-be-deleted-2lmp8" in namespace "gc-4000"
  Dec 22 05:34:34.422: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xjgt" in namespace "gc-4000"
  Dec 22 05:34:34.448: INFO: Deleting pod "simpletest-rc-to-be-deleted-4c9hw" in namespace "gc-4000"
  Dec 22 05:34:34.506: INFO: Deleting pod "simpletest-rc-to-be-deleted-4f67d" in namespace "gc-4000"
  Dec 22 05:34:34.571: INFO: Deleting pod "simpletest-rc-to-be-deleted-4f6t9" in namespace "gc-4000"
  Dec 22 05:34:34.604: INFO: Deleting pod "simpletest-rc-to-be-deleted-4rc8n" in namespace "gc-4000"
  Dec 22 05:34:34.646: INFO: Deleting pod "simpletest-rc-to-be-deleted-4sfx2" in namespace "gc-4000"
  Dec 22 05:34:34.688: INFO: Deleting pod "simpletest-rc-to-be-deleted-4thsw" in namespace "gc-4000"
  Dec 22 05:34:34.732: INFO: Deleting pod "simpletest-rc-to-be-deleted-4v562" in namespace "gc-4000"
  Dec 22 05:34:34.846: INFO: Deleting pod "simpletest-rc-to-be-deleted-5258z" in namespace "gc-4000"
  Dec 22 05:34:34.954: INFO: Deleting pod "simpletest-rc-to-be-deleted-54fv5" in namespace "gc-4000"
  Dec 22 05:34:35.011: INFO: Deleting pod "simpletest-rc-to-be-deleted-67svr" in namespace "gc-4000"
  Dec 22 05:34:35.047: INFO: Deleting pod "simpletest-rc-to-be-deleted-688dl" in namespace "gc-4000"
  Dec 22 05:34:35.142: INFO: Deleting pod "simpletest-rc-to-be-deleted-68jf2" in namespace "gc-4000"
  Dec 22 05:34:35.220: INFO: Deleting pod "simpletest-rc-to-be-deleted-6thpp" in namespace "gc-4000"
  Dec 22 05:34:35.258: INFO: Deleting pod "simpletest-rc-to-be-deleted-7dkcb" in namespace "gc-4000"
  E1222 05:34:35.265612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:34:35.298: INFO: Deleting pod "simpletest-rc-to-be-deleted-7sh67" in namespace "gc-4000"
  Dec 22 05:34:35.360: INFO: Deleting pod "simpletest-rc-to-be-deleted-8279g" in namespace "gc-4000"
  Dec 22 05:34:35.395: INFO: Deleting pod "simpletest-rc-to-be-deleted-8mgt8" in namespace "gc-4000"
  Dec 22 05:34:35.427: INFO: Deleting pod "simpletest-rc-to-be-deleted-8qfmq" in namespace "gc-4000"
  Dec 22 05:34:35.513: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vmgz" in namespace "gc-4000"
  Dec 22 05:34:35.623: INFO: Deleting pod "simpletest-rc-to-be-deleted-8w6mr" in namespace "gc-4000"
  Dec 22 05:34:35.707: INFO: Deleting pod "simpletest-rc-to-be-deleted-8xn5p" in namespace "gc-4000"
  Dec 22 05:34:35.757: INFO: Deleting pod "simpletest-rc-to-be-deleted-9l67x" in namespace "gc-4000"
  Dec 22 05:34:35.807: INFO: Deleting pod "simpletest-rc-to-be-deleted-9np7b" in namespace "gc-4000"
  Dec 22 05:34:35.865: INFO: Deleting pod "simpletest-rc-to-be-deleted-bl5bf" in namespace "gc-4000"
  Dec 22 05:34:35.898: INFO: Deleting pod "simpletest-rc-to-be-deleted-bmgcj" in namespace "gc-4000"
  Dec 22 05:34:35.981: INFO: Deleting pod "simpletest-rc-to-be-deleted-bz4p4" in namespace "gc-4000"
  Dec 22 05:34:36.056: INFO: Deleting pod "simpletest-rc-to-be-deleted-c8x22" in namespace "gc-4000"
  Dec 22 05:34:36.126: INFO: Deleting pod "simpletest-rc-to-be-deleted-cfrww" in namespace "gc-4000"
  Dec 22 05:34:36.180: INFO: Deleting pod "simpletest-rc-to-be-deleted-cpdtj" in namespace "gc-4000"
  Dec 22 05:34:36.238: INFO: Deleting pod "simpletest-rc-to-be-deleted-d47mp" in namespace "gc-4000"
  E1222 05:34:36.266247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:34:36.312: INFO: Deleting pod "simpletest-rc-to-be-deleted-df2jk" in namespace "gc-4000"
  Dec 22 05:34:36.367: INFO: Deleting pod "simpletest-rc-to-be-deleted-dx4pz" in namespace "gc-4000"
  Dec 22 05:34:36.423: INFO: Deleting pod "simpletest-rc-to-be-deleted-dxz6v" in namespace "gc-4000"
  Dec 22 05:34:36.487: INFO: Deleting pod "simpletest-rc-to-be-deleted-fhmll" in namespace "gc-4000"
  Dec 22 05:34:36.529: INFO: Deleting pod "simpletest-rc-to-be-deleted-fmftx" in namespace "gc-4000"
  Dec 22 05:34:36.570: INFO: Deleting pod "simpletest-rc-to-be-deleted-frr8b" in namespace "gc-4000"
  Dec 22 05:34:36.598: INFO: Deleting pod "simpletest-rc-to-be-deleted-fv8sw" in namespace "gc-4000"
  Dec 22 05:34:36.629: INFO: Deleting pod "simpletest-rc-to-be-deleted-g24v5" in namespace "gc-4000"
  Dec 22 05:34:36.670: INFO: Deleting pod "simpletest-rc-to-be-deleted-g9cbl" in namespace "gc-4000"
  Dec 22 05:34:36.785: INFO: Deleting pod "simpletest-rc-to-be-deleted-gnz7z" in namespace "gc-4000"
  Dec 22 05:34:36.887: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqlz6" in namespace "gc-4000"
  Dec 22 05:34:36.974: INFO: Deleting pod "simpletest-rc-to-be-deleted-gvjgk" in namespace "gc-4000"
  Dec 22 05:34:37.033: INFO: Deleting pod "simpletest-rc-to-be-deleted-hm7xg" in namespace "gc-4000"
  Dec 22 05:34:37.094: INFO: Deleting pod "simpletest-rc-to-be-deleted-hpzw8" in namespace "gc-4000"
  Dec 22 05:34:37.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4000" for this suite. @ 12/22/23 05:34:37.162
• [22.690 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/22/23 05:34:37.191
  Dec 22 05:34:37.191: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/22/23 05:34:37.192
  E1222 05:34:37.266223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:34:38.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:34:38.15
  STEP: creating a target pod @ 12/22/23 05:34:38.154
  E1222 05:34:38.267063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:39.267867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 12/22/23 05:34:40.175
  E1222 05:34:40.268899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:41.268868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 12/22/23 05:34:42.203
  Dec 22 05:34:42.203: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1468 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:34:42.203: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:34:42.204: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:34:42.204: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-1468/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Dec 22 05:34:42.262: INFO: Exec stderr: ""
  E1222 05:34:42.269050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:34:42.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1468" for this suite. @ 12/22/23 05:34:42.287
• [5.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/22/23 05:34:42.296
  Dec 22 05:34:42.296: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 05:34:42.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:34:42.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:34:42.32
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/22/23 05:34:42.358
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 05:34:42.365
  Dec 22 05:34:42.373: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:34:42.373: INFO: Node ip-172-31-11-160.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:34:43.270365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:34:43.378: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 05:34:43.378: INFO: Node ip-172-31-14-155.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:34:44.270275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:34:44.420: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 05:34:44.420: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/22/23 05:34:44.423
  Dec 22 05:34:44.465: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 05:34:44.465: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:34:45.270398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:34:45.456: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 05:34:45.456: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:34:46.270936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:34:46.969: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 05:34:46.969: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/22/23 05:34:46.97
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 05:34:46.976
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6128, will wait for the garbage collector to delete the pods @ 12/22/23 05:34:46.976
  Dec 22 05:34:47.036: INFO: Deleting DaemonSet.extensions daemon-set took: 6.434526ms
  Dec 22 05:34:47.237: INFO: Terminating DaemonSet.extensions daemon-set pods took: 200.947285ms
  E1222 05:34:47.271962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:48.272890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:34:48.344: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:34:48.345: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 05:34:48.350: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47275"},"items":null}

  Dec 22 05:34:48.354: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47275"},"items":null}

  Dec 22 05:34:48.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6128" for this suite. @ 12/22/23 05:34:48.381
• [6.093 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 12/22/23 05:34:48.389
  Dec 22 05:34:48.389: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename job @ 12/22/23 05:34:48.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:34:48.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:34:48.413
  STEP: Creating Indexed job @ 12/22/23 05:34:48.417
  STEP: Ensuring job reaches completions @ 12/22/23 05:34:48.426
  E1222 05:34:49.272958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:50.273181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:51.273496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:52.274501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:53.274601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:54.274699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:55.275308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:56.275454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 12/22/23 05:34:56.43
  Dec 22 05:34:56.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-671" for this suite. @ 12/22/23 05:34:56.439
• [8.057 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 12/22/23 05:34:56.447
  Dec 22 05:34:56.447: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:34:56.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:34:56.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:34:56.486
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/22/23 05:34:56.491
  Dec 22 05:34:56.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-8480 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Dec 22 05:34:56.615: INFO: stderr: ""
  Dec 22 05:34:56.615: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/22/23 05:34:56.615
  E1222 05:34:57.275586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:58.275986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:34:59.276925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:00.277081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:01.277281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/22/23 05:35:01.665
  Dec 22 05:35:01.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-8480 get pod e2e-test-httpd-pod -o json'
  Dec 22 05:35:01.816: INFO: stderr: ""
  Dec 22 05:35:01.816: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-12-22T05:34:56Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8480\",\n        \"resourceVersion\": \"47419\",\n        \"uid\": \"0cf46877-51d1-4133-8998-47f573d0d2ff\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-zh4qs\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-8-254.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-zh4qs\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-22T05:34:57Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-22T05:34:56Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-22T05:34:57Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-22T05:34:57Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-22T05:34:56Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://72b75e5b139b61bef867ee1f46f2d901e14a96df89c4ba1d44bdd3e18c874d12\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-12-22T05:34:57Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.8.254\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.8.254\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.3.156\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.3.156\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-12-22T05:34:56Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/22/23 05:35:01.816
  Dec 22 05:35:01.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-8480 replace -f -'
  Dec 22 05:35:02.071: INFO: stderr: ""
  Dec 22 05:35:02.071: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 12/22/23 05:35:02.071
  Dec 22 05:35:02.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-8480 delete pods e2e-test-httpd-pod'
  E1222 05:35:02.278185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:03.278722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:35:03.754: INFO: stderr: ""
  Dec 22 05:35:03.754: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 22 05:35:03.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8480" for this suite. @ 12/22/23 05:35:03.764
• [7.325 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 12/22/23 05:35:03.772
  Dec 22 05:35:03.772: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 05:35:03.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:35:03.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:35:03.862
  STEP: set up a multi version CRD @ 12/22/23 05:35:03.87
  Dec 22 05:35:03.871: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:35:04.279412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:05.279549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:06.279965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:07.280519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:08.282337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 12/22/23 05:35:08.45
  STEP: check the new version name is served @ 12/22/23 05:35:08.467
  E1222 05:35:09.303690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 12/22/23 05:35:09.849
  E1222 05:35:10.303762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 12/22/23 05:35:10.625
  E1222 05:35:11.304090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:12.304899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:13.305954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:35:14.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-158" for this suite. @ 12/22/23 05:35:14.245
• [10.479 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 12/22/23 05:35:14.252
  Dec 22 05:35:14.252: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:35:14.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:35:14.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:35:14.281
  STEP: Counting existing ResourceQuota @ 12/22/23 05:35:14.285
  E1222 05:35:14.306228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:15.307257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:16.308319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:17.309554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:18.309949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/22/23 05:35:19.294
  STEP: Ensuring resource quota status is calculated @ 12/22/23 05:35:19.304
  E1222 05:35:19.311082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:20.311446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 12/22/23 05:35:21.308
  E1222 05:35:21.311845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures replication controller creation @ 12/22/23 05:35:21.322
  E1222 05:35:22.312337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:23.312686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 12/22/23 05:35:23.326
  STEP: Ensuring resource quota status released usage @ 12/22/23 05:35:23.331
  E1222 05:35:24.312791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:25.312888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:35:25.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5363" for this suite. @ 12/22/23 05:35:25.339
• [11.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 12/22/23 05:35:25.346
  Dec 22 05:35:25.346: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:35:25.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:35:25.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:35:25.369
  STEP: Setting up server cert @ 12/22/23 05:35:25.397
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:35:26.057
  STEP: Deploying the webhook pod @ 12/22/23 05:35:26.065
  STEP: Wait for the deployment to be ready @ 12/22/23 05:35:26.08
  Dec 22 05:35:26.087: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1222 05:35:26.313183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:27.313302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:35:28.14
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:35:28.149
  E1222 05:35:28.313896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:35:29.150: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 22 05:35:29.169: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:35:29.314532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6797-crds.webhook.example.com via the AdmissionRegistration API @ 12/22/23 05:35:29.695
  STEP: Creating a custom resource while v1 is storage version @ 12/22/23 05:35:29.719
  E1222 05:35:30.315744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:31.315773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/22/23 05:35:31.754
  STEP: Patching the custom resource while v2 is storage version @ 12/22/23 05:35:31.771
  E1222 05:35:32.316969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:35:32.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8394" for this suite. @ 12/22/23 05:35:32.359
  STEP: Destroying namespace "webhook-markers-1325" for this suite. @ 12/22/23 05:35:32.365
• [7.023 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 12/22/23 05:35:32.369
  Dec 22 05:35:32.369: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:35:32.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:35:32.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:35:32.394
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:35:32.397
  E1222 05:35:33.317345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:34.317810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:35.317963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:36.318280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:35:36.42
  Dec 22 05:35:36.423: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-9ca29300-c172-4f90-b302-5d7df217e777 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:35:36.434
  Dec 22 05:35:36.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5397" for this suite. @ 12/22/23 05:35:36.454
• [4.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 12/22/23 05:35:36.463
  Dec 22 05:35:36.463: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:35:36.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:35:36.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:35:36.494
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/22/23 05:35:36.497
  E1222 05:35:37.319317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:38.319713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:39.319947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:40.321039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:35:40.52
  Dec 22 05:35:40.523: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-017fdf63-378b-421d-b128-add7db7071c8 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:35:40.528
  Dec 22 05:35:40.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5899" for this suite. @ 12/22/23 05:35:40.548
• [4.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 12/22/23 05:35:40.561
  Dec 22 05:35:40.562: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/22/23 05:35:40.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:35:40.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:35:40.6
  STEP: create the container to handle the HTTPGet hook request. @ 12/22/23 05:35:40.609
  E1222 05:35:41.322032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:42.322812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/22/23 05:35:42.627
  E1222 05:35:43.323767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:44.324022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/22/23 05:35:44.642
  STEP: delete the pod with lifecycle hook @ 12/22/23 05:35:44.652
  E1222 05:35:45.324373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:46.324924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:35:46.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-188" for this suite. @ 12/22/23 05:35:46.67
• [6.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/22/23 05:35:46.679
  Dec 22 05:35:46.679: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:35:46.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:35:46.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:35:46.749
  STEP: Creating secret with name secret-test-b0d3d0aa-eab8-4195-ba21-2a6977ffc9e4 @ 12/22/23 05:35:46.753
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:35:46.758
  E1222 05:35:47.325453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:48.326429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:49.326537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:50.327495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:35:50.776
  Dec 22 05:35:50.778: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-secrets-113cc311-2891-4d05-a5f4-359f954887fa container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:35:50.784
  Dec 22 05:35:50.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7418" for this suite. @ 12/22/23 05:35:50.806
• [4.139 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 12/22/23 05:35:50.819
  Dec 22 05:35:50.819: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:35:50.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:35:50.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:35:50.842
  STEP: Setting up server cert @ 12/22/23 05:35:50.872
  E1222 05:35:51.327897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:35:51.359
  STEP: Deploying the webhook pod @ 12/22/23 05:35:51.363
  STEP: Wait for the deployment to be ready @ 12/22/23 05:35:51.374
  Dec 22 05:35:51.379: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1222 05:35:52.328871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:53.329487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:35:53.392
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:35:53.403
  E1222 05:35:54.330548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:35:54.404: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 22 05:35:54.411: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/22/23 05:35:54.925
  STEP: Creating a custom resource that should be denied by the webhook @ 12/22/23 05:35:54.945
  E1222 05:35:55.331057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:56.331716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/22/23 05:35:56.967
  STEP: Updating the custom resource with disallowed data should be denied @ 12/22/23 05:35:56.975
  STEP: Deleting the custom resource should be denied @ 12/22/23 05:35:56.983
  STEP: Remove the offending key and value from the custom resource data @ 12/22/23 05:35:56.988
  STEP: Deleting the updated custom resource should be successful @ 12/22/23 05:35:57.002
  E1222 05:35:57.331796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:35:57.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3222" for this suite. @ 12/22/23 05:35:57.589
  STEP: Destroying namespace "webhook-markers-4926" for this suite. @ 12/22/23 05:35:57.594
• [6.780 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/22/23 05:35:57.599
  Dec 22 05:35:57.599: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:35:57.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:35:57.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:35:57.624
  STEP: Creating projection with secret that has name projected-secret-test-map-1ceb88ad-93ee-4ef0-b0ba-cc9d2aa1b71d @ 12/22/23 05:35:57.628
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:35:57.634
  E1222 05:35:58.332424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:35:59.333474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:00.333607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:01.333740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:36:01.655
  Dec 22 05:36:01.659: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-projected-secrets-bab09827-d689-479e-9973-38e8bb5a7d73 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:36:01.666
  Dec 22 05:36:01.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4780" for this suite. @ 12/22/23 05:36:01.686
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 12/22/23 05:36:01.694
  Dec 22 05:36:01.694: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:36:01.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:36:01.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:36:01.728
  E1222 05:36:02.334389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:03.334530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:04.335144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:05.335428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:06.335798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:07.336123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:08.336972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:09.337147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:10.337306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:11.337791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:12.337965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:13.338398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:14.339024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:15.339171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:16.340068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:17.340446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:18.340411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/22/23 05:36:18.735
  E1222 05:36:19.341654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:20.342097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:21.342245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:22.343265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:23.343328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/22/23 05:36:23.739
  STEP: Ensuring resource quota status is calculated @ 12/22/23 05:36:23.744
  E1222 05:36:24.343638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:25.343902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 12/22/23 05:36:25.751
  STEP: Ensuring resource quota status captures configMap creation @ 12/22/23 05:36:25.763
  E1222 05:36:26.344080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:27.344230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 12/22/23 05:36:27.768
  STEP: Ensuring resource quota status released usage @ 12/22/23 05:36:27.775
  E1222 05:36:28.344900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:29.345083      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:36:29.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6720" for this suite. @ 12/22/23 05:36:29.784
• [28.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 12/22/23 05:36:29.79
  Dec 22 05:36:29.790: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename job @ 12/22/23 05:36:29.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:36:29.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:36:29.817
  STEP: Creating a job @ 12/22/23 05:36:29.825
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/22/23 05:36:29.832
  E1222 05:36:30.345300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:31.346359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 12/22/23 05:36:31.836
  STEP: updating /status @ 12/22/23 05:36:31.841
  STEP: get /status @ 12/22/23 05:36:31.848
  Dec 22 05:36:31.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5699" for this suite. @ 12/22/23 05:36:31.854
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 12/22/23 05:36:31.86
  Dec 22 05:36:31.860: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:36:31.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:36:31.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:36:31.883
  STEP: creating a replication controller @ 12/22/23 05:36:31.886
  Dec 22 05:36:31.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 create -f -'
  Dec 22 05:36:32.079: INFO: stderr: ""
  Dec 22 05:36:32.079: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/22/23 05:36:32.079
  Dec 22 05:36:32.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 05:36:32.204: INFO: stderr: ""
  Dec 22 05:36:32.204: INFO: stdout: "update-demo-nautilus-v659q update-demo-nautilus-w7rkj "
  Dec 22 05:36:32.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods update-demo-nautilus-v659q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 05:36:32.306: INFO: stderr: ""
  Dec 22 05:36:32.306: INFO: stdout: ""
  Dec 22 05:36:32.306: INFO: update-demo-nautilus-v659q is created but not running
  E1222 05:36:32.346645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:33.347210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:34.347950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:35.349509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:36.350343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:36:37.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1222 05:36:37.350550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:36:37.431: INFO: stderr: ""
  Dec 22 05:36:37.431: INFO: stdout: "update-demo-nautilus-v659q update-demo-nautilus-w7rkj "
  Dec 22 05:36:37.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods update-demo-nautilus-v659q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 05:36:37.508: INFO: stderr: ""
  Dec 22 05:36:37.508: INFO: stdout: "true"
  Dec 22 05:36:37.508: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods update-demo-nautilus-v659q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 05:36:37.583: INFO: stderr: ""
  Dec 22 05:36:37.583: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 05:36:37.583: INFO: validating pod update-demo-nautilus-v659q
  Dec 22 05:36:37.596: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 05:36:37.596: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 05:36:37.596: INFO: update-demo-nautilus-v659q is verified up and running
  Dec 22 05:36:37.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods update-demo-nautilus-w7rkj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 05:36:37.672: INFO: stderr: ""
  Dec 22 05:36:37.672: INFO: stdout: "true"
  Dec 22 05:36:37.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods update-demo-nautilus-w7rkj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 05:36:37.754: INFO: stderr: ""
  Dec 22 05:36:37.754: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 05:36:37.754: INFO: validating pod update-demo-nautilus-w7rkj
  Dec 22 05:36:37.762: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 05:36:37.762: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 05:36:37.762: INFO: update-demo-nautilus-w7rkj is verified up and running
  STEP: scaling down the replication controller @ 12/22/23 05:36:37.762
  Dec 22 05:36:37.764: INFO: scanned /root for discovery docs: <nil>
  Dec 22 05:36:37.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1222 05:36:38.350974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:36:38.863: INFO: stderr: ""
  Dec 22 05:36:38.863: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/22/23 05:36:38.863
  Dec 22 05:36:38.863: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 05:36:38.959: INFO: stderr: ""
  Dec 22 05:36:38.959: INFO: stdout: "update-demo-nautilus-w7rkj "
  Dec 22 05:36:38.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods update-demo-nautilus-w7rkj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 05:36:39.054: INFO: stderr: ""
  Dec 22 05:36:39.054: INFO: stdout: "true"
  Dec 22 05:36:39.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods update-demo-nautilus-w7rkj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 05:36:39.136: INFO: stderr: ""
  Dec 22 05:36:39.136: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 05:36:39.136: INFO: validating pod update-demo-nautilus-w7rkj
  Dec 22 05:36:39.139: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 05:36:39.139: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 05:36:39.139: INFO: update-demo-nautilus-w7rkj is verified up and running
  STEP: scaling up the replication controller @ 12/22/23 05:36:39.139
  Dec 22 05:36:39.141: INFO: scanned /root for discovery docs: <nil>
  Dec 22 05:36:39.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1222 05:36:39.353046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:36:40.249: INFO: stderr: ""
  Dec 22 05:36:40.249: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/22/23 05:36:40.249
  Dec 22 05:36:40.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 22 05:36:40.330: INFO: stderr: ""
  Dec 22 05:36:40.330: INFO: stdout: "update-demo-nautilus-w4m27 update-demo-nautilus-w7rkj "
  Dec 22 05:36:40.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods update-demo-nautilus-w4m27 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E1222 05:36:40.353429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:36:40.402: INFO: stderr: ""
  Dec 22 05:36:40.402: INFO: stdout: "true"
  Dec 22 05:36:40.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods update-demo-nautilus-w4m27 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 05:36:40.491: INFO: stderr: ""
  Dec 22 05:36:40.491: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 05:36:40.491: INFO: validating pod update-demo-nautilus-w4m27
  Dec 22 05:36:40.499: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 05:36:40.499: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 05:36:40.499: INFO: update-demo-nautilus-w4m27 is verified up and running
  Dec 22 05:36:40.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods update-demo-nautilus-w7rkj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 22 05:36:40.597: INFO: stderr: ""
  Dec 22 05:36:40.597: INFO: stdout: "true"
  Dec 22 05:36:40.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods update-demo-nautilus-w7rkj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 22 05:36:40.694: INFO: stderr: ""
  Dec 22 05:36:40.694: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 22 05:36:40.694: INFO: validating pod update-demo-nautilus-w7rkj
  Dec 22 05:36:40.697: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 22 05:36:40.697: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 22 05:36:40.697: INFO: update-demo-nautilus-w7rkj is verified up and running
  STEP: using delete to clean up resources @ 12/22/23 05:36:40.697
  Dec 22 05:36:40.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 delete --grace-period=0 --force -f -'
  Dec 22 05:36:40.788: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 22 05:36:40.788: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Dec 22 05:36:40.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get rc,svc -l name=update-demo --no-headers'
  Dec 22 05:36:40.885: INFO: stderr: "No resources found in kubectl-6453 namespace.\n"
  Dec 22 05:36:40.885: INFO: stdout: ""
  Dec 22 05:36:40.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-6453 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 22 05:36:40.968: INFO: stderr: ""
  Dec 22 05:36:40.968: INFO: stdout: ""
  Dec 22 05:36:40.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6453" for this suite. @ 12/22/23 05:36:40.973
• [9.120 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 12/22/23 05:36:40.982
  Dec 22 05:36:40.982: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename discovery @ 12/22/23 05:36:40.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:36:41.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:36:41.013
  STEP: Setting up server cert @ 12/22/23 05:36:41.018
  E1222 05:36:41.354325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:36:41.541: INFO: Checking APIGroup: apiregistration.k8s.io
  Dec 22 05:36:41.542: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Dec 22 05:36:41.542: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Dec 22 05:36:41.542: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Dec 22 05:36:41.542: INFO: Checking APIGroup: apps
  Dec 22 05:36:41.543: INFO: PreferredVersion.GroupVersion: apps/v1
  Dec 22 05:36:41.543: INFO: Versions found [{apps/v1 v1}]
  Dec 22 05:36:41.543: INFO: apps/v1 matches apps/v1
  Dec 22 05:36:41.543: INFO: Checking APIGroup: events.k8s.io
  Dec 22 05:36:41.544: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Dec 22 05:36:41.544: INFO: Versions found [{events.k8s.io/v1 v1}]
  Dec 22 05:36:41.544: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Dec 22 05:36:41.544: INFO: Checking APIGroup: authentication.k8s.io
  Dec 22 05:36:41.545: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Dec 22 05:36:41.545: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Dec 22 05:36:41.545: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Dec 22 05:36:41.545: INFO: Checking APIGroup: authorization.k8s.io
  Dec 22 05:36:41.546: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Dec 22 05:36:41.546: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Dec 22 05:36:41.546: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Dec 22 05:36:41.546: INFO: Checking APIGroup: autoscaling
  Dec 22 05:36:41.548: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Dec 22 05:36:41.548: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Dec 22 05:36:41.548: INFO: autoscaling/v2 matches autoscaling/v2
  Dec 22 05:36:41.548: INFO: Checking APIGroup: batch
  Dec 22 05:36:41.549: INFO: PreferredVersion.GroupVersion: batch/v1
  Dec 22 05:36:41.549: INFO: Versions found [{batch/v1 v1}]
  Dec 22 05:36:41.549: INFO: batch/v1 matches batch/v1
  Dec 22 05:36:41.549: INFO: Checking APIGroup: certificates.k8s.io
  Dec 22 05:36:41.550: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Dec 22 05:36:41.550: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Dec 22 05:36:41.550: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Dec 22 05:36:41.550: INFO: Checking APIGroup: networking.k8s.io
  Dec 22 05:36:41.551: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Dec 22 05:36:41.551: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Dec 22 05:36:41.551: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Dec 22 05:36:41.551: INFO: Checking APIGroup: policy
  Dec 22 05:36:41.552: INFO: PreferredVersion.GroupVersion: policy/v1
  Dec 22 05:36:41.552: INFO: Versions found [{policy/v1 v1}]
  Dec 22 05:36:41.552: INFO: policy/v1 matches policy/v1
  Dec 22 05:36:41.552: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Dec 22 05:36:41.553: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Dec 22 05:36:41.553: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Dec 22 05:36:41.553: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Dec 22 05:36:41.553: INFO: Checking APIGroup: storage.k8s.io
  Dec 22 05:36:41.554: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Dec 22 05:36:41.554: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Dec 22 05:36:41.554: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Dec 22 05:36:41.554: INFO: Checking APIGroup: admissionregistration.k8s.io
  Dec 22 05:36:41.555: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Dec 22 05:36:41.555: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Dec 22 05:36:41.555: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Dec 22 05:36:41.555: INFO: Checking APIGroup: apiextensions.k8s.io
  Dec 22 05:36:41.556: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Dec 22 05:36:41.556: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Dec 22 05:36:41.556: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Dec 22 05:36:41.556: INFO: Checking APIGroup: scheduling.k8s.io
  Dec 22 05:36:41.557: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Dec 22 05:36:41.557: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Dec 22 05:36:41.557: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Dec 22 05:36:41.557: INFO: Checking APIGroup: coordination.k8s.io
  Dec 22 05:36:41.558: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Dec 22 05:36:41.558: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Dec 22 05:36:41.558: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Dec 22 05:36:41.558: INFO: Checking APIGroup: node.k8s.io
  Dec 22 05:36:41.559: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Dec 22 05:36:41.559: INFO: Versions found [{node.k8s.io/v1 v1}]
  Dec 22 05:36:41.559: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Dec 22 05:36:41.559: INFO: Checking APIGroup: discovery.k8s.io
  Dec 22 05:36:41.560: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Dec 22 05:36:41.560: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Dec 22 05:36:41.560: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Dec 22 05:36:41.561: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Dec 22 05:36:41.563: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Dec 22 05:36:41.563: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Dec 22 05:36:41.563: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Dec 22 05:36:41.563: INFO: Checking APIGroup: helm.cattle.io
  Dec 22 05:36:41.564: INFO: PreferredVersion.GroupVersion: helm.cattle.io/v1
  Dec 22 05:36:41.564: INFO: Versions found [{helm.cattle.io/v1 v1}]
  Dec 22 05:36:41.564: INFO: helm.cattle.io/v1 matches helm.cattle.io/v1
  Dec 22 05:36:41.564: INFO: Checking APIGroup: k3s.cattle.io
  Dec 22 05:36:41.565: INFO: PreferredVersion.GroupVersion: k3s.cattle.io/v1
  Dec 22 05:36:41.565: INFO: Versions found [{k3s.cattle.io/v1 v1}]
  Dec 22 05:36:41.565: INFO: k3s.cattle.io/v1 matches k3s.cattle.io/v1
  Dec 22 05:36:41.565: INFO: Checking APIGroup: traefik.containo.us
  Dec 22 05:36:41.570: INFO: PreferredVersion.GroupVersion: traefik.containo.us/v1alpha1
  Dec 22 05:36:41.570: INFO: Versions found [{traefik.containo.us/v1alpha1 v1alpha1}]
  Dec 22 05:36:41.570: INFO: traefik.containo.us/v1alpha1 matches traefik.containo.us/v1alpha1
  Dec 22 05:36:41.570: INFO: Checking APIGroup: traefik.io
  Dec 22 05:36:41.573: INFO: PreferredVersion.GroupVersion: traefik.io/v1alpha1
  Dec 22 05:36:41.573: INFO: Versions found [{traefik.io/v1alpha1 v1alpha1}]
  Dec 22 05:36:41.573: INFO: traefik.io/v1alpha1 matches traefik.io/v1alpha1
  Dec 22 05:36:41.573: INFO: Checking APIGroup: metrics.k8s.io
  Dec 22 05:36:41.575: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Dec 22 05:36:41.575: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Dec 22 05:36:41.575: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Dec 22 05:36:41.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-428" for this suite. @ 12/22/23 05:36:41.587
• [0.614 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 12/22/23 05:36:41.596
  Dec 22 05:36:41.596: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename gc @ 12/22/23 05:36:41.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:36:41.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:36:41.624
  STEP: create the rc @ 12/22/23 05:36:41.628
  W1222 05:36:41.634318      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1222 05:36:42.354862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:43.355740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:44.356004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:45.356909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:46.357149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/22/23 05:36:46.638
  STEP: wait for all pods to be garbage collected @ 12/22/23 05:36:46.648
  E1222 05:36:47.357503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:48.357798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:49.358075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:50.358983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:51.359159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/22/23 05:36:51.653
  W1222 05:36:51.664115      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Dec 22 05:36:51.664: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 05:36:51.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9364" for this suite. @ 12/22/23 05:36:51.67
• [10.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 12/22/23 05:36:51.678
  Dec 22 05:36:51.678: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:36:51.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:36:51.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:36:51.72
  STEP: Creating a ResourceQuota with terminating scope @ 12/22/23 05:36:51.729
  STEP: Ensuring ResourceQuota status is calculated @ 12/22/23 05:36:51.739
  E1222 05:36:52.359616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:53.359738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 12/22/23 05:36:53.742
  STEP: Ensuring ResourceQuota status is calculated @ 12/22/23 05:36:53.748
  E1222 05:36:54.360667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:55.360866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 12/22/23 05:36:55.752
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/22/23 05:36:55.763
  E1222 05:36:56.361256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:57.361438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/22/23 05:36:57.769
  E1222 05:36:58.361566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:36:59.362361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/22/23 05:36:59.773
  STEP: Ensuring resource quota status released the pod usage @ 12/22/23 05:36:59.787
  E1222 05:37:00.362500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:01.362774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 12/22/23 05:37:01.791
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/22/23 05:37:01.8
  E1222 05:37:02.363563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:03.364637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/22/23 05:37:03.804
  E1222 05:37:04.365074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:05.365321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/22/23 05:37:05.809
  STEP: Ensuring resource quota status released the pod usage @ 12/22/23 05:37:05.817
  E1222 05:37:06.365439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:07.365597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:37:07.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8330" for this suite. @ 12/22/23 05:37:07.828
• [16.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/22/23 05:37:07.836
  Dec 22 05:37:07.836: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/22/23 05:37:07.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:37:07.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:37:07.872
  STEP: Creating two CSIDrivers @ 12/22/23 05:37:07.88
  STEP: Getting "inline-driver-e1978396-cd12-41fe-879d-76c41dc672c3" & "inline-driver-291b1b6e-0a27-4c45-8f3d-7a297f6887cc" @ 12/22/23 05:37:07.923
  STEP: Patching the CSIDriver "inline-driver-291b1b6e-0a27-4c45-8f3d-7a297f6887cc" @ 12/22/23 05:37:07.934
  STEP: Updating the CSIDriver "inline-driver-291b1b6e-0a27-4c45-8f3d-7a297f6887cc" @ 12/22/23 05:37:07.949
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3090" @ 12/22/23 05:37:07.965
  STEP: Deleting CSIDriver "inline-driver-e1978396-cd12-41fe-879d-76c41dc672c3" @ 12/22/23 05:37:07.971
  STEP: Confirm deletion of CSIDriver "inline-driver-e1978396-cd12-41fe-879d-76c41dc672c3" @ 12/22/23 05:37:07.985
  STEP: Deleting CSIDriver "inline-driver-291b1b6e-0a27-4c45-8f3d-7a297f6887cc" via DeleteCollection @ 12/22/23 05:37:07.991
  STEP: Confirm deletion of CSIDriver "inline-driver-291b1b6e-0a27-4c45-8f3d-7a297f6887cc" @ 12/22/23 05:37:08.011
  Dec 22 05:37:08.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3090" for this suite. @ 12/22/23 05:37:08.019
• [0.193 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 12/22/23 05:37:08.029
  Dec 22 05:37:08.029: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:37:08.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:37:08.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:37:08.053
  STEP: Creating configMap with name configmap-test-volume-0bbb95e9-d317-4165-b0c7-3118db38283d @ 12/22/23 05:37:08.056
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:37:08.062
  E1222 05:37:08.365726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:09.366014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:10.366907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:11.367375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:37:12.084
  Dec 22 05:37:12.086: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-configmaps-f1fbbf54-b5c2-4a16-b04c-2d9904b6976a container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:37:12.091
  Dec 22 05:37:12.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-460" for this suite. @ 12/22/23 05:37:12.108
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/22/23 05:37:12.116
  Dec 22 05:37:12.117: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 05:37:12.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:37:12.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:37:12.139
  Dec 22 05:37:12.165: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/22/23 05:37:12.171
  Dec 22 05:37:12.173: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:37:12.173: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/22/23 05:37:12.173
  Dec 22 05:37:12.204: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:37:12.204: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:37:12.367841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:13.367922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:37:13.561: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:37:13.561: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Dec 22 05:37:14.203: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 05:37:14.203: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/22/23 05:37:14.205
  Dec 22 05:37:14.246: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 05:37:14.246: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1222 05:37:14.368559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:37:15.220: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:37:15.220: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/22/23 05:37:15.22
  Dec 22 05:37:15.232: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:37:15.232: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:37:15.370067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:37:16.233: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:37:16.233: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:37:16.370079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:37:17.232: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 05:37:17.233: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 05:37:17.239
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1863, will wait for the garbage collector to delete the pods @ 12/22/23 05:37:17.239
  Dec 22 05:37:17.297: INFO: Deleting DaemonSet.extensions daemon-set took: 5.611471ms
  E1222 05:37:17.370801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:37:17.398: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.7532ms
  E1222 05:37:18.371190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:37:18.407: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:37:18.407: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 05:37:18.410: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48641"},"items":null}

  Dec 22 05:37:18.412: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48641"},"items":null}

  Dec 22 05:37:18.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1863" for this suite. @ 12/22/23 05:37:18.473
• [6.369 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 12/22/23 05:37:18.488
  Dec 22 05:37:18.488: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:37:18.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:37:18.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:37:18.514
  STEP: validating api versions @ 12/22/23 05:37:18.518
  Dec 22 05:37:18.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1872 api-versions'
  Dec 22 05:37:18.608: INFO: stderr: ""
  Dec 22 05:37:18.608: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.containo.us/v1alpha1\ntraefik.io/v1alpha1\nv1\n"
  Dec 22 05:37:18.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1872" for this suite. @ 12/22/23 05:37:18.612
• [0.129 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 12/22/23 05:37:18.617
  Dec 22 05:37:18.618: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 05:37:18.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:37:18.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:37:18.648
  STEP: Creating a pod to test downward api env vars @ 12/22/23 05:37:18.652
  E1222 05:37:19.371531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:20.371962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:21.371787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:22.372065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:37:22.672
  Dec 22 05:37:22.675: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downward-api-63c40fac-6a86-4424-b616-c9705f1f6a60 container dapi-container: <nil>
  STEP: delete the pod @ 12/22/23 05:37:22.68
  Dec 22 05:37:22.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6265" for this suite. @ 12/22/23 05:37:22.697
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/22/23 05:37:22.705
  Dec 22 05:37:22.705: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:37:22.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:37:22.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:37:22.728
  Dec 22 05:37:22.731: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Dec 22 05:37:22.743: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1222 05:37:23.372179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:24.373222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:25.373268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:26.373331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:27.373505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:37:27.749: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 05:37:27.749
  Dec 22 05:37:27.749: INFO: Creating deployment "test-rolling-update-deployment"
  Dec 22 05:37:27.754: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Dec 22 05:37:27.760: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E1222 05:37:28.374149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:29.374126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:37:29.766: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Dec 22 05:37:29.768: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Dec 22 05:37:29.785: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5331",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5448ef47-3ed3-461e-8f98-e4db464f1377",
      ResourceVersion: (string) (len=5) "48776",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820247,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 05:37:29.790: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5331",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb267995-7d8b-4149-8646-354334dc2cc4",
      ResourceVersion: (string) (len=5) "48767",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820247,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5448ef47-3ed3-461e-8f98-e4db464f1377",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 34 34 38 65 66  34 37 2d 33 65 64 33 2d  |\"5448ef47-3ed3-|
              00000120  34 36 31 65 2d 38 66 39  38 2d 65 34 64 62 34 36  |461e-8f98-e4db46|
              00000130  34 66 31 33 37 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4f1377\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:37:29.791: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Dec 22 05:37:29.791: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5331",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "967d5025-6ceb-4e22-9467-dab6c32deb3c",
      ResourceVersion: (string) (len=5) "48775",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820242,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5448ef47-3ed3-461e-8f98-e4db464f1377",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 34 34 38 65 66 34  |"uid\":\"5448ef4|
              000000b0  37 2d 33 65 64 33 2d 34  36 31 65 2d 38 66 39 38  |7-3ed3-461e-8f98|
              000000c0  2d 65 34 64 62 34 36 34  66 31 33 37 37 5c 22 7d  |-e4db464f1377\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:37:29.796: INFO: Pod "test-rolling-update-deployment-7f5c55c64-vf978" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-vf978",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-5331",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0afd71cc-af24-45cb-9a0d-fe6f5b1b2621",
      ResourceVersion: (string) (len=5) "48766",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820247,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "cb267995-7d8b-4149-8646-354334dc2cc4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  32 36 37 39 39 35 2d 37  |d\":\"cb267995-7|
              00000090  64 38 62 2d 34 31 34 39  2d 38 36 34 36 2d 33 35  |d8b-4149-8646-35|
              000000a0  34 33 33 34 64 63 32 63  63 34 5c 22 7d 22 3a 7b  |4334dc2cc4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 36  30 5c 22 7d 22 3a 7b 22  |.42.3.160\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zkt9r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zkt9r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-8-254.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.254"
        }
      },
      PodIP: (string) (len=11) "10.42.3.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820247,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820248,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://0a79ae1c338989b77ed442143a64c3e22f17abc09341f01fc3a1d31b089e1df3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:37:29.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5331" for this suite. @ 12/22/23 05:37:29.801
• [7.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 12/22/23 05:37:29.807
  Dec 22 05:37:29.807: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:37:29.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:37:29.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:37:29.833
  STEP: Creating configMap with name cm-test-opt-del-aa8ae380-3403-41e2-8963-5e051a9d5ece @ 12/22/23 05:37:29.84
  STEP: Creating configMap with name cm-test-opt-upd-733294fb-1ba4-4a44-9bfc-6104cbabdca1 @ 12/22/23 05:37:29.845
  STEP: Creating the pod @ 12/22/23 05:37:29.85
  E1222 05:37:30.375494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:31.375784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-aa8ae380-3403-41e2-8963-5e051a9d5ece @ 12/22/23 05:37:31.885
  STEP: Updating configmap cm-test-opt-upd-733294fb-1ba4-4a44-9bfc-6104cbabdca1 @ 12/22/23 05:37:31.891
  STEP: Creating configMap with name cm-test-opt-create-e46ea621-d566-48c8-bff3-7ff5b93ab581 @ 12/22/23 05:37:31.896
  STEP: waiting to observe update in volume @ 12/22/23 05:37:31.901
  E1222 05:37:32.376972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:33.377286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:34.377974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:35.378080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:36.378190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:37.378361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:38.378498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:39.378921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:40.379084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:41.379351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:42.379965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:43.380077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:44.380525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:45.380896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:46.381982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:47.382241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:48.382358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:49.383223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:50.383600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:51.383916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:52.384605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:53.384829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:54.385609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:55.385408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:56.385523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:57.385781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:58.386056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:37:59.387084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:00.387233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:01.388339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:02.389220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:03.389291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:04.389385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:05.390341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:06.391359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:07.391837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:08.392080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:09.392167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:10.392659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:11.392823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:12.393423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:13.395613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:14.395656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:15.395804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:16.396453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:17.396918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:18.397563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:19.398023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:20.398107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:21.398404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:22.398902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:23.399915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:24.401066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:25.401313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:26.402110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:27.402262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:28.403075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:29.404134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:30.404365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:31.404859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:32.405556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:33.406442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:34.406603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:35.406728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:36.406906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:37.407308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:38.408362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:39.408495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:40.409417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:41.409813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:42.410454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:43.410641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:44.411297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:45.411412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:38:46.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3523" for this suite. @ 12/22/23 05:38:46.218
• [76.420 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 12/22/23 05:38:46.227
  Dec 22 05:38:46.227: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 05:38:46.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:38:46.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:38:46.257
  STEP: Creating pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641 @ 12/22/23 05:38:46.262
  E1222 05:38:46.412384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:47.412552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 05:38:48.302
  Dec 22 05:38:48.305: INFO: Initial restart count of pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d is 0
  Dec 22 05:38:48.308: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:38:48.413640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:49.416761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:38:50.311: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:38:50.417024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:51.417805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:38:52.315: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:38:52.418648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:53.419960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:38:54.320: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:38:54.419922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:55.419988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:38:56.326: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:38:56.420886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:57.421027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:38:58.331: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:38:58.421372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:38:59.422353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:00.334: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:00.422856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:01.423009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:02.339: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:02.424039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:03.424636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:04.344: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:04.425806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:05.426365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:06.347: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:06.426881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:07.427098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:08.351: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:08.427280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:09.427560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:10.354: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:10.428590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:11.428819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:12.357: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:12.430107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:13.430763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:14.362: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:14.431453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:15.431838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:16.366: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:16.432244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:17.432870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:18.370: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:18.433479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:19.434374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:20.374: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:20.434474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:21.435341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:22.378: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:22.435468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:23.435592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:24.382: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:24.436024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:25.436371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:26.388: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:26.436715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:27.436886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:28.392: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:28.437830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:29.438062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:30.396: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:30.438908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:31.439109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:32.401: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:32.439489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:33.439853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:34.406: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:34.440813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:35.440968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:36.410: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:36.443455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:37.443716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:38.415: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:38.444266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:39.444817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:40.418: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:40.444874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:41.444961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:42.422: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:42.446063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:43.446219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:44.427: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:44.446537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:45.446653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:46.430: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:46.446793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:47.447586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:48.433: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:48.448197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:49.448388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:50.437: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  E1222 05:39:50.448712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:51.448915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:52.440: INFO: Get pod test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d in namespace container-probe-2641
  Dec 22 05:39:52.440: INFO: Restart count of pod container-probe-2641/test-grpc-8302ebc5-d033-4ea4-9131-134f4543920d is now 1 (1m4.134846624s elapsed)
  STEP: deleting the pod @ 12/22/23 05:39:52.44
  E1222 05:39:52.449658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:39:52.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2641" for this suite. @ 12/22/23 05:39:52.461
• [66.242 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 12/22/23 05:39:52.471
  Dec 22 05:39:52.471: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:39:52.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:39:52.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:39:52.501
  STEP: Discovering how many secrets are in namespace by default @ 12/22/23 05:39:52.504
  E1222 05:39:53.449947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:54.450172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:55.450541      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:56.451621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:57.452025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/22/23 05:39:57.507
  E1222 05:39:58.452327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:39:59.453202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:00.453387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:01.453522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:02.454216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/22/23 05:40:02.511
  STEP: Ensuring resource quota status is calculated @ 12/22/23 05:40:02.522
  E1222 05:40:03.454893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:04.455111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 12/22/23 05:40:04.528
  STEP: Ensuring resource quota status captures secret creation @ 12/22/23 05:40:04.538
  E1222 05:40:05.455389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:06.456115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 12/22/23 05:40:06.542
  STEP: Ensuring resource quota status released usage @ 12/22/23 05:40:06.547
  E1222 05:40:07.456386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:08.456502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:40:08.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8548" for this suite. @ 12/22/23 05:40:08.555
• [16.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 12/22/23 05:40:08.56
  Dec 22 05:40:08.560: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename downward-api @ 12/22/23 05:40:08.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:08.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:08.586
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:40:08.589
  E1222 05:40:09.457345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:10.458515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:11.459265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:12.460026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:40:12.611
  Dec 22 05:40:12.614: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-f27f2a3f-a5cc-4698-aca2-8ce6bc90bac1 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:40:12.622
  Dec 22 05:40:12.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5754" for this suite. @ 12/22/23 05:40:12.645
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 12/22/23 05:40:12.661
  Dec 22 05:40:12.661: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename lease-test @ 12/22/23 05:40:12.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:12.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:12.691
  Dec 22 05:40:12.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7300" for this suite. @ 12/22/23 05:40:12.763
• [0.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/22/23 05:40:12.77
  Dec 22 05:40:12.770: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename subpath @ 12/22/23 05:40:12.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:12.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:12.894
  STEP: Setting up data @ 12/22/23 05:40:12.902
  STEP: Creating pod pod-subpath-test-downwardapi-wnbf @ 12/22/23 05:40:12.917
  STEP: Creating a pod to test atomic-volume-subpath @ 12/22/23 05:40:12.918
  E1222 05:40:13.460659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:14.460991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:15.461278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:16.461413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:17.461558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:18.461663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:19.463046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:20.465785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:21.465930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:22.466715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:23.467222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:24.467605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:25.467890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:26.468019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:27.468165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:28.468322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:29.468443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:30.468539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:31.469236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:32.469812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:33.471025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:34.471219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:35.471323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:36.471490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:40:37
  Dec 22 05:40:37.003: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-subpath-test-downwardapi-wnbf container test-container-subpath-downwardapi-wnbf: <nil>
  STEP: delete the pod @ 12/22/23 05:40:37.05
  STEP: Deleting pod pod-subpath-test-downwardapi-wnbf @ 12/22/23 05:40:37.221
  Dec 22 05:40:37.221: INFO: Deleting pod "pod-subpath-test-downwardapi-wnbf" in namespace "subpath-932"
  Dec 22 05:40:37.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-932" for this suite. @ 12/22/23 05:40:37.228
• [24.465 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 12/22/23 05:40:37.235
  Dec 22 05:40:37.235: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replication-controller @ 12/22/23 05:40:37.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:37.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:37.273
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/22/23 05:40:37.276
  E1222 05:40:37.472241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:38.472645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 12/22/23 05:40:39.294
  STEP: Then the orphan pod is adopted @ 12/22/23 05:40:39.299
  E1222 05:40:39.473653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:40:40.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8236" for this suite. @ 12/22/23 05:40:40.31
• [3.079 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 12/22/23 05:40:40.315
  Dec 22 05:40:40.315: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename gc @ 12/22/23 05:40:40.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:40.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:40.337
  STEP: create the deployment @ 12/22/23 05:40:40.341
  W1222 05:40:40.346857      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/22/23 05:40:40.346
  E1222 05:40:40.473809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 12/22/23 05:40:40.854
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/22/23 05:40:40.86
  STEP: Gathering metrics @ 12/22/23 05:40:41.374
  W1222 05:40:41.385522      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Dec 22 05:40:41.385: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 05:40:41.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-242" for this suite. @ 12/22/23 05:40:41.393
• [1.084 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 12/22/23 05:40:41.4
  Dec 22 05:40:41.400: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename field-validation @ 12/22/23 05:40:41.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:41.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:41.425
  Dec 22 05:40:41.429: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  W1222 05:40:41.430199      20 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0049899f0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1222 05:40:41.474075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:42.477977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:43.477959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1222 05:40:43.965690      20 warnings.go:70] unknown field "alpha"
  W1222 05:40:43.965824      20 warnings.go:70] unknown field "beta"
  W1222 05:40:43.965835      20 warnings.go:70] unknown field "delta"
  W1222 05:40:43.965841      20 warnings.go:70] unknown field "epsilon"
  W1222 05:40:43.965847      20 warnings.go:70] unknown field "gamma"
  E1222 05:40:44.478119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:40:44.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5966" for this suite. @ 12/22/23 05:40:44.506
• [3.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 12/22/23 05:40:44.514
  Dec 22 05:40:44.514: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename gc @ 12/22/23 05:40:44.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:44.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:44.54
  STEP: create the rc @ 12/22/23 05:40:44.55
  W1222 05:40:44.556916      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1222 05:40:45.478928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:46.479362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:47.480114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:48.480988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:49.482122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:40:50.482946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/22/23 05:40:50.642
  STEP: wait for the rc to be deleted @ 12/22/23 05:40:50.716
  E1222 05:40:51.483502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:40:51.785: INFO: 82 pods remaining
  Dec 22 05:40:51.785: INFO: 80 pods has nil DeletionTimestamp
  Dec 22 05:40:51.785: INFO: 
  E1222 05:40:52.483980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:40:52.764: INFO: 72 pods remaining
  Dec 22 05:40:52.764: INFO: 71 pods has nil DeletionTimestamp
  Dec 22 05:40:52.764: INFO: 
  E1222 05:40:53.484227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:40:53.959: INFO: 60 pods remaining
  Dec 22 05:40:53.959: INFO: 58 pods has nil DeletionTimestamp
  Dec 22 05:40:53.959: INFO: 
  E1222 05:40:54.484881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:40:54.752: INFO: 46 pods remaining
  Dec 22 05:40:54.753: INFO: 45 pods has nil DeletionTimestamp
  Dec 22 05:40:54.753: INFO: 
  E1222 05:40:55.485741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:40:55.781: INFO: 30 pods remaining
  Dec 22 05:40:55.781: INFO: 28 pods has nil DeletionTimestamp
  Dec 22 05:40:55.781: INFO: 
  E1222 05:40:56.486716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:40:56.740: INFO: 18 pods remaining
  Dec 22 05:40:56.741: INFO: 18 pods has nil DeletionTimestamp
  Dec 22 05:40:56.741: INFO: 
  E1222 05:40:57.487744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:40:57.731: INFO: 4 pods remaining
  Dec 22 05:40:57.732: INFO: 2 pods has nil DeletionTimestamp
  Dec 22 05:40:57.732: INFO: 
  E1222 05:40:58.488860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/22/23 05:40:58.723
  W1222 05:40:58.729223      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Dec 22 05:40:58.729: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 22 05:40:58.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2566" for this suite. @ 12/22/23 05:40:58.734
• [14.225 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 12/22/23 05:40:58.739
  Dec 22 05:40:58.739: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 05:40:58.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:40:58.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:40:58.765
  STEP: creating service in namespace services-8342 @ 12/22/23 05:40:58.807
  STEP: creating service affinity-nodeport in namespace services-8342 @ 12/22/23 05:40:58.807
  STEP: creating replication controller affinity-nodeport in namespace services-8342 @ 12/22/23 05:40:58.824
  I1222 05:40:58.833028      20 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-8342, replica count: 3
  E1222 05:40:59.489158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:00.489952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:01.490084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1222 05:41:01.884862      20 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 22 05:41:01.896: INFO: Creating new exec pod
  E1222 05:41:02.490146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:03.490253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:04.491025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:04.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-8342 exec execpod-affinitys6bzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E1222 05:41:05.491920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:05.552: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Dec 22 05:41:05.552: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:41:05.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-8342 exec execpod-affinitys6bzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.202.115 80'
  Dec 22 05:41:05.723: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.202.115 80\nConnection to 10.43.202.115 80 port [tcp/http] succeeded!\n"
  Dec 22 05:41:05.723: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:41:05.723: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-8342 exec execpod-affinitys6bzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.79 32330'
  Dec 22 05:41:05.880: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.79 32330\nConnection to 172.31.2.79 32330 port [tcp/*] succeeded!\n"
  Dec 22 05:41:05.880: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:41:05.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-8342 exec execpod-affinitys6bzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.160 32330'
  Dec 22 05:41:06.050: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.11.160 32330\nConnection to 172.31.11.160 32330 port [tcp/*] succeeded!\n"
  Dec 22 05:41:06.050: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 22 05:41:06.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=services-8342 exec execpod-affinitys6bzb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.160:32330/ ; done'
  Dec 22 05:41:06.290: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.160:32330/\n"
  Dec 22 05:41:06.290: INFO: stdout: "\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59\naffinity-nodeport-6rd59"
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.290: INFO: Received response from host: affinity-nodeport-6rd59
  Dec 22 05:41:06.291: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-8342, will wait for the garbage collector to delete the pods @ 12/22/23 05:41:06.302
  Dec 22 05:41:06.365: INFO: Deleting ReplicationController affinity-nodeport took: 6.935764ms
  Dec 22 05:41:06.466: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.792651ms
  E1222 05:41:06.492537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:07.493507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:08.494532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:09.495001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:09.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8342" for this suite. @ 12/22/23 05:41:09.705
• [10.978 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 12/22/23 05:41:09.718
  Dec 22 05:41:09.718: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename discovery @ 12/22/23 05:41:09.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:09.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:09.74
  STEP: Setting up server cert @ 12/22/23 05:41:09.744
  STEP: Requesting APIResourceList from "/api/v1" @ 12/22/23 05:41:10.154
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/22/23 05:41:10.156
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/22/23 05:41:10.157
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/22/23 05:41:10.158
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/22/23 05:41:10.159
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/22/23 05:41:10.16
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/22/23 05:41:10.161
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/22/23 05:41:10.163
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/22/23 05:41:10.164
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/22/23 05:41:10.165
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/22/23 05:41:10.167
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/22/23 05:41:10.168
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/22/23 05:41:10.169
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/22/23 05:41:10.17
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/22/23 05:41:10.171
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/22/23 05:41:10.172
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/22/23 05:41:10.173
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/22/23 05:41:10.174
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/22/23 05:41:10.175
  Dec 22 05:41:10.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8465" for this suite. @ 12/22/23 05:41:10.18
• [0.468 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 12/22/23 05:41:10.186
  Dec 22 05:41:10.186: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 05:41:10.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:10.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:10.208
  Dec 22 05:41:10.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3277" for this suite. @ 12/22/23 05:41:10.219
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/22/23 05:41:10.23
  Dec 22 05:41:10.230: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/22/23 05:41:10.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:10.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:10.254
  STEP: Creating 50 configmaps @ 12/22/23 05:41:10.258
  STEP: Creating RC which spawns configmap-volume pods @ 12/22/23 05:41:10.486
  E1222 05:41:10.495373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:10.665: INFO: Pod name wrapped-volume-race-2f8b36b1-7178-46ac-ad43-7f8f923abd9d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/22/23 05:41:10.665
  E1222 05:41:11.495484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:12.496571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 12/22/23 05:41:12.698
  Dec 22 05:41:12.711: INFO: Pod name wrapped-volume-race-6e488ecb-2c87-4683-ab89-e84c76133445: Found 0 pods out of 5
  E1222 05:41:13.497489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:14.498090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:15.498031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:16.498470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:17.498673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:17.718: INFO: Pod name wrapped-volume-race-6e488ecb-2c87-4683-ab89-e84c76133445: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/22/23 05:41:17.718
  STEP: Creating RC which spawns configmap-volume pods @ 12/22/23 05:41:17.743
  Dec 22 05:41:17.766: INFO: Pod name wrapped-volume-race-7be24260-2347-4031-9465-47d1f34f6225: Found 0 pods out of 5
  E1222 05:41:18.499664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:19.499929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:20.500045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:21.500316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:22.500799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:22.776: INFO: Pod name wrapped-volume-race-7be24260-2347-4031-9465-47d1f34f6225: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/22/23 05:41:22.776
  STEP: deleting ReplicationController wrapped-volume-race-7be24260-2347-4031-9465-47d1f34f6225 in namespace emptydir-wrapper-5082, will wait for the garbage collector to delete the pods @ 12/22/23 05:41:22.795
  Dec 22 05:41:22.857: INFO: Deleting ReplicationController wrapped-volume-race-7be24260-2347-4031-9465-47d1f34f6225 took: 7.762839ms
  Dec 22 05:41:22.957: INFO: Terminating ReplicationController wrapped-volume-race-7be24260-2347-4031-9465-47d1f34f6225 pods took: 100.311939ms
  E1222 05:41:23.501726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-6e488ecb-2c87-4683-ab89-e84c76133445 in namespace emptydir-wrapper-5082, will wait for the garbage collector to delete the pods @ 12/22/23 05:41:24.458
  E1222 05:41:24.502388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:24.520: INFO: Deleting ReplicationController wrapped-volume-race-6e488ecb-2c87-4683-ab89-e84c76133445 took: 6.327745ms
  Dec 22 05:41:24.620: INFO: Terminating ReplicationController wrapped-volume-race-6e488ecb-2c87-4683-ab89-e84c76133445 pods took: 100.686192ms
  E1222 05:41:25.503376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-2f8b36b1-7178-46ac-ad43-7f8f923abd9d in namespace emptydir-wrapper-5082, will wait for the garbage collector to delete the pods @ 12/22/23 05:41:26.222
  Dec 22 05:41:26.282: INFO: Deleting ReplicationController wrapped-volume-race-2f8b36b1-7178-46ac-ad43-7f8f923abd9d took: 5.505896ms
  Dec 22 05:41:26.383: INFO: Terminating ReplicationController wrapped-volume-race-2f8b36b1-7178-46ac-ad43-7f8f923abd9d pods took: 101.40273ms
  E1222 05:41:26.503819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:27.504521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 12/22/23 05:41:27.585
  Dec 22 05:41:27.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5082" for this suite. @ 12/22/23 05:41:27.867
• [17.642 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/22/23 05:41:27.872
  Dec 22 05:41:27.872: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 05:41:27.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:27.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:27.909
  STEP: Creating simple DaemonSet "daemon-set" @ 12/22/23 05:41:27.939
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 05:41:27.946
  Dec 22 05:41:27.954: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:41:27.954: INFO: Node ip-172-31-11-160.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:41:28.505163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:28.990: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 05:41:28.990: INFO: Node ip-172-31-14-155.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:41:29.505327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:29.954: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 05:41:29.954: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/22/23 05:41:29.956
  Dec 22 05:41:29.979: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 05:41:29.979: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:41:30.506550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:30.992: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 05:41:30.992: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 05:41:31.004
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7166, will wait for the garbage collector to delete the pods @ 12/22/23 05:41:31.004
  Dec 22 05:41:31.068: INFO: Deleting DaemonSet.extensions daemon-set took: 7.023961ms
  Dec 22 05:41:31.169: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.834424ms
  E1222 05:41:31.507176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:32.508072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:33.173: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:41:33.173: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 05:41:33.175: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"52162"},"items":null}

  Dec 22 05:41:33.178: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"52162"},"items":null}

  Dec 22 05:41:33.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7166" for this suite. @ 12/22/23 05:41:33.206
• [5.340 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 12/22/23 05:41:33.213
  Dec 22 05:41:33.213: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:41:33.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:33.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:33.288
  STEP: Creating configMap configmap-4630/configmap-test-c03c75bf-d5f0-4e20-a0fd-c355e21ecb82 @ 12/22/23 05:41:33.292
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:41:33.297
  E1222 05:41:33.508599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:34.508764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:35.508892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:36.509222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:41:37.316
  Dec 22 05:41:37.319: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-configmaps-2733ca9f-d149-4b85-9b96-114b062995ff container env-test: <nil>
  STEP: delete the pod @ 12/22/23 05:41:37.327
  Dec 22 05:41:37.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4630" for this suite. @ 12/22/23 05:41:37.346
• [4.141 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 12/22/23 05:41:37.354
  Dec 22 05:41:37.354: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename resourcequota @ 12/22/23 05:41:37.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:37.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:37.382
  STEP: Creating a ResourceQuota @ 12/22/23 05:41:37.387
  STEP: Getting a ResourceQuota @ 12/22/23 05:41:37.392
  STEP: Updating a ResourceQuota @ 12/22/23 05:41:37.394
  STEP: Verifying a ResourceQuota was modified @ 12/22/23 05:41:37.4
  STEP: Deleting a ResourceQuota @ 12/22/23 05:41:37.403
  STEP: Verifying the deleted ResourceQuota @ 12/22/23 05:41:37.41
  Dec 22 05:41:37.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5788" for this suite. @ 12/22/23 05:41:37.417
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/22/23 05:41:37.426
  Dec 22 05:41:37.426: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:41:37.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:37.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:37.452
  Dec 22 05:41:37.456: INFO: Creating simple deployment test-new-deployment
  Dec 22 05:41:37.470: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  E1222 05:41:37.510177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:38.510457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 12/22/23 05:41:39.481
  STEP: updating a scale subresource @ 12/22/23 05:41:39.484
  STEP: verifying the deployment Spec.Replicas was modified @ 12/22/23 05:41:39.49
  STEP: Patch a scale subresource @ 12/22/23 05:41:39.493
  Dec 22 05:41:39.508: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1789",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94fc5633-8c32-4242-8a3f-edaae5eee31e",
      ResourceVersion: (string) (len=5) "52361",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  E1222 05:41:39.511019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:39.513: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1789",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "860fecaf-6d7e-48f5-93cc-f18e11fcdf05",
      ResourceVersion: (string) (len=5) "52360",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "94fc5633-8c32-4242-8a3f-edaae5eee31e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 34 66 63 35 36  33 33 2d 38 63 33 32 2d  |\"94fc5633-8c32-|
              00000120  34 32 34 32 2d 38 61 33  66 2d 65 64 61 61 65 35  |4242-8a3f-edaae5|
              00000130  65 65 65 33 31 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |eee31e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:41:39.518: INFO: Pod "test-new-deployment-557759b7c7-6r86g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-6r86g",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1789",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e375a076-f5e4-4a39-b4bc-62ba8969eb5f",
      ResourceVersion: (string) (len=5) "52363",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "860fecaf-6d7e-48f5-93cc-f18e11fcdf05",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  30 66 65 63 61 66 2d 36  |d\":\"860fecaf-6|
              00000090  64 37 65 2d 34 38 66 35  2d 39 33 63 63 2d 66 31  |d7e-48f5-93cc-f1|
              000000a0  38 65 31 31 66 63 64 66  30 35 5c 22 7d 22 3a 7b  |8e11fcdf05\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bslcd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bslcd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:41:39.522: INFO: Pod "test-new-deployment-557759b7c7-v6hqk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-v6hqk",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1789",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ddb6c0a-2d42-4f6e-9f34-2f48cb5ac210",
      ResourceVersion: (string) (len=5) "52352",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "860fecaf-6d7e-48f5-93cc-f18e11fcdf05",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  30 66 65 63 61 66 2d 36  |d\":\"860fecaf-6|
              00000090  64 37 65 2d 34 38 66 35  2d 39 33 63 63 2d 66 31  |d7e-48f5-93cc-f1|
              000000a0  38 65 31 31 66 63 64 66  30 35 5c 22 7d 22 3a 7b  |8e11fcdf05\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 39 30  5c 22 7d 22 3a 7b 22 2e  |.42.2.90\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8tlgg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8tlgg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) (len=10) "10.42.2.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820498,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d2aa6ff2ea19da385790173abd96e9556493081c577da3850faa68c1efbaa19b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:41:39.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1789" for this suite. @ 12/22/23 05:41:39.531
• [2.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 12/22/23 05:41:39.547
  Dec 22 05:41:39.547: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubelet-test @ 12/22/23 05:41:39.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:39.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:39.594
  Dec 22 05:41:39.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1453" for this suite. @ 12/22/23 05:41:39.641
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 12/22/23 05:41:39.648
  Dec 22 05:41:39.648: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pv @ 12/22/23 05:41:39.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:39.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:39.675
  STEP: Creating initial PV and PVC @ 12/22/23 05:41:39.68
  Dec 22 05:41:39.680: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3328" @ 12/22/23 05:41:39.694
  STEP: Listing PVCs in namespace "pv-3328" @ 12/22/23 05:41:39.697
  STEP: Patching the PV "pv-3328-969p5" @ 12/22/23 05:41:39.699
  STEP: Patching the PVC "pvc-mvvsl" @ 12/22/23 05:41:39.72
  STEP: Getting PV "pv-3328-969p5" @ 12/22/23 05:41:39.737
  STEP: Getting PVC "pvc-mvvsl" @ 12/22/23 05:41:39.74
  STEP: Deleting PVC "pvc-mvvsl" @ 12/22/23 05:41:39.746
  STEP: Confirm deletion of PVC "pvc-mvvsl" @ 12/22/23 05:41:39.753
  E1222 05:41:40.512321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:41.512355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-3328-969p5" @ 12/22/23 05:41:41.764
  STEP: Confirm deletion of PV "pv-3328-969p5" @ 12/22/23 05:41:41.772
  E1222 05:41:42.513356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:43.513359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 12/22/23 05:41:43.778
  Dec 22 05:41:43.778: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-3328-tfj7w" @ 12/22/23 05:41:43.787
  STEP: Updating the PVC "pvc-t7k76" @ 12/22/23 05:41:43.797
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-t7k76=updated" @ 12/22/23 05:41:43.805
  STEP: Deleting PVC "pvc-t7k76" via DeleteCollection @ 12/22/23 05:41:43.808
  STEP: Confirm deletion of PVC "pvc-t7k76" @ 12/22/23 05:41:43.816
  E1222 05:41:44.514375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:45.514500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-3328-tfj7w" via DeleteCollection @ 12/22/23 05:41:45.823
  STEP: Confirm deletion of PV "pv-3328-tfj7w" @ 12/22/23 05:41:45.829
  E1222 05:41:46.516033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:47.515618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:47.836: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Dec 22 05:41:47.836: INFO: Deleting PersistentVolumeClaim "pvc-t7k76"
  Dec 22 05:41:47.838: INFO: Deleting PersistentVolume "pv-3328-tfj7w"
  Dec 22 05:41:47.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3328" for this suite. @ 12/22/23 05:41:47.844
• [8.200 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 12/22/23 05:41:47.853
  Dec 22 05:41:47.853: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:41:47.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:47.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:47.882
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/22/23 05:41:48.488
  E1222 05:41:48.515982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:49.516983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:50.517342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:51.517520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:41:52.516
  E1222 05:41:52.518366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:52.523: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-f21b0dae-c1d2-4496-a4c2-503e1f478675 container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:41:52.529
  Dec 22 05:41:52.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2685" for this suite. @ 12/22/23 05:41:52.549
• [4.713 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/22/23 05:41:52.568
  Dec 22 05:41:52.568: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename init-container @ 12/22/23 05:41:52.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:52.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:52.595
  STEP: creating the pod @ 12/22/23 05:41:52.598
  Dec 22 05:41:52.598: INFO: PodSpec: initContainers in spec.initContainers
  E1222 05:41:53.518605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:54.518661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:55.518769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:56.518898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:41:56.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4667" for this suite. @ 12/22/23 05:41:56.82
• [4.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/22/23 05:41:56.831
  Dec 22 05:41:56.831: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:41:56.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:56.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:56.856
  STEP: Creating secret with name secret-test-899de81e-81e4-4563-b7b4-aa0c75de8d85 @ 12/22/23 05:41:56.859
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:41:56.866
  E1222 05:41:57.519607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:41:58.519877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:41:58.881
  Dec 22 05:41:58.884: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-secrets-4037d85f-3cf6-4ddf-b5a6-2216c768eeb5 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:41:58.89
  Dec 22 05:41:58.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7523" for this suite. @ 12/22/23 05:41:58.91
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 12/22/23 05:41:58.919
  Dec 22 05:41:58.919: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:41:58.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:58.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:58.943
  STEP: create deployment with httpd image @ 12/22/23 05:41:58.946
  Dec 22 05:41:58.947: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-413 create -f -'
  Dec 22 05:41:59.090: INFO: stderr: ""
  Dec 22 05:41:59.090: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/22/23 05:41:59.09
  Dec 22 05:41:59.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-413 diff -f -'
  Dec 22 05:41:59.316: INFO: rc: 1
  Dec 22 05:41:59.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-413 delete -f -'
  Dec 22 05:41:59.412: INFO: stderr: ""
  Dec 22 05:41:59.412: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Dec 22 05:41:59.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-413" for this suite. @ 12/22/23 05:41:59.417
• [0.504 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 12/22/23 05:41:59.423
  Dec 22 05:41:59.423: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename dns @ 12/22/23 05:41:59.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:41:59.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:41:59.45
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/22/23 05:41:59.454
  Dec 22 05:41:59.463: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5706  f8294c50-43fa-4dfc-a29c-e5512897b837 52614 0 2023-12-22 05:41:59 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-12-22 05:41:59 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rsb7f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rsb7f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1222 05:41:59.520536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:00.521439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/22/23 05:42:01.47
  Dec 22 05:42:01.470: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5706 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:42:01.470: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:42:01.471: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:42:01.471: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-5706/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1222 05:42:01.522033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS server is configured on pod... @ 12/22/23 05:42:01.548
  Dec 22 05:42:01.548: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5706 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:42:01.548: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:42:01.548: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:42:01.548: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-5706/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 22 05:42:01.631: INFO: Deleting pod test-dns-nameservers...
  Dec 22 05:42:01.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5706" for this suite. @ 12/22/23 05:42:01.659
• [2.249 seconds]
------------------------------
S
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 12/22/23 05:42:01.673
  Dec 22 05:42:01.673: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename services @ 12/22/23 05:42:01.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:01.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:01.746
  STEP: creating a Service @ 12/22/23 05:42:01.77
  STEP: watching for the Service to be added @ 12/22/23 05:42:01.79
  Dec 22 05:42:01.796: INFO: Found Service test-service-2n7g9 in namespace services-1812 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32083}]
  Dec 22 05:42:01.796: INFO: Service test-service-2n7g9 created
  STEP: Getting /status @ 12/22/23 05:42:01.796
  Dec 22 05:42:01.802: INFO: Service test-service-2n7g9 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/22/23 05:42:01.802
  STEP: watching for the Service to be patched @ 12/22/23 05:42:01.845
  Dec 22 05:42:01.853: INFO: observed Service test-service-2n7g9 in namespace services-1812 with annotations: map[] & LoadBalancer: {[]}
  Dec 22 05:42:01.853: INFO: Found Service test-service-2n7g9 in namespace services-1812 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Dec 22 05:42:01.853: INFO: Service test-service-2n7g9 has service status patched
  STEP: updating the ServiceStatus @ 12/22/23 05:42:01.853
  Dec 22 05:42:01.874: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/22/23 05:42:01.874
  Dec 22 05:42:01.884: INFO: Observed Service test-service-2n7g9 in namespace services-1812 with annotations: map[] & Conditions: {[]}
  Dec 22 05:42:01.884: INFO: Observed event: &Service{ObjectMeta:{test-service-2n7g9  services-1812  86b9627c-53c0-4d5d-b9f7-7caef0a2bff9 52643 0 2023-12-22 05:42:01 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-12-22 05:42:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-12-22 05:42:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32083,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.86.115,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.86.115],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Dec 22 05:42:01.884: INFO: Found Service test-service-2n7g9 in namespace services-1812 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 22 05:42:01.884: INFO: Service test-service-2n7g9 has service status updated
  STEP: patching the service @ 12/22/23 05:42:01.884
  STEP: watching for the Service to be patched @ 12/22/23 05:42:01.923
  Dec 22 05:42:01.925: INFO: observed Service test-service-2n7g9 in namespace services-1812 with labels: map[test-service-static:true]
  Dec 22 05:42:01.925: INFO: observed Service test-service-2n7g9 in namespace services-1812 with labels: map[test-service-static:true]
  Dec 22 05:42:01.926: INFO: observed Service test-service-2n7g9 in namespace services-1812 with labels: map[test-service-static:true]
  Dec 22 05:42:01.926: INFO: Found Service test-service-2n7g9 in namespace services-1812 with labels: map[test-service:patched test-service-static:true]
  Dec 22 05:42:01.926: INFO: Service test-service-2n7g9 patched
  STEP: deleting the service @ 12/22/23 05:42:01.926
  STEP: watching for the Service to be deleted @ 12/22/23 05:42:01.974
  Dec 22 05:42:01.981: INFO: Observed event: ADDED
  Dec 22 05:42:01.981: INFO: Observed event: MODIFIED
  Dec 22 05:42:01.981: INFO: Observed event: MODIFIED
  Dec 22 05:42:01.981: INFO: Observed event: MODIFIED
  Dec 22 05:42:01.981: INFO: Found Service test-service-2n7g9 in namespace services-1812 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Dec 22 05:42:01.981: INFO: Service test-service-2n7g9 deleted
  Dec 22 05:42:01.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1812" for this suite. @ 12/22/23 05:42:01.995
• [0.334 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/22/23 05:42:02.007
  Dec 22 05:42:02.007: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename events @ 12/22/23 05:42:02.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:02.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:02.051
  STEP: creating a test event @ 12/22/23 05:42:02.064
  STEP: listing events in all namespaces @ 12/22/23 05:42:02.076
  STEP: listing events in test namespace @ 12/22/23 05:42:02.091
  STEP: listing events with field selection filtering on source @ 12/22/23 05:42:02.103
  STEP: listing events with field selection filtering on reportingController @ 12/22/23 05:42:02.112
  STEP: getting the test event @ 12/22/23 05:42:02.116
  STEP: patching the test event @ 12/22/23 05:42:02.12
  STEP: getting the test event @ 12/22/23 05:42:02.17
  STEP: updating the test event @ 12/22/23 05:42:02.174
  STEP: getting the test event @ 12/22/23 05:42:02.181
  STEP: deleting the test event @ 12/22/23 05:42:02.184
  STEP: listing events in all namespaces @ 12/22/23 05:42:02.191
  STEP: listing events in test namespace @ 12/22/23 05:42:02.195
  Dec 22 05:42:02.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6657" for this suite. @ 12/22/23 05:42:02.203
• [0.202 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 12/22/23 05:42:02.209
  Dec 22 05:42:02.209: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:42:02.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:02.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:02.242
  STEP: Setting up server cert @ 12/22/23 05:42:02.275
  E1222 05:42:02.522764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:42:02.923
  STEP: Deploying the webhook pod @ 12/22/23 05:42:02.933
  STEP: Wait for the deployment to be ready @ 12/22/23 05:42:02.944
  Dec 22 05:42:02.952: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1222 05:42:03.523425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:04.524369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:42:04.975
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:42:04.989
  E1222 05:42:05.525718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:05.990: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/22/23 05:42:06.001
  STEP: create a namespace for the webhook @ 12/22/23 05:42:06.021
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/22/23 05:42:06.044
  Dec 22 05:42:06.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-30" for this suite. @ 12/22/23 05:42:06.129
  STEP: Destroying namespace "webhook-markers-7643" for this suite. @ 12/22/23 05:42:06.137
  STEP: Destroying namespace "fail-closed-namespace-4537" for this suite. @ 12/22/23 05:42:06.146
• [3.944 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/22/23 05:42:06.153
  Dec 22 05:42:06.154: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:42:06.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:06.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:06.179
  STEP: Creating secret with name secret-test-3aecbff9-2f93-4db9-900f-5d98197f943b @ 12/22/23 05:42:06.183
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:42:06.193
  E1222 05:42:06.526786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:07.527695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:08.527765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:09.528121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:42:10.212
  Dec 22 05:42:10.215: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-secrets-7c2d1ce4-b523-4f61-b943-ad7d562bc3de container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:42:10.222
  Dec 22 05:42:10.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9669" for this suite. @ 12/22/23 05:42:10.243
• [4.098 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 12/22/23 05:42:10.253
  Dec 22 05:42:10.254: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:42:10.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:10.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:10.284
  STEP: Creating configMap with name projected-configmap-test-volume-904eb57f-bf5f-4c2f-93e3-7e215e31577f @ 12/22/23 05:42:10.289
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:42:10.296
  E1222 05:42:10.529174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:11.529281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:12.529937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:13.530116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:42:14.32
  Dec 22 05:42:14.323: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-projected-configmaps-484d9563-ebd4-4942-9f10-5d807b9a7484 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:42:14.328
  Dec 22 05:42:14.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8007" for this suite. @ 12/22/23 05:42:14.346
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/22/23 05:42:14.353
  Dec 22 05:42:14.353: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename subjectreview @ 12/22/23 05:42:14.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:14.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:14.374
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8658" @ 12/22/23 05:42:14.378
  Dec 22 05:42:14.382: INFO: saUsername: "system:serviceaccount:subjectreview-8658:e2e"
  Dec 22 05:42:14.382: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8658"}
  Dec 22 05:42:14.382: INFO: saUID: "e7860a5d-fee0-476a-9805-dc59fc055543"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8658:e2e" @ 12/22/23 05:42:14.382
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8658:e2e" @ 12/22/23 05:42:14.382
  Dec 22 05:42:14.385: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8658:e2e" api 'list' configmaps in "subjectreview-8658" namespace @ 12/22/23 05:42:14.385
  Dec 22 05:42:14.387: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8658:e2e" @ 12/22/23 05:42:14.387
  Dec 22 05:42:14.389: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Dec 22 05:42:14.389: INFO: LocalSubjectAccessReview has been verified
  Dec 22 05:42:14.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8658" for this suite. @ 12/22/23 05:42:14.394
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/22/23 05:42:14.4
  Dec 22 05:42:14.400: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename daemonsets @ 12/22/23 05:42:14.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:14.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:14.422
  Dec 22 05:42:14.452: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/22/23 05:42:14.459
  Dec 22 05:42:14.466: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:42:14.466: INFO: Node ip-172-31-11-160.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:42:14.531195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:15.466: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 22 05:42:15.467: INFO: Node ip-172-31-11-160.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:42:15.531350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:16.467: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 05:42:16.467: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/22/23 05:42:16.475
  STEP: Check that daemon pods images are updated. @ 12/22/23 05:42:16.485
  Dec 22 05:42:16.490: INFO: Wrong image for pod: daemon-set-h856d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 05:42:16.490: INFO: Wrong image for pod: daemon-set-hlqbt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 05:42:16.490: INFO: Wrong image for pod: daemon-set-nrprw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 05:42:16.490: INFO: Wrong image for pod: daemon-set-v4sc4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1222 05:42:16.531937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:17.489: INFO: Wrong image for pod: daemon-set-h856d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 05:42:17.489: INFO: Wrong image for pod: daemon-set-nrprw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 05:42:17.489: INFO: Wrong image for pod: daemon-set-v4sc4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1222 05:42:17.532316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:18.489: INFO: Wrong image for pod: daemon-set-h856d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 05:42:18.489: INFO: Wrong image for pod: daemon-set-nrprw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 05:42:18.489: INFO: Pod daemon-set-rg5bc is not available
  Dec 22 05:42:18.489: INFO: Wrong image for pod: daemon-set-v4sc4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1222 05:42:18.532875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:19.508: INFO: Wrong image for pod: daemon-set-h856d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 05:42:19.508: INFO: Pod daemon-set-qm928 is not available
  Dec 22 05:42:19.508: INFO: Wrong image for pod: daemon-set-v4sc4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1222 05:42:19.533335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:20.488: INFO: Wrong image for pod: daemon-set-h856d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1222 05:42:20.533400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:21.488: INFO: Wrong image for pod: daemon-set-h856d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 22 05:42:21.488: INFO: Pod daemon-set-xmd9h is not available
  E1222 05:42:21.533788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:22.492: INFO: Pod daemon-set-5dctz is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/22/23 05:42:22.497
  Dec 22 05:42:22.508: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 22 05:42:22.508: INFO: Node ip-172-31-2-79.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E1222 05:42:22.534398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:23.504: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Dec 22 05:42:23.504: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/22/23 05:42:23.518
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6453, will wait for the garbage collector to delete the pods @ 12/22/23 05:42:23.518
  E1222 05:42:23.535054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:23.576: INFO: Deleting DaemonSet.extensions daemon-set took: 5.352004ms
  Dec 22 05:42:23.678: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.911363ms
  E1222 05:42:24.535483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:25.182: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 22 05:42:25.182: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 22 05:42:25.185: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53065"},"items":null}

  Dec 22 05:42:25.187: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53065"},"items":null}

  Dec 22 05:42:25.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6453" for this suite. @ 12/22/23 05:42:25.229
• [10.845 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 12/22/23 05:42:25.246
  Dec 22 05:42:25.246: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 05:42:25.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:25.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:25.274
  E1222 05:42:25.535522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:26.537769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:27.538979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:28.539688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:29.540403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:30.541763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:31.542112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:32.542889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:33.543864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:34.544111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:35.544701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:36.544808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:37.545430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:38.546344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:39.547101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:40.548120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:41.548481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:42.548820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:43.549149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:44.549364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:45.549474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:46.550087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:47.344: INFO: Container started at 2023-12-22 05:42:25 +0000 UTC, pod became ready at 2023-12-22 05:42:45 +0000 UTC
  Dec 22 05:42:47.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6647" for this suite. @ 12/22/23 05:42:47.348
• [22.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 12/22/23 05:42:47.354
  Dec 22 05:42:47.354: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:42:47.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:42:47.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:42:47.383
  STEP: Setting up server cert @ 12/22/23 05:42:47.412
  E1222 05:42:47.550506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:42:48.043
  STEP: Deploying the webhook pod @ 12/22/23 05:42:48.05
  STEP: Wait for the deployment to be ready @ 12/22/23 05:42:48.063
  Dec 22 05:42:48.072: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1222 05:42:48.550798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:49.550926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:42:50.08
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:42:50.089
  E1222 05:42:50.551061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:42:51.090: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/22/23 05:42:51.096
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/22/23 05:42:51.096
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/22/23 05:42:51.119
  E1222 05:42:51.551174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/22/23 05:42:52.128
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/22/23 05:42:52.128
  E1222 05:42:52.551525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 12/22/23 05:42:53.156
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/22/23 05:42:53.156
  E1222 05:42:53.552166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:54.553031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:55.553395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:56.553532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:57.553758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/22/23 05:42:58.19
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/22/23 05:42:58.19
  E1222 05:42:58.554527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:42:59.554870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:00.554967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:01.555130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:02.556373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:03.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6472" for this suite. @ 12/22/23 05:43:03.314
  STEP: Destroying namespace "webhook-markers-2049" for this suite. @ 12/22/23 05:43:03.322
• [15.975 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 12/22/23 05:43:03.33
  Dec 22 05:43:03.330: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename webhook @ 12/22/23 05:43:03.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:43:03.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:43:03.378
  STEP: Setting up server cert @ 12/22/23 05:43:03.416
  E1222 05:43:03.557044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/22/23 05:43:04
  STEP: Deploying the webhook pod @ 12/22/23 05:43:04.008
  STEP: Wait for the deployment to be ready @ 12/22/23 05:43:04.032
  Dec 22 05:43:04.051: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1222 05:43:04.557306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:05.557375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/22/23 05:43:06.06
  STEP: Verifying the service has paired with the endpoint @ 12/22/23 05:43:06.07
  E1222 05:43:06.557632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:07.071: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 22 05:43:07.076: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:43:07.558324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7845-crds.webhook.example.com via the AdmissionRegistration API @ 12/22/23 05:43:07.594
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/22/23 05:43:07.613
  E1222 05:43:08.558672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:09.558770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:10.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4010" for this suite. @ 12/22/23 05:43:10.21
  STEP: Destroying namespace "webhook-markers-3088" for this suite. @ 12/22/23 05:43:10.214
• [6.890 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 12/22/23 05:43:10.22
  Dec 22 05:43:10.220: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename pod-network-test @ 12/22/23 05:43:10.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:43:10.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:43:10.291
  STEP: Performing setup for networking test in namespace pod-network-test-5170 @ 12/22/23 05:43:10.295
  STEP: creating a selector @ 12/22/23 05:43:10.295
  STEP: Creating the service pods in kubernetes @ 12/22/23 05:43:10.295
  Dec 22 05:43:10.295: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1222 05:43:10.559668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:11.560105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:12.561014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:13.561270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:14.562337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:15.562529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:16.563574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:17.563602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:18.564287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:19.564946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:20.564980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:21.565159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/22/23 05:43:22.375
  E1222 05:43:22.565254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:23.565399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:24.390: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Dec 22 05:43:24.390: INFO: Breadth first check of 10.42.1.145 on host 172.31.11.160...
  Dec 22 05:43:24.392: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.103:9080/dial?request=hostname&protocol=http&host=10.42.1.145&port=8083&tries=1'] Namespace:pod-network-test-5170 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:43:24.392: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:43:24.393: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:43:24.393: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5170/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.145%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 05:43:24.466: INFO: Waiting for responses: map[]
  Dec 22 05:43:24.466: INFO: reached 10.42.1.145 after 0/1 tries
  Dec 22 05:43:24.466: INFO: Breadth first check of 10.42.2.102 on host 172.31.14.155...
  Dec 22 05:43:24.469: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.103:9080/dial?request=hostname&protocol=http&host=10.42.2.102&port=8083&tries=1'] Namespace:pod-network-test-5170 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:43:24.469: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:43:24.470: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:43:24.470: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5170/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.102%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 05:43:24.540: INFO: Waiting for responses: map[]
  Dec 22 05:43:24.540: INFO: reached 10.42.2.102 after 0/1 tries
  Dec 22 05:43:24.540: INFO: Breadth first check of 10.42.0.118 on host 172.31.2.79...
  Dec 22 05:43:24.544: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.103:9080/dial?request=hostname&protocol=http&host=10.42.0.118&port=8083&tries=1'] Namespace:pod-network-test-5170 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:43:24.544: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:43:24.545: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:43:24.545: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5170/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.118%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E1222 05:43:24.565632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:24.627: INFO: Waiting for responses: map[]
  Dec 22 05:43:24.627: INFO: reached 10.42.0.118 after 0/1 tries
  Dec 22 05:43:24.627: INFO: Breadth first check of 10.42.3.204 on host 172.31.8.254...
  Dec 22 05:43:24.630: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.103:9080/dial?request=hostname&protocol=http&host=10.42.3.204&port=8083&tries=1'] Namespace:pod-network-test-5170 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:43:24.631: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:43:24.631: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:43:24.631: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5170/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.3.204%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 22 05:43:24.695: INFO: Waiting for responses: map[]
  Dec 22 05:43:24.695: INFO: reached 10.42.3.204 after 0/1 tries
  Dec 22 05:43:24.695: INFO: Going to retry 0 out of 4 pods....
  Dec 22 05:43:24.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5170" for this suite. @ 12/22/23 05:43:24.699
• [14.485 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/22/23 05:43:24.706
  Dec 22 05:43:24.706: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename deployment @ 12/22/23 05:43:24.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:43:24.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:43:24.731
  Dec 22 05:43:24.744: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E1222 05:43:25.566481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:26.566536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:27.567009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:28.567898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:29.568093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:29.751: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 05:43:29.751
  Dec 22 05:43:29.751: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1222 05:43:30.568324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:31.568366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:31.755: INFO: Creating deployment "test-rollover-deployment"
  Dec 22 05:43:31.764: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E1222 05:43:32.569138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:33.569295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:33.771: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Dec 22 05:43:33.776: INFO: Ensure that both replica sets have 1 created replica
  Dec 22 05:43:33.782: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Dec 22 05:43:33.790: INFO: Updating deployment test-rollover-deployment
  Dec 22 05:43:33.790: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1222 05:43:34.569875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:35.570349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:35.797: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Dec 22 05:43:35.802: INFO: Make sure deployment "test-rollover-deployment" is complete
  Dec 22 05:43:35.807: INFO: all replica sets need to contain the pod-template-hash label
  Dec 22 05:43:35.807: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 43, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1222 05:43:36.570780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:37.571796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:37.814: INFO: all replica sets need to contain the pod-template-hash label
  Dec 22 05:43:37.814: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 43, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1222 05:43:38.572351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:39.572741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:39.814: INFO: all replica sets need to contain the pod-template-hash label
  Dec 22 05:43:39.814: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 43, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1222 05:43:40.572806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:41.572959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:41.813: INFO: all replica sets need to contain the pod-template-hash label
  Dec 22 05:43:41.813: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 43, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1222 05:43:42.573583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:43.573683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:43.815: INFO: all replica sets need to contain the pod-template-hash label
  Dec 22 05:43:43.816: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 22, 5, 43, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 22, 5, 43, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1222 05:43:44.574446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:45.575096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:43:45.813: INFO: 
  Dec 22 05:43:45.813: INFO: Ensure that both old replica sets have no replicas
  Dec 22 05:43:45.820: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65f6bf5f-829c-4eff-a3eb-0b290c1c1dfe",
      ResourceVersion: (string) (len=5) "53749",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 22 05:43:45.825: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f34e29e-48b3-4c70-8f16-cb1750737dec",
      ResourceVersion: (string) (len=5) "53739",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820613,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "65f6bf5f-829c-4eff-a3eb-0b290c1c1dfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 35 66 36 62 66  35 66 2d 38 32 39 63 2d  |\"65f6bf5f-829c-|
              00000120  34 65 66 66 2d 61 33 65  62 2d 30 62 32 39 30 63  |4eff-a3eb-0b290c|
              00000130  31 63 31 64 66 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1c1dfe\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:43:45.826: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Dec 22 05:43:45.826: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34c85f6b-0792-4240-9a76-6db089fdb987",
      ResourceVersion: (string) (len=5) "53748",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820604,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "65f6bf5f-829c-4eff-a3eb-0b290c1c1dfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820604,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  36 35 66 36 62 66 35 66  2d 38 32 39 63 2d 34 65  |65f6bf5f-829c-4e|
              000000c0  66 66 2d 61 33 65 62 2d  30 62 32 39 30 63 31 63  |ff-a3eb-0b290c1c|
              000000d0  31 64 66 65 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |1dfe\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:43:45.828: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf88b274-5bcc-4cbc-b99c-17c10e7d1b6f",
      ResourceVersion: (string) (len=5) "53683",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "65f6bf5f-829c-4eff-a3eb-0b290c1c1dfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 35 66 36 62 66  35 66 2d 38 32 39 63 2d  |\"65f6bf5f-829c-|
              00000120  34 65 66 66 2d 61 33 65  62 2d 30 62 32 39 30 63  |4eff-a3eb-0b290c|
              00000130  31 63 31 64 66 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1c1dfe\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 22 05:43:45.832: INFO: Pod "test-rollover-deployment-5d484bf7f9-vpp7x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-vpp7x",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-3985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb194795-c920-42a5-a028-8961f0aacc6f",
      ResourceVersion: (string) (len=5) "53699",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820613,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "9f34e29e-48b3-4c70-8f16-cb1750737dec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  33 34 65 32 39 65 2d 34  |d\":\"9f34e29e-4|
              00000090  38 62 33 2d 34 63 37 30  2d 38 66 31 36 2d 63 62  |8b3-4c70-8f16-cb|
              000000a0  31 37 35 30 37 33 37 64  65 63 5c 22 7d 22 3a 7b  |1750737dec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 30  35 5c 22 7d 22 3a 7b 22  |.42.2.105\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9fglx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9fglx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-155.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838820613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.14.155"
        }
      },
      PodIP: (string) (len=11) "10.42.2.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838820613,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838820614,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://3a2559abc06b45c8f0c1814d620cd1055cd306c5f9e5b28e0af97467dfb85e3b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 22 05:43:45.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3985" for this suite. @ 12/22/23 05:43:45.838
• [21.139 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/22/23 05:43:45.845
  Dec 22 05:43:45.845: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:43:45.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:43:45.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:43:45.87
  STEP: Creating projection with secret that has name projected-secret-test-map-a2fffdf4-55a8-4fa0-bea5-ebacf5cca791 @ 12/22/23 05:43:45.873
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:43:45.878
  E1222 05:43:46.575997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:47.576156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:48.576320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:49.576746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:43:49.902
  Dec 22 05:43:49.904: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod pod-projected-secrets-e1bbca46-1ca5-4b9e-909e-ef4f7d8f0cf6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:43:49.918
  Dec 22 05:43:49.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6681" for this suite. @ 12/22/23 05:43:49.94
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/22/23 05:43:49.95
  Dec 22 05:43:49.950: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename watch @ 12/22/23 05:43:49.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:43:49.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:43:49.972
  STEP: creating a watch on configmaps with a certain label @ 12/22/23 05:43:49.976
  STEP: creating a new configmap @ 12/22/23 05:43:49.978
  STEP: modifying the configmap once @ 12/22/23 05:43:49.988
  STEP: changing the label value of the configmap @ 12/22/23 05:43:49.996
  STEP: Expecting to observe a delete notification for the watched object @ 12/22/23 05:43:50.004
  Dec 22 05:43:50.004: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5433  e80270ae-2ca9-49b1-9346-ed032ed27dcd 53790 0 2023-12-22 05:43:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:43:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:43:50.005: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5433  e80270ae-2ca9-49b1-9346-ed032ed27dcd 53791 0 2023-12-22 05:43:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:43:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:43:50.006: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5433  e80270ae-2ca9-49b1-9346-ed032ed27dcd 53792 0 2023-12-22 05:43:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:43:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/22/23 05:43:50.006
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/22/23 05:43:50.016
  E1222 05:43:50.576930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:51.577240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:52.577639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:53.577767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:54.578192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:55.579122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:56.580181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:57.580345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:58.580446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:43:59.580836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 12/22/23 05:44:00.016
  STEP: modifying the configmap a third time @ 12/22/23 05:44:00.054
  STEP: deleting the configmap @ 12/22/23 05:44:00.063
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/22/23 05:44:00.08
  Dec 22 05:44:00.080: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5433  e80270ae-2ca9-49b1-9346-ed032ed27dcd 53872 0 2023-12-22 05:43:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:44:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:44:00.080: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5433  e80270ae-2ca9-49b1-9346-ed032ed27dcd 53873 0 2023-12-22 05:43:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:44:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:44:00.081: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5433  e80270ae-2ca9-49b1-9346-ed032ed27dcd 53874 0 2023-12-22 05:43:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-22 05:44:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 22 05:44:00.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5433" for this suite. @ 12/22/23 05:44:00.096
• [10.160 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 12/22/23 05:44:00.111
  Dec 22 05:44:00.111: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/22/23 05:44:00.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:44:00.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:44:00.152
  Dec 22 05:44:00.160: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:44:00.581503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:01.581770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/22/23 05:44:02.234
  Dec 22 05:44:02.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 --namespace=crd-publish-openapi-5569 create -f -'
  Dec 22 05:44:02.345: INFO: stderr: ""
  Dec 22 05:44:02.345: INFO: stdout: "e2e-test-crd-publish-openapi-2030-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Dec 22 05:44:02.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 --namespace=crd-publish-openapi-5569 delete e2e-test-crd-publish-openapi-2030-crds test-foo'
  Dec 22 05:44:02.443: INFO: stderr: ""
  Dec 22 05:44:02.443: INFO: stdout: "e2e-test-crd-publish-openapi-2030-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Dec 22 05:44:02.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 --namespace=crd-publish-openapi-5569 apply -f -'
  Dec 22 05:44:02.542: INFO: stderr: ""
  Dec 22 05:44:02.542: INFO: stdout: "e2e-test-crd-publish-openapi-2030-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Dec 22 05:44:02.542: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 --namespace=crd-publish-openapi-5569 delete e2e-test-crd-publish-openapi-2030-crds test-foo'
  E1222 05:44:02.581591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:44:02.625: INFO: stderr: ""
  Dec 22 05:44:02.625: INFO: stdout: "e2e-test-crd-publish-openapi-2030-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/22/23 05:44:02.626
  Dec 22 05:44:02.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 --namespace=crd-publish-openapi-5569 create -f -'
  Dec 22 05:44:02.708: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/22/23 05:44:02.708
  Dec 22 05:44:02.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 --namespace=crd-publish-openapi-5569 create -f -'
  Dec 22 05:44:02.799: INFO: rc: 1
  Dec 22 05:44:02.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 --namespace=crd-publish-openapi-5569 apply -f -'
  Dec 22 05:44:02.886: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/22/23 05:44:02.886
  Dec 22 05:44:02.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 --namespace=crd-publish-openapi-5569 create -f -'
  Dec 22 05:44:02.977: INFO: rc: 1
  Dec 22 05:44:02.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 --namespace=crd-publish-openapi-5569 apply -f -'
  Dec 22 05:44:03.070: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/22/23 05:44:03.07
  Dec 22 05:44:03.070: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 explain e2e-test-crd-publish-openapi-2030-crds'
  Dec 22 05:44:03.148: INFO: stderr: ""
  Dec 22 05:44:03.148: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2030-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/22/23 05:44:03.148
  Dec 22 05:44:03.148: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 explain e2e-test-crd-publish-openapi-2030-crds.metadata'
  Dec 22 05:44:03.233: INFO: stderr: ""
  Dec 22 05:44:03.233: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2030-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Dec 22 05:44:03.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 explain e2e-test-crd-publish-openapi-2030-crds.spec'
  Dec 22 05:44:03.311: INFO: stderr: ""
  Dec 22 05:44:03.311: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2030-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Dec 22 05:44:03.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 explain e2e-test-crd-publish-openapi-2030-crds.spec.bars'
  Dec 22 05:44:03.390: INFO: stderr: ""
  Dec 22 05:44:03.390: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2030-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/22/23 05:44:03.391
  Dec 22 05:44:03.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=crd-publish-openapi-5569 explain e2e-test-crd-publish-openapi-2030-crds.spec.bars2'
  Dec 22 05:44:03.465: INFO: rc: 1
  E1222 05:44:03.582152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:04.582806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:05.583521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:44:05.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5569" for this suite. @ 12/22/23 05:44:05.649
• [5.545 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 12/22/23 05:44:05.656
  Dec 22 05:44:05.656: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sched-preemption @ 12/22/23 05:44:05.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:44:05.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:44:05.684
  Dec 22 05:44:05.706: INFO: Waiting up to 1m0s for all nodes to be ready
  E1222 05:44:06.584314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:07.585086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:08.585297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:09.586392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:10.586593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:11.586721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:12.587305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:13.587650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:14.587714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:15.587873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:16.588615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:17.589666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:18.589906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:19.590250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:20.590983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:21.591105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:22.591899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:23.592217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:24.592983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:25.593182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:26.593299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:27.593527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:28.593653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:29.593806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:30.594736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:31.594924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:32.595560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:33.595647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:34.596221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:35.596337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:36.596467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:37.597281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:38.597506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:39.597944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:40.598109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:41.598239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:42.598448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:43.598570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:44.599293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:45.599382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:46.599726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:47.599761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:48.600771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:49.600889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:50.601403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:51.601558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:52.602285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:53.602412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:54.602534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:55.602680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:56.603513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:57.603633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:58.603910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:44:59.604890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:00.605521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:01.605812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:02.606526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:03.606702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:04.606873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:05.606948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:05.712: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/22/23 05:45:05.716
  Dec 22 05:45:05.716: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/22/23 05:45:05.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:45:05.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:45:05.746
  Dec 22 05:45:05.907: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Dec 22 05:45:05.910: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Dec 22 05:45:06.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3081" for this suite. @ 12/22/23 05:45:06.167
  Dec 22 05:45:06.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4854" for this suite. @ 12/22/23 05:45:06.178
• [60.529 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 12/22/23 05:45:06.186
  Dec 22 05:45:06.186: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/22/23 05:45:06.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:45:06.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:45:06.211
  Dec 22 05:45:06.217: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  E1222 05:45:06.607792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:07.607931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:08.608793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:09.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8203" for this suite. @ 12/22/23 05:45:09.307
• [3.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 12/22/23 05:45:09.317
  Dec 22 05:45:09.317: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 05:45:09.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:45:09.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:45:09.348
  STEP: Creating pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559 @ 12/22/23 05:45:09.353
  E1222 05:45:09.609210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:10.609301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/22/23 05:45:11.381
  Dec 22 05:45:11.387: INFO: Initial restart count of pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 is 0
  Dec 22 05:45:11.392: INFO: Get pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559
  E1222 05:45:11.610044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:12.610933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:13.396: INFO: Get pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559
  E1222 05:45:13.611781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:14.611992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:15.401: INFO: Get pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559
  E1222 05:45:15.612582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:16.612824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:17.411: INFO: Get pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559
  E1222 05:45:17.614143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:18.614715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:19.423: INFO: Get pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559
  E1222 05:45:19.615669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:20.615801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:21.427: INFO: Get pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559
  E1222 05:45:21.616663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:22.617270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:23.433: INFO: Get pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559
  E1222 05:45:23.617660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:24.617745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:25.437: INFO: Get pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559
  E1222 05:45:25.618261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:26.618378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:27.443: INFO: Get pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559
  E1222 05:45:27.618501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:28.618604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:29.449: INFO: Get pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559
  E1222 05:45:29.619257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:30.619377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:31.454: INFO: Get pod liveness-043043e4-451b-47ed-a28b-99c78e48ae40 in namespace container-probe-6559
  Dec 22 05:45:31.454: INFO: Restart count of pod container-probe-6559/liveness-043043e4-451b-47ed-a28b-99c78e48ae40 is now 1 (20.066371574s elapsed)
  STEP: deleting the pod @ 12/22/23 05:45:31.454
  Dec 22 05:45:31.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6559" for this suite. @ 12/22/23 05:45:31.476
• [22.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 12/22/23 05:45:31.485
  Dec 22 05:45:31.485: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename kubectl @ 12/22/23 05:45:31.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:45:31.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:45:31.511
  STEP: creating Agnhost RC @ 12/22/23 05:45:31.515
  Dec 22 05:45:31.515: INFO: namespace kubectl-1551
  Dec 22 05:45:31.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1551 create -f -'
  E1222 05:45:31.620090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:31.710: INFO: stderr: ""
  Dec 22 05:45:31.710: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/22/23 05:45:31.71
  E1222 05:45:32.621197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:32.723: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 05:45:32.723: INFO: Found 0 / 1
  E1222 05:45:33.621256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:33.715: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 05:45:33.715: INFO: Found 1 / 1
  Dec 22 05:45:33.715: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Dec 22 05:45:33.718: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 22 05:45:33.718: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 22 05:45:33.718: INFO: wait on agnhost-primary startup in kubectl-1551 
  Dec 22 05:45:33.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1551 logs agnhost-primary-qv542 agnhost-primary'
  Dec 22 05:45:33.808: INFO: stderr: ""
  Dec 22 05:45:33.808: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 12/22/23 05:45:33.808
  Dec 22 05:45:33.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1551 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Dec 22 05:45:33.911: INFO: stderr: ""
  Dec 22 05:45:33.911: INFO: stdout: "service/rm2 exposed\n"
  Dec 22 05:45:33.919: INFO: Service rm2 in namespace kubectl-1551 found.
  E1222 05:45:34.622284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:35.622693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 12/22/23 05:45:35.934
  Dec 22 05:45:35.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-766341734 --namespace=kubectl-1551 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Dec 22 05:45:36.034: INFO: stderr: ""
  Dec 22 05:45:36.034: INFO: stdout: "service/rm3 exposed\n"
  Dec 22 05:45:36.041: INFO: Service rm3 in namespace kubectl-1551 found.
  E1222 05:45:36.622814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:37.623054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:45:38.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1551" for this suite. @ 12/22/23 05:45:38.055
• [6.578 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 12/22/23 05:45:38.065
  Dec 22 05:45:38.065: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename configmap @ 12/22/23 05:45:38.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:45:38.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:45:38.098
  Dec 22 05:45:38.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6870" for this suite. @ 12/22/23 05:45:38.157
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/22/23 05:45:38.167
  Dec 22 05:45:38.167: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/22/23 05:45:38.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:45:38.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:45:38.195
  STEP: creating a target pod @ 12/22/23 05:45:38.201
  E1222 05:45:38.623186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:39.623566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 12/22/23 05:45:40.233
  E1222 05:45:40.623993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:41.625484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 12/22/23 05:45:42.264
  Dec 22 05:45:42.264: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9782 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 22 05:45:42.264: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  Dec 22 05:45:42.265: INFO: ExecWithOptions: Clientset creation
  Dec 22 05:45:42.265: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-9782/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Dec 22 05:45:42.337: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/22/23 05:45:42.343
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/22/23 05:45:42.347
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/22/23 05:45:42.359
  Dec 22 05:45:42.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9782" for this suite. @ 12/22/23 05:45:42.369
• [4.215 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 12/22/23 05:45:42.382
  Dec 22 05:45:42.382: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:45:42.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:45:42.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:45:42.414
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:45:42.418
  E1222 05:45:42.625831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:43.625961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:44.627011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:45.627582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:45:46.446
  Dec 22 05:45:46.449: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod downwardapi-volume-a5c50f29-0852-41a3-b2f9-8360208efc00 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:45:46.461
  Dec 22 05:45:46.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2461" for this suite. @ 12/22/23 05:45:46.486
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 12/22/23 05:45:46.497
  Dec 22 05:45:46.497: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename container-probe @ 12/22/23 05:45:46.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:45:46.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:45:46.523
  E1222 05:45:46.628112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:47.629087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:48.629866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:49.630803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:50.631247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:51.631663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:52.632419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:53.632826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:54.633233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:55.633486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:56.634117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:57.634299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:58.635111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:45:59.635975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:00.637003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:01.637839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:02.639479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:03.640005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:04.640540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:05.641058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:06.641410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:07.641378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:08.642391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:09.642592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:10.642760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:11.643414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:12.644188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:13.644992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:14.645757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:15.645904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:16.646051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:17.646130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:18.646395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:19.647635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:20.648668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:21.648990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:22.649184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:23.649295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:24.650251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:25.650596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:26.651030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:27.651285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:28.651394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:29.652017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:30.652855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:31.653776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:32.654166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:33.654440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:34.655331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:35.655924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:36.656301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:37.656545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:38.657306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:39.657774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:40.658875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:41.659011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:42.659111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:43.659255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:44.659387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:45.659540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:46:46.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4107" for this suite. @ 12/22/23 05:46:46.553
• [60.065 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 12/22/23 05:46:46.562
  Dec 22 05:46:46.562: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:46:46.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:46:46.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:46:46.592
  STEP: Creating configMap with name projected-configmap-test-volume-f51ef45c-37ea-48ca-8a80-70f209e46f64 @ 12/22/23 05:46:46.597
  STEP: Creating a pod to test consume configMaps @ 12/22/23 05:46:46.609
  E1222 05:46:46.660130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:47.660334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:48.661190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:49.661328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:46:50.642
  Dec 22 05:46:50.647: INFO: Trying to get logs from node ip-172-31-8-254.us-east-2.compute.internal pod pod-projected-configmaps-836d5b6e-291c-436e-9ef0-529c9619ec26 container agnhost-container: <nil>
  STEP: delete the pod @ 12/22/23 05:46:50.655
  E1222 05:46:50.661740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:46:50.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9490" for this suite. @ 12/22/23 05:46:50.858
• [4.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 12/22/23 05:46:50.867
  Dec 22 05:46:50.867: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename job @ 12/22/23 05:46:50.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:46:50.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:46:50.897
  STEP: Creating a job @ 12/22/23 05:46:50.903
  STEP: Ensuring active pods == parallelism @ 12/22/23 05:46:50.911
  E1222 05:46:51.662396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:52.662688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 12/22/23 05:46:52.916
  STEP: deleting Job.batch foo in namespace job-9471, will wait for the garbage collector to delete the pods @ 12/22/23 05:46:52.916
  Dec 22 05:46:52.978: INFO: Deleting Job.batch foo took: 7.504921ms
  Dec 22 05:46:53.079: INFO: Terminating Job.batch foo pods took: 100.956784ms
  E1222 05:46:53.663024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 12/22/23 05:46:54.48
  Dec 22 05:46:54.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9471" for this suite. @ 12/22/23 05:46:54.488
• [3.628 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 12/22/23 05:46:54.495
  Dec 22 05:46:54.495: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename disruption @ 12/22/23 05:46:54.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:46:54.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:46:54.523
  STEP: Creating a kubernetes client @ 12/22/23 05:46:54.527
  Dec 22 05:46:54.527: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename disruption-2 @ 12/22/23 05:46:54.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:46:54.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:46:54.551
  STEP: Waiting for the pdb to be processed @ 12/22/23 05:46:54.563
  E1222 05:46:54.663886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:55.664294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 12/22/23 05:46:56.572
  E1222 05:46:56.665193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:46:57.665325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 12/22/23 05:46:58.588
  STEP: listing a collection of PDBs across all namespaces @ 12/22/23 05:46:58.593
  STEP: listing a collection of PDBs in namespace disruption-5035 @ 12/22/23 05:46:58.599
  STEP: deleting a collection of PDBs @ 12/22/23 05:46:58.607
  STEP: Waiting for the PDB collection to be deleted @ 12/22/23 05:46:58.621
  Dec 22 05:46:58.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-124" for this suite. @ 12/22/23 05:46:58.629
  Dec 22 05:46:58.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5035" for this suite. @ 12/22/23 05:46:58.64
• [4.152 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/22/23 05:46:58.648
  Dec 22 05:46:58.648: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename secrets @ 12/22/23 05:46:58.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:46:58.664
  E1222 05:46:58.665479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:46:58.669
  STEP: Creating secret with name secret-test-d95028dd-879f-4b30-bc80-52d2d83e223f @ 12/22/23 05:46:58.673
  STEP: Creating a pod to test consume secrets @ 12/22/23 05:46:58.68
  E1222 05:46:59.665974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:00.666104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:47:00.708
  Dec 22 05:47:00.712: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-secrets-66fc5a79-9263-4e6e-a278-b58cdf7994cf container secret-volume-test: <nil>
  STEP: delete the pod @ 12/22/23 05:47:00.718
  Dec 22 05:47:00.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9528" for this suite. @ 12/22/23 05:47:00.74
• [2.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 12/22/23 05:47:00.749
  Dec 22 05:47:00.749: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename svcaccounts @ 12/22/23 05:47:00.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:47:00.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:47:00.775
  STEP: creating a ServiceAccount @ 12/22/23 05:47:00.779
  STEP: watching for the ServiceAccount to be added @ 12/22/23 05:47:00.789
  STEP: patching the ServiceAccount @ 12/22/23 05:47:00.793
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/22/23 05:47:00.799
  STEP: deleting the ServiceAccount @ 12/22/23 05:47:00.803
  Dec 22 05:47:00.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8581" for this suite. @ 12/22/23 05:47:00.827
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 12/22/23 05:47:00.839
  Dec 22 05:47:00.839: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename replicaset @ 12/22/23 05:47:00.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:47:00.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:47:00.867
  Dec 22 05:47:00.887: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1222 05:47:01.666507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:02.667326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:03.667672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:04.667886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:05.668091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:47:05.892: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/22/23 05:47:05.892
  STEP: Scaling up "test-rs" replicaset @ 12/22/23 05:47:05.893
  Dec 22 05:47:05.904: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/22/23 05:47:05.904
  Dec 22 05:47:05.920: INFO: observed ReplicaSet test-rs in namespace replicaset-2491 with ReadyReplicas 1, AvailableReplicas 1
  Dec 22 05:47:05.943: INFO: observed ReplicaSet test-rs in namespace replicaset-2491 with ReadyReplicas 1, AvailableReplicas 1
  Dec 22 05:47:05.972: INFO: observed ReplicaSet test-rs in namespace replicaset-2491 with ReadyReplicas 1, AvailableReplicas 1
  Dec 22 05:47:06.022: INFO: observed ReplicaSet test-rs in namespace replicaset-2491 with ReadyReplicas 1, AvailableReplicas 1
  E1222 05:47:06.669470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:47:06.978: INFO: observed ReplicaSet test-rs in namespace replicaset-2491 with ReadyReplicas 2, AvailableReplicas 2
  E1222 05:47:07.669321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:47:07.682: INFO: observed Replicaset test-rs in namespace replicaset-2491 with ReadyReplicas 3 found true
  Dec 22 05:47:07.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2491" for this suite. @ 12/22/23 05:47:07.688
• [6.859 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 12/22/23 05:47:07.699
  Dec 22 05:47:07.699: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename job @ 12/22/23 05:47:07.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:47:07.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:47:07.724
  STEP: Creating a job @ 12/22/23 05:47:07.729
  STEP: Ensuring active pods == parallelism @ 12/22/23 05:47:07.737
  E1222 05:47:08.670377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:09.670972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 12/22/23 05:47:09.742
  Dec 22 05:47:10.272: INFO: Successfully updated pod "adopt-release-42c9n"
  STEP: Checking that the Job readopts the Pod @ 12/22/23 05:47:10.272
  E1222 05:47:10.671142      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:11.671874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 12/22/23 05:47:12.288
  E1222 05:47:12.673573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:47:12.802: INFO: Successfully updated pod "adopt-release-42c9n"
  STEP: Checking that the Job releases the Pod @ 12/22/23 05:47:12.802
  E1222 05:47:13.674036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:14.673873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:47:14.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-992" for this suite. @ 12/22/23 05:47:14.821
• [7.130 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 12/22/23 05:47:14.83
  Dec 22 05:47:14.830: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename projected @ 12/22/23 05:47:14.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:47:14.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:47:14.861
  STEP: Creating a pod to test downward API volume plugin @ 12/22/23 05:47:14.867
  E1222 05:47:15.674364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:16.674532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:17.675150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:18.674949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:47:18.906
  Dec 22 05:47:18.911: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod downwardapi-volume-2d47db4b-1097-426a-b517-69adec7ccfb3 container client-container: <nil>
  STEP: delete the pod @ 12/22/23 05:47:18.918
  Dec 22 05:47:18.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5416" for this suite. @ 12/22/23 05:47:18.947
• [4.130 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 12/22/23 05:47:18.966
  Dec 22 05:47:18.967: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename endpointslice @ 12/22/23 05:47:18.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:47:18.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:47:19.003
  Dec 22 05:47:19.020: INFO: Endpoints addresses: [18.116.28.93 18.224.43.28 18.227.72.232] , ports: [6443]
  Dec 22 05:47:19.020: INFO: EndpointSlices addresses: [18.116.28.93 18.224.43.28 18.227.72.232] , ports: [6443]
  Dec 22 05:47:19.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3180" for this suite. @ 12/22/23 05:47:19.026
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 12/22/23 05:47:19.037
  Dec 22 05:47:19.037: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename dns @ 12/22/23 05:47:19.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:47:19.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:47:19.111
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/22/23 05:47:19.115
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/22/23 05:47:19.115
  STEP: creating a pod to probe DNS @ 12/22/23 05:47:19.115
  STEP: submitting the pod to kubernetes @ 12/22/23 05:47:19.115
  E1222 05:47:19.675328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:20.675610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/22/23 05:47:21.141
  STEP: looking for the results for each expected name from probers @ 12/22/23 05:47:21.146
  Dec 22 05:47:21.166: INFO: DNS probes using dns-2644/dns-test-06987022-2e8a-4ad3-a7f1-8f756c4fbc33 succeeded

  STEP: deleting the pod @ 12/22/23 05:47:21.166
  Dec 22 05:47:21.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2644" for this suite. @ 12/22/23 05:47:21.2
• [2.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/22/23 05:47:21.21
  Dec 22 05:47:21.211: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename prestop @ 12/22/23 05:47:21.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:47:21.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:47:21.245
  STEP: Creating server pod server in namespace prestop-180 @ 12/22/23 05:47:21.259
  STEP: Waiting for pods to come up. @ 12/22/23 05:47:21.276
  E1222 05:47:21.675769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:22.676242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-180 @ 12/22/23 05:47:23.292
  E1222 05:47:23.676538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:24.676648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 12/22/23 05:47:25.309
  E1222 05:47:25.676942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:26.677549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:27.677726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:28.677883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:29.678209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 22 05:47:30.326: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 12/22/23 05:47:30.326
  Dec 22 05:47:30.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-180" for this suite. @ 12/22/23 05:47:30.495
• [9.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 12/22/23 05:47:30.509
  Dec 22 05:47:30.509: INFO: >>> kubeConfig: /tmp/kubeconfig-766341734
  STEP: Building a namespace api object, basename emptydir @ 12/22/23 05:47:30.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/22/23 05:47:30.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/22/23 05:47:30.538
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/22/23 05:47:30.542
  E1222 05:47:30.678763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:31.678927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:32.679889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1222 05:47:33.680645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/22/23 05:47:34.58
  Dec 22 05:47:34.584: INFO: Trying to get logs from node ip-172-31-14-155.us-east-2.compute.internal pod pod-c46e6318-36a7-4f55-a93e-de26756be2aa container test-container: <nil>
  STEP: delete the pod @ 12/22/23 05:47:34.589
  Dec 22 05:47:34.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9772" for this suite. @ 12/22/23 05:47:34.618
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Dec 22 05:47:34.628: INFO: Running AfterSuite actions on node 1
  Dec 22 05:47:34.628: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:621
  E1222 05:47:34.680861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.088 seconds]
------------------------------

Ran 388 of 7407 Specs in 6570.215 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h49m32.318113738s
Test Suite Passed
